{"version":3,"sources":["../../../../../../packages/common/src/cookie.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAQA,SAAM,SAAA,gBAAA,CAA2B,SAA3B,EAA8C,IAA9C,EAA0D;AAC9D,WAAO,mBAAmB,IAAnB,CAAP;AACA,SAAK,MAAM,MAAX,IAAqB,UAAU,KAAV,CAAgB,GAAhB,CAArB,EAA2C;;AACzC,YAAM,UAAU,OAAO,OAAP,CAAe,GAAf,CAAhB;AACA,YAAM,CAAC,UAAD,EAAa,WAAb,IACF,WAAW,CAAC,CAAZ,GAAgB,CAAC,MAAD,EAAS,EAAT,CAAhB,GAA+B,CAAC,OAAO,KAAP,CAAa,CAAb,EAAgB,OAAhB,CAAD,EAA2B,OAAO,KAAP,CAAa,UAAU,CAAvB,CAA3B,CADnC;AAEA,UAAI,WAAW,IAAX,OAAsB,IAA1B,EAAgC;AAC9B,eAAO,mBAAmB,WAAnB,CAAP;AACD;AACF;AACD,WAAO,IAAP;AACD","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport function parseCookieValue(cookieStr: string, name: string): string|null {\n  name = encodeURIComponent(name);\n  for (const cookie of cookieStr.split(';')) {\n    const eqIndex = cookie.indexOf('=');\n    const [cookieName, cookieValue]: string[] =\n        eqIndex == -1 ? [cookie, ''] : [cookie.slice(0, eqIndex), cookie.slice(eqIndex + 1)];\n    if (cookieName.trim() === name) {\n      return decodeURIComponent(cookieValue);\n    }\n  }\n  return null;\n}\n"],"sourceRoot":""}