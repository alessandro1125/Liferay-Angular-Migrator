{"version":3,"sources":["../../../../../../../packages/common/src/i18n/locale_data.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAWA,WAAA,MAAa,cAAyC,EAAtD;;;;;;;;;;;AASA,WAAM,SAAA,kBAAA,CAA6B,IAA7B,EAAwC,QAAxC,EAAiE,SAAjE,EAAgF;AACpF,YAAI,OAAO,QAAP,KAAoB,QAAxB,EAAkC;AAChC,wBAAY,QAAZ;AACA,uBAAW,KAAI,CAAJ,CAAI,cAAJ,CAAX;AACD;AAED,mBAAW,SAAS,WAAT,GAAuB,OAAvB,CAA+B,IAA/B,EAAqC,GAArC,CAAX;AAEA,oBAAY,QAAZ,IAAwB,IAAxB;AAEA,YAAI,SAAJ,EAAe;AACb,wBAAY,QAAZ,EAAqB,EAArB,CAAqB,eAArB,IAAmD,SAAnD;AACD;AACF;;;AAMC,kBAAA,C;AACA,0BAAA,C;AACA,8BAAA,C;AACA,oBAAA,C;AACA,wBAAA,C;AACA,sBAAA,C;AACA,0BAAA,C;AACA,cAAA,C;AACA,wBAAA,C;AACA,sBAAA,C;AACA,oBAAA,E;AACA,oBAAA,E;AACA,wBAAA,E;AACA,uBAAA,E;AACA,uBAAA,E;AACA,wBAAA,E;AACA,sBAAA,E;AACA,oBAAA,E;AACA,oBAAA,E;AACA,mBAAA;;;;;AAOA,+BAAA,C;AACA,kCAAA,C;AACA,8BAAA;;;;;AAM+B,gBAAA,C,EAAY,cAAA,C,EAAc,YAAA","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @experimental i18n support is experimental.\n */\nexport const LOCALE_DATA: {[localeId: string]: any} = {};\n\n/**\n * Register global data to be used internally by Angular. See the\n * [\"I18n guide\"](guide/i18n#i18n-pipes) to know how to import additional locale data.\n *\n * @experimental i18n support is experimental.\n */\n// The signature registerLocaleData(data: any, extraData?: any) is deprecated since v5.1\nexport function registerLocaleData(data: any, localeId?: string | any, extraData?: any): void {\n  if (typeof localeId !== 'string') {\n    extraData = localeId;\n    localeId = data[LocaleDataIndex.LocaleId];\n  }\n\n  localeId = localeId.toLowerCase().replace(/_/g, '-');\n\n  LOCALE_DATA[localeId] = data;\n\n  if (extraData) {\n    LOCALE_DATA[localeId][LocaleDataIndex.ExtraData] = extraData;\n  }\n}\n\n/**\n * Index of each type of locale data from the locale data array\n */\nexport const enum LocaleDataIndex {\n  LocaleId = 0,\n  DayPeriodsFormat,\n  DayPeriodsStandalone,\n  DaysFormat,\n  DaysStandalone,\n  MonthsFormat,\n  MonthsStandalone,\n  Eras,\n  FirstDayOfWeek,\n  WeekendRange,\n  DateFormat,\n  TimeFormat,\n  DateTimeFormat,\n  NumberSymbols,\n  NumberFormats,\n  CurrencySymbol,\n  CurrencyName,\n  Currencies,\n  PluralCase,\n  ExtraData\n}\n\n/**\n * Index of each type of locale data from the extra locale data array\n */\nexport const enum ExtraLocaleDataIndex {\n  ExtraDayPeriodFormats = 0,\n  ExtraDayPeriodStandalone,\n  ExtraDayPeriodsRules\n}\n\n/**\n * Index of each value in currency data (used to describe CURRENCIES_EN in currencies.ts)\n */\nexport const enum CurrencyIndex {Symbol = 0, SymbolNarrow, NbOfDigits}\n"],"sourceRoot":""}