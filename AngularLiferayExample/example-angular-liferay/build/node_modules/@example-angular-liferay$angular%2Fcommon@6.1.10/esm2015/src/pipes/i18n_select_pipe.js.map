{"version":3,"sources":["../../../../../../../packages/common/src/pipes/i18n_select_pipe.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAQA,aAAQ,IAAR,QAAkC,eAAlC;AACA,aAAQ,wBAAR,QAAuC,+BAAvC;;;;;;;;;;;;;;;;;;AAoBA,WAAM,MAAA,cAAA,CAAA;;;;;;;AAMJ,kBAAU,KAAV,EAAwC,OAAxC,EAAwE;AACtE,gBAAI,SAAS,IAAb,EAAmB,OAAO,EAAP;AAEnB,gBAAI,OAAO,OAAP,KAAmB,QAAnB,IAA+B,OAAO,KAAP,KAAiB,QAApD,EAA8D;AAC5D,sBAAM,yBAAyB,cAAzB,EAAyC,OAAzC,CAAN;AACD;AAED,gBAAI,QAAQ,cAAR,CAAuB,KAAvB,CAAJ,EAAmC;AACjC,uBAAO,QAAQ,KAAR,CAAP;AACD;AAED,gBAAI,QAAQ,cAAR,CAAuB,OAAvB,CAAJ,EAAqC;AACnC,uBAAO,QAAQ,OAAR,CAAP;AACD;AAED,mBAAO,EAAP;AACD;AAtBG;yCADL,I,EAAI,MAAA,CAAC,EAAC,MAAM,YAAP,EAAqB,MAAM,IAA3B,EAAD,C","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\nimport {invalidPipeArgumentError} from './invalid_pipe_argument_error';\n\n/**\n * @ngModule CommonModule\n * @description\n *\n * Generic selector that displays the string that matches the current value.\n *\n * If none of the keys of the `mapping` match the `value`, then the content\n * of the `other` key is returned when present, otherwise an empty string is returned.\n *\n * @usageNotes\n *\n * ### Example\n *\n * {@example common/pipes/ts/i18n_pipe.ts region='I18nSelectPipeComponent'}\n *\n * @experimental\n */\n@Pipe({name: 'i18nSelect', pure: true})\nexport class I18nSelectPipe implements PipeTransform {\n  /**\n   * @param value a string to be internationalized.\n   * @param mapping an object that indicates the text that should be displayed\n   * for different values of the provided `value`.\n   */\n  transform(value: string|null|undefined, mapping: {[key: string]: string}): string {\n    if (value == null) return '';\n\n    if (typeof mapping !== 'object' || typeof value !== 'string') {\n      throw invalidPipeArgumentError(I18nSelectPipe, mapping);\n    }\n\n    if (mapping.hasOwnProperty(value)) {\n      return mapping[value];\n    }\n\n    if (mapping.hasOwnProperty('other')) {\n      return mapping['other'];\n    }\n\n    return '';\n  }\n}\n"],"sourceRoot":""}