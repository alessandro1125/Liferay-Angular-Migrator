{"version":3,"sources":["../../../../../../../../packages/common/src/pipes/deprecated/intl.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NumberFormatStyle} from '../../i18n/locale_data_api';\n\nexport class NumberFormatter {\n  static format(num: number, locale: string, style: NumberFormatStyle, opts: {\n    minimumIntegerDigits?: number,\n    minimumFractionDigits?: number,\n    maximumFractionDigits?: number,\n    currency?: string|null,\n    currencyAsSymbol?: boolean\n  } = {}): string {\n    const {minimumIntegerDigits, minimumFractionDigits, maximumFractionDigits, currency,\n           currencyAsSymbol = false} = opts;\n    const options: Intl.NumberFormatOptions = {\n      minimumIntegerDigits,\n      minimumFractionDigits,\n      maximumFractionDigits,\n      style: NumberFormatStyle[style].toLowerCase()\n    };\n\n    if (style == NumberFormatStyle.Currency) {\n      options.currency = typeof currency == 'string' ? currency : undefined;\n      options.currencyDisplay = currencyAsSymbol ? 'symbol' : 'code';\n    }\n    return new Intl.NumberFormat(locale, options).format(num);\n  }\n}\n\ntype DateFormatterFn = (date: Date, locale: string) => string;\n\nconst DATE_FORMATS_SPLIT =\n    /((?:[^yMLdHhmsazZEwGjJ']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|L+|d+|H+|h+|J+|j+|m+|s+|a|z|Z|G+|w+))(.*)/;\n\nconst PATTERN_ALIASES: {[format: string]: DateFormatterFn} = {\n  // Keys are quoted so they do not get renamed during closure compilation.\n  'yMMMdjms': datePartGetterFactory(combine([\n    digitCondition('year', 1),\n    nameCondition('month', 3),\n    digitCondition('day', 1),\n    digitCondition('hour', 1),\n    digitCondition('minute', 1),\n    digitCondition('second', 1),\n  ])),\n  'yMdjm': datePartGetterFactory(combine([\n    digitCondition('year', 1), digitCondition('month', 1), digitCondition('day', 1),\n    digitCondition('hour', 1), digitCondition('minute', 1)\n  ])),\n  'yMMMMEEEEd': datePartGetterFactory(combine([\n    digitCondition('year', 1), nameCondition('month', 4), nameCondition('weekday', 4),\n    digitCondition('day', 1)\n  ])),\n  'yMMMMd': datePartGetterFactory(\n      combine([digitCondition('year', 1), nameCondition('month', 4), digitCondition('day', 1)])),\n  'yMMMd': datePartGetterFactory(\n      combine([digitCondition('year', 1), nameCondition('month', 3), digitCondition('day', 1)])),\n  'yMd': datePartGetterFactory(\n      combine([digitCondition('year', 1), digitCondition('month', 1), digitCondition('day', 1)])),\n  'jms': datePartGetterFactory(combine(\n      [digitCondition('hour', 1), digitCondition('second', 1), digitCondition('minute', 1)])),\n  'jm': datePartGetterFactory(combine([digitCondition('hour', 1), digitCondition('minute', 1)]))\n};\n\nconst DATE_FORMATS: {[format: string]: DateFormatterFn} = {\n  // Keys are quoted so they do not get renamed.\n  'yyyy': datePartGetterFactory(digitCondition('year', 4)),\n  'yy': datePartGetterFactory(digitCondition('year', 2)),\n  'y': datePartGetterFactory(digitCondition('year', 1)),\n  'MMMM': datePartGetterFactory(nameCondition('month', 4)),\n  'MMM': datePartGetterFactory(nameCondition('month', 3)),\n  'MM': datePartGetterFactory(digitCondition('month', 2)),\n  'M': datePartGetterFactory(digitCondition('month', 1)),\n  'LLLL': datePartGetterFactory(nameCondition('month', 4)),\n  'L': datePartGetterFactory(nameCondition('month', 1)),\n  'dd': datePartGetterFactory(digitCondition('day', 2)),\n  'd': datePartGetterFactory(digitCondition('day', 1)),\n  'HH': digitModifier(\n      hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 2), false)))),\n  'H': hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), false))),\n  'hh': digitModifier(\n      hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 2), true)))),\n  'h': hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), true))),\n  'jj': datePartGetterFactory(digitCondition('hour', 2)),\n  'j': datePartGetterFactory(digitCondition('hour', 1)),\n  'mm': digitModifier(datePartGetterFactory(digitCondition('minute', 2))),\n  'm': datePartGetterFactory(digitCondition('minute', 1)),\n  'ss': digitModifier(datePartGetterFactory(digitCondition('second', 2))),\n  's': datePartGetterFactory(digitCondition('second', 1)),\n  // while ISO 8601 requires fractions to be prefixed with `.` or `,`\n  // we can be just safely rely on using `sss` since we currently don't support single or two digit\n  // fractions\n  'sss': datePartGetterFactory(digitCondition('second', 3)),\n  'EEEE': datePartGetterFactory(nameCondition('weekday', 4)),\n  'EEE': datePartGetterFactory(nameCondition('weekday', 3)),\n  'EE': datePartGetterFactory(nameCondition('weekday', 2)),\n  'E': datePartGetterFactory(nameCondition('weekday', 1)),\n  'a': hourClockExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), true))),\n  'Z': timeZoneGetter('short'),\n  'z': timeZoneGetter('long'),\n  'ww': datePartGetterFactory({}),  // Week of year, padded (00-53). Week 01 is the week with the\n                                    // first Thursday of the year. not support ?\n  'w':\n      datePartGetterFactory({}),  // Week of year (0-53). Week 1 is the week with the first Thursday\n                                  // of the year not support ?\n  'G': datePartGetterFactory(nameCondition('era', 1)),\n  'GG': datePartGetterFactory(nameCondition('era', 2)),\n  'GGG': datePartGetterFactory(nameCondition('era', 3)),\n  'GGGG': datePartGetterFactory(nameCondition('era', 4))\n};\n\n\nfunction digitModifier(inner: DateFormatterFn): DateFormatterFn {\n  return function(date: Date, locale: string): string {\n    const result = inner(date, locale);\n    return result.length == 1 ? '0' + result : result;\n  };\n}\n\nfunction hourClockExtractor(inner: DateFormatterFn): DateFormatterFn {\n  return function(date: Date, locale: string): string { return inner(date, locale).split(' ')[1]; };\n}\n\nfunction hourExtractor(inner: DateFormatterFn): DateFormatterFn {\n  return function(date: Date, locale: string): string { return inner(date, locale).split(' ')[0]; };\n}\n\nfunction intlDateFormat(date: Date, locale: string, options: Intl.DateTimeFormatOptions): string {\n  return new Intl.DateTimeFormat(locale, options).format(date).replace(/[\\u200e\\u200f]/g, '');\n}\n\nfunction timeZoneGetter(timezone: string): DateFormatterFn {\n  // To workaround `Intl` API restriction for single timezone let format with 24 hours\n  const options = {hour: '2-digit', hour12: false, timeZoneName: timezone};\n  return function(date: Date, locale: string): string {\n    const result = intlDateFormat(date, locale, options);\n    // Then extract first 3 letters that related to hours\n    return result ? result.substring(3) : '';\n  };\n}\n\nfunction hour12Modify(\n    options: Intl.DateTimeFormatOptions, value: boolean): Intl.DateTimeFormatOptions {\n  options.hour12 = value;\n  return options;\n}\n\nfunction digitCondition(prop: string, len: number): Intl.DateTimeFormatOptions {\n  const result: {[k: string]: string} = {};\n  result[prop] = len === 2 ? '2-digit' : 'numeric';\n  return result;\n}\n\nfunction nameCondition(prop: string, len: number): Intl.DateTimeFormatOptions {\n  const result: {[k: string]: string} = {};\n  if (len < 4) {\n    result[prop] = len > 1 ? 'short' : 'narrow';\n  } else {\n    result[prop] = 'long';\n  }\n\n  return result;\n}\n\nfunction combine(options: Intl.DateTimeFormatOptions[]): Intl.DateTimeFormatOptions {\n  return options.reduce((merged, opt) => ({...merged, ...opt}), {});\n}\n\nfunction datePartGetterFactory(ret: Intl.DateTimeFormatOptions): DateFormatterFn {\n  return (date: Date, locale: string): string => intlDateFormat(date, locale, ret);\n}\n\nconst DATE_FORMATTER_CACHE = new Map<string, string[]>();\n\nfunction dateFormatter(format: string, date: Date, locale: string): string {\n  const fn = PATTERN_ALIASES[format];\n\n  if (fn) return fn(date, locale);\n\n  const cacheKey = format;\n  let parts = DATE_FORMATTER_CACHE.get(cacheKey);\n\n  if (!parts) {\n    parts = [];\n    let match: RegExpExecArray|null;\n    DATE_FORMATS_SPLIT.exec(format);\n\n    let _format: string|null = format;\n    while (_format) {\n      match = DATE_FORMATS_SPLIT.exec(_format);\n      if (match) {\n        parts = parts.concat(match.slice(1));\n        _format = parts.pop() !;\n      } else {\n        parts.push(_format);\n        _format = null;\n      }\n    }\n\n    DATE_FORMATTER_CACHE.set(cacheKey, parts);\n  }\n\n  return parts.reduce((text, part) => {\n    const fn = DATE_FORMATS[part];\n    return text + (fn ? fn(date, locale) : partToTime(part));\n  }, '');\n}\n\nfunction partToTime(part: string): string {\n  return part === '\\'\\'' ? '\\'' : part.replace(/(^'|'$)/g, '').replace(/''/g, '\\'');\n}\n\nexport class DateFormatter {\n  static format(date: Date, locale: string, pattern: string): string {\n    return dateFormatter(pattern, date, locale);\n  }\n}\n"],"sourceRoot":""}