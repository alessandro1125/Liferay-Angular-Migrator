{"version":3,"sources":["../../../../../../../packages/common/src/location/path_location_strategy.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAQA,aAAQ,MAAR,EAAgB,UAAhB,EAA4B,QAA5B,QAA2C,eAA3C;AAGA,aAAQ,QAAR,QAAuB,YAAvB;AACA,aAAQ,aAAR,EAAuB,gBAAvB,QAA8C,qBAA9C;AACA,aAAgC,gBAAhC,QAAuD,qBAAvD;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA,WAAM,MAAA,oBAAA,SAAoC,gBAApC,CAAoD;;;;;AAGxD,oBACY,iBADZ,EAEuC,IAFvC,EAEoD;AAClD;AAFU,iBAAA,iBAAA,GAAA,iBAAA;AAIV,gBAAI,QAAQ,IAAZ,EAAkB;AAChB,uBAAO,KAAK,iBAAL,CAAuB,kBAAvB,EAAP;AACD;AAED,gBAAI,QAAQ,IAAZ,EAAkB;AAChB,sBAAM,IAAI,KAAJ,CACF,6GADE,CAAN;AAED;AAED,iBAAK,SAAL,GAAiB,IAAjB;AACD;;;;;AAED,mBAAW,EAAX,EAAqC;AACnC,iBAAK,iBAAL,CAAuB,UAAvB,CAAkC,EAAlC;AACA,iBAAK,iBAAL,CAAuB,YAAvB,CAAoC,EAApC;AACD;;;;AAED,sBAAW;AAAa,mBAAO,KAAK,SAAZ;AAAwB;;;;;AAEhD,2BAAmB,QAAnB,EAAmC;AACjC,mBAAO,SAAS,aAAT,CAAuB,KAAK,SAA5B,EAAuC,QAAvC,CAAP;AACD;;;;;AAED,aAAK,cAAuB,KAA5B,EAAiC;;AAC/B,kBAAM,WAAW,KAAK,iBAAL,CAAuB,QAAvB,GACb,SAAS,oBAAT,CAA8B,KAAK,iBAAL,CAAuB,MAArD,CADJ;;AAEA,kBAAM,OAAO,KAAK,iBAAL,CAAuB,IAApC;AACA,mBAAO,QAAQ,WAAR,GAAsB,GAAG,QAAQ,GAAG,IAAI,EAAxC,GAA6C,QAApD;AACD;;;;;;;;AAED,kBAAU,KAAV,EAAsB,KAAtB,EAAqC,GAArC,EAAkD,WAAlD,EAAqE;;AACnE,kBAAM,cAAc,KAAK,kBAAL,CAAwB,MAAM,SAAS,oBAAT,CAA8B,WAA9B,CAA9B,CAApB;AACA,iBAAK,iBAAL,CAAuB,SAAvB,CAAiC,KAAjC,EAAwC,KAAxC,EAA+C,WAA/C;AACD;;;;;;;;AAED,qBAAa,KAAb,EAAyB,KAAzB,EAAwC,GAAxC,EAAqD,WAArD,EAAwE;;AACtE,kBAAM,cAAc,KAAK,kBAAL,CAAwB,MAAM,SAAS,oBAAT,CAA8B,WAA9B,CAA9B,CAApB;AACA,iBAAK,iBAAL,CAAuB,YAAvB,CAAoC,KAApC,EAA2C,KAA3C,EAAkD,WAAlD;AACD;;;;AAED,kBAAO;AAAW,iBAAK,iBAAL,CAAuB,OAAvB;AAAmC;;;;AAErD,eAAI;AAAW,iBAAK,iBAAL,CAAuB,IAAvB;AAAgC;AAlDS;+CADzD,U;;yDA/B+B,gB,yCAqCzB,Q,IAAQ,EAAA,MAAI,MAAJ,EAAU,MAAA,CAAC,aAAD,CAAV,E","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Inject, Injectable, Optional} from '@angular/core';\n\n\nimport {Location} from './location';\nimport {APP_BASE_HREF, LocationStrategy} from './location_strategy';\nimport {LocationChangeListener, PlatformLocation} from './platform_location';\n\n\n\n/**\n * @description\n * A {@link LocationStrategy} used to configure the {@link Location} service to\n * represent its state in the\n * [path](https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax) of the\n * browser's URL.\n *\n * If you're using `PathLocationStrategy`, you must provide a {@link APP_BASE_HREF}\n * or add a base element to the document. This URL prefix that will be preserved\n * when generating and recognizing URLs.\n *\n * For instance, if you provide an `APP_BASE_HREF` of `'/my/app'` and call\n * `location.go('/foo')`, the browser's URL will become\n * `example.com/my/app/foo`.\n *\n * Similarly, if you add `<base href='/my/app'/>` to the document and call\n * `location.go('/foo')`, the browser's URL will become\n * `example.com/my/app/foo`.\n *\n * @usageNotes\n *\n * ### Example\n *\n * {@example common/location/ts/path_location_component.ts region='LocationComponent'}\n *\n *\n */\n@Injectable()\nexport class PathLocationStrategy extends LocationStrategy {\n  private _baseHref: string;\n\n  constructor(\n      private _platformLocation: PlatformLocation,\n      @Optional() @Inject(APP_BASE_HREF) href?: string) {\n    super();\n\n    if (href == null) {\n      href = this._platformLocation.getBaseHrefFromDOM();\n    }\n\n    if (href == null) {\n      throw new Error(\n          `No base href set. Please provide a value for the APP_BASE_HREF token or add a base element to the document.`);\n    }\n\n    this._baseHref = href;\n  }\n\n  onPopState(fn: LocationChangeListener): void {\n    this._platformLocation.onPopState(fn);\n    this._platformLocation.onHashChange(fn);\n  }\n\n  getBaseHref(): string { return this._baseHref; }\n\n  prepareExternalUrl(internal: string): string {\n    return Location.joinWithSlash(this._baseHref, internal);\n  }\n\n  path(includeHash: boolean = false): string {\n    const pathname = this._platformLocation.pathname +\n        Location.normalizeQueryParams(this._platformLocation.search);\n    const hash = this._platformLocation.hash;\n    return hash && includeHash ? `${pathname}${hash}` : pathname;\n  }\n\n  pushState(state: any, title: string, url: string, queryParams: string) {\n    const externalUrl = this.prepareExternalUrl(url + Location.normalizeQueryParams(queryParams));\n    this._platformLocation.pushState(state, title, externalUrl);\n  }\n\n  replaceState(state: any, title: string, url: string, queryParams: string) {\n    const externalUrl = this.prepareExternalUrl(url + Location.normalizeQueryParams(queryParams));\n    this._platformLocation.replaceState(state, title, externalUrl);\n  }\n\n  forward(): void { this._platformLocation.forward(); }\n\n  back(): void { this._platformLocation.back(); }\n}\n"],"sourceRoot":""}