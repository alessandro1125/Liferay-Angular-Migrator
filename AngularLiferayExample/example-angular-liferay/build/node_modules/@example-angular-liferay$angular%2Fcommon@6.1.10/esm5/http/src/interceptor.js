Liferay.Loader.define('@example-angular-liferay$angular/common@6.1.10/esm5/http/src/interceptor', ['module', 'exports', 'require'], function (module, exports, require) {
    var define = undefined;
    /**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */
    import * as tslib_1 from "tslib";
    import { Injectable, InjectionToken } from '@angular/core';
    /**
     * `HttpHandler` which applies an `HttpInterceptor` to an `HttpRequest`.
     *
     *
     */
    var HttpInterceptorHandler = /** @class */function () {
        function HttpInterceptorHandler(next, interceptor) {
            this.next = next;
            this.interceptor = interceptor;
        }
        HttpInterceptorHandler.prototype.handle = function (req) {
            return this.interceptor.intercept(req, this.next);
        };
        return HttpInterceptorHandler;
    }();
    export { HttpInterceptorHandler };
    /**
     * A multi-provider token which represents the array of `HttpInterceptor`s that
     * are registered.
     *
     *
     */
    export var HTTP_INTERCEPTORS = new InjectionToken('HTTP_INTERCEPTORS');
    var NoopInterceptor = /** @class */function () {
        function NoopInterceptor() {}
        NoopInterceptor.prototype.intercept = function (req, next) {
            return next.handle(req);
        };
        NoopInterceptor = tslib_1.__decorate([Injectable()], NoopInterceptor);
        return NoopInterceptor;
    }();
    export { NoopInterceptor };
});
//# sourceMappingURL=interceptor.js.map