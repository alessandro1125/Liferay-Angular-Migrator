{"version":3,"sources":["../../../../../../../../../../packages/common/src/pipes/json_pipe.ts"],"names":[],"mappings":";;;;;;;;;;AAQA,WAAQ,IAAR,QAAkC,eAAlC;AAEA;;;;;;;;;;;;;;AAeA,MAAA,WAAA,aAAA,YAAA;AAAA,aAAA,QAAA,GAAA,CAKC;AAJC;;;AAGA,aAAA,SAAA,CAAA,SAAA,GAAA,UAAU,KAAV,EAAoB;AAAY,aAAO,KAAK,SAAL,CAAe,KAAf,EAAsB,IAAtB,EAA4B,CAA5B,CAAP;AAAwC,KAAxE;AAJW,eAAQ,QAAA,UAAA,CAAA,CADpB,KAAK,EAAC,MAAM,MAAP,EAAe,MAAM,KAArB,EAAL,CACoB,CAAA,EAAR,QAAQ,CAAR;AAKb,WAAA,QAAA;AAAC,GALD,EAAA;WAAa,Q","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\n\n/**\n * @ngModule CommonModule\n * @description\n *\n * Converts a value into its JSON-format representation.  Useful for debugging.\n *\n * @usageNotes\n *\n * The following component uses a JSON pipe to convert an object\n * to JSON format, and displays the string in both formats for comparison.\n *\n * {@example common/pipes/ts/json_pipe.ts region='JsonPipe'}\n *\n */\n@Pipe({name: 'json', pure: false})\nexport class JsonPipe implements PipeTransform {\n  /**\n   * @param value A value of any type to convert into a JSON-format string.\n   */\n  transform(value: any): string { return JSON.stringify(value, null, 2); }\n}\n"],"sourceRoot":""}