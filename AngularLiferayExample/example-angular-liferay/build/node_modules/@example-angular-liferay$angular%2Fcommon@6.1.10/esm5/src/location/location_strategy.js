Liferay.Loader.define('@example-angular-liferay$angular/common@6.1.10/esm5/src/location/location_strategy', ['module', 'exports', 'require'], function (module, exports, require) {
  var define = undefined;
  /**
   * @license
   * Copyright Google Inc. All Rights Reserved.
   *
   * Use of this source code is governed by an MIT-style license that can be
   * found in the LICENSE file at https://angular.io/license
   */
  import { InjectionToken } from '@angular/core';
  /**
   * `LocationStrategy` is responsible for representing and reading route state
   * from the browser's URL. Angular provides two strategies:
   * {@link HashLocationStrategy} and {@link PathLocationStrategy}.
   *
   * This is used under the hood of the {@link Location} service.
   *
   * Applications should use the {@link Router} or {@link Location} services to
   * interact with application route state.
   *
   * For instance, {@link HashLocationStrategy} produces URLs like
   * `http://example.com#/foo`, and {@link PathLocationStrategy} produces
   * `http://example.com/foo` as an equivalent URL.
   *
   * See these two classes for more.
   *
   *
   */
  var LocationStrategy = /** @class */function () {
    function LocationStrategy() {}
    return LocationStrategy;
  }();
  export { LocationStrategy };
  /**
   * The `APP_BASE_HREF` token represents the base href to be used with the
   * {@link PathLocationStrategy}.
   *
   * If you're using {@link PathLocationStrategy}, you must provide a provider to a string
   * representing the URL prefix that should be preserved when generating and recognizing
   * URLs.
   *
   * @usageNotes
   *
   * ### Example
   *
   * ```typescript
   * import {Component, NgModule} from '@angular/core';
   * import {APP_BASE_HREF} from '@angular/common';
   *
   * @NgModule({
   *   providers: [{provide: APP_BASE_HREF, useValue: '/my/app'}]
   * })
   * class AppModule {}
   * ```
   *
   *
   */
  export var APP_BASE_HREF = new InjectionToken('appBaseHref');
});
//# sourceMappingURL=location_strategy.js.map