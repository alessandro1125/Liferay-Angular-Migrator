{"version":3,"sources":["common-http-testing.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","common","http","testing","core","rxjs","HttpTestingController","__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","TestRequest","request","observer","_cancelled","prototype","get","enumerable","configurable","flush","body","opts","cancelled","Error","url","urlWithParams","headers","HttpHeaders","_maybeConvertBody","responseType","statusText","status","undefined","next","HttpResponse","complete","error","HttpErrorResponse","event","_toArrayBufferBody","ArrayBuffer","_toBlob","Blob","_toJsonBody","format","Array","isArray","_toTextBody","JSON","stringify","HttpClientTestingBackend","open","handle","req","_this","Observable","testReq","push","type","HttpEventType","Sent","_match","match","filter","method","toUpperCase","results","forEach","result","index","indexOf","splice","expectOne","description","descriptionFromMatcher","matches","expectNone","verify","ignoreCancelled","requests","map","split","join","matcher","name","Injectable","HttpClientTestingModule","NgModule","imports","HttpClientModule","providers","provide","HttpBackend","useExisting","Éµangular_packages_common_http_testing_testing_a","value"],"mappings":"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","file":"common-http-testing.umd.js","sourcesContent":["/**\n * @license Angular v6.1.10\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common/http'), require('@angular/core'), require('rxjs')) :\n    typeof define === 'function' && define.amd ? define('@angular/common/http/testing', ['exports', '@angular/common/http', '@angular/core', 'rxjs'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.common = global.ng.common || {}, global.ng.common.http = global.ng.common.http || {}, global.ng.common.http.testing = {}),global.ng.common.http,global.ng.core,global.rxjs));\n}(this, (function (exports,http,core,rxjs) { 'use strict';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Controller to be injected into tests, that allows for mocking and flushing\n     * of requests.\n     *\n     *\n     */\n    var HttpTestingController = /** @class */ (function () {\n        function HttpTestingController() {\n        }\n        return HttpTestingController;\n    }());\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mock requests that was received and is ready to be answered.\n     *\n     * This interface allows access to the underlying `HttpRequest`, and allows\n     * responding with `HttpEvent`s or `HttpErrorResponse`s.\n     *\n     *\n     */\n    var TestRequest = /** @class */ (function () {\n        function TestRequest(request, observer) {\n            this.request = request;\n            this.observer = observer;\n            /**\n             * @internal set by `HttpClientTestingBackend`\n             */\n            this._cancelled = false;\n        }\n        Object.defineProperty(TestRequest.prototype, \"cancelled\", {\n            /**\n             * Whether the request was cancelled after it was sent.\n             */\n            get: function () { return this._cancelled; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Resolve the request by returning a body plus additional HTTP information (such as response\n         * headers) if provided.\n         *\n         * Both successful and unsuccessful responses can be delivered via `flush()`.\n         */\n        TestRequest.prototype.flush = function (body, opts) {\n            if (opts === void 0) { opts = {}; }\n            if (this.cancelled) {\n                throw new Error(\"Cannot flush a cancelled request.\");\n            }\n            var url = this.request.urlWithParams;\n            var headers = (opts.headers instanceof http.HttpHeaders) ? opts.headers : new http.HttpHeaders(opts.headers);\n            body = _maybeConvertBody(this.request.responseType, body);\n            var statusText = opts.statusText;\n            var status = opts.status !== undefined ? opts.status : 200;\n            if (opts.status === undefined) {\n                if (body === null) {\n                    status = 204;\n                    statusText = statusText || 'No Content';\n                }\n                else {\n                    statusText = statusText || 'OK';\n                }\n            }\n            if (statusText === undefined) {\n                throw new Error('statusText is required when setting a custom status.');\n            }\n            if (status >= 200 && status < 300) {\n                this.observer.next(new http.HttpResponse({ body: body, headers: headers, status: status, statusText: statusText, url: url }));\n                this.observer.complete();\n            }\n            else {\n                this.observer.error(new http.HttpErrorResponse({ error: body, headers: headers, status: status, statusText: statusText, url: url }));\n            }\n        };\n        /**\n         * Resolve the request by returning an `ErrorEvent` (e.g. simulating a network failure).\n         */\n        TestRequest.prototype.error = function (error, opts) {\n            if (opts === void 0) { opts = {}; }\n            if (this.cancelled) {\n                throw new Error(\"Cannot return an error for a cancelled request.\");\n            }\n            if (opts.status && opts.status >= 200 && opts.status < 300) {\n                throw new Error(\"error() called with a successful status.\");\n            }\n            var headers = (opts.headers instanceof http.HttpHeaders) ? opts.headers : new http.HttpHeaders(opts.headers);\n            this.observer.error(new http.HttpErrorResponse({\n                error: error,\n                headers: headers,\n                status: opts.status || 0,\n                statusText: opts.statusText || '',\n                url: this.request.urlWithParams,\n            }));\n        };\n        /**\n         * Deliver an arbitrary `HttpEvent` (such as a progress event) on the response stream for this\n         * request.\n         */\n        TestRequest.prototype.event = function (event) {\n            if (this.cancelled) {\n                throw new Error(\"Cannot send events to a cancelled request.\");\n            }\n            this.observer.next(event);\n        };\n        return TestRequest;\n    }());\n    /**\n     * Helper function to convert a response body to an ArrayBuffer.\n     */\n    function _toArrayBufferBody(body) {\n        if (typeof ArrayBuffer === 'undefined') {\n            throw new Error('ArrayBuffer responses are not supported on this platform.');\n        }\n        if (body instanceof ArrayBuffer) {\n            return body;\n        }\n        throw new Error('Automatic conversion to ArrayBuffer is not supported for response type.');\n    }\n    /**\n     * Helper function to convert a response body to a Blob.\n     */\n    function _toBlob(body) {\n        if (typeof Blob === 'undefined') {\n            throw new Error('Blob responses are not supported on this platform.');\n        }\n        if (body instanceof Blob) {\n            return body;\n        }\n        if (ArrayBuffer && body instanceof ArrayBuffer) {\n            return new Blob([body]);\n        }\n        throw new Error('Automatic conversion to Blob is not supported for response type.');\n    }\n    /**\n     * Helper function to convert a response body to JSON data.\n     */\n    function _toJsonBody(body, format) {\n        if (format === void 0) { format = 'JSON'; }\n        if (typeof ArrayBuffer !== 'undefined' && body instanceof ArrayBuffer) {\n            throw new Error(\"Automatic conversion to \" + format + \" is not supported for ArrayBuffers.\");\n        }\n        if (typeof Blob !== 'undefined' && body instanceof Blob) {\n            throw new Error(\"Automatic conversion to \" + format + \" is not supported for Blobs.\");\n        }\n        if (typeof body === 'string' || typeof body === 'number' || typeof body === 'object' ||\n            Array.isArray(body)) {\n            return body;\n        }\n        throw new Error(\"Automatic conversion to \" + format + \" is not supported for response type.\");\n    }\n    /**\n     * Helper function to convert a response body to a string.\n     */\n    function _toTextBody(body) {\n        if (typeof body === 'string') {\n            return body;\n        }\n        if (typeof ArrayBuffer !== 'undefined' && body instanceof ArrayBuffer) {\n            throw new Error('Automatic conversion to text is not supported for ArrayBuffers.');\n        }\n        if (typeof Blob !== 'undefined' && body instanceof Blob) {\n            throw new Error('Automatic conversion to text is not supported for Blobs.');\n        }\n        return JSON.stringify(_toJsonBody(body, 'text'));\n    }\n    /**\n     * Convert a response body to the requested type.\n     */\n    function _maybeConvertBody(responseType, body) {\n        if (body === null) {\n            return null;\n        }\n        switch (responseType) {\n            case 'arraybuffer':\n                return _toArrayBufferBody(body);\n            case 'blob':\n                return _toBlob(body);\n            case 'json':\n                return _toJsonBody(body);\n            case 'text':\n                return _toTextBody(body);\n            default:\n                throw new Error(\"Unsupported responseType: \" + responseType);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A testing backend for `HttpClient` which both acts as an `HttpBackend`\n     * and as the `HttpTestingController`.\n     *\n     * `HttpClientTestingBackend` works by keeping a list of all open requests.\n     * As requests come in, they're added to the list. Users can assert that specific\n     * requests were made and then flush them. In the end, a verify() method asserts\n     * that no unexpected requests were made.\n     *\n     *\n     */\n    var HttpClientTestingBackend = /** @class */ (function () {\n        function HttpClientTestingBackend() {\n            /**\n             * List of pending requests which have not yet been expected.\n             */\n            this.open = [];\n        }\n        /**\n         * Handle an incoming request by queueing it in the list of open requests.\n         */\n        HttpClientTestingBackend.prototype.handle = function (req) {\n            var _this = this;\n            return new rxjs.Observable(function (observer) {\n                var testReq = new TestRequest(req, observer);\n                _this.open.push(testReq);\n                observer.next({ type: http.HttpEventType.Sent });\n                return function () { testReq._cancelled = true; };\n            });\n        };\n        /**\n         * Helper function to search for requests in the list of open requests.\n         */\n        HttpClientTestingBackend.prototype._match = function (match) {\n            if (typeof match === 'string') {\n                return this.open.filter(function (testReq) { return testReq.request.urlWithParams === match; });\n            }\n            else if (typeof match === 'function') {\n                return this.open.filter(function (testReq) { return match(testReq.request); });\n            }\n            else {\n                return this.open.filter(function (testReq) { return (!match.method || testReq.request.method === match.method.toUpperCase()) &&\n                    (!match.url || testReq.request.urlWithParams === match.url); });\n            }\n        };\n        /**\n         * Search for requests in the list of open requests, and return all that match\n         * without asserting anything about the number of matches.\n         */\n        HttpClientTestingBackend.prototype.match = function (match) {\n            var _this = this;\n            var results = this._match(match);\n            results.forEach(function (result) {\n                var index = _this.open.indexOf(result);\n                if (index !== -1) {\n                    _this.open.splice(index, 1);\n                }\n            });\n            return results;\n        };\n        /**\n         * Expect that a single outstanding request matches the given matcher, and return\n         * it.\n         *\n         * Requests returned through this API will no longer be in the list of open requests,\n         * and thus will not match twice.\n         */\n        HttpClientTestingBackend.prototype.expectOne = function (match, description) {\n            description = description || this.descriptionFromMatcher(match);\n            var matches = this.match(match);\n            if (matches.length > 1) {\n                throw new Error(\"Expected one matching request for criteria \\\"\" + description + \"\\\", found \" + matches.length + \" requests.\");\n            }\n            if (matches.length === 0) {\n                throw new Error(\"Expected one matching request for criteria \\\"\" + description + \"\\\", found none.\");\n            }\n            return matches[0];\n        };\n        /**\n         * Expect that no outstanding requests match the given matcher, and throw an error\n         * if any do.\n         */\n        HttpClientTestingBackend.prototype.expectNone = function (match, description) {\n            description = description || this.descriptionFromMatcher(match);\n            var matches = this.match(match);\n            if (matches.length > 0) {\n                throw new Error(\"Expected zero matching requests for criteria \\\"\" + description + \"\\\", found \" + matches.length + \".\");\n            }\n        };\n        /**\n         * Validate that there are no outstanding requests.\n         */\n        HttpClientTestingBackend.prototype.verify = function (opts) {\n            if (opts === void 0) { opts = {}; }\n            var open = this.open;\n            // It's possible that some requests may be cancelled, and this is expected.\n            // The user can ask to ignore open requests which have been cancelled.\n            if (opts.ignoreCancelled) {\n                open = open.filter(function (testReq) { return !testReq.cancelled; });\n            }\n            if (open.length > 0) {\n                // Show the methods and URLs of open requests in the error, for convenience.\n                var requests = open.map(function (testReq) {\n                    var url = testReq.request.urlWithParams.split('?')[0];\n                    var method = testReq.request.method;\n                    return method + \" \" + url;\n                })\n                    .join(', ');\n                throw new Error(\"Expected no open requests, found \" + open.length + \": \" + requests);\n            }\n        };\n        HttpClientTestingBackend.prototype.descriptionFromMatcher = function (matcher) {\n            if (typeof matcher === 'string') {\n                return \"Match URL: \" + matcher;\n            }\n            else if (typeof matcher === 'object') {\n                var method = matcher.method || '(any)';\n                var url = matcher.url || '(any)';\n                return \"Match method: \" + method + \", URL: \" + url;\n            }\n            else {\n                return \"Match by function: \" + matcher.name;\n            }\n        };\n        HttpClientTestingBackend = __decorate([\n            core.Injectable()\n        ], HttpClientTestingBackend);\n        return HttpClientTestingBackend;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Configures `HttpClientTestingBackend` as the `HttpBackend` used by `HttpClient`.\n     *\n     * Inject `HttpTestingController` to expect and flush requests in your tests.\n     *\n     *\n     */\n    var HttpClientTestingModule = /** @class */ (function () {\n        function HttpClientTestingModule() {\n        }\n        HttpClientTestingModule = __decorate([\n            core.NgModule({\n                imports: [\n                    http.HttpClientModule,\n                ],\n                providers: [\n                    HttpClientTestingBackend,\n                    { provide: http.HttpBackend, useExisting: HttpClientTestingBackend },\n                    { provide: HttpTestingController, useExisting: HttpClientTestingBackend },\n                ],\n            })\n        ], HttpClientTestingModule);\n        return HttpClientTestingModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.Éµangular_packages_common_http_testing_testing_a = HttpClientTestingBackend;\n    exports.HttpTestingController = HttpTestingController;\n    exports.HttpClientTestingModule = HttpClientTestingModule;\n    exports.TestRequest = TestRequest;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=common-http-testing.umd.js.map\n"]}