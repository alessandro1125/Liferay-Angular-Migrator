{"version":3,"sources":["../../../../../../packages/common/testing/src/location_mock.ts","../../../../../../packages/common/testing/src/mock_location_strategy.ts","../../../../../../packages/common/testing/src/testing.ts","../../../../../../packages/common/testing/public_api.ts","../../../../../../packages/common/testing/index.ts","../../../../../../packages/common/testing/testing.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Location, LocationStrategy} from '@angular/common';\nimport {EventEmitter, Injectable} from '@angular/core';\nimport {SubscriptionLike} from 'rxjs';\n\n\n/**\n * A spy for {@link Location} that allows tests to fire simulated location events.\n *\n * @experimental\n */\n@Injectable()\nexport class SpyLocation implements Location {\n  urlChanges: string[] = [];\n  private _history: LocationState[] = [new LocationState('', '', null)];\n  private _historyIndex: number = 0;\n  /** @internal */\n  _subject: EventEmitter<any> = new EventEmitter();\n  /** @internal */\n  _baseHref: string = '';\n  /** @internal */\n  _platformStrategy: LocationStrategy = null !;\n\n  setInitialPath(url: string) { this._history[this._historyIndex].path = url; }\n\n  setBaseHref(url: string) { this._baseHref = url; }\n\n  path(): string { return this._history[this._historyIndex].path; }\n\n  private state(): string { return this._history[this._historyIndex].state; }\n\n  isCurrentPathEqualTo(path: string, query: string = ''): boolean {\n    const givenPath = path.endsWith('/') ? path.substring(0, path.length - 1) : path;\n    const currPath =\n        this.path().endsWith('/') ? this.path().substring(0, this.path().length - 1) : this.path();\n\n    return currPath == givenPath + (query.length > 0 ? ('?' + query) : '');\n  }\n\n  simulateUrlPop(pathname: string) {\n    this._subject.emit({'url': pathname, 'pop': true, 'type': 'popstate'});\n  }\n\n  simulateHashChange(pathname: string) {\n    // Because we don't prevent the native event, the browser will independently update the path\n    this.setInitialPath(pathname);\n    this.urlChanges.push('hash: ' + pathname);\n    this._subject.emit({'url': pathname, 'pop': true, 'type': 'hashchange'});\n  }\n\n  prepareExternalUrl(url: string): string {\n    if (url.length > 0 && !url.startsWith('/')) {\n      url = '/' + url;\n    }\n    return this._baseHref + url;\n  }\n\n  go(path: string, query: string = '', state: any = null) {\n    path = this.prepareExternalUrl(path);\n\n    if (this._historyIndex > 0) {\n      this._history.splice(this._historyIndex + 1);\n    }\n    this._history.push(new LocationState(path, query, state));\n    this._historyIndex = this._history.length - 1;\n\n    const locationState = this._history[this._historyIndex - 1];\n    if (locationState.path == path && locationState.query == query) {\n      return;\n    }\n\n    const url = path + (query.length > 0 ? ('?' + query) : '');\n    this.urlChanges.push(url);\n    this._subject.emit({'url': url, 'pop': false});\n  }\n\n  replaceState(path: string, query: string = '', state: any = null) {\n    path = this.prepareExternalUrl(path);\n\n    const history = this._history[this._historyIndex];\n    if (history.path == path && history.query == query) {\n      return;\n    }\n\n    history.path = path;\n    history.query = query;\n    history.state = state;\n\n    const url = path + (query.length > 0 ? ('?' + query) : '');\n    this.urlChanges.push('replace: ' + url);\n  }\n\n  forward() {\n    if (this._historyIndex < (this._history.length - 1)) {\n      this._historyIndex++;\n      this._subject.emit({'url': this.path(), 'state': this.state(), 'pop': true});\n    }\n  }\n\n  back() {\n    if (this._historyIndex > 0) {\n      this._historyIndex--;\n      this._subject.emit({'url': this.path(), 'state': this.state(), 'pop': true});\n    }\n  }\n\n  subscribe(\n      onNext: (value: any) => void, onThrow?: ((error: any) => void)|null,\n      onReturn?: (() => void)|null): SubscriptionLike {\n    return this._subject.subscribe({next: onNext, error: onThrow, complete: onReturn});\n  }\n\n  normalize(url: string): string { return null !; }\n}\n\nclass LocationState {\n  constructor(public path: string, public query: string, public state: any) {}\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {LocationStrategy} from '@angular/common';\nimport {EventEmitter, Injectable} from '@angular/core';\n\n\n\n/**\n * A mock implementation of {@link LocationStrategy} that allows tests to fire simulated\n * location events.\n *\n *\n */\n@Injectable()\nexport class MockLocationStrategy extends LocationStrategy {\n  internalBaseHref: string = '/';\n  internalPath: string = '/';\n  internalTitle: string = '';\n  urlChanges: string[] = [];\n  /** @internal */\n  _subject: EventEmitter<any> = new EventEmitter();\n  constructor() { super(); }\n\n  simulatePopState(url: string): void {\n    this.internalPath = url;\n    this._subject.emit(new _MockPopStateEvent(this.path()));\n  }\n\n  path(includeHash: boolean = false): string { return this.internalPath; }\n\n  prepareExternalUrl(internal: string): string {\n    if (internal.startsWith('/') && this.internalBaseHref.endsWith('/')) {\n      return this.internalBaseHref + internal.substring(1);\n    }\n    return this.internalBaseHref + internal;\n  }\n\n  pushState(ctx: any, title: string, path: string, query: string): void {\n    this.internalTitle = title;\n\n    const url = path + (query.length > 0 ? ('?' + query) : '');\n    this.internalPath = url;\n\n    const externalUrl = this.prepareExternalUrl(url);\n    this.urlChanges.push(externalUrl);\n  }\n\n  replaceState(ctx: any, title: string, path: string, query: string): void {\n    this.internalTitle = title;\n\n    const url = path + (query.length > 0 ? ('?' + query) : '');\n    this.internalPath = url;\n\n    const externalUrl = this.prepareExternalUrl(url);\n    this.urlChanges.push('replace: ' + externalUrl);\n  }\n\n  onPopState(fn: (value: any) => void): void { this._subject.subscribe({next: fn}); }\n\n  getBaseHref(): string { return this.internalBaseHref; }\n\n  back(): void {\n    if (this.urlChanges.length > 0) {\n      this.urlChanges.pop();\n      const nextUrl = this.urlChanges.length > 0 ? this.urlChanges[this.urlChanges.length - 1] : '';\n      this.simulatePopState(nextUrl);\n    }\n  }\n\n  forward(): void { throw 'not implemented'; }\n}\n\nclass _MockPopStateEvent {\n  pop: boolean = true;\n  type: string = 'popstate';\n  constructor(public newUrl: string) {}\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common/testing package.\n */\nexport {SpyLocation} from './location_mock';\nexport {MockLocationStrategy} from './mock_location_strategy';\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\nexport * from './src/testing';\n\n// This file only reexports content of the `src` folder. Keep it that way.\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// This file is not used to build this module. It is only used during editing\n// by the TypeScript language service and during build for verification. `ngc`\n// replaces this file with production index.ts when it rewrites private symbol\n// names.\n\nexport * from './public_api';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}