{"version":3,"sources":["testing.js"],"names":["HttpErrorResponse","HttpHeaders","HttpResponse","HttpEventType","HttpBackend","HttpClientModule","__decorate","Injectable","NgModule","Observable","HttpTestingController","TestRequest","request","observer","_cancelled","Object","defineProperty","prototype","get","enumerable","configurable","flush","body","opts","cancelled","Error","url","urlWithParams","headers","_maybeConvertBody","responseType","statusText","status","undefined","next","complete","error","event","_toArrayBufferBody","ArrayBuffer","_toBlob","Blob","_toJsonBody","format","Array","isArray","_toTextBody","JSON","stringify","HttpClientTestingBackend","open","handle","req","_this","testReq","push","type","Sent","_match","match","filter","method","toUpperCase","results","forEach","result","index","indexOf","splice","expectOne","description","descriptionFromMatcher","matches","length","expectNone","verify","ignoreCancelled","requests","map","split","join","matcher","name","HttpClientTestingModule","imports","providers","provide","useExisting","Éµangular_packages_common_http_testing_testing_a"],"mappings":"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","file":"testing.js","sourcesContent":["/**\n * @license Angular v6.1.10\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\nimport { HttpErrorResponse, HttpHeaders, HttpResponse, HttpEventType, HttpBackend, HttpClientModule } from '@angular/common/http';\nimport { __decorate } from 'tslib';\nimport { Injectable, NgModule } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Controller to be injected into tests, that allows for mocking and flushing\n * of requests.\n *\n *\n */\nvar HttpTestingController = /** @class */ (function () {\n    function HttpTestingController() {\n    }\n    return HttpTestingController;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A mock requests that was received and is ready to be answered.\n *\n * This interface allows access to the underlying `HttpRequest`, and allows\n * responding with `HttpEvent`s or `HttpErrorResponse`s.\n *\n *\n */\nvar TestRequest = /** @class */ (function () {\n    function TestRequest(request, observer) {\n        this.request = request;\n        this.observer = observer;\n        /**\n         * @internal set by `HttpClientTestingBackend`\n         */\n        this._cancelled = false;\n    }\n    Object.defineProperty(TestRequest.prototype, \"cancelled\", {\n        /**\n         * Whether the request was cancelled after it was sent.\n         */\n        get: function () { return this._cancelled; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Resolve the request by returning a body plus additional HTTP information (such as response\n     * headers) if provided.\n     *\n     * Both successful and unsuccessful responses can be delivered via `flush()`.\n     */\n    TestRequest.prototype.flush = function (body, opts) {\n        if (opts === void 0) { opts = {}; }\n        if (this.cancelled) {\n            throw new Error(\"Cannot flush a cancelled request.\");\n        }\n        var url = this.request.urlWithParams;\n        var headers = (opts.headers instanceof HttpHeaders) ? opts.headers : new HttpHeaders(opts.headers);\n        body = _maybeConvertBody(this.request.responseType, body);\n        var statusText = opts.statusText;\n        var status = opts.status !== undefined ? opts.status : 200;\n        if (opts.status === undefined) {\n            if (body === null) {\n                status = 204;\n                statusText = statusText || 'No Content';\n            }\n            else {\n                statusText = statusText || 'OK';\n            }\n        }\n        if (statusText === undefined) {\n            throw new Error('statusText is required when setting a custom status.');\n        }\n        if (status >= 200 && status < 300) {\n            this.observer.next(new HttpResponse({ body: body, headers: headers, status: status, statusText: statusText, url: url }));\n            this.observer.complete();\n        }\n        else {\n            this.observer.error(new HttpErrorResponse({ error: body, headers: headers, status: status, statusText: statusText, url: url }));\n        }\n    };\n    /**\n     * Resolve the request by returning an `ErrorEvent` (e.g. simulating a network failure).\n     */\n    TestRequest.prototype.error = function (error, opts) {\n        if (opts === void 0) { opts = {}; }\n        if (this.cancelled) {\n            throw new Error(\"Cannot return an error for a cancelled request.\");\n        }\n        if (opts.status && opts.status >= 200 && opts.status < 300) {\n            throw new Error(\"error() called with a successful status.\");\n        }\n        var headers = (opts.headers instanceof HttpHeaders) ? opts.headers : new HttpHeaders(opts.headers);\n        this.observer.error(new HttpErrorResponse({\n            error: error,\n            headers: headers,\n            status: opts.status || 0,\n            statusText: opts.statusText || '',\n            url: this.request.urlWithParams,\n        }));\n    };\n    /**\n     * Deliver an arbitrary `HttpEvent` (such as a progress event) on the response stream for this\n     * request.\n     */\n    TestRequest.prototype.event = function (event) {\n        if (this.cancelled) {\n            throw new Error(\"Cannot send events to a cancelled request.\");\n        }\n        this.observer.next(event);\n    };\n    return TestRequest;\n}());\n/**\n * Helper function to convert a response body to an ArrayBuffer.\n */\nfunction _toArrayBufferBody(body) {\n    if (typeof ArrayBuffer === 'undefined') {\n        throw new Error('ArrayBuffer responses are not supported on this platform.');\n    }\n    if (body instanceof ArrayBuffer) {\n        return body;\n    }\n    throw new Error('Automatic conversion to ArrayBuffer is not supported for response type.');\n}\n/**\n * Helper function to convert a response body to a Blob.\n */\nfunction _toBlob(body) {\n    if (typeof Blob === 'undefined') {\n        throw new Error('Blob responses are not supported on this platform.');\n    }\n    if (body instanceof Blob) {\n        return body;\n    }\n    if (ArrayBuffer && body instanceof ArrayBuffer) {\n        return new Blob([body]);\n    }\n    throw new Error('Automatic conversion to Blob is not supported for response type.');\n}\n/**\n * Helper function to convert a response body to JSON data.\n */\nfunction _toJsonBody(body, format) {\n    if (format === void 0) { format = 'JSON'; }\n    if (typeof ArrayBuffer !== 'undefined' && body instanceof ArrayBuffer) {\n        throw new Error(\"Automatic conversion to \" + format + \" is not supported for ArrayBuffers.\");\n    }\n    if (typeof Blob !== 'undefined' && body instanceof Blob) {\n        throw new Error(\"Automatic conversion to \" + format + \" is not supported for Blobs.\");\n    }\n    if (typeof body === 'string' || typeof body === 'number' || typeof body === 'object' ||\n        Array.isArray(body)) {\n        return body;\n    }\n    throw new Error(\"Automatic conversion to \" + format + \" is not supported for response type.\");\n}\n/**\n * Helper function to convert a response body to a string.\n */\nfunction _toTextBody(body) {\n    if (typeof body === 'string') {\n        return body;\n    }\n    if (typeof ArrayBuffer !== 'undefined' && body instanceof ArrayBuffer) {\n        throw new Error('Automatic conversion to text is not supported for ArrayBuffers.');\n    }\n    if (typeof Blob !== 'undefined' && body instanceof Blob) {\n        throw new Error('Automatic conversion to text is not supported for Blobs.');\n    }\n    return JSON.stringify(_toJsonBody(body, 'text'));\n}\n/**\n * Convert a response body to the requested type.\n */\nfunction _maybeConvertBody(responseType, body) {\n    if (body === null) {\n        return null;\n    }\n    switch (responseType) {\n        case 'arraybuffer':\n            return _toArrayBufferBody(body);\n        case 'blob':\n            return _toBlob(body);\n        case 'json':\n            return _toJsonBody(body);\n        case 'text':\n            return _toTextBody(body);\n        default:\n            throw new Error(\"Unsupported responseType: \" + responseType);\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A testing backend for `HttpClient` which both acts as an `HttpBackend`\n * and as the `HttpTestingController`.\n *\n * `HttpClientTestingBackend` works by keeping a list of all open requests.\n * As requests come in, they're added to the list. Users can assert that specific\n * requests were made and then flush them. In the end, a verify() method asserts\n * that no unexpected requests were made.\n *\n *\n */\nvar HttpClientTestingBackend = /** @class */ (function () {\n    function HttpClientTestingBackend() {\n        /**\n         * List of pending requests which have not yet been expected.\n         */\n        this.open = [];\n    }\n    /**\n     * Handle an incoming request by queueing it in the list of open requests.\n     */\n    HttpClientTestingBackend.prototype.handle = function (req) {\n        var _this = this;\n        return new Observable(function (observer) {\n            var testReq = new TestRequest(req, observer);\n            _this.open.push(testReq);\n            observer.next({ type: HttpEventType.Sent });\n            return function () { testReq._cancelled = true; };\n        });\n    };\n    /**\n     * Helper function to search for requests in the list of open requests.\n     */\n    HttpClientTestingBackend.prototype._match = function (match) {\n        if (typeof match === 'string') {\n            return this.open.filter(function (testReq) { return testReq.request.urlWithParams === match; });\n        }\n        else if (typeof match === 'function') {\n            return this.open.filter(function (testReq) { return match(testReq.request); });\n        }\n        else {\n            return this.open.filter(function (testReq) { return (!match.method || testReq.request.method === match.method.toUpperCase()) &&\n                (!match.url || testReq.request.urlWithParams === match.url); });\n        }\n    };\n    /**\n     * Search for requests in the list of open requests, and return all that match\n     * without asserting anything about the number of matches.\n     */\n    HttpClientTestingBackend.prototype.match = function (match) {\n        var _this = this;\n        var results = this._match(match);\n        results.forEach(function (result) {\n            var index = _this.open.indexOf(result);\n            if (index !== -1) {\n                _this.open.splice(index, 1);\n            }\n        });\n        return results;\n    };\n    /**\n     * Expect that a single outstanding request matches the given matcher, and return\n     * it.\n     *\n     * Requests returned through this API will no longer be in the list of open requests,\n     * and thus will not match twice.\n     */\n    HttpClientTestingBackend.prototype.expectOne = function (match, description) {\n        description = description || this.descriptionFromMatcher(match);\n        var matches = this.match(match);\n        if (matches.length > 1) {\n            throw new Error(\"Expected one matching request for criteria \\\"\" + description + \"\\\", found \" + matches.length + \" requests.\");\n        }\n        if (matches.length === 0) {\n            throw new Error(\"Expected one matching request for criteria \\\"\" + description + \"\\\", found none.\");\n        }\n        return matches[0];\n    };\n    /**\n     * Expect that no outstanding requests match the given matcher, and throw an error\n     * if any do.\n     */\n    HttpClientTestingBackend.prototype.expectNone = function (match, description) {\n        description = description || this.descriptionFromMatcher(match);\n        var matches = this.match(match);\n        if (matches.length > 0) {\n            throw new Error(\"Expected zero matching requests for criteria \\\"\" + description + \"\\\", found \" + matches.length + \".\");\n        }\n    };\n    /**\n     * Validate that there are no outstanding requests.\n     */\n    HttpClientTestingBackend.prototype.verify = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        var open = this.open;\n        // It's possible that some requests may be cancelled, and this is expected.\n        // The user can ask to ignore open requests which have been cancelled.\n        if (opts.ignoreCancelled) {\n            open = open.filter(function (testReq) { return !testReq.cancelled; });\n        }\n        if (open.length > 0) {\n            // Show the methods and URLs of open requests in the error, for convenience.\n            var requests = open.map(function (testReq) {\n                var url = testReq.request.urlWithParams.split('?')[0];\n                var method = testReq.request.method;\n                return method + \" \" + url;\n            })\n                .join(', ');\n            throw new Error(\"Expected no open requests, found \" + open.length + \": \" + requests);\n        }\n    };\n    HttpClientTestingBackend.prototype.descriptionFromMatcher = function (matcher) {\n        if (typeof matcher === 'string') {\n            return \"Match URL: \" + matcher;\n        }\n        else if (typeof matcher === 'object') {\n            var method = matcher.method || '(any)';\n            var url = matcher.url || '(any)';\n            return \"Match method: \" + method + \", URL: \" + url;\n        }\n        else {\n            return \"Match by function: \" + matcher.name;\n        }\n    };\n    HttpClientTestingBackend = __decorate([\n        Injectable()\n    ], HttpClientTestingBackend);\n    return HttpClientTestingBackend;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Configures `HttpClientTestingBackend` as the `HttpBackend` used by `HttpClient`.\n *\n * Inject `HttpTestingController` to expect and flush requests in your tests.\n *\n *\n */\nvar HttpClientTestingModule = /** @class */ (function () {\n    function HttpClientTestingModule() {\n    }\n    HttpClientTestingModule = __decorate([\n        NgModule({\n            imports: [\n                HttpClientModule,\n            ],\n            providers: [\n                HttpClientTestingBackend,\n                { provide: HttpBackend, useExisting: HttpClientTestingBackend },\n                { provide: HttpTestingController, useExisting: HttpClientTestingBackend },\n            ],\n        })\n    ], HttpClientTestingModule);\n    return HttpClientTestingModule;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { HttpClientTestingBackend as Éµangular_packages_common_http_testing_testing_a, HttpTestingController, HttpClientTestingModule, TestRequest };\n//# sourceMappingURL=http__testing.js.map\n"]}