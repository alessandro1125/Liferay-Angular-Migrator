{"version":3,"sources":["../testing/src/location_mock.ts","../testing/src/mock_location_strategy.ts","../testing/testing.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Location, LocationStrategy} from '@angular/common';\nimport {EventEmitter, Injectable} from '@angular/core';\nimport {SubscriptionLike} from 'rxjs';\n\n\n/**\n * A spy for {@link Location} that allows tests to fire simulated location events.\n *\n * @experimental\n */\n@Injectable()\nexport class SpyLocation implements Location {\n  urlChanges: string[] = [];\n  private _history: LocationState[] = [new LocationState('', '', null)];\n  private _historyIndex: number = 0;\n  /** @internal */\n  _subject: EventEmitter<any> = new EventEmitter();\n  /** @internal */\n  _baseHref: string = '';\n  /** @internal */\n  _platformStrategy: LocationStrategy = null !;\n\n  setInitialPath(url: string) { this._history[this._historyIndex].path = url; }\n\n  setBaseHref(url: string) { this._baseHref = url; }\n\n  path(): string { return this._history[this._historyIndex].path; }\n\n  private state(): string { return this._history[this._historyIndex].state; }\n\n  isCurrentPathEqualTo(path: string, query: string = ''): boolean {\n    const givenPath = path.endsWith('/') ? path.substring(0, path.length - 1) : path;\n    const currPath =\n        this.path().endsWith('/') ? this.path().substring(0, this.path().length - 1) : this.path();\n\n    return currPath == givenPath + (query.length > 0 ? ('?' + query) : '');\n  }\n\n  simulateUrlPop(pathname: string) {\n    this._subject.emit({'url': pathname, 'pop': true, 'type': 'popstate'});\n  }\n\n  simulateHashChange(pathname: string) {\n    // Because we don't prevent the native event, the browser will independently update the path\n    this.setInitialPath(pathname);\n    this.urlChanges.push('hash: ' + pathname);\n    this._subject.emit({'url': pathname, 'pop': true, 'type': 'hashchange'});\n  }\n\n  prepareExternalUrl(url: string): string {\n    if (url.length > 0 && !url.startsWith('/')) {\n      url = '/' + url;\n    }\n    return this._baseHref + url;\n  }\n\n  go(path: string, query: string = '', state: any = null) {\n    path = this.prepareExternalUrl(path);\n\n    if (this._historyIndex > 0) {\n      this._history.splice(this._historyIndex + 1);\n    }\n    this._history.push(new LocationState(path, query, state));\n    this._historyIndex = this._history.length - 1;\n\n    const locationState = this._history[this._historyIndex - 1];\n    if (locationState.path == path && locationState.query == query) {\n      return;\n    }\n\n    const url = path + (query.length > 0 ? ('?' + query) : '');\n    this.urlChanges.push(url);\n    this._subject.emit({'url': url, 'pop': false});\n  }\n\n  replaceState(path: string, query: string = '', state: any = null) {\n    path = this.prepareExternalUrl(path);\n\n    const history = this._history[this._historyIndex];\n    if (history.path == path && history.query == query) {\n      return;\n    }\n\n    history.path = path;\n    history.query = query;\n    history.state = state;\n\n    const url = path + (query.length > 0 ? ('?' + query) : '');\n    this.urlChanges.push('replace: ' + url);\n  }\n\n  forward() {\n    if (this._historyIndex < (this._history.length - 1)) {\n      this._historyIndex++;\n      this._subject.emit({'url': this.path(), 'state': this.state(), 'pop': true});\n    }\n  }\n\n  back() {\n    if (this._historyIndex > 0) {\n      this._historyIndex--;\n      this._subject.emit({'url': this.path(), 'state': this.state(), 'pop': true});\n    }\n  }\n\n  subscribe(\n      onNext: (value: any) => void, onThrow?: ((error: any) => void)|null,\n      onReturn?: (() => void)|null): SubscriptionLike {\n    return this._subject.subscribe({next: onNext, error: onThrow, complete: onReturn});\n  }\n\n  normalize(url: string): string { return null !; }\n}\n\nclass LocationState {\n  constructor(public path: string, public query: string, public state: any) {}\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {LocationStrategy} from '@angular/common';\nimport {EventEmitter, Injectable} from '@angular/core';\n\n\n\n/**\n * A mock implementation of {@link LocationStrategy} that allows tests to fire simulated\n * location events.\n *\n *\n */\n@Injectable()\nexport class MockLocationStrategy extends LocationStrategy {\n  internalBaseHref: string = '/';\n  internalPath: string = '/';\n  internalTitle: string = '';\n  urlChanges: string[] = [];\n  /** @internal */\n  _subject: EventEmitter<any> = new EventEmitter();\n  constructor() { super(); }\n\n  simulatePopState(url: string): void {\n    this.internalPath = url;\n    this._subject.emit(new _MockPopStateEvent(this.path()));\n  }\n\n  path(includeHash: boolean = false): string { return this.internalPath; }\n\n  prepareExternalUrl(internal: string): string {\n    if (internal.startsWith('/') && this.internalBaseHref.endsWith('/')) {\n      return this.internalBaseHref + internal.substring(1);\n    }\n    return this.internalBaseHref + internal;\n  }\n\n  pushState(ctx: any, title: string, path: string, query: string): void {\n    this.internalTitle = title;\n\n    const url = path + (query.length > 0 ? ('?' + query) : '');\n    this.internalPath = url;\n\n    const externalUrl = this.prepareExternalUrl(url);\n    this.urlChanges.push(externalUrl);\n  }\n\n  replaceState(ctx: any, title: string, path: string, query: string): void {\n    this.internalTitle = title;\n\n    const url = path + (query.length > 0 ? ('?' + query) : '');\n    this.internalPath = url;\n\n    const externalUrl = this.prepareExternalUrl(url);\n    this.urlChanges.push('replace: ' + externalUrl);\n  }\n\n  onPopState(fn: (value: any) => void): void { this._subject.subscribe({next: fn}); }\n\n  getBaseHref(): string { return this.internalBaseHref; }\n\n  back(): void {\n    if (this.urlChanges.length > 0) {\n      this.urlChanges.pop();\n      const nextUrl = this.urlChanges.length > 0 ? this.urlChanges[this.urlChanges.length - 1] : '';\n      this.simulatePopState(nextUrl);\n    }\n  }\n\n  forward(): void { throw 'not implemented'; }\n}\n\nclass _MockPopStateEvent {\n  pop: boolean = true;\n  type: string = 'popstate';\n  constructor(public newUrl: string) {}\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}