{"version":3,"sources":["webapis-shadydom.js"],"names":["global","factory","exports","module","define","amd","Zone","__load_patch","api","windowPrototype","Object","getPrototypeOf","window","hasOwnProperty","__symbol__","patchEventTarget","Node","prototype"],"mappings":";;AAAA;;;;;;;AAOC,eAAUA,MAAV,EAAkBC,OAAlB,EAA2B;AAC3B,eAAOC,OAAP,KAAmB,QAAnB,IAA+B,OAAOC,MAAP,KAAkB,WAAjD,GAA+DF,SAA/D,GACA,OAAOG,MAAP,KAAkB,UAAlB,IAAgCA,OAAOC,GAAvC,GAA6CD,OAAOH,OAAP,CAA7C,GACCA,SAFD;AAGA,KAJA,EAIC,IAJD,EAIQ,YAAY;AAAE;;AAEvB;;;;;;;;AAOAK,aAAKC,YAAL,CAAkB,UAAlB,EAA8B,UAAUP,MAAV,EAAkBM,IAAlB,EAAwBE,GAAxB,EAA6B;AACvD;AACA;AACA;AACA;AACA,gBAAIC,kBAAkBC,OAAOC,cAAP,CAAsBC,MAAtB,CAAtB;AACA,gBAAIH,mBAAmBA,gBAAgBI,cAAhB,CAA+B,kBAA/B,CAAvB,EAA2E;AACvEJ,gCAAgBH,KAAKQ,UAAL,CAAgB,kBAAhB,CAAhB,IAAuD,IAAvD;AACAL,gCAAgBH,KAAKQ,UAAL,CAAgB,qBAAhB,CAAhB,IAA0D,IAA1D;AACAN,oBAAIO,gBAAJ,CAAqBf,MAArB,EAA6B,CAACS,eAAD,CAA7B;AACH;AACD,gBAAIO,KAAKC,SAAL,CAAeJ,cAAf,CAA8B,kBAA9B,CAAJ,EAAuD;AACnDG,qBAAKC,SAAL,CAAeX,KAAKQ,UAAL,CAAgB,kBAAhB,CAAf,IAAsD,IAAtD;AACAE,qBAAKC,SAAL,CAAeX,KAAKQ,UAAL,CAAgB,qBAAhB,CAAf,IAAyD,IAAzD;AACAN,oBAAIO,gBAAJ,CAAqBf,MAArB,EAA6B,CAACgB,KAAKC,SAAN,CAA7B;AACH;AACJ,SAhBD;AAkBC,KA/BA,CAAD","file":"webapis-shadydom.js","sourcesContent":["/**\n* @license\n* Copyright Google Inc. All Rights Reserved.\n*\n* Use of this source code is governed by an MIT-style license that can be\n* found in the LICENSE file at https://angular.io/license\n*/\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(factory());\n}(this, (function () { 'use strict';\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('shadydom', function (global, Zone, api) {\n    // https://github.com/angular/zone.js/issues/782\n    // in web components, shadydom will patch addEventListener/removeEventListener of\n    // Node.prototype and WindowPrototype, this will have conflict with zone.js\n    // so zone.js need to patch them again.\n    var windowPrototype = Object.getPrototypeOf(window);\n    if (windowPrototype && windowPrototype.hasOwnProperty('addEventListener')) {\n        windowPrototype[Zone.__symbol__('addEventListener')] = null;\n        windowPrototype[Zone.__symbol__('removeEventListener')] = null;\n        api.patchEventTarget(global, [windowPrototype]);\n    }\n    if (Node.prototype.hasOwnProperty('addEventListener')) {\n        Node.prototype[Zone.__symbol__('addEventListener')] = null;\n        Node.prototype[Zone.__symbol__('removeEventListener')] = null;\n        api.patchEventTarget(global, [Node.prototype]);\n    }\n});\n\n})));\n"]}