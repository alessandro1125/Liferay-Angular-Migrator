{"version":3,"sources":["zone-patch-jsonp.js"],"names":["global","factory","exports","module","define","amd","Zone","__load_patch","api","__symbol__","patchJsonp","options","jsonp","sendFuncName","noop","successFuncName","failedFuncName","forEach","methodName","oriFunc","patchMethod","delegate","self","args","task","symbol","callback","invoke","apply","Object","defineProperty","configurable","enumerable","get","undefined","arguments","set","current","scheduleMacroTask"],"mappings":"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","file":"zone-patch-jsonp.js","sourcesContent":["/**\n* @license\n* Copyright Google Inc. All Rights Reserved.\n*\n* Use of this source code is governed by an MIT-style license that can be\n* found in the LICENSE file at https://angular.io/license\n*/\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(factory());\n}(this, (function () { 'use strict';\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('jsonp', function (global, Zone, api) {\n    Zone[Zone.__symbol__('jsonp')] = function patchJsonp(options) {\n        if (!options || !options.jsonp || !options.sendFuncName) {\n            return;\n        }\n        var noop = function () { };\n        [options.successFuncName, options.failedFuncName].forEach(function (methodName) {\n            if (!methodName) {\n                return;\n            }\n            var oriFunc = global[methodName];\n            if (oriFunc) {\n                api.patchMethod(global, methodName, function (delegate) { return function (self, args) {\n                    var task = global[api.symbol('jsonTask')];\n                    if (task) {\n                        task.callback = delegate;\n                        return task.invoke.apply(self, args);\n                    }\n                    else {\n                        return delegate.apply(self, args);\n                    }\n                }; });\n            }\n            else {\n                Object.defineProperty(global, methodName, {\n                    configurable: true,\n                    enumerable: true,\n                    get: function () {\n                        return function () {\n                            var task = global[api.symbol('jsonpTask')];\n                            var delegate = global[api.symbol(\"jsonp\" + methodName + \"callback\")];\n                            if (task) {\n                                if (delegate) {\n                                    task.callback = delegate;\n                                }\n                                global[api.symbol('jsonpTask')] = undefined;\n                                return task.invoke.apply(this, arguments);\n                            }\n                            else {\n                                if (delegate) {\n                                    return delegate.apply(this, arguments);\n                                }\n                            }\n                            return null;\n                        };\n                    },\n                    set: function (callback) {\n                        this[api.symbol(\"jsonp\" + methodName + \"callback\")] = callback;\n                    }\n                });\n            }\n        });\n        api.patchMethod(options.jsonp, options.sendFuncName, function (delegate) { return function (self, args) {\n            global[api.symbol('jsonpTask')] =\n                Zone.current.scheduleMacroTask('jsonp', noop, {}, function (task) {\n                    return delegate.apply(self, args);\n                }, noop);\n        }; });\n    };\n});\n\n})));\n"]}