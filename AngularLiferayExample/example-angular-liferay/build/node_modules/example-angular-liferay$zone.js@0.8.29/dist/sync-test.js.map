{"version":3,"sources":["sync-test.js"],"names":["global","factory","exports","module","define","amd","SyncTestZoneSpec","namePrefix","runZone","Zone","current","name","prototype","onScheduleTask","delegate","target","task","type","Error","source","scheduleTask"],"mappings":";;AAAA;;;;;;;AAOC,eAAUA,MAAV,EAAkBC,OAAlB,EAA2B;AAC3B,eAAOC,OAAP,KAAmB,QAAnB,IAA+B,OAAOC,MAAP,KAAkB,WAAjD,GAA+DF,SAA/D,GACA,OAAOG,MAAP,KAAkB,UAAlB,IAAgCA,OAAOC,GAAvC,GAA6CD,OAAOH,OAAP,CAA7C,GACCA,SAFD;AAGA,KAJA,EAIC,IAJD,EAIQ,YAAY;AAAE;;AAEvB;;;;;;;;AAOA,YAAIK,mBAAmB,aAAe,YAAY;AAC9C,qBAASA,gBAAT,CAA0BC,UAA1B,EAAsC;AAClC,qBAAKC,OAAL,GAAeC,KAAKC,OAApB;AACA,qBAAKC,IAAL,GAAY,sBAAsBJ,UAAlC;AACH;AACDD,6BAAiBM,SAAjB,CAA2BC,cAA3B,GAA4C,UAAUC,QAAV,EAAoBJ,OAApB,EAA6BK,MAA7B,EAAqCC,IAArC,EAA2C;AACnF,wBAAQA,KAAKC,IAAb;AACI,yBAAK,WAAL;AACA,yBAAK,WAAL;AACI,8BAAM,IAAIC,KAAJ,CAAU,iBAAiBF,KAAKG,MAAtB,GAA+B,2BAAzC,CAAN;AACJ,yBAAK,WAAL;AACIH,+BAAOF,SAASM,YAAT,CAAsBL,MAAtB,EAA8BC,IAA9B,CAAP;AACA;AANR;AAQA,uBAAOA,IAAP;AACH,aAVD;AAWA,mBAAOV,gBAAP;AACH,SAjBqC,EAAtC;AAkBA;AACA;AACAG,aAAK,kBAAL,IAA2BH,gBAA3B;AAEC,KAnCA,CAAD","file":"sync-test.js","sourcesContent":["/**\n* @license\n* Copyright Google Inc. All Rights Reserved.\n*\n* Use of this source code is governed by an MIT-style license that can be\n* found in the LICENSE file at https://angular.io/license\n*/\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(factory());\n}(this, (function () { 'use strict';\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SyncTestZoneSpec = /** @class */ (function () {\n    function SyncTestZoneSpec(namePrefix) {\n        this.runZone = Zone.current;\n        this.name = 'syncTestZone for ' + namePrefix;\n    }\n    SyncTestZoneSpec.prototype.onScheduleTask = function (delegate, current, target, task) {\n        switch (task.type) {\n            case 'microTask':\n            case 'macroTask':\n                throw new Error(\"Cannot call \" + task.source + \" from within a sync test.\");\n            case 'eventTask':\n                task = delegate.scheduleTask(target, task);\n                break;\n        }\n        return task;\n    };\n    return SyncTestZoneSpec;\n}());\n// Export the class so that new instances can be created with proper\n// constructor params.\nZone['SyncTestZoneSpec'] = SyncTestZoneSpec;\n\n})));\n"]}