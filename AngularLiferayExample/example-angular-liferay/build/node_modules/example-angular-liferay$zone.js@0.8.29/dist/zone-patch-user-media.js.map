{"version":3,"sources":["zone-patch-user-media.js"],"names":["global","factory","exports","module","define","amd","Zone","__load_patch","api","wrapFunctionArgs","func","source","args","Array","prototype","slice","call","arguments","wrappedArgs","bindArguments","name","apply","navigator","getUserMedia"],"mappings":";;AAAA;;;;;;;AAOC,eAAUA,MAAV,EAAkBC,OAAlB,EAA2B;AAC3B,eAAOC,OAAP,KAAmB,QAAnB,IAA+B,OAAOC,MAAP,KAAkB,WAAjD,GAA+DF,SAA/D,GACA,OAAOG,MAAP,KAAkB,UAAlB,IAAgCA,OAAOC,GAAvC,GAA6CD,OAAOH,OAAP,CAA7C,GACCA,SAFD;AAGA,KAJA,EAIC,IAJD,EAIQ,YAAY;AAAE;;AAEvB;;;;;;;;AAOAK,aAAKC,YAAL,CAAkB,cAAlB,EAAkC,UAAUP,MAAV,EAAkBM,IAAlB,EAAwBE,GAAxB,EAA6B;AAC3D,qBAASC,gBAAT,CAA0BC,IAA1B,EAAgCC,MAAhC,EAAwC;AACpC,uBAAO,YAAY;AACf,wBAAIC,OAAOC,MAAMC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BC,SAA3B,CAAX;AACA,wBAAIC,cAAcV,IAAIW,aAAJ,CAAkBP,IAAlB,EAAwBD,SAASA,MAAT,GAAkBD,KAAKU,IAA/C,CAAlB;AACA,2BAAOV,KAAKW,KAAL,CAAW,IAAX,EAAiBH,WAAjB,CAAP;AACH,iBAJD;AAKH;AACD,gBAAII,YAAYtB,OAAO,WAAP,CAAhB;AACA,gBAAIsB,aAAaA,UAAUC,YAA3B,EAAyC;AACrCD,0BAAUC,YAAV,GAAyBd,iBAAiBa,UAAUC,YAA3B,CAAzB;AACH;AACJ,SAZD;AAcC,KA3BA,CAAD","file":"zone-patch-user-media.js","sourcesContent":["/**\n* @license\n* Copyright Google Inc. All Rights Reserved.\n*\n* Use of this source code is governed by an MIT-style license that can be\n* found in the LICENSE file at https://angular.io/license\n*/\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(factory());\n}(this, (function () { 'use strict';\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('getUserMedia', function (global, Zone, api) {\n    function wrapFunctionArgs(func, source) {\n        return function () {\n            var args = Array.prototype.slice.call(arguments);\n            var wrappedArgs = api.bindArguments(args, source ? source : func.name);\n            return func.apply(this, wrappedArgs);\n        };\n    }\n    var navigator = global['navigator'];\n    if (navigator && navigator.getUserMedia) {\n        navigator.getUserMedia = wrapFunctionArgs(navigator.getUserMedia);\n    }\n});\n\n})));\n"]}