{"version":3,"sources":["long-stack-trace-zone.js"],"names":["global","factory","exports","module","define","amd","NEWLINE","IGNORE_FRAMES","creationTrace","ERROR_TAG","SEP_TAG","sepTemplate","LongStackTrace","error","getStacktrace","timestamp","Date","getStacktraceWithUncaughtError","Error","getStacktraceWithCaughtError","err","caughtError","stack","getFrames","split","addErrorStack","lines","trace","i","length","frame","hasOwnProperty","push","renderLongStackTrace","frames","longTrace","trim","getTime","traceFrames","lastTime","separator","replace","join","Zone","name","longStackTraceLimit","getLongStackTrace","undefined","__symbol__","onScheduleTask","parentZoneDelegate","currentZone","targetZone","task","stackTraceLimit","currentTask","data","concat","scheduleTask","onHandleError","parentTask","longStack","handleError","captureStackTraces","stackTraces","count","computeIgnoreFrames","frames1","frames2","frame1","indexOf","match","frame2"],"mappings":"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","file":"long-stack-trace-zone.js","sourcesContent":["/**\n* @license\n* Copyright Google Inc. All Rights Reserved.\n*\n* Use of this source code is governed by an MIT-style license that can be\n* found in the LICENSE file at https://angular.io/license\n*/\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(factory());\n}(this, (function () { 'use strict';\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @fileoverview\n * @suppress {globalThis}\n */\nvar NEWLINE = '\\n';\nvar IGNORE_FRAMES = {};\nvar creationTrace = '__creationTrace__';\nvar ERROR_TAG = 'STACKTRACE TRACKING';\nvar SEP_TAG = '__SEP_TAG__';\nvar sepTemplate = SEP_TAG + '@[native]';\nvar LongStackTrace = /** @class */ (function () {\n    function LongStackTrace() {\n        this.error = getStacktrace();\n        this.timestamp = new Date();\n    }\n    return LongStackTrace;\n}());\nfunction getStacktraceWithUncaughtError() {\n    return new Error(ERROR_TAG);\n}\nfunction getStacktraceWithCaughtError() {\n    try {\n        throw getStacktraceWithUncaughtError();\n    }\n    catch (err) {\n        return err;\n    }\n}\n// Some implementations of exception handling don't create a stack trace if the exception\n// isn't thrown, however it's faster not to actually throw the exception.\nvar error = getStacktraceWithUncaughtError();\nvar caughtError = getStacktraceWithCaughtError();\nvar getStacktrace = error.stack ?\n    getStacktraceWithUncaughtError :\n    (caughtError.stack ? getStacktraceWithCaughtError : getStacktraceWithUncaughtError);\nfunction getFrames(error) {\n    return error.stack ? error.stack.split(NEWLINE) : [];\n}\nfunction addErrorStack(lines, error) {\n    var trace = getFrames(error);\n    for (var i = 0; i < trace.length; i++) {\n        var frame = trace[i];\n        // Filter out the Frames which are part of stack capturing.\n        if (!IGNORE_FRAMES.hasOwnProperty(frame)) {\n            lines.push(trace[i]);\n        }\n    }\n}\nfunction renderLongStackTrace(frames, stack) {\n    var longTrace = [stack ? stack.trim() : ''];\n    if (frames) {\n        var timestamp = new Date().getTime();\n        for (var i = 0; i < frames.length; i++) {\n            var traceFrames = frames[i];\n            var lastTime = traceFrames.timestamp;\n            var separator = \"____________________Elapsed \" + (timestamp - lastTime.getTime()) + \" ms; At: \" + lastTime;\n            separator = separator.replace(/[^\\w\\d]/g, '_');\n            longTrace.push(sepTemplate.replace(SEP_TAG, separator));\n            addErrorStack(longTrace, traceFrames.error);\n            timestamp = lastTime.getTime();\n        }\n    }\n    return longTrace.join(NEWLINE);\n}\nZone['longStackTraceZoneSpec'] = {\n    name: 'long-stack-trace',\n    longStackTraceLimit: 10,\n    // add a getLongStackTrace method in spec to\n    // handle handled reject promise error.\n    getLongStackTrace: function (error) {\n        if (!error) {\n            return undefined;\n        }\n        var trace = error[Zone.__symbol__('currentTaskTrace')];\n        if (!trace) {\n            return error.stack;\n        }\n        return renderLongStackTrace(trace, error.stack);\n    },\n    onScheduleTask: function (parentZoneDelegate, currentZone, targetZone, task) {\n        if (Error.stackTraceLimit > 0) {\n            // if Error.stackTraceLimit is 0, means stack trace\n            // is disabled, so we don't need to generate long stack trace\n            // this will improve performance in some test(some test will\n            // set stackTraceLimit to 0, https://github.com/angular/zone.js/issues/698\n            var currentTask = Zone.currentTask;\n            var trace = currentTask && currentTask.data && currentTask.data[creationTrace] || [];\n            trace = [new LongStackTrace()].concat(trace);\n            if (trace.length > this.longStackTraceLimit) {\n                trace.length = this.longStackTraceLimit;\n            }\n            if (!task.data)\n                task.data = {};\n            task.data[creationTrace] = trace;\n        }\n        return parentZoneDelegate.scheduleTask(targetZone, task);\n    },\n    onHandleError: function (parentZoneDelegate, currentZone, targetZone, error) {\n        if (Error.stackTraceLimit > 0) {\n            // if Error.stackTraceLimit is 0, means stack trace\n            // is disabled, so we don't need to generate long stack trace\n            // this will improve performance in some test(some test will\n            // set stackTraceLimit to 0, https://github.com/angular/zone.js/issues/698\n            var parentTask = Zone.currentTask || error.task;\n            if (error instanceof Error && parentTask) {\n                var longStack = renderLongStackTrace(parentTask.data && parentTask.data[creationTrace], error.stack);\n                try {\n                    error.stack = error.longStack = longStack;\n                }\n                catch (err) {\n                }\n            }\n        }\n        return parentZoneDelegate.handleError(targetZone, error);\n    }\n};\nfunction captureStackTraces(stackTraces, count) {\n    if (count > 0) {\n        stackTraces.push(getFrames((new LongStackTrace()).error));\n        captureStackTraces(stackTraces, count - 1);\n    }\n}\nfunction computeIgnoreFrames() {\n    if (Error.stackTraceLimit <= 0) {\n        return;\n    }\n    var frames = [];\n    captureStackTraces(frames, 2);\n    var frames1 = frames[0];\n    var frames2 = frames[1];\n    for (var i = 0; i < frames1.length; i++) {\n        var frame1 = frames1[i];\n        if (frame1.indexOf(ERROR_TAG) == -1) {\n            var match = frame1.match(/^\\s*at\\s+/);\n            if (match) {\n                sepTemplate = match[0] + SEP_TAG + ' (http://localhost)';\n                break;\n            }\n        }\n    }\n    for (var i = 0; i < frames1.length; i++) {\n        var frame1 = frames1[i];\n        var frame2 = frames2[i];\n        if (frame1 === frame2) {\n            IGNORE_FRAMES[frame1] = true;\n        }\n        else {\n            break;\n        }\n    }\n}\ncomputeIgnoreFrames();\n\n})));\n"]}