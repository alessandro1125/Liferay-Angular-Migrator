{"version":3,"sources":["zone-testing.js"],"names":["global","factory","exports","module","define","amd","NEWLINE","IGNORE_FRAMES","creationTrace","ERROR_TAG","SEP_TAG","sepTemplate","LongStackTrace","error","getStacktrace","timestamp","Date","getStacktraceWithUncaughtError","Error","getStacktraceWithCaughtError","err","caughtError","stack","getFrames","split","addErrorStack","lines","trace","i","length","frame","hasOwnProperty","push","renderLongStackTrace","frames","longTrace","trim","getTime","traceFrames","lastTime","separator","replace","join","Zone","name","longStackTraceLimit","getLongStackTrace","undefined","__symbol__","onScheduleTask","parentZoneDelegate","currentZone","targetZone","task","stackTraceLimit","currentTask","data","concat","scheduleTask","onHandleError","parentTask","longStack","handleError","captureStackTraces","stackTraces","count","computeIgnoreFrames","frames1","frames2","frame1","indexOf","match","frame2","ProxyZoneSpec","defaultSpecDelegate","_delegateSpec","properties","propertyKeys","lastTaskState","isNeedToTriggerHasTask","tasks","setDelegate","get","current","isLoaded","assertPresent","prototype","delegateSpec","_this","isNewDelegate","forEach","key","Object","keys","k","macroTask","microTask","getDelegate","resetDelegate","tryTriggerHasTask","onHasTask","removeFromTasks","splice","getAndClearPendingTasksInfo","taskInfo","map","dataInfo","type","source","pendingTasksInfo","onFork","zoneSpec","fork","onIntercept","delegate","intercept","onInvoke","applyThis","applyArgs","invoke","onInvokeTask","invokeTask","onCancelTask","cancelTask","target","hasTaskState","hasTask","SyncTestZoneSpec","namePrefix","runZone","__extends","d","b","p","__","constructor","create","_global","window","self","jasmine","ambientZone","syncZone","symbol","enableClockPatch","jasmineEnv","getEnv","methodName","originalJasmineFn","description","specDefinitions","call","wrapDescribeInZone","timeout","arguments","wrapTestInZone","apply","originalClockFn","clock","originalTick_1","tick","fakeAsyncZoneSpec","originalMockDate_1","mockDate","dateTime","setCurrentRealTime","FakeAsyncTestZoneSpec","describeBody","run","runInTestZone","testBody","queueRunner","done","isClockInstalled","testProxyZoneSpec","testProxyZone","fakeAsyncModule","fakeAsync","QueueRunner","_super","ZoneQueueRunner","attrs","onComplete","fn","scheduleMicroTask","nativeSetTimeout","nativeClearTimeout","setTimeout","clearTimeout","UserContext","userContext","onException","message","proxyZoneSpec","execute","zone","isChildOfAmbientZone","parent","AsyncTestZoneSpec","finishCallback","failCallback","_pendingMicroTasks","_pendingMacroTasks","_alreadyErrored","_isSync","unresolvedChainedPromiseCount","supportWaitUnresolvedChainedPromise","isUnresolvedChainedPromisePending","_finishCallbackIfDone","patchPromiseForTest","Promise","unPatchPromiseForTest","symbolParentUnresolved","afterTaskCounts","_taskCounts","result","change","__load_patch","api","asyncTest","fail","e","context","proxyZone","getZoneWith","previousDelegate","testZoneSpec","runGuarded","__read","o","n","m","Symbol","iterator","r","ar","next","value","__spread","OriginalDate","FakeDate","setTime","now","args","Array","slice","bind","fakeAsyncTestZoneSpec","getCurrentRealTime","getCurrentTime","UTC","parse","timers","setInterval","clearInterval","Scheduler","nextId","_schedulerQueue","_currentTime","_currentRealTime","realTime","scheduleFunction","cb","delay","isPeriodic","isRequestAnimationFrame","id","currentId","endTime","newEntry","func","currentEntry","removeScheduledFunctionWithId","millis","doTick","finalTime","lastCurrentTime","current_1","shift","retval","flush","limit","flushPeriodic","flushNonPeriodic","startTime","lastTask","filter","trackPendingRequestAnimationFrame","macroTaskOptions","_scheduler","_microtasks","_lastError","_uncaughtPromiseErrors","pendingPeriodicTimers","pendingTimers","patchDateLocked","assertInZone","_fnAndFlush","completers","_i","onSuccess","flushMicrotasks","onError","_removeTimer","index","_dequeueTimer","_requeuePeriodicTimer","interval","_dequeuePeriodicTimer","_setTimeout","isTimer","removeTimerFn","_clearTimeout","_setInterval","_clearInterval","_resetLastErrorAndThrow","patchDate","checkTimerPatch","resetDate","lockDatePatch","unlockDatePatch","flushErrors","microtask","elapsed","additionalArgs","callbackIndex","cbIdx","macroTaskOption","findMacroTaskOption","args_1","callbackArgs","handleId","callback","_fakeAsyncTestZoneSpec","resetFakeAsyncZone","res","lastProxyZoneSpec","_getFakeAsyncZoneSpec","maxTurns","discardPeriodicTasks","symbolState","UNRESOLVED","oriThen","then","chained","asyncTestZoneSpec","unpatchPromiseForTest"],"mappings":"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","file":"zone-testing.js","sourcesContent":["/**\n* @license\n* Copyright Google Inc. All Rights Reserved.\n*\n* Use of this source code is governed by an MIT-style license that can be\n* found in the LICENSE file at https://angular.io/license\n*/\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(factory());\n}(this, (function () { 'use strict';\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @fileoverview\n * @suppress {globalThis}\n */\nvar NEWLINE = '\\n';\nvar IGNORE_FRAMES = {};\nvar creationTrace = '__creationTrace__';\nvar ERROR_TAG = 'STACKTRACE TRACKING';\nvar SEP_TAG = '__SEP_TAG__';\nvar sepTemplate = SEP_TAG + '@[native]';\nvar LongStackTrace = /** @class */ (function () {\n    function LongStackTrace() {\n        this.error = getStacktrace();\n        this.timestamp = new Date();\n    }\n    return LongStackTrace;\n}());\nfunction getStacktraceWithUncaughtError() {\n    return new Error(ERROR_TAG);\n}\nfunction getStacktraceWithCaughtError() {\n    try {\n        throw getStacktraceWithUncaughtError();\n    }\n    catch (err) {\n        return err;\n    }\n}\n// Some implementations of exception handling don't create a stack trace if the exception\n// isn't thrown, however it's faster not to actually throw the exception.\nvar error = getStacktraceWithUncaughtError();\nvar caughtError = getStacktraceWithCaughtError();\nvar getStacktrace = error.stack ?\n    getStacktraceWithUncaughtError :\n    (caughtError.stack ? getStacktraceWithCaughtError : getStacktraceWithUncaughtError);\nfunction getFrames(error) {\n    return error.stack ? error.stack.split(NEWLINE) : [];\n}\nfunction addErrorStack(lines, error) {\n    var trace = getFrames(error);\n    for (var i = 0; i < trace.length; i++) {\n        var frame = trace[i];\n        // Filter out the Frames which are part of stack capturing.\n        if (!IGNORE_FRAMES.hasOwnProperty(frame)) {\n            lines.push(trace[i]);\n        }\n    }\n}\nfunction renderLongStackTrace(frames, stack) {\n    var longTrace = [stack ? stack.trim() : ''];\n    if (frames) {\n        var timestamp = new Date().getTime();\n        for (var i = 0; i < frames.length; i++) {\n            var traceFrames = frames[i];\n            var lastTime = traceFrames.timestamp;\n            var separator = \"____________________Elapsed \" + (timestamp - lastTime.getTime()) + \" ms; At: \" + lastTime;\n            separator = separator.replace(/[^\\w\\d]/g, '_');\n            longTrace.push(sepTemplate.replace(SEP_TAG, separator));\n            addErrorStack(longTrace, traceFrames.error);\n            timestamp = lastTime.getTime();\n        }\n    }\n    return longTrace.join(NEWLINE);\n}\nZone['longStackTraceZoneSpec'] = {\n    name: 'long-stack-trace',\n    longStackTraceLimit: 10,\n    // add a getLongStackTrace method in spec to\n    // handle handled reject promise error.\n    getLongStackTrace: function (error) {\n        if (!error) {\n            return undefined;\n        }\n        var trace = error[Zone.__symbol__('currentTaskTrace')];\n        if (!trace) {\n            return error.stack;\n        }\n        return renderLongStackTrace(trace, error.stack);\n    },\n    onScheduleTask: function (parentZoneDelegate, currentZone, targetZone, task) {\n        if (Error.stackTraceLimit > 0) {\n            // if Error.stackTraceLimit is 0, means stack trace\n            // is disabled, so we don't need to generate long stack trace\n            // this will improve performance in some test(some test will\n            // set stackTraceLimit to 0, https://github.com/angular/zone.js/issues/698\n            var currentTask = Zone.currentTask;\n            var trace = currentTask && currentTask.data && currentTask.data[creationTrace] || [];\n            trace = [new LongStackTrace()].concat(trace);\n            if (trace.length > this.longStackTraceLimit) {\n                trace.length = this.longStackTraceLimit;\n            }\n            if (!task.data)\n                task.data = {};\n            task.data[creationTrace] = trace;\n        }\n        return parentZoneDelegate.scheduleTask(targetZone, task);\n    },\n    onHandleError: function (parentZoneDelegate, currentZone, targetZone, error) {\n        if (Error.stackTraceLimit > 0) {\n            // if Error.stackTraceLimit is 0, means stack trace\n            // is disabled, so we don't need to generate long stack trace\n            // this will improve performance in some test(some test will\n            // set stackTraceLimit to 0, https://github.com/angular/zone.js/issues/698\n            var parentTask = Zone.currentTask || error.task;\n            if (error instanceof Error && parentTask) {\n                var longStack = renderLongStackTrace(parentTask.data && parentTask.data[creationTrace], error.stack);\n                try {\n                    error.stack = error.longStack = longStack;\n                }\n                catch (err) {\n                }\n            }\n        }\n        return parentZoneDelegate.handleError(targetZone, error);\n    }\n};\nfunction captureStackTraces(stackTraces, count) {\n    if (count > 0) {\n        stackTraces.push(getFrames((new LongStackTrace()).error));\n        captureStackTraces(stackTraces, count - 1);\n    }\n}\nfunction computeIgnoreFrames() {\n    if (Error.stackTraceLimit <= 0) {\n        return;\n    }\n    var frames = [];\n    captureStackTraces(frames, 2);\n    var frames1 = frames[0];\n    var frames2 = frames[1];\n    for (var i = 0; i < frames1.length; i++) {\n        var frame1 = frames1[i];\n        if (frame1.indexOf(ERROR_TAG) == -1) {\n            var match = frame1.match(/^\\s*at\\s+/);\n            if (match) {\n                sepTemplate = match[0] + SEP_TAG + ' (http://localhost)';\n                break;\n            }\n        }\n    }\n    for (var i = 0; i < frames1.length; i++) {\n        var frame1 = frames1[i];\n        var frame2 = frames2[i];\n        if (frame1 === frame2) {\n            IGNORE_FRAMES[frame1] = true;\n        }\n        else {\n            break;\n        }\n    }\n}\ncomputeIgnoreFrames();\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ProxyZoneSpec = /** @class */ (function () {\n    function ProxyZoneSpec(defaultSpecDelegate) {\n        if (defaultSpecDelegate === void 0) { defaultSpecDelegate = null; }\n        this.defaultSpecDelegate = defaultSpecDelegate;\n        this.name = 'ProxyZone';\n        this._delegateSpec = null;\n        this.properties = { 'ProxyZoneSpec': this };\n        this.propertyKeys = null;\n        this.lastTaskState = null;\n        this.isNeedToTriggerHasTask = false;\n        this.tasks = [];\n        this.setDelegate(defaultSpecDelegate);\n    }\n    ProxyZoneSpec.get = function () {\n        return Zone.current.get('ProxyZoneSpec');\n    };\n    ProxyZoneSpec.isLoaded = function () {\n        return ProxyZoneSpec.get() instanceof ProxyZoneSpec;\n    };\n    ProxyZoneSpec.assertPresent = function () {\n        if (!ProxyZoneSpec.isLoaded()) {\n            throw new Error(\"Expected to be running in 'ProxyZone', but it was not found.\");\n        }\n        return ProxyZoneSpec.get();\n    };\n    ProxyZoneSpec.prototype.setDelegate = function (delegateSpec) {\n        var _this = this;\n        var isNewDelegate = this._delegateSpec !== delegateSpec;\n        this._delegateSpec = delegateSpec;\n        this.propertyKeys && this.propertyKeys.forEach(function (key) { return delete _this.properties[key]; });\n        this.propertyKeys = null;\n        if (delegateSpec && delegateSpec.properties) {\n            this.propertyKeys = Object.keys(delegateSpec.properties);\n            this.propertyKeys.forEach(function (k) { return _this.properties[k] = delegateSpec.properties[k]; });\n        }\n        // if set a new delegateSpec, shoulde check whether need to\n        // trigger hasTask or not\n        if (isNewDelegate && this.lastTaskState &&\n            (this.lastTaskState.macroTask || this.lastTaskState.microTask)) {\n            this.isNeedToTriggerHasTask = true;\n        }\n    };\n    ProxyZoneSpec.prototype.getDelegate = function () {\n        return this._delegateSpec;\n    };\n    ProxyZoneSpec.prototype.resetDelegate = function () {\n        var delegateSpec = this.getDelegate();\n        this.setDelegate(this.defaultSpecDelegate);\n    };\n    ProxyZoneSpec.prototype.tryTriggerHasTask = function (parentZoneDelegate, currentZone, targetZone) {\n        if (this.isNeedToTriggerHasTask && this.lastTaskState) {\n            // last delegateSpec has microTask or macroTask\n            // should call onHasTask in current delegateSpec\n            this.isNeedToTriggerHasTask = false;\n            this.onHasTask(parentZoneDelegate, currentZone, targetZone, this.lastTaskState);\n        }\n    };\n    ProxyZoneSpec.prototype.removeFromTasks = function (task) {\n        if (!this.tasks) {\n            return;\n        }\n        for (var i = 0; i < this.tasks.length; i++) {\n            if (this.tasks[i] === task) {\n                this.tasks.splice(i, 1);\n                return;\n            }\n        }\n    };\n    ProxyZoneSpec.prototype.getAndClearPendingTasksInfo = function () {\n        if (this.tasks.length === 0) {\n            return '';\n        }\n        var taskInfo = this.tasks.map(function (task) {\n            var dataInfo = task.data &&\n                Object.keys(task.data)\n                    .map(function (key) {\n                    return key + ':' + task.data[key];\n                })\n                    .join(',');\n            return \"type: \" + task.type + \", source: \" + task.source + \", args: {\" + dataInfo + \"}\";\n        });\n        var pendingTasksInfo = '--Pendng async tasks are: [' + taskInfo + ']';\n        // clear tasks\n        this.tasks = [];\n        return pendingTasksInfo;\n    };\n    ProxyZoneSpec.prototype.onFork = function (parentZoneDelegate, currentZone, targetZone, zoneSpec) {\n        if (this._delegateSpec && this._delegateSpec.onFork) {\n            return this._delegateSpec.onFork(parentZoneDelegate, currentZone, targetZone, zoneSpec);\n        }\n        else {\n            return parentZoneDelegate.fork(targetZone, zoneSpec);\n        }\n    };\n    ProxyZoneSpec.prototype.onIntercept = function (parentZoneDelegate, currentZone, targetZone, delegate, source) {\n        if (this._delegateSpec && this._delegateSpec.onIntercept) {\n            return this._delegateSpec.onIntercept(parentZoneDelegate, currentZone, targetZone, delegate, source);\n        }\n        else {\n            return parentZoneDelegate.intercept(targetZone, delegate, source);\n        }\n    };\n    ProxyZoneSpec.prototype.onInvoke = function (parentZoneDelegate, currentZone, targetZone, delegate, applyThis, applyArgs, source) {\n        this.tryTriggerHasTask(parentZoneDelegate, currentZone, targetZone);\n        if (this._delegateSpec && this._delegateSpec.onInvoke) {\n            return this._delegateSpec.onInvoke(parentZoneDelegate, currentZone, targetZone, delegate, applyThis, applyArgs, source);\n        }\n        else {\n            return parentZoneDelegate.invoke(targetZone, delegate, applyThis, applyArgs, source);\n        }\n    };\n    ProxyZoneSpec.prototype.onHandleError = function (parentZoneDelegate, currentZone, targetZone, error) {\n        if (this._delegateSpec && this._delegateSpec.onHandleError) {\n            return this._delegateSpec.onHandleError(parentZoneDelegate, currentZone, targetZone, error);\n        }\n        else {\n            return parentZoneDelegate.handleError(targetZone, error);\n        }\n    };\n    ProxyZoneSpec.prototype.onScheduleTask = function (parentZoneDelegate, currentZone, targetZone, task) {\n        if (task.type !== 'eventTask') {\n            this.tasks.push(task);\n        }\n        if (this._delegateSpec && this._delegateSpec.onScheduleTask) {\n            return this._delegateSpec.onScheduleTask(parentZoneDelegate, currentZone, targetZone, task);\n        }\n        else {\n            return parentZoneDelegate.scheduleTask(targetZone, task);\n        }\n    };\n    ProxyZoneSpec.prototype.onInvokeTask = function (parentZoneDelegate, currentZone, targetZone, task, applyThis, applyArgs) {\n        if (task.type !== 'eventTask') {\n            this.removeFromTasks(task);\n        }\n        this.tryTriggerHasTask(parentZoneDelegate, currentZone, targetZone);\n        if (this._delegateSpec && this._delegateSpec.onInvokeTask) {\n            return this._delegateSpec.onInvokeTask(parentZoneDelegate, currentZone, targetZone, task, applyThis, applyArgs);\n        }\n        else {\n            return parentZoneDelegate.invokeTask(targetZone, task, applyThis, applyArgs);\n        }\n    };\n    ProxyZoneSpec.prototype.onCancelTask = function (parentZoneDelegate, currentZone, targetZone, task) {\n        if (task.type !== 'eventTask') {\n            this.removeFromTasks(task);\n        }\n        this.tryTriggerHasTask(parentZoneDelegate, currentZone, targetZone);\n        if (this._delegateSpec && this._delegateSpec.onCancelTask) {\n            return this._delegateSpec.onCancelTask(parentZoneDelegate, currentZone, targetZone, task);\n        }\n        else {\n            return parentZoneDelegate.cancelTask(targetZone, task);\n        }\n    };\n    ProxyZoneSpec.prototype.onHasTask = function (delegate, current, target, hasTaskState) {\n        this.lastTaskState = hasTaskState;\n        if (this._delegateSpec && this._delegateSpec.onHasTask) {\n            this._delegateSpec.onHasTask(delegate, current, target, hasTaskState);\n        }\n        else {\n            delegate.hasTask(target, hasTaskState);\n        }\n    };\n    return ProxyZoneSpec;\n}());\n// Export the class so that new instances can be created with proper\n// constructor params.\nZone['ProxyZoneSpec'] = ProxyZoneSpec;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SyncTestZoneSpec = /** @class */ (function () {\n    function SyncTestZoneSpec(namePrefix) {\n        this.runZone = Zone.current;\n        this.name = 'syncTestZone for ' + namePrefix;\n    }\n    SyncTestZoneSpec.prototype.onScheduleTask = function (delegate, current, target, task) {\n        switch (task.type) {\n            case 'microTask':\n            case 'macroTask':\n                throw new Error(\"Cannot call \" + task.source + \" from within a sync test.\");\n            case 'eventTask':\n                task = delegate.scheduleTask(target, task);\n                break;\n        }\n        return task;\n    };\n    return SyncTestZoneSpec;\n}());\n// Export the class so that new instances can be created with proper\n// constructor params.\nZone['SyncTestZoneSpec'] = SyncTestZoneSpec;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n(function () {\n    var __extends = function (d, b) {\n        for (var p in b)\n            if (b.hasOwnProperty(p))\n                d[p] = b[p];\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var _global = typeof window !== 'undefined' && window || typeof self !== 'undefined' && self || global;\n    // Patch jasmine's describe/it/beforeEach/afterEach functions so test code always runs\n    // in a testZone (ProxyZone). (See: angular/zone.js#91 & angular/angular#10503)\n    if (!Zone)\n        throw new Error('Missing: zone.js');\n    if (typeof jasmine == 'undefined')\n        throw new Error('Missing: jasmine.js');\n    if (jasmine['__zone_patch__'])\n        throw new Error(\"'jasmine' has already been patched with 'Zone'.\");\n    jasmine['__zone_patch__'] = true;\n    var SyncTestZoneSpec = Zone['SyncTestZoneSpec'];\n    var ProxyZoneSpec = Zone['ProxyZoneSpec'];\n    if (!SyncTestZoneSpec)\n        throw new Error('Missing: SyncTestZoneSpec');\n    if (!ProxyZoneSpec)\n        throw new Error('Missing: ProxyZoneSpec');\n    var ambientZone = Zone.current;\n    // Create a synchronous-only zone in which to run `describe` blocks in order to raise an\n    // error if any asynchronous operations are attempted inside of a `describe` but outside of\n    // a `beforeEach` or `it`.\n    var syncZone = ambientZone.fork(new SyncTestZoneSpec('jasmine.describe'));\n    var symbol = Zone.__symbol__;\n    // whether patch jasmine clock when in fakeAsync\n    var enableClockPatch = _global[symbol('fakeAsyncPatchLock')] === true;\n    // Monkey patch all of the jasmine DSL so that each function runs in appropriate zone.\n    var jasmineEnv = jasmine.getEnv();\n    ['describe', 'xdescribe', 'fdescribe'].forEach(function (methodName) {\n        var originalJasmineFn = jasmineEnv[methodName];\n        jasmineEnv[methodName] = function (description, specDefinitions) {\n            return originalJasmineFn.call(this, description, wrapDescribeInZone(specDefinitions));\n        };\n    });\n    ['it', 'xit', 'fit'].forEach(function (methodName) {\n        var originalJasmineFn = jasmineEnv[methodName];\n        jasmineEnv[symbol(methodName)] = originalJasmineFn;\n        jasmineEnv[methodName] = function (description, specDefinitions, timeout) {\n            arguments[1] = wrapTestInZone(specDefinitions);\n            return originalJasmineFn.apply(this, arguments);\n        };\n    });\n    ['beforeEach', 'afterEach', 'beforeAll', 'afterAll'].forEach(function (methodName) {\n        var originalJasmineFn = jasmineEnv[methodName];\n        jasmineEnv[symbol(methodName)] = originalJasmineFn;\n        jasmineEnv[methodName] = function (specDefinitions, timeout) {\n            arguments[0] = wrapTestInZone(specDefinitions);\n            return originalJasmineFn.apply(this, arguments);\n        };\n    });\n    // need to patch jasmine.clock().mockDate and jasmine.clock().tick() so\n    // they can work properly in FakeAsyncTest\n    var originalClockFn = (jasmine[symbol('clock')] = jasmine['clock']);\n    jasmine['clock'] = function () {\n        var clock = originalClockFn.apply(this, arguments);\n        if (!clock[symbol('patched')]) {\n            clock[symbol('patched')] = symbol('patched');\n            var originalTick_1 = (clock[symbol('tick')] = clock.tick);\n            clock.tick = function () {\n                var fakeAsyncZoneSpec = Zone.current.get('FakeAsyncTestZoneSpec');\n                if (fakeAsyncZoneSpec) {\n                    return fakeAsyncZoneSpec.tick.apply(fakeAsyncZoneSpec, arguments);\n                }\n                return originalTick_1.apply(this, arguments);\n            };\n            var originalMockDate_1 = (clock[symbol('mockDate')] = clock.mockDate);\n            clock.mockDate = function () {\n                var fakeAsyncZoneSpec = Zone.current.get('FakeAsyncTestZoneSpec');\n                if (fakeAsyncZoneSpec) {\n                    var dateTime = arguments.length > 0 ? arguments[0] : new Date();\n                    return fakeAsyncZoneSpec.setCurrentRealTime.apply(fakeAsyncZoneSpec, dateTime && typeof dateTime.getTime === 'function' ? [dateTime.getTime()] :\n                        arguments);\n                }\n                return originalMockDate_1.apply(this, arguments);\n            };\n            // for auto go into fakeAsync feature, we need the flag to enable it\n            if (enableClockPatch) {\n                ['install', 'uninstall'].forEach(function (methodName) {\n                    var originalClockFn = (clock[symbol(methodName)] = clock[methodName]);\n                    clock[methodName] = function () {\n                        var FakeAsyncTestZoneSpec = Zone['FakeAsyncTestZoneSpec'];\n                        if (FakeAsyncTestZoneSpec) {\n                            jasmine[symbol('clockInstalled')] = 'install' === methodName;\n                            return;\n                        }\n                        return originalClockFn.apply(this, arguments);\n                    };\n                });\n            }\n        }\n        return clock;\n    };\n    /**\n     * Gets a function wrapping the body of a Jasmine `describe` block to execute in a\n     * synchronous-only zone.\n     */\n    function wrapDescribeInZone(describeBody) {\n        return function () {\n            return syncZone.run(describeBody, this, arguments);\n        };\n    }\n    function runInTestZone(testBody, applyThis, queueRunner, done) {\n        var isClockInstalled = !!jasmine[symbol('clockInstalled')];\n        var testProxyZoneSpec = queueRunner.testProxyZoneSpec;\n        var testProxyZone = queueRunner.testProxyZone;\n        if (isClockInstalled && enableClockPatch) {\n            // auto run a fakeAsync\n            var fakeAsyncModule = Zone[Zone.__symbol__('fakeAsyncTest')];\n            if (fakeAsyncModule && typeof fakeAsyncModule.fakeAsync === 'function') {\n                testBody = fakeAsyncModule.fakeAsync(testBody);\n            }\n        }\n        if (done) {\n            return testProxyZone.run(testBody, applyThis, [done]);\n        }\n        else {\n            return testProxyZone.run(testBody, applyThis);\n        }\n    }\n    /**\n     * Gets a function wrapping the body of a Jasmine `it/beforeEach/afterEach` block to\n     * execute in a ProxyZone zone.\n     * This will run in `testProxyZone`. The `testProxyZone` will be reset by the `ZoneQueueRunner`\n     */\n    function wrapTestInZone(testBody) {\n        // The `done` callback is only passed through if the function expects at least one argument.\n        // Note we have to make a function with correct number of arguments, otherwise jasmine will\n        // think that all functions are sync or async.\n        return (testBody && (testBody.length ? function (done) {\n            return runInTestZone(testBody, this, this.queueRunner, done);\n        } : function () {\n            return runInTestZone(testBody, this, this.queueRunner);\n        }));\n    }\n    var QueueRunner = jasmine.QueueRunner;\n    jasmine.QueueRunner = (function (_super) {\n        __extends(ZoneQueueRunner, _super);\n        function ZoneQueueRunner(attrs) {\n            var _this = this;\n            attrs.onComplete = (function (fn) { return function () {\n                // All functions are done, clear the test zone.\n                _this.testProxyZone = null;\n                _this.testProxyZoneSpec = null;\n                ambientZone.scheduleMicroTask('jasmine.onComplete', fn);\n            }; })(attrs.onComplete);\n            var nativeSetTimeout = _global['__zone_symbol__setTimeout'];\n            var nativeClearTimeout = _global['__zone_symbol__clearTimeout'];\n            if (nativeSetTimeout) {\n                // should run setTimeout inside jasmine outside of zone\n                attrs.timeout = {\n                    setTimeout: nativeSetTimeout ? nativeSetTimeout : _global.setTimeout,\n                    clearTimeout: nativeClearTimeout ? nativeClearTimeout : _global.clearTimeout\n                };\n            }\n            // create a userContext to hold the queueRunner itself\n            // so we can access the testProxy in it/xit/beforeEach ...\n            if (jasmine.UserContext) {\n                if (!attrs.userContext) {\n                    attrs.userContext = new jasmine.UserContext();\n                }\n                attrs.userContext.queueRunner = this;\n            }\n            else {\n                if (!attrs.userContext) {\n                    attrs.userContext = {};\n                }\n                attrs.userContext.queueRunner = this;\n            }\n            // patch attrs.onException\n            var onException = attrs.onException;\n            attrs.onException = function (error) {\n                if (error &&\n                    error.message ===\n                        'Timeout - Async callback was not invoked within timeout specified by jasmine.DEFAULT_TIMEOUT_INTERVAL.') {\n                    // jasmine timeout, we can make the error message more\n                    // reasonable to tell what tasks are pending\n                    var proxyZoneSpec = this && this.testProxyZoneSpec;\n                    if (proxyZoneSpec) {\n                        var pendingTasksInfo = proxyZoneSpec.getAndClearPendingTasksInfo();\n                        error.message += pendingTasksInfo;\n                    }\n                }\n                if (onException) {\n                    onException.call(this, error);\n                }\n            };\n            _super.call(this, attrs);\n        }\n        ZoneQueueRunner.prototype.execute = function () {\n            var _this = this;\n            var zone = Zone.current;\n            var isChildOfAmbientZone = false;\n            while (zone) {\n                if (zone === ambientZone) {\n                    isChildOfAmbientZone = true;\n                    break;\n                }\n                zone = zone.parent;\n            }\n            if (!isChildOfAmbientZone)\n                throw new Error('Unexpected Zone: ' + Zone.current.name);\n            // This is the zone which will be used for running individual tests.\n            // It will be a proxy zone, so that the tests function can retroactively install\n            // different zones.\n            // Example:\n            //   - In beforeEach() do childZone = Zone.current.fork(...);\n            //   - In it() try to do fakeAsync(). The issue is that because the beforeEach forked the\n            //     zone outside of fakeAsync it will be able to escape the fakeAsync rules.\n            //   - Because ProxyZone is parent fo `childZone` fakeAsync can retroactively add\n            //     fakeAsync behavior to the childZone.\n            this.testProxyZoneSpec = new ProxyZoneSpec();\n            this.testProxyZone = ambientZone.fork(this.testProxyZoneSpec);\n            if (!Zone.currentTask) {\n                // if we are not running in a task then if someone would register a\n                // element.addEventListener and then calling element.click() the\n                // addEventListener callback would think that it is the top most task and would\n                // drain the microtask queue on element.click() which would be incorrect.\n                // For this reason we always force a task when running jasmine tests.\n                Zone.current.scheduleMicroTask('jasmine.execute().forceTask', function () { return QueueRunner.prototype.execute.call(_this); });\n            }\n            else {\n                _super.prototype.execute.call(this);\n            }\n        };\n        return ZoneQueueRunner;\n    })(QueueRunner);\n})();\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _global = typeof window !== 'undefined' && window || typeof self !== 'undefined' && self || global;\nvar AsyncTestZoneSpec = /** @class */ (function () {\n    function AsyncTestZoneSpec(finishCallback, failCallback, namePrefix) {\n        this.finishCallback = finishCallback;\n        this.failCallback = failCallback;\n        this._pendingMicroTasks = false;\n        this._pendingMacroTasks = false;\n        this._alreadyErrored = false;\n        this._isSync = false;\n        this.runZone = Zone.current;\n        this.unresolvedChainedPromiseCount = 0;\n        this.supportWaitUnresolvedChainedPromise = false;\n        this.name = 'asyncTestZone for ' + namePrefix;\n        this.properties = { 'AsyncTestZoneSpec': this };\n        this.supportWaitUnresolvedChainedPromise =\n            _global[Zone.__symbol__('supportWaitUnResolvedChainedPromise')] === true;\n    }\n    AsyncTestZoneSpec.prototype.isUnresolvedChainedPromisePending = function () {\n        return this.unresolvedChainedPromiseCount > 0;\n    };\n    AsyncTestZoneSpec.prototype._finishCallbackIfDone = function () {\n        var _this = this;\n        if (!(this._pendingMicroTasks || this._pendingMacroTasks ||\n            (this.supportWaitUnresolvedChainedPromise && this.isUnresolvedChainedPromisePending()))) {\n            // We do this because we would like to catch unhandled rejected promises.\n            this.runZone.run(function () {\n                setTimeout(function () {\n                    if (!_this._alreadyErrored && !(_this._pendingMicroTasks || _this._pendingMacroTasks)) {\n                        _this.finishCallback();\n                    }\n                }, 0);\n            });\n        }\n    };\n    AsyncTestZoneSpec.prototype.patchPromiseForTest = function () {\n        if (!this.supportWaitUnresolvedChainedPromise) {\n            return;\n        }\n        var patchPromiseForTest = Promise[Zone.__symbol__('patchPromiseForTest')];\n        if (patchPromiseForTest) {\n            patchPromiseForTest();\n        }\n    };\n    AsyncTestZoneSpec.prototype.unPatchPromiseForTest = function () {\n        if (!this.supportWaitUnresolvedChainedPromise) {\n            return;\n        }\n        var unPatchPromiseForTest = Promise[Zone.__symbol__('unPatchPromiseForTest')];\n        if (unPatchPromiseForTest) {\n            unPatchPromiseForTest();\n        }\n    };\n    AsyncTestZoneSpec.prototype.onScheduleTask = function (delegate, current, target, task) {\n        if (task.type !== 'eventTask') {\n            this._isSync = false;\n        }\n        if (task.type === 'microTask' && task.data && task.data instanceof Promise) {\n            // check whether the promise is a chained promise\n            if (task.data[AsyncTestZoneSpec.symbolParentUnresolved] === true) {\n                // chained promise is being scheduled\n                this.unresolvedChainedPromiseCount--;\n            }\n        }\n        return delegate.scheduleTask(target, task);\n    };\n    AsyncTestZoneSpec.prototype.onInvokeTask = function (delegate, current, target, task, applyThis, applyArgs) {\n        if (task.type !== 'eventTask') {\n            this._isSync = false;\n        }\n        return delegate.invokeTask(target, task, applyThis, applyArgs);\n    };\n    AsyncTestZoneSpec.prototype.onCancelTask = function (delegate, current, target, task) {\n        if (task.type !== 'eventTask') {\n            this._isSync = false;\n        }\n        return delegate.cancelTask(target, task);\n    };\n    // Note - we need to use onInvoke at the moment to call finish when a test is\n    // fully synchronous. TODO(juliemr): remove this when the logic for\n    // onHasTask changes and it calls whenever the task queues are dirty.\n    // updated by(JiaLiPassion), only call finish callback when no task\n    // was scheduled/invoked/canceled.\n    AsyncTestZoneSpec.prototype.onInvoke = function (parentZoneDelegate, currentZone, targetZone, delegate, applyThis, applyArgs, source) {\n        try {\n            this._isSync = true;\n            return parentZoneDelegate.invoke(targetZone, delegate, applyThis, applyArgs, source);\n        }\n        finally {\n            var afterTaskCounts = parentZoneDelegate._taskCounts;\n            if (this._isSync) {\n                this._finishCallbackIfDone();\n            }\n        }\n    };\n    AsyncTestZoneSpec.prototype.onHandleError = function (parentZoneDelegate, currentZone, targetZone, error) {\n        // Let the parent try to handle the error.\n        var result = parentZoneDelegate.handleError(targetZone, error);\n        if (result) {\n            this.failCallback(error);\n            this._alreadyErrored = true;\n        }\n        return false;\n    };\n    AsyncTestZoneSpec.prototype.onHasTask = function (delegate, current, target, hasTaskState) {\n        delegate.hasTask(target, hasTaskState);\n        if (hasTaskState.change == 'microTask') {\n            this._pendingMicroTasks = hasTaskState.microTask;\n            this._finishCallbackIfDone();\n        }\n        else if (hasTaskState.change == 'macroTask') {\n            this._pendingMacroTasks = hasTaskState.macroTask;\n            this._finishCallbackIfDone();\n        }\n    };\n    AsyncTestZoneSpec.symbolParentUnresolved = Zone.__symbol__('parentUnresolved');\n    return AsyncTestZoneSpec;\n}());\n// Export the class so that new instances can be created with proper\n// constructor params.\nZone['AsyncTestZoneSpec'] = AsyncTestZoneSpec;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('asynctest', function (global, Zone, api) {\n    /**\n     * Wraps a test function in an asynchronous test zone. The test will automatically\n     * complete when all asynchronous calls within this zone are done.\n     */\n    Zone[api.symbol('asyncTest')] = function asyncTest(fn) {\n        // If we're running using the Jasmine test framework, adapt to call the 'done'\n        // function when asynchronous activity is finished.\n        if (global.jasmine) {\n            // Not using an arrow function to preserve context passed from call site\n            return function (done) {\n                if (!done) {\n                    // if we run beforeEach in @angular/core/testing/testing_internal then we get no done\n                    // fake it here and assume sync.\n                    done = function () { };\n                    done.fail = function (e) {\n                        throw e;\n                    };\n                }\n                runInTestZone(fn, this, done, function (err) {\n                    if (typeof err === 'string') {\n                        return done.fail(new Error(err));\n                    }\n                    else {\n                        done.fail(err);\n                    }\n                });\n            };\n        }\n        // Otherwise, return a promise which will resolve when asynchronous activity\n        // is finished. This will be correctly consumed by the Mocha framework with\n        // it('...', async(myFn)); or can be used in a custom framework.\n        // Not using an arrow function to preserve context passed from call site\n        return function () {\n            var _this = this;\n            return new Promise(function (finishCallback, failCallback) {\n                runInTestZone(fn, _this, finishCallback, failCallback);\n            });\n        };\n    };\n    function runInTestZone(fn, context, finishCallback, failCallback) {\n        var currentZone = Zone.current;\n        var AsyncTestZoneSpec = Zone['AsyncTestZoneSpec'];\n        if (AsyncTestZoneSpec === undefined) {\n            throw new Error('AsyncTestZoneSpec is needed for the async() test helper but could not be found. ' +\n                'Please make sure that your environment includes zone.js/dist/async-test.js');\n        }\n        var ProxyZoneSpec = Zone['ProxyZoneSpec'];\n        if (ProxyZoneSpec === undefined) {\n            throw new Error('ProxyZoneSpec is needed for the async() test helper but could not be found. ' +\n                'Please make sure that your environment includes zone.js/dist/proxy.js');\n        }\n        var proxyZoneSpec = ProxyZoneSpec.get();\n        ProxyZoneSpec.assertPresent();\n        // We need to create the AsyncTestZoneSpec outside the ProxyZone.\n        // If we do it in ProxyZone then we will get to infinite recursion.\n        var proxyZone = Zone.current.getZoneWith('ProxyZoneSpec');\n        var previousDelegate = proxyZoneSpec.getDelegate();\n        proxyZone.parent.run(function () {\n            var testZoneSpec = new AsyncTestZoneSpec(function () {\n                // Need to restore the original zone.\n                if (proxyZoneSpec.getDelegate() == testZoneSpec) {\n                    // Only reset the zone spec if it's\n                    // sill this one. Otherwise, assume\n                    // it's OK.\n                    proxyZoneSpec.setDelegate(previousDelegate);\n                }\n                testZoneSpec.unPatchPromiseForTest();\n                currentZone.run(function () {\n                    finishCallback();\n                });\n            }, function (error) {\n                // Need to restore the original zone.\n                if (proxyZoneSpec.getDelegate() == testZoneSpec) {\n                    // Only reset the zone spec if it's sill this one. Otherwise, assume it's OK.\n                    proxyZoneSpec.setDelegate(previousDelegate);\n                }\n                testZoneSpec.unPatchPromiseForTest();\n                currentZone.run(function () {\n                    failCallback(error);\n                });\n            }, 'test');\n            proxyZoneSpec.setDelegate(testZoneSpec);\n            testZoneSpec.patchPromiseForTest();\n        });\n        return Zone.current.runGuarded(fn, context);\n    }\n});\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __read = (undefined && undefined.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (undefined && undefined.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\n(function (global) {\n    var OriginalDate = global.Date;\n    var FakeDate = /** @class */ (function () {\n        function FakeDate() {\n            if (arguments.length === 0) {\n                var d = new OriginalDate();\n                d.setTime(FakeDate.now());\n                return d;\n            }\n            else {\n                var args = Array.prototype.slice.call(arguments);\n                return new (OriginalDate.bind.apply(OriginalDate, __spread([void 0], args)))();\n            }\n        }\n        FakeDate.now = function () {\n            var fakeAsyncTestZoneSpec = Zone.current.get('FakeAsyncTestZoneSpec');\n            if (fakeAsyncTestZoneSpec) {\n                return fakeAsyncTestZoneSpec.getCurrentRealTime() + fakeAsyncTestZoneSpec.getCurrentTime();\n            }\n            return OriginalDate.now.apply(this, arguments);\n        };\n        return FakeDate;\n    }());\n    FakeDate.UTC = OriginalDate.UTC;\n    FakeDate.parse = OriginalDate.parse;\n    // keep a reference for zone patched timer function\n    var timers = {\n        setTimeout: global.setTimeout,\n        setInterval: global.setInterval,\n        clearTimeout: global.clearTimeout,\n        clearInterval: global.clearInterval\n    };\n    var Scheduler = /** @class */ (function () {\n        function Scheduler() {\n            // Next scheduler id.\n            this.nextId = 1;\n            // Scheduler queue with the tuple of end time and callback function - sorted by end time.\n            this._schedulerQueue = [];\n            // Current simulated time in millis.\n            this._currentTime = 0;\n            // Current real time in millis.\n            this._currentRealTime = OriginalDate.now();\n        }\n        Scheduler.prototype.getCurrentTime = function () {\n            return this._currentTime;\n        };\n        Scheduler.prototype.getCurrentRealTime = function () {\n            return this._currentRealTime;\n        };\n        Scheduler.prototype.setCurrentRealTime = function (realTime) {\n            this._currentRealTime = realTime;\n        };\n        Scheduler.prototype.scheduleFunction = function (cb, delay, args, isPeriodic, isRequestAnimationFrame, id) {\n            if (args === void 0) { args = []; }\n            if (isPeriodic === void 0) { isPeriodic = false; }\n            if (isRequestAnimationFrame === void 0) { isRequestAnimationFrame = false; }\n            if (id === void 0) { id = -1; }\n            var currentId = id < 0 ? this.nextId++ : id;\n            var endTime = this._currentTime + delay;\n            // Insert so that scheduler queue remains sorted by end time.\n            var newEntry = {\n                endTime: endTime,\n                id: currentId,\n                func: cb,\n                args: args,\n                delay: delay,\n                isPeriodic: isPeriodic,\n                isRequestAnimationFrame: isRequestAnimationFrame\n            };\n            var i = 0;\n            for (; i < this._schedulerQueue.length; i++) {\n                var currentEntry = this._schedulerQueue[i];\n                if (newEntry.endTime < currentEntry.endTime) {\n                    break;\n                }\n            }\n            this._schedulerQueue.splice(i, 0, newEntry);\n            return currentId;\n        };\n        Scheduler.prototype.removeScheduledFunctionWithId = function (id) {\n            for (var i = 0; i < this._schedulerQueue.length; i++) {\n                if (this._schedulerQueue[i].id == id) {\n                    this._schedulerQueue.splice(i, 1);\n                    break;\n                }\n            }\n        };\n        Scheduler.prototype.tick = function (millis, doTick) {\n            if (millis === void 0) { millis = 0; }\n            var finalTime = this._currentTime + millis;\n            var lastCurrentTime = 0;\n            if (this._schedulerQueue.length === 0 && doTick) {\n                doTick(millis);\n                return;\n            }\n            while (this._schedulerQueue.length > 0) {\n                var current = this._schedulerQueue[0];\n                if (finalTime < current.endTime) {\n                    // Done processing the queue since it's sorted by endTime.\n                    break;\n                }\n                else {\n                    // Time to run scheduled function. Remove it from the head of queue.\n                    var current_1 = this._schedulerQueue.shift();\n                    lastCurrentTime = this._currentTime;\n                    this._currentTime = current_1.endTime;\n                    if (doTick) {\n                        doTick(this._currentTime - lastCurrentTime);\n                    }\n                    var retval = current_1.func.apply(global, current_1.args);\n                    if (!retval) {\n                        // Uncaught exception in the current scheduled function. Stop processing the queue.\n                        break;\n                    }\n                }\n            }\n            lastCurrentTime = this._currentTime;\n            this._currentTime = finalTime;\n            if (doTick) {\n                doTick(this._currentTime - lastCurrentTime);\n            }\n        };\n        Scheduler.prototype.flush = function (limit, flushPeriodic, doTick) {\n            if (limit === void 0) { limit = 20; }\n            if (flushPeriodic === void 0) { flushPeriodic = false; }\n            if (flushPeriodic) {\n                return this.flushPeriodic(doTick);\n            }\n            else {\n                return this.flushNonPeriodic(limit, doTick);\n            }\n        };\n        Scheduler.prototype.flushPeriodic = function (doTick) {\n            if (this._schedulerQueue.length === 0) {\n                return 0;\n            }\n            // Find the last task currently queued in the scheduler queue and tick\n            // till that time.\n            var startTime = this._currentTime;\n            var lastTask = this._schedulerQueue[this._schedulerQueue.length - 1];\n            this.tick(lastTask.endTime - startTime, doTick);\n            return this._currentTime - startTime;\n        };\n        Scheduler.prototype.flushNonPeriodic = function (limit, doTick) {\n            var startTime = this._currentTime;\n            var lastCurrentTime = 0;\n            var count = 0;\n            while (this._schedulerQueue.length > 0) {\n                count++;\n                if (count > limit) {\n                    throw new Error('flush failed after reaching the limit of ' + limit +\n                        ' tasks. Does your code use a polling timeout?');\n                }\n                // flush only non-periodic timers.\n                // If the only remaining tasks are periodic(or requestAnimationFrame), finish flushing.\n                if (this._schedulerQueue.filter(function (task) { return !task.isPeriodic && !task.isRequestAnimationFrame; })\n                    .length === 0) {\n                    break;\n                }\n                var current = this._schedulerQueue.shift();\n                lastCurrentTime = this._currentTime;\n                this._currentTime = current.endTime;\n                if (doTick) {\n                    // Update any secondary schedulers like Jasmine mock Date.\n                    doTick(this._currentTime - lastCurrentTime);\n                }\n                var retval = current.func.apply(global, current.args);\n                if (!retval) {\n                    // Uncaught exception in the current scheduled function. Stop processing the queue.\n                    break;\n                }\n            }\n            return this._currentTime - startTime;\n        };\n        return Scheduler;\n    }());\n    var FakeAsyncTestZoneSpec = /** @class */ (function () {\n        function FakeAsyncTestZoneSpec(namePrefix, trackPendingRequestAnimationFrame, macroTaskOptions) {\n            if (trackPendingRequestAnimationFrame === void 0) { trackPendingRequestAnimationFrame = false; }\n            this.trackPendingRequestAnimationFrame = trackPendingRequestAnimationFrame;\n            this.macroTaskOptions = macroTaskOptions;\n            this._scheduler = new Scheduler();\n            this._microtasks = [];\n            this._lastError = null;\n            this._uncaughtPromiseErrors = Promise[Zone.__symbol__('uncaughtPromiseErrors')];\n            this.pendingPeriodicTimers = [];\n            this.pendingTimers = [];\n            this.patchDateLocked = false;\n            this.properties = { 'FakeAsyncTestZoneSpec': this };\n            this.name = 'fakeAsyncTestZone for ' + namePrefix;\n            // in case user can't access the construction of FakeAsyncTestSpec\n            // user can also define macroTaskOptions by define a global variable.\n            if (!this.macroTaskOptions) {\n                this.macroTaskOptions = global[Zone.__symbol__('FakeAsyncTestMacroTask')];\n            }\n        }\n        FakeAsyncTestZoneSpec.assertInZone = function () {\n            if (Zone.current.get('FakeAsyncTestZoneSpec') == null) {\n                throw new Error('The code should be running in the fakeAsync zone to call this function');\n            }\n        };\n        FakeAsyncTestZoneSpec.prototype._fnAndFlush = function (fn, completers) {\n            var _this = this;\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                fn.apply(global, args);\n                if (_this._lastError === null) { // Success\n                    if (completers.onSuccess != null) {\n                        completers.onSuccess.apply(global);\n                    }\n                    // Flush microtasks only on success.\n                    _this.flushMicrotasks();\n                }\n                else { // Failure\n                    if (completers.onError != null) {\n                        completers.onError.apply(global);\n                    }\n                }\n                // Return true if there were no errors, false otherwise.\n                return _this._lastError === null;\n            };\n        };\n        FakeAsyncTestZoneSpec._removeTimer = function (timers, id) {\n            var index = timers.indexOf(id);\n            if (index > -1) {\n                timers.splice(index, 1);\n            }\n        };\n        FakeAsyncTestZoneSpec.prototype._dequeueTimer = function (id) {\n            var _this = this;\n            return function () {\n                FakeAsyncTestZoneSpec._removeTimer(_this.pendingTimers, id);\n            };\n        };\n        FakeAsyncTestZoneSpec.prototype._requeuePeriodicTimer = function (fn, interval, args, id) {\n            var _this = this;\n            return function () {\n                // Requeue the timer callback if it's not been canceled.\n                if (_this.pendingPeriodicTimers.indexOf(id) !== -1) {\n                    _this._scheduler.scheduleFunction(fn, interval, args, true, false, id);\n                }\n            };\n        };\n        FakeAsyncTestZoneSpec.prototype._dequeuePeriodicTimer = function (id) {\n            var _this = this;\n            return function () {\n                FakeAsyncTestZoneSpec._removeTimer(_this.pendingPeriodicTimers, id);\n            };\n        };\n        FakeAsyncTestZoneSpec.prototype._setTimeout = function (fn, delay, args, isTimer) {\n            if (isTimer === void 0) { isTimer = true; }\n            var removeTimerFn = this._dequeueTimer(this._scheduler.nextId);\n            // Queue the callback and dequeue the timer on success and error.\n            var cb = this._fnAndFlush(fn, { onSuccess: removeTimerFn, onError: removeTimerFn });\n            var id = this._scheduler.scheduleFunction(cb, delay, args, false, !isTimer);\n            if (isTimer) {\n                this.pendingTimers.push(id);\n            }\n            return id;\n        };\n        FakeAsyncTestZoneSpec.prototype._clearTimeout = function (id) {\n            FakeAsyncTestZoneSpec._removeTimer(this.pendingTimers, id);\n            this._scheduler.removeScheduledFunctionWithId(id);\n        };\n        FakeAsyncTestZoneSpec.prototype._setInterval = function (fn, interval, args) {\n            var id = this._scheduler.nextId;\n            var completers = { onSuccess: null, onError: this._dequeuePeriodicTimer(id) };\n            var cb = this._fnAndFlush(fn, completers);\n            // Use the callback created above to requeue on success.\n            completers.onSuccess = this._requeuePeriodicTimer(cb, interval, args, id);\n            // Queue the callback and dequeue the periodic timer only on error.\n            this._scheduler.scheduleFunction(cb, interval, args, true);\n            this.pendingPeriodicTimers.push(id);\n            return id;\n        };\n        FakeAsyncTestZoneSpec.prototype._clearInterval = function (id) {\n            FakeAsyncTestZoneSpec._removeTimer(this.pendingPeriodicTimers, id);\n            this._scheduler.removeScheduledFunctionWithId(id);\n        };\n        FakeAsyncTestZoneSpec.prototype._resetLastErrorAndThrow = function () {\n            var error = this._lastError || this._uncaughtPromiseErrors[0];\n            this._uncaughtPromiseErrors.length = 0;\n            this._lastError = null;\n            throw error;\n        };\n        FakeAsyncTestZoneSpec.prototype.getCurrentTime = function () {\n            return this._scheduler.getCurrentTime();\n        };\n        FakeAsyncTestZoneSpec.prototype.getCurrentRealTime = function () {\n            return this._scheduler.getCurrentRealTime();\n        };\n        FakeAsyncTestZoneSpec.prototype.setCurrentRealTime = function (realTime) {\n            this._scheduler.setCurrentRealTime(realTime);\n        };\n        FakeAsyncTestZoneSpec.patchDate = function () {\n            if (global['Date'] === FakeDate) {\n                // already patched\n                return;\n            }\n            global['Date'] = FakeDate;\n            FakeDate.prototype = OriginalDate.prototype;\n            // try check and reset timers\n            // because jasmine.clock().install() may\n            // have replaced the global timer\n            FakeAsyncTestZoneSpec.checkTimerPatch();\n        };\n        FakeAsyncTestZoneSpec.resetDate = function () {\n            if (global['Date'] === FakeDate) {\n                global['Date'] = OriginalDate;\n            }\n        };\n        FakeAsyncTestZoneSpec.checkTimerPatch = function () {\n            if (global.setTimeout !== timers.setTimeout) {\n                global.setTimeout = timers.setTimeout;\n                global.clearTimeout = timers.clearTimeout;\n            }\n            if (global.setInterval !== timers.setInterval) {\n                global.setInterval = timers.setInterval;\n                global.clearInterval = timers.clearInterval;\n            }\n        };\n        FakeAsyncTestZoneSpec.prototype.lockDatePatch = function () {\n            this.patchDateLocked = true;\n            FakeAsyncTestZoneSpec.patchDate();\n        };\n        FakeAsyncTestZoneSpec.prototype.unlockDatePatch = function () {\n            this.patchDateLocked = false;\n            FakeAsyncTestZoneSpec.resetDate();\n        };\n        FakeAsyncTestZoneSpec.prototype.tick = function (millis, doTick) {\n            if (millis === void 0) { millis = 0; }\n            FakeAsyncTestZoneSpec.assertInZone();\n            this.flushMicrotasks();\n            this._scheduler.tick(millis, doTick);\n            if (this._lastError !== null) {\n                this._resetLastErrorAndThrow();\n            }\n        };\n        FakeAsyncTestZoneSpec.prototype.flushMicrotasks = function () {\n            var _this = this;\n            FakeAsyncTestZoneSpec.assertInZone();\n            var flushErrors = function () {\n                if (_this._lastError !== null || _this._uncaughtPromiseErrors.length) {\n                    // If there is an error stop processing the microtask queue and rethrow the error.\n                    _this._resetLastErrorAndThrow();\n                }\n            };\n            while (this._microtasks.length > 0) {\n                var microtask = this._microtasks.shift();\n                microtask.func.apply(microtask.target, microtask.args);\n            }\n            flushErrors();\n        };\n        FakeAsyncTestZoneSpec.prototype.flush = function (limit, flushPeriodic, doTick) {\n            FakeAsyncTestZoneSpec.assertInZone();\n            this.flushMicrotasks();\n            var elapsed = this._scheduler.flush(limit, flushPeriodic, doTick);\n            if (this._lastError !== null) {\n                this._resetLastErrorAndThrow();\n            }\n            return elapsed;\n        };\n        FakeAsyncTestZoneSpec.prototype.onScheduleTask = function (delegate, current, target, task) {\n            switch (task.type) {\n                case 'microTask':\n                    var args = task.data && task.data.args;\n                    // should pass additional arguments to callback if have any\n                    // currently we know process.nextTick will have such additional\n                    // arguments\n                    var additionalArgs = void 0;\n                    if (args) {\n                        var callbackIndex = task.data.cbIdx;\n                        if (typeof args.length === 'number' && args.length > callbackIndex + 1) {\n                            additionalArgs = Array.prototype.slice.call(args, callbackIndex + 1);\n                        }\n                    }\n                    this._microtasks.push({\n                        func: task.invoke,\n                        args: additionalArgs,\n                        target: task.data && task.data.target\n                    });\n                    break;\n                case 'macroTask':\n                    switch (task.source) {\n                        case 'setTimeout':\n                            task.data['handleId'] = this._setTimeout(task.invoke, task.data['delay'], Array.prototype.slice.call(task.data['args'], 2));\n                            break;\n                        case 'setImmediate':\n                            task.data['handleId'] = this._setTimeout(task.invoke, 0, Array.prototype.slice.call(task.data['args'], 1));\n                            break;\n                        case 'setInterval':\n                            task.data['handleId'] = this._setInterval(task.invoke, task.data['delay'], Array.prototype.slice.call(task.data['args'], 2));\n                            break;\n                        case 'XMLHttpRequest.send':\n                            throw new Error('Cannot make XHRs from within a fake async test. Request URL: ' +\n                                task.data['url']);\n                        case 'requestAnimationFrame':\n                        case 'webkitRequestAnimationFrame':\n                        case 'mozRequestAnimationFrame':\n                            // Simulate a requestAnimationFrame by using a setTimeout with 16 ms.\n                            // (60 frames per second)\n                            task.data['handleId'] = this._setTimeout(task.invoke, 16, task.data['args'], this.trackPendingRequestAnimationFrame);\n                            break;\n                        default:\n                            // user can define which macroTask they want to support by passing\n                            // macroTaskOptions\n                            var macroTaskOption = this.findMacroTaskOption(task);\n                            if (macroTaskOption) {\n                                var args_1 = task.data && task.data['args'];\n                                var delay = args_1 && args_1.length > 1 ? args_1[1] : 0;\n                                var callbackArgs = macroTaskOption.callbackArgs ? macroTaskOption.callbackArgs : args_1;\n                                if (!!macroTaskOption.isPeriodic) {\n                                    // periodic macroTask, use setInterval to simulate\n                                    task.data['handleId'] = this._setInterval(task.invoke, delay, callbackArgs);\n                                    task.data.isPeriodic = true;\n                                }\n                                else {\n                                    // not periodic, use setTimeout to simulate\n                                    task.data['handleId'] = this._setTimeout(task.invoke, delay, callbackArgs);\n                                }\n                                break;\n                            }\n                            throw new Error('Unknown macroTask scheduled in fake async test: ' + task.source);\n                    }\n                    break;\n                case 'eventTask':\n                    task = delegate.scheduleTask(target, task);\n                    break;\n            }\n            return task;\n        };\n        FakeAsyncTestZoneSpec.prototype.onCancelTask = function (delegate, current, target, task) {\n            switch (task.source) {\n                case 'setTimeout':\n                case 'requestAnimationFrame':\n                case 'webkitRequestAnimationFrame':\n                case 'mozRequestAnimationFrame':\n                    return this._clearTimeout(task.data['handleId']);\n                case 'setInterval':\n                    return this._clearInterval(task.data['handleId']);\n                default:\n                    // user can define which macroTask they want to support by passing\n                    // macroTaskOptions\n                    var macroTaskOption = this.findMacroTaskOption(task);\n                    if (macroTaskOption) {\n                        var handleId = task.data['handleId'];\n                        return macroTaskOption.isPeriodic ? this._clearInterval(handleId) :\n                            this._clearTimeout(handleId);\n                    }\n                    return delegate.cancelTask(target, task);\n            }\n        };\n        FakeAsyncTestZoneSpec.prototype.onInvoke = function (delegate, current, target, callback, applyThis, applyArgs, source) {\n            try {\n                FakeAsyncTestZoneSpec.patchDate();\n                return delegate.invoke(target, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                if (!this.patchDateLocked) {\n                    FakeAsyncTestZoneSpec.resetDate();\n                }\n            }\n        };\n        FakeAsyncTestZoneSpec.prototype.findMacroTaskOption = function (task) {\n            if (!this.macroTaskOptions) {\n                return null;\n            }\n            for (var i = 0; i < this.macroTaskOptions.length; i++) {\n                var macroTaskOption = this.macroTaskOptions[i];\n                if (macroTaskOption.source === task.source) {\n                    return macroTaskOption;\n                }\n            }\n            return null;\n        };\n        FakeAsyncTestZoneSpec.prototype.onHandleError = function (parentZoneDelegate, currentZone, targetZone, error) {\n            this._lastError = error;\n            return false; // Don't propagate error to parent zone.\n        };\n        return FakeAsyncTestZoneSpec;\n    }());\n    // Export the class so that new instances can be created with proper\n    // constructor params.\n    Zone['FakeAsyncTestZoneSpec'] = FakeAsyncTestZoneSpec;\n})(typeof window === 'object' && window || typeof self === 'object' && self || global);\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('fakeasync', function (global, Zone, api) {\n    var FakeAsyncTestZoneSpec = Zone && Zone['FakeAsyncTestZoneSpec'];\n    var ProxyZoneSpec = Zone && Zone['ProxyZoneSpec'];\n    var _fakeAsyncTestZoneSpec = null;\n    /**\n     * Clears out the shared fake async zone for a test.\n     * To be called in a global `beforeEach`.\n     *\n     * @experimental\n     */\n    function resetFakeAsyncZone() {\n        if (_fakeAsyncTestZoneSpec) {\n            _fakeAsyncTestZoneSpec.unlockDatePatch();\n        }\n        _fakeAsyncTestZoneSpec = null;\n        // in node.js testing we may not have ProxyZoneSpec in which case there is nothing to reset.\n        ProxyZoneSpec && ProxyZoneSpec.assertPresent().resetDelegate();\n    }\n    /**\n     * Wraps a function to be executed in the fakeAsync zone:\n     * - microtasks are manually executed by calling `flushMicrotasks()`,\n     * - timers are synchronous, `tick()` simulates the asynchronous passage of time.\n     *\n     * If there are any pending timers at the end of the function, an exception will be thrown.\n     *\n     * Can be used to wrap inject() calls.\n     *\n     * ## Example\n     *\n     * {@example core/testing/ts/fake_async.ts region='basic'}\n     *\n     * @param fn\n     * @returns The function wrapped to be executed in the fakeAsync zone\n     *\n     * @experimental\n     */\n    function fakeAsync(fn) {\n        // Not using an arrow function to preserve context passed from call site\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var proxyZoneSpec = ProxyZoneSpec.assertPresent();\n            if (Zone.current.get('FakeAsyncTestZoneSpec')) {\n                throw new Error('fakeAsync() calls can not be nested');\n            }\n            try {\n                // in case jasmine.clock init a fakeAsyncTestZoneSpec\n                if (!_fakeAsyncTestZoneSpec) {\n                    if (proxyZoneSpec.getDelegate() instanceof FakeAsyncTestZoneSpec) {\n                        throw new Error('fakeAsync() calls can not be nested');\n                    }\n                    _fakeAsyncTestZoneSpec = new FakeAsyncTestZoneSpec();\n                }\n                var res = void 0;\n                var lastProxyZoneSpec = proxyZoneSpec.getDelegate();\n                proxyZoneSpec.setDelegate(_fakeAsyncTestZoneSpec);\n                _fakeAsyncTestZoneSpec.lockDatePatch();\n                try {\n                    res = fn.apply(this, args);\n                    flushMicrotasks();\n                }\n                finally {\n                    proxyZoneSpec.setDelegate(lastProxyZoneSpec);\n                }\n                if (_fakeAsyncTestZoneSpec.pendingPeriodicTimers.length > 0) {\n                    throw new Error(_fakeAsyncTestZoneSpec.pendingPeriodicTimers.length + \" \" +\n                        \"periodic timer(s) still in the queue.\");\n                }\n                if (_fakeAsyncTestZoneSpec.pendingTimers.length > 0) {\n                    throw new Error(_fakeAsyncTestZoneSpec.pendingTimers.length + \" timer(s) still in the queue.\");\n                }\n                return res;\n            }\n            finally {\n                resetFakeAsyncZone();\n            }\n        };\n    }\n    function _getFakeAsyncZoneSpec() {\n        if (_fakeAsyncTestZoneSpec == null) {\n            _fakeAsyncTestZoneSpec = Zone.current.get('FakeAsyncTestZoneSpec');\n            if (_fakeAsyncTestZoneSpec == null) {\n                throw new Error('The code should be running in the fakeAsync zone to call this function');\n            }\n        }\n        return _fakeAsyncTestZoneSpec;\n    }\n    /**\n     * Simulates the asynchronous passage of time for the timers in the fakeAsync zone.\n     *\n     * The microtasks queue is drained at the very start of this function and after any timer callback\n     * has been executed.\n     *\n     * ## Example\n     *\n     * {@example core/testing/ts/fake_async.ts region='basic'}\n     *\n     * @experimental\n     */\n    function tick(millis) {\n        if (millis === void 0) { millis = 0; }\n        _getFakeAsyncZoneSpec().tick(millis);\n    }\n    /**\n     * Simulates the asynchronous passage of time for the timers in the fakeAsync zone by\n     * draining the macrotask queue until it is empty. The returned value is the milliseconds\n     * of time that would have been elapsed.\n     *\n     * @param maxTurns\n     * @returns The simulated time elapsed, in millis.\n     *\n     * @experimental\n     */\n    function flush(maxTurns) {\n        return _getFakeAsyncZoneSpec().flush(maxTurns);\n    }\n    /**\n     * Discard all remaining periodic tasks.\n     *\n     * @experimental\n     */\n    function discardPeriodicTasks() {\n        var zoneSpec = _getFakeAsyncZoneSpec();\n        var pendingTimers = zoneSpec.pendingPeriodicTimers;\n        zoneSpec.pendingPeriodicTimers.length = 0;\n    }\n    /**\n     * Flush any pending microtasks.\n     *\n     * @experimental\n     */\n    function flushMicrotasks() {\n        _getFakeAsyncZoneSpec().flushMicrotasks();\n    }\n    Zone[api.symbol('fakeAsyncTest')] =\n        { resetFakeAsyncZone: resetFakeAsyncZone, flushMicrotasks: flushMicrotasks, discardPeriodicTasks: discardPeriodicTasks, tick: tick, flush: flush, fakeAsync: fakeAsync };\n});\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Promise for async/fakeAsync zoneSpec test\n * can support async operation which not supported by zone.js\n * such as\n * it ('test jsonp in AsyncZone', async() => {\n *   new Promise(res => {\n *     jsonp(url, (data) => {\n *       // success callback\n *       res(data);\n *     });\n *   }).then((jsonpResult) => {\n *     // get jsonp result.\n *\n *     // user will expect AsyncZoneSpec wait for\n *     // then, but because jsonp is not zone aware\n *     // AsyncZone will finish before then is called.\n *   });\n * });\n */\nZone.__load_patch('promisefortest', function (global, Zone, api) {\n    var symbolState = api.symbol('state');\n    var UNRESOLVED = null;\n    var symbolParentUnresolved = api.symbol('parentUnresolved');\n    // patch Promise.prototype.then to keep an internal\n    // number for tracking unresolved chained promise\n    // we will decrease this number when the parent promise\n    // being resolved/rejected and chained promise was\n    // scheduled as a microTask.\n    // so we can know such kind of chained promise still\n    // not resolved in AsyncTestZone\n    Promise[api.symbol('patchPromiseForTest')] = function patchPromiseForTest() {\n        var oriThen = Promise[Zone.__symbol__('ZonePromiseThen')];\n        if (oriThen) {\n            return;\n        }\n        oriThen = Promise[Zone.__symbol__('ZonePromiseThen')] = Promise.prototype.then;\n        Promise.prototype.then = function () {\n            var chained = oriThen.apply(this, arguments);\n            if (this[symbolState] === UNRESOLVED) {\n                // parent promise is unresolved.\n                var asyncTestZoneSpec = Zone.current.get('AsyncTestZoneSpec');\n                if (asyncTestZoneSpec) {\n                    asyncTestZoneSpec.unresolvedChainedPromiseCount++;\n                    chained[symbolParentUnresolved] = true;\n                }\n            }\n            return chained;\n        };\n    };\n    Promise[api.symbol('unPatchPromiseForTest')] = function unpatchPromiseForTest() {\n        // restore origin then\n        var oriThen = Promise[Zone.__symbol__('ZonePromiseThen')];\n        if (oriThen) {\n            Promise.prototype.then = oriThen;\n            Promise[Zone.__symbol__('ZonePromiseThen')] = undefined;\n        }\n    };\n});\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// load test related files into bundle in correct order\n\n})));\n"]}