{"version":3,"sources":["zone-error.js"],"names":["global","factory","exports","module","define","amd","Zone","__load_patch","api","blacklistedStackFramesSymbol","symbol","NativeError","blackListedStackFrames","zoneAwareFrame1","zoneAwareFrame2","zoneAwareFrame1WithoutNew","zoneAwareFrame2WithoutNew","zoneAwareFrame3WithoutNew","ZoneAwareError","stackRewrite","blackListedStackFramesPolicy","buildZoneFrameNames","zoneFrame","zoneFrameName","zoneName","zone","name","result","parent","parentZoneFrameName","buildZoneAwareStackFrames","originalStack","isZoneFrame","frames","split","i","length","frame","trim","splice","join","_this","error","apply","arguments","stack","currentZoneFrame","zoneAwareStack","e","constructor","Object","keys","concat","forEach","key","value","undefined","prototype","zoneAwareStackSymbol","defineProperty","configurable","enumerable","get","set","newStack","specialPropertyNames","nativeErrorProperties","prop","filter","sp","hasOwnProperty","stackTraceLimit","Math","max","zoneCaptureStackTrace","targetObject","constructorOpt","captureStackTrace","ZONE_CAPTURESTACKTRACE","prepareStackTrace","structuredStackTrace","st","getFunctionName","call","detectZone","current","fork","onHandleError","parentZD","target","Error","frames_1","runFrame","runGuardedFrame","runTaskFrame","shift","test","fnName","frameType","indexOf","replace","childDetectZone","onScheduleTask","delegate","curr","task","scheduleTask","onInvokeTask","applyThis","applyArgs","invokeTask","onCancelTask","cancelTask","onInvoke","callback","source","invoke","originalStackTraceLimit","run","runGuarded","fakeTransitionTo","scheduleEventTask","scheduleMacroTask","scheduleMicroTask","t","_transitionTo"],"mappings":"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","file":"zone-error.js","sourcesContent":["/**\n* @license\n* Copyright Google Inc. All Rights Reserved.\n*\n* Use of this source code is governed by an MIT-style license that can be\n* found in the LICENSE file at https://angular.io/license\n*/\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(factory());\n}(this, (function () { 'use strict';\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @fileoverview\n * @suppress {globalThis,undefinedVars}\n */\nZone.__load_patch('Error', function (global, Zone, api) {\n    /*\n     * This code patches Error so that:\n     *   - It ignores un-needed stack frames.\n     *   - It Shows the associated Zone for reach frame.\n     */\n    var blacklistedStackFramesSymbol = api.symbol('blacklistedStackFrames');\n    var NativeError = global[api.symbol('Error')] = global['Error'];\n    // Store the frames which should be removed from the stack frames\n    var blackListedStackFrames = {};\n    // We must find the frame where Error was created, otherwise we assume we don't understand stack\n    var zoneAwareFrame1;\n    var zoneAwareFrame2;\n    var zoneAwareFrame1WithoutNew;\n    var zoneAwareFrame2WithoutNew;\n    var zoneAwareFrame3WithoutNew;\n    global['Error'] = ZoneAwareError;\n    var stackRewrite = 'stackRewrite';\n    var blackListedStackFramesPolicy = global['__Zone_Error_BlacklistedStackFrames_policy'] || 'default';\n    function buildZoneFrameNames(zoneFrame) {\n        var zoneFrameName = { zoneName: zoneFrame.zone.name };\n        var result = zoneFrameName;\n        while (zoneFrame.parent) {\n            zoneFrame = zoneFrame.parent;\n            var parentZoneFrameName = { zoneName: zoneFrame.zone.name };\n            zoneFrameName.parent = parentZoneFrameName;\n            zoneFrameName = parentZoneFrameName;\n        }\n        return result;\n    }\n    function buildZoneAwareStackFrames(originalStack, zoneFrame, isZoneFrame) {\n        if (isZoneFrame === void 0) { isZoneFrame = true; }\n        var frames = originalStack.split('\\n');\n        var i = 0;\n        // Find the first frame\n        while (!(frames[i] === zoneAwareFrame1 || frames[i] === zoneAwareFrame2 ||\n            frames[i] === zoneAwareFrame1WithoutNew || frames[i] === zoneAwareFrame2WithoutNew ||\n            frames[i] === zoneAwareFrame3WithoutNew) &&\n            i < frames.length) {\n            i++;\n        }\n        for (; i < frames.length && zoneFrame; i++) {\n            var frame = frames[i];\n            if (frame.trim()) {\n                switch (blackListedStackFrames[frame]) {\n                    case 0 /* blackList */:\n                        frames.splice(i, 1);\n                        i--;\n                        break;\n                    case 1 /* transition */:\n                        if (zoneFrame.parent) {\n                            // This is the special frame where zone changed. Print and process it accordingly\n                            zoneFrame = zoneFrame.parent;\n                        }\n                        else {\n                            zoneFrame = null;\n                        }\n                        frames.splice(i, 1);\n                        i--;\n                        break;\n                    default:\n                        frames[i] += isZoneFrame ? \" [\" + zoneFrame.zone.name + \"]\" :\n                            \" [\" + zoneFrame.zoneName + \"]\";\n                }\n            }\n        }\n        return frames.join('\\n');\n    }\n    /**\n     * This is ZoneAwareError which processes the stack frame and cleans up extra frames as well as\n     * adds zone information to it.\n     */\n    function ZoneAwareError() {\n        var _this = this;\n        // We always have to return native error otherwise the browser console will not work.\n        var error = NativeError.apply(this, arguments);\n        // Save original stack trace\n        var originalStack = error['originalStack'] = error.stack;\n        // Process the stack trace and rewrite the frames.\n        if (ZoneAwareError[stackRewrite] && originalStack) {\n            var zoneFrame = api.currentZoneFrame();\n            if (blackListedStackFramesPolicy === 'lazy') {\n                // don't handle stack trace now\n                error[api.symbol('zoneFrameNames')] = buildZoneFrameNames(zoneFrame);\n            }\n            else if (blackListedStackFramesPolicy === 'default') {\n                try {\n                    error.stack = error.zoneAwareStack = buildZoneAwareStackFrames(originalStack, zoneFrame);\n                }\n                catch (e) {\n                    // ignore as some browsers don't allow overriding of stack\n                }\n            }\n        }\n        if (this instanceof NativeError && this.constructor != NativeError) {\n            // We got called with a `new` operator AND we are subclass of ZoneAwareError\n            // in that case we have to copy all of our properties to `this`.\n            Object.keys(error).concat('stack', 'message').forEach(function (key) {\n                var value = error[key];\n                if (value !== undefined) {\n                    try {\n                        _this[key] = value;\n                    }\n                    catch (e) {\n                        // ignore the assignment in case it is a setter and it throws.\n                    }\n                }\n            });\n            return this;\n        }\n        return error;\n    }\n    // Copy the prototype so that instanceof operator works as expected\n    ZoneAwareError.prototype = NativeError.prototype;\n    ZoneAwareError[blacklistedStackFramesSymbol] = blackListedStackFrames;\n    ZoneAwareError[stackRewrite] = false;\n    var zoneAwareStackSymbol = api.symbol('zoneAwareStack');\n    // try to define zoneAwareStack property when blackListed\n    // policy is delay\n    if (blackListedStackFramesPolicy === 'lazy') {\n        Object.defineProperty(ZoneAwareError.prototype, 'zoneAwareStack', {\n            configurable: true,\n            enumerable: true,\n            get: function () {\n                if (!this[zoneAwareStackSymbol]) {\n                    this[zoneAwareStackSymbol] = buildZoneAwareStackFrames(this.originalStack, this[api.symbol('zoneFrameNames')], false);\n                }\n                return this[zoneAwareStackSymbol];\n            },\n            set: function (newStack) {\n                this.originalStack = newStack;\n                this[zoneAwareStackSymbol] = buildZoneAwareStackFrames(this.originalStack, this[api.symbol('zoneFrameNames')], false);\n            }\n        });\n    }\n    // those properties need special handling\n    var specialPropertyNames = ['stackTraceLimit', 'captureStackTrace', 'prepareStackTrace'];\n    // those properties of NativeError should be set to ZoneAwareError\n    var nativeErrorProperties = Object.keys(NativeError);\n    if (nativeErrorProperties) {\n        nativeErrorProperties.forEach(function (prop) {\n            if (specialPropertyNames.filter(function (sp) { return sp === prop; }).length === 0) {\n                Object.defineProperty(ZoneAwareError, prop, {\n                    get: function () {\n                        return NativeError[prop];\n                    },\n                    set: function (value) {\n                        NativeError[prop] = value;\n                    }\n                });\n            }\n        });\n    }\n    if (NativeError.hasOwnProperty('stackTraceLimit')) {\n        // Extend default stack limit as we will be removing few frames.\n        NativeError.stackTraceLimit = Math.max(NativeError.stackTraceLimit, 15);\n        // make sure that ZoneAwareError has the same property which forwards to NativeError.\n        Object.defineProperty(ZoneAwareError, 'stackTraceLimit', {\n            get: function () {\n                return NativeError.stackTraceLimit;\n            },\n            set: function (value) {\n                return NativeError.stackTraceLimit = value;\n            }\n        });\n    }\n    if (NativeError.hasOwnProperty('captureStackTrace')) {\n        Object.defineProperty(ZoneAwareError, 'captureStackTrace', {\n            // add named function here because we need to remove this\n            // stack frame when prepareStackTrace below\n            value: function zoneCaptureStackTrace(targetObject, constructorOpt) {\n                NativeError.captureStackTrace(targetObject, constructorOpt);\n            }\n        });\n    }\n    var ZONE_CAPTURESTACKTRACE = 'zoneCaptureStackTrace';\n    Object.defineProperty(ZoneAwareError, 'prepareStackTrace', {\n        get: function () {\n            return NativeError.prepareStackTrace;\n        },\n        set: function (value) {\n            if (!value || typeof value !== 'function') {\n                return NativeError.prepareStackTrace = value;\n            }\n            return NativeError.prepareStackTrace = function (error, structuredStackTrace) {\n                // remove additional stack information from ZoneAwareError.captureStackTrace\n                if (structuredStackTrace) {\n                    for (var i = 0; i < structuredStackTrace.length; i++) {\n                        var st = structuredStackTrace[i];\n                        // remove the first function which name is zoneCaptureStackTrace\n                        if (st.getFunctionName() === ZONE_CAPTURESTACKTRACE) {\n                            structuredStackTrace.splice(i, 1);\n                            break;\n                        }\n                    }\n                }\n                return value.call(this, error, structuredStackTrace);\n            };\n        }\n    });\n    if (blackListedStackFramesPolicy === 'disable') {\n        // don't need to run detectZone to populate\n        // blacklisted stack frames\n        return;\n    }\n    // Now we need to populate the `blacklistedStackFrames` as well as find the\n    // run/runGuarded/runTask frames. This is done by creating a detect zone and then threading\n    // the execution through all of the above methods so that we can look at the stack trace and\n    // find the frames of interest.\n    var detectZone = Zone.current.fork({\n        name: 'detect',\n        onHandleError: function (parentZD, current, target, error) {\n            if (error.originalStack && Error === ZoneAwareError) {\n                var frames_1 = error.originalStack.split(/\\n/);\n                var runFrame = false, runGuardedFrame = false, runTaskFrame = false;\n                while (frames_1.length) {\n                    var frame = frames_1.shift();\n                    // On safari it is possible to have stack frame with no line number.\n                    // This check makes sure that we don't filter frames on name only (must have\n                    // line number or exact equals to `ZoneAwareError`)\n                    if (/:\\d+:\\d+/.test(frame) || frame === 'ZoneAwareError') {\n                        // Get rid of the path so that we don't accidentally find function name in path.\n                        // In chrome the separator is `(` and `@` in FF and safari\n                        // Chrome: at Zone.run (zone.js:100)\n                        // Chrome: at Zone.run (http://localhost:9876/base/build/lib/zone.js:100:24)\n                        // FireFox: Zone.prototype.run@http://localhost:9876/base/build/lib/zone.js:101:24\n                        // Safari: run@http://localhost:9876/base/build/lib/zone.js:101:24\n                        var fnName = frame.split('(')[0].split('@')[0];\n                        var frameType = 1;\n                        if (fnName.indexOf('ZoneAwareError') !== -1) {\n                            if (fnName.indexOf('new ZoneAwareError') !== -1) {\n                                zoneAwareFrame1 = frame;\n                                zoneAwareFrame2 = frame.replace('new ZoneAwareError', 'new Error.ZoneAwareError');\n                            }\n                            else {\n                                zoneAwareFrame1WithoutNew = frame;\n                                zoneAwareFrame2WithoutNew = frame.replace('Error.', '');\n                                if (frame.indexOf('Error.ZoneAwareError') === -1) {\n                                    zoneAwareFrame3WithoutNew =\n                                        frame.replace('ZoneAwareError', 'Error.ZoneAwareError');\n                                }\n                            }\n                            blackListedStackFrames[zoneAwareFrame2] = 0 /* blackList */;\n                        }\n                        if (fnName.indexOf('runGuarded') !== -1) {\n                            runGuardedFrame = true;\n                        }\n                        else if (fnName.indexOf('runTask') !== -1) {\n                            runTaskFrame = true;\n                        }\n                        else if (fnName.indexOf('run') !== -1) {\n                            runFrame = true;\n                        }\n                        else {\n                            frameType = 0 /* blackList */;\n                        }\n                        blackListedStackFrames[frame] = frameType;\n                        // Once we find all of the frames we can stop looking.\n                        if (runFrame && runGuardedFrame && runTaskFrame) {\n                            ZoneAwareError[stackRewrite] = true;\n                            break;\n                        }\n                    }\n                }\n            }\n            return false;\n        }\n    });\n    // carefully constructor a stack frame which contains all of the frames of interest which\n    // need to be detected and blacklisted.\n    var childDetectZone = detectZone.fork({\n        name: 'child',\n        onScheduleTask: function (delegate, curr, target, task) {\n            return delegate.scheduleTask(target, task);\n        },\n        onInvokeTask: function (delegate, curr, target, task, applyThis, applyArgs) {\n            return delegate.invokeTask(target, task, applyThis, applyArgs);\n        },\n        onCancelTask: function (delegate, curr, target, task) {\n            return delegate.cancelTask(target, task);\n        },\n        onInvoke: function (delegate, curr, target, callback, applyThis, applyArgs, source) {\n            return delegate.invoke(target, callback, applyThis, applyArgs, source);\n        }\n    });\n    // we need to detect all zone related frames, it will\n    // exceed default stackTraceLimit, so we set it to\n    // larger number here, and restore it after detect finish.\n    var originalStackTraceLimit = Error.stackTraceLimit;\n    Error.stackTraceLimit = 100;\n    // we schedule event/micro/macro task, and invoke them\n    // when onSchedule, so we can get all stack traces for\n    // all kinds of tasks with one error thrown.\n    childDetectZone.run(function () {\n        childDetectZone.runGuarded(function () {\n            var fakeTransitionTo = function () { };\n            childDetectZone.scheduleEventTask(blacklistedStackFramesSymbol, function () {\n                childDetectZone.scheduleMacroTask(blacklistedStackFramesSymbol, function () {\n                    childDetectZone.scheduleMicroTask(blacklistedStackFramesSymbol, function () {\n                        throw new Error();\n                    }, undefined, function (t) {\n                        t._transitionTo = fakeTransitionTo;\n                        t.invoke();\n                    });\n                    childDetectZone.scheduleMicroTask(blacklistedStackFramesSymbol, function () {\n                        throw Error();\n                    }, undefined, function (t) {\n                        t._transitionTo = fakeTransitionTo;\n                        t.invoke();\n                    });\n                }, undefined, function (t) {\n                    t._transitionTo = fakeTransitionTo;\n                    t.invoke();\n                }, function () { });\n            }, undefined, function (t) {\n                t._transitionTo = fakeTransitionTo;\n                t.invoke();\n            }, function () { });\n        });\n    });\n    Error.stackTraceLimit = originalStackTraceLimit;\n});\n\n})));\n"]}