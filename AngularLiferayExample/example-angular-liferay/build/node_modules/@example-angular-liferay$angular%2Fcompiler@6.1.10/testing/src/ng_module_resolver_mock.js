Liferay.Loader.define("@example-angular-liferay$angular/compiler@6.1.10/testing/src/ng_module_resolver_mock", ['module', 'exports', 'require', 'example-angular-liferay$tslib', '@example-angular-liferay$angular/compiler'], function (module, exports, require) {
    var define = undefined;
    /**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */
    (function (factory) {
        if (typeof module === "object" && typeof module.exports === "object") {
            var v = factory(require, exports);
            if (v !== undefined) module.exports = v;
        } else if (typeof define === "function" && define.amd) {
            define("@angular/compiler/testing/src/ng_module_resolver_mock", ["require", "exports", "tslib", "@angular/compiler"], factory);
        }
    })(function (require, exports) {
        "use strict";

        Object.defineProperty(exports, "__esModule", { value: true });
        var tslib_1 = require("example-angular-liferay$tslib");
        var compiler_1 = require("@example-angular-liferay$angular/compiler");
        var MockNgModuleResolver = /** @class */function (_super) {
            tslib_1.__extends(MockNgModuleResolver, _super);
            function MockNgModuleResolver(reflector) {
                var _this = _super.call(this, reflector) || this;
                _this._ngModules = new Map();
                return _this;
            }
            /**
             * Overrides the {@link NgModule} for a module.
             */
            MockNgModuleResolver.prototype.setNgModule = function (type, metadata) {
                this._ngModules.set(type, metadata);
            };
            /**
             * Returns the {@link NgModule} for a module:
             * - Set the {@link NgModule} to the overridden view when it exists or fallback to the
             * default
             * `NgModuleResolver`, see `setNgModule`.
             */
            MockNgModuleResolver.prototype.resolve = function (type, throwIfNotFound) {
                if (throwIfNotFound === void 0) {
                    throwIfNotFound = true;
                }
                return this._ngModules.get(type) || _super.prototype.resolve.call(this, type, throwIfNotFound);
            };
            return MockNgModuleResolver;
        }(compiler_1.NgModuleResolver);
        exports.MockNgModuleResolver = MockNgModuleResolver;
    });
});
//# sourceMappingURL=ng_module_resolver_mock.js.map