{"version":3,"sources":["../../../../../../packages/compiler/src/selector.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {getHtmlTagDefinition} from './ml_parser/html_tags';\n\nconst _SELECTOR_REGEXP = new RegExp(\n    '(\\\\:not\\\\()|' +           //\":not(\"\n        '([-\\\\w]+)|' +         // \"tag\"\n        '(?:\\\\.([-\\\\w]+))|' +  // \".class\"\n        // \"-\" should appear first in the regexp below as FF31 parses \"[.-\\w]\" as a range\n        '(?:\\\\[([-.\\\\w*]+)(?:=([\\\"\\']?)([^\\\\]\\\"\\']*)\\\\5)?\\\\])|' +  // \"[name]\", \"[name=value]\",\n                                                                   // \"[name=\"value\"]\",\n                                                                   // \"[name='value']\"\n        '(\\\\))|' +                                                 // \")\"\n        '(\\\\s*,\\\\s*)',                                             // \",\"\n    'g');\n\n/**\n * A css selector contains an element name,\n * css classes and attribute/value pairs with the purpose\n * of selecting subsets out of them.\n */\nexport class CssSelector {\n  element: string|null = null;\n  classNames: string[] = [];\n  /**\n   * The selectors are encoded in pairs where:\n   * - even locations are attribute names\n   * - odd locations are attribute values.\n   *\n   * Example:\n   * Selector: `[key1=value1][key2]` would parse to:\n   * ```\n   * ['key1', 'value1', 'key2', '']\n   * ```\n   */\n  attrs: string[] = [];\n  notSelectors: CssSelector[] = [];\n\n  static parse(selector: string): CssSelector[] {\n    const results: CssSelector[] = [];\n    const _addResult = (res: CssSelector[], cssSel: CssSelector) => {\n      if (cssSel.notSelectors.length > 0 && !cssSel.element && cssSel.classNames.length == 0 &&\n          cssSel.attrs.length == 0) {\n        cssSel.element = '*';\n      }\n      res.push(cssSel);\n    };\n    let cssSelector = new CssSelector();\n    let match: string[]|null;\n    let current = cssSelector;\n    let inNot = false;\n    _SELECTOR_REGEXP.lastIndex = 0;\n    while (match = _SELECTOR_REGEXP.exec(selector)) {\n      if (match[1]) {\n        if (inNot) {\n          throw new Error('Nesting :not is not allowed in a selector');\n        }\n        inNot = true;\n        current = new CssSelector();\n        cssSelector.notSelectors.push(current);\n      }\n      if (match[2]) {\n        current.setElement(match[2]);\n      }\n      if (match[3]) {\n        current.addClassName(match[3]);\n      }\n      if (match[4]) {\n        current.addAttribute(match[4], match[6]);\n      }\n      if (match[7]) {\n        inNot = false;\n        current = cssSelector;\n      }\n      if (match[8]) {\n        if (inNot) {\n          throw new Error('Multiple selectors in :not are not supported');\n        }\n        _addResult(results, cssSelector);\n        cssSelector = current = new CssSelector();\n      }\n    }\n    _addResult(results, cssSelector);\n    return results;\n  }\n\n  isElementSelector(): boolean {\n    return this.hasElementSelector() && this.classNames.length == 0 && this.attrs.length == 0 &&\n        this.notSelectors.length === 0;\n  }\n\n  hasElementSelector(): boolean { return !!this.element; }\n\n  setElement(element: string|null = null) { this.element = element; }\n\n  /** Gets a template string for an element that matches the selector. */\n  getMatchingElementTemplate(): string {\n    const tagName = this.element || 'div';\n    const classAttr = this.classNames.length > 0 ? ` class=\"${this.classNames.join(' ')}\"` : '';\n\n    let attrs = '';\n    for (let i = 0; i < this.attrs.length; i += 2) {\n      const attrName = this.attrs[i];\n      const attrValue = this.attrs[i + 1] !== '' ? `=\"${this.attrs[i + 1]}\"` : '';\n      attrs += ` ${attrName}${attrValue}`;\n    }\n\n    return getHtmlTagDefinition(tagName).isVoid ? `<${tagName}${classAttr}${attrs}/>` :\n                                                  `<${tagName}${classAttr}${attrs}></${tagName}>`;\n  }\n\n  getAttrs(): string[] {\n    const result: string[] = [];\n    if (this.classNames.length > 0) {\n      result.push('class', this.classNames.join(' '));\n    }\n    return result.concat(this.attrs);\n  }\n\n  addAttribute(name: string, value: string = '') {\n    this.attrs.push(name, value && value.toLowerCase() || '');\n  }\n\n  addClassName(name: string) { this.classNames.push(name.toLowerCase()); }\n\n  toString(): string {\n    let res: string = this.element || '';\n    if (this.classNames) {\n      this.classNames.forEach(klass => res += `.${klass}`);\n    }\n    if (this.attrs) {\n      for (let i = 0; i < this.attrs.length; i += 2) {\n        const name = this.attrs[i];\n        const value = this.attrs[i + 1];\n        res += `[${name}${value ? '=' + value : ''}]`;\n      }\n    }\n    this.notSelectors.forEach(notSelector => res += `:not(${notSelector})`);\n    return res;\n  }\n}\n\n/**\n * Reads a list of CssSelectors and allows to calculate which ones\n * are contained in a given CssSelector.\n */\nexport class SelectorMatcher {\n  static createNotMatcher(notSelectors: CssSelector[]): SelectorMatcher {\n    const notMatcher = new SelectorMatcher();\n    notMatcher.addSelectables(notSelectors, null);\n    return notMatcher;\n  }\n\n  private _elementMap = new Map<string, SelectorContext[]>();\n  private _elementPartialMap = new Map<string, SelectorMatcher>();\n  private _classMap = new Map<string, SelectorContext[]>();\n  private _classPartialMap = new Map<string, SelectorMatcher>();\n  private _attrValueMap = new Map<string, Map<string, SelectorContext[]>>();\n  private _attrValuePartialMap = new Map<string, Map<string, SelectorMatcher>>();\n  private _listContexts: SelectorListContext[] = [];\n\n  addSelectables(cssSelectors: CssSelector[], callbackCtxt?: any) {\n    let listContext: SelectorListContext = null !;\n    if (cssSelectors.length > 1) {\n      listContext = new SelectorListContext(cssSelectors);\n      this._listContexts.push(listContext);\n    }\n    for (let i = 0; i < cssSelectors.length; i++) {\n      this._addSelectable(cssSelectors[i], callbackCtxt, listContext);\n    }\n  }\n\n  /**\n   * Add an object that can be found later on by calling `match`.\n   * @param cssSelector A css selector\n   * @param callbackCtxt An opaque object that will be given to the callback of the `match` function\n   */\n  private _addSelectable(\n      cssSelector: CssSelector, callbackCtxt: any, listContext: SelectorListContext) {\n    let matcher: SelectorMatcher = this;\n    const element = cssSelector.element;\n    const classNames = cssSelector.classNames;\n    const attrs = cssSelector.attrs;\n    const selectable = new SelectorContext(cssSelector, callbackCtxt, listContext);\n\n    if (element) {\n      const isTerminal = attrs.length === 0 && classNames.length === 0;\n      if (isTerminal) {\n        this._addTerminal(matcher._elementMap, element, selectable);\n      } else {\n        matcher = this._addPartial(matcher._elementPartialMap, element);\n      }\n    }\n\n    if (classNames) {\n      for (let i = 0; i < classNames.length; i++) {\n        const isTerminal = attrs.length === 0 && i === classNames.length - 1;\n        const className = classNames[i];\n        if (isTerminal) {\n          this._addTerminal(matcher._classMap, className, selectable);\n        } else {\n          matcher = this._addPartial(matcher._classPartialMap, className);\n        }\n      }\n    }\n\n    if (attrs) {\n      for (let i = 0; i < attrs.length; i += 2) {\n        const isTerminal = i === attrs.length - 2;\n        const name = attrs[i];\n        const value = attrs[i + 1];\n        if (isTerminal) {\n          const terminalMap = matcher._attrValueMap;\n          let terminalValuesMap = terminalMap.get(name);\n          if (!terminalValuesMap) {\n            terminalValuesMap = new Map<string, SelectorContext[]>();\n            terminalMap.set(name, terminalValuesMap);\n          }\n          this._addTerminal(terminalValuesMap, value, selectable);\n        } else {\n          const partialMap = matcher._attrValuePartialMap;\n          let partialValuesMap = partialMap.get(name);\n          if (!partialValuesMap) {\n            partialValuesMap = new Map<string, SelectorMatcher>();\n            partialMap.set(name, partialValuesMap);\n          }\n          matcher = this._addPartial(partialValuesMap, value);\n        }\n      }\n    }\n  }\n\n  private _addTerminal(\n      map: Map<string, SelectorContext[]>, name: string, selectable: SelectorContext) {\n    let terminalList = map.get(name);\n    if (!terminalList) {\n      terminalList = [];\n      map.set(name, terminalList);\n    }\n    terminalList.push(selectable);\n  }\n\n  private _addPartial(map: Map<string, SelectorMatcher>, name: string): SelectorMatcher {\n    let matcher = map.get(name);\n    if (!matcher) {\n      matcher = new SelectorMatcher();\n      map.set(name, matcher);\n    }\n    return matcher;\n  }\n\n  /**\n   * Find the objects that have been added via `addSelectable`\n   * whose css selector is contained in the given css selector.\n   * @param cssSelector A css selector\n   * @param matchedCallback This callback will be called with the object handed into `addSelectable`\n   * @return boolean true if a match was found\n  */\n  match(cssSelector: CssSelector, matchedCallback: ((c: CssSelector, a: any) => void)|null):\n      boolean {\n    let result = false;\n    const element = cssSelector.element !;\n    const classNames = cssSelector.classNames;\n    const attrs = cssSelector.attrs;\n\n    for (let i = 0; i < this._listContexts.length; i++) {\n      this._listContexts[i].alreadyMatched = false;\n    }\n\n    result = this._matchTerminal(this._elementMap, element, cssSelector, matchedCallback) || result;\n    result = this._matchPartial(this._elementPartialMap, element, cssSelector, matchedCallback) ||\n        result;\n\n    if (classNames) {\n      for (let i = 0; i < classNames.length; i++) {\n        const className = classNames[i];\n        result =\n            this._matchTerminal(this._classMap, className, cssSelector, matchedCallback) || result;\n        result =\n            this._matchPartial(this._classPartialMap, className, cssSelector, matchedCallback) ||\n            result;\n      }\n    }\n\n    if (attrs) {\n      for (let i = 0; i < attrs.length; i += 2) {\n        const name = attrs[i];\n        const value = attrs[i + 1];\n\n        const terminalValuesMap = this._attrValueMap.get(name) !;\n        if (value) {\n          result =\n              this._matchTerminal(terminalValuesMap, '', cssSelector, matchedCallback) || result;\n        }\n        result =\n            this._matchTerminal(terminalValuesMap, value, cssSelector, matchedCallback) || result;\n\n        const partialValuesMap = this._attrValuePartialMap.get(name) !;\n        if (value) {\n          result = this._matchPartial(partialValuesMap, '', cssSelector, matchedCallback) || result;\n        }\n        result =\n            this._matchPartial(partialValuesMap, value, cssSelector, matchedCallback) || result;\n      }\n    }\n    return result;\n  }\n\n  /** @internal */\n  _matchTerminal(\n      map: Map<string, SelectorContext[]>, name: string, cssSelector: CssSelector,\n      matchedCallback: ((c: CssSelector, a: any) => void)|null): boolean {\n    if (!map || typeof name !== 'string') {\n      return false;\n    }\n\n    let selectables: SelectorContext[] = map.get(name) || [];\n    const starSelectables: SelectorContext[] = map.get('*') !;\n    if (starSelectables) {\n      selectables = selectables.concat(starSelectables);\n    }\n    if (selectables.length === 0) {\n      return false;\n    }\n    let selectable: SelectorContext;\n    let result = false;\n    for (let i = 0; i < selectables.length; i++) {\n      selectable = selectables[i];\n      result = selectable.finalize(cssSelector, matchedCallback) || result;\n    }\n    return result;\n  }\n\n  /** @internal */\n  _matchPartial(\n      map: Map<string, SelectorMatcher>, name: string, cssSelector: CssSelector,\n      matchedCallback: ((c: CssSelector, a: any) => void)|null): boolean {\n    if (!map || typeof name !== 'string') {\n      return false;\n    }\n\n    const nestedSelector = map.get(name);\n    if (!nestedSelector) {\n      return false;\n    }\n    // TODO(perf): get rid of recursion and measure again\n    // TODO(perf): don't pass the whole selector into the recursion,\n    // but only the not processed parts\n    return nestedSelector.match(cssSelector, matchedCallback);\n  }\n}\n\n\nexport class SelectorListContext {\n  alreadyMatched: boolean = false;\n\n  constructor(public selectors: CssSelector[]) {}\n}\n\n// Store context to pass back selector and context when a selector is matched\nexport class SelectorContext {\n  notSelectors: CssSelector[];\n\n  constructor(\n      public selector: CssSelector, public cbContext: any,\n      public listContext: SelectorListContext) {\n    this.notSelectors = selector.notSelectors;\n  }\n\n  finalize(cssSelector: CssSelector, callback: ((c: CssSelector, a: any) => void)|null): boolean {\n    let result = true;\n    if (this.notSelectors.length > 0 && (!this.listContext || !this.listContext.alreadyMatched)) {\n      const notMatcher = SelectorMatcher.createNotMatcher(this.notSelectors);\n      result = !notMatcher.match(cssSelector, null);\n    }\n    if (result && callback && (!this.listContext || !this.listContext.alreadyMatched)) {\n      if (this.listContext) {\n        this.listContext.alreadyMatched = true;\n      }\n      callback(this.selector, this.cbContext);\n    }\n    return result;\n  }\n}\n"],"sourceRoot":""}