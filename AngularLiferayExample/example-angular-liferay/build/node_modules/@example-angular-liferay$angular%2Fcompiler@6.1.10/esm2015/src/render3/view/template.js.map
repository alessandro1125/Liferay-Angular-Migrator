{"version":3,"sources":["../../../../../../../../packages/compiler/src/render3/view/template.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {flatten, sanitizeIdentifier} from '../../compile_metadata';\nimport {CompileReflector} from '../../compile_reflector';\nimport {BindingForm, BuiltinFunctionCall, LocalResolver, convertActionBinding, convertPropertyBinding} from '../../compiler_util/expression_converter';\nimport {ConstantPool} from '../../constant_pool';\nimport * as core from '../../core';\nimport {AST, AstMemoryEfficientTransformer, BindingPipe, BindingType, FunctionCall, ImplicitReceiver, Interpolation, LiteralArray, LiteralMap, LiteralPrimitive, PropertyRead} from '../../expression_parser/ast';\nimport {Lexer} from '../../expression_parser/lexer';\nimport {Parser} from '../../expression_parser/parser';\nimport * as html from '../../ml_parser/ast';\nimport {HtmlParser} from '../../ml_parser/html_parser';\nimport {WhitespaceVisitor} from '../../ml_parser/html_whitespaces';\nimport {DEFAULT_INTERPOLATION_CONFIG} from '../../ml_parser/interpolation_config';\nimport {splitNsName} from '../../ml_parser/tags';\nimport * as o from '../../output/output_ast';\nimport {ParseError, ParseSourceSpan} from '../../parse_util';\nimport {DomElementSchemaRegistry} from '../../schema/dom_element_schema_registry';\nimport {CssSelector, SelectorMatcher} from '../../selector';\nimport {BindingParser} from '../../template_parser/binding_parser';\nimport {OutputContext, error} from '../../util';\nimport * as t from '../r3_ast';\nimport {Identifiers as R3} from '../r3_identifiers';\nimport {htmlAstToRender3Ast} from '../r3_template_transform';\n\nimport {R3QueryMetadata} from './api';\nimport {parseStyle} from './styling';\nimport {CONTEXT_NAME, I18N_ATTR, I18N_ATTR_PREFIX, ID_SEPARATOR, IMPLICIT_REFERENCE, MEANING_SEPARATOR, REFERENCE_PREFIX, RENDER_FLAGS, TEMPORARY_NAME, asLiteral, getQueryPredicate, invalid, mapToExpression, noop, temporaryAllocator, trimTrailingNulls, unsupported} from './util';\n\nfunction mapBindingToInstruction(type: BindingType): o.ExternalReference|undefined {\n  switch (type) {\n    case BindingType.Property:\n      return R3.elementProperty;\n    case BindingType.Attribute:\n      return R3.elementAttribute;\n    case BindingType.Class:\n      return R3.elementClassProp;\n    default:\n      return undefined;\n  }\n}\n\n//  if (rf & flags) { .. }\nexport function renderFlagCheckIfStmt(\n    flags: core.RenderFlags, statements: o.Statement[]): o.IfStmt {\n  return o.ifStmt(o.variable(RENDER_FLAGS).bitwiseAnd(o.literal(flags), null, false), statements);\n}\n\nexport class TemplateDefinitionBuilder implements t.Visitor<void>, LocalResolver {\n  private _dataIndex = 0;\n  private _bindingContext = 0;\n  private _prefixCode: o.Statement[] = [];\n  private _creationCode: o.Statement[] = [];\n  private _variableCode: o.Statement[] = [];\n  private _bindingCode: o.Statement[] = [];\n  private _postfixCode: o.Statement[] = [];\n  private _valueConverter: ValueConverter;\n  private _unsupported = unsupported;\n  private _bindingScope: BindingScope;\n\n  // Whether we are inside a translatable element (`<p i18n>... somewhere here ... </p>)\n  private _inI18nSection: boolean = false;\n  private _i18nSectionIndex = -1;\n  // Maps of placeholder to node indexes for each of the i18n section\n  private _phToNodeIdxes: {[phName: string]: number[]}[] = [{}];\n\n  // Number of slots to reserve for pureFunctions\n  private _pureFunctionSlots = 0;\n\n  constructor(\n      private constantPool: ConstantPool, private contextParameter: string,\n      parentBindingScope: BindingScope, private level = 0, private contextName: string|null,\n      private templateName: string|null, private viewQueries: R3QueryMetadata[],\n      private directiveMatcher: SelectorMatcher|null, private directives: Set<o.Expression>,\n      private pipeTypeByName: Map<string, o.Expression>, private pipes: Set<o.Expression>,\n      private _namespace: o.ExternalReference) {\n    // view queries can take up space in data and allocation happens earlier (in the \"viewQuery\"\n    // function)\n    this._dataIndex = viewQueries.length;\n    this._bindingScope =\n        parentBindingScope.nestedScope((lhsVar: o.ReadVarExpr, expression: o.Expression) => {\n          this._bindingCode.push(\n              lhsVar.set(expression).toDeclStmt(o.INFERRED_TYPE, [o.StmtModifier.Final]));\n        });\n    this._valueConverter = new ValueConverter(\n        constantPool, () => this.allocateDataSlot(),\n        (numSlots: number): number => this._pureFunctionSlots += numSlots,\n        (name, localName, slot, value: o.ReadVarExpr) => {\n          const pipeType = pipeTypeByName.get(name);\n          if (pipeType) {\n            this.pipes.add(pipeType);\n          }\n          this._bindingScope.set(localName, value);\n          this._creationCode.push(\n              o.importExpr(R3.pipe).callFn([o.literal(slot), o.literal(name)]).toStmt());\n        });\n  }\n\n  buildTemplateFunction(\n      nodes: t.Node[], variables: t.Variable[], hasNgContent: boolean = false,\n      ngContentSelectors: string[] = []): o.FunctionExpr {\n    if (this._namespace !== R3.namespaceHTML) {\n      this.instruction(this._creationCode, null, this._namespace);\n    }\n\n    // Create variable bindings\n    for (const variable of variables) {\n      const variableName = variable.name;\n      const expression =\n          o.variable(this.contextParameter).prop(variable.value || IMPLICIT_REFERENCE);\n      const scopedName = this._bindingScope.freshReferenceName();\n      // Add the reference to the local scope.\n      this._bindingScope.set(variableName, o.variable(variableName + scopedName), expression);\n    }\n\n    // Output a `ProjectionDef` instruction when some `<ng-content>` are present\n    if (hasNgContent) {\n      const parameters: o.Expression[] = [];\n\n      // Only selectors with a non-default value are generated\n      if (ngContentSelectors.length > 1) {\n        const r3Selectors = ngContentSelectors.map(s => core.parseSelectorToR3Selector(s));\n        // `projectionDef` needs both the parsed and raw value of the selectors\n        const parsed = this.constantPool.getConstLiteral(asLiteral(r3Selectors), true);\n        const unParsed = this.constantPool.getConstLiteral(asLiteral(ngContentSelectors), true);\n        parameters.push(parsed, unParsed);\n      }\n\n      this.instruction(this._creationCode, null, R3.projectionDef, ...parameters);\n    }\n\n    t.visitAll(this, nodes);\n\n    if (this._pureFunctionSlots > 0) {\n      this.instruction(\n          this._creationCode, null, R3.reserveSlots, o.literal(this._pureFunctionSlots));\n    }\n\n    const creationCode = this._creationCode.length > 0 ?\n        [renderFlagCheckIfStmt(core.RenderFlags.Create, this._creationCode)] :\n        [];\n\n    const updateCode = this._bindingCode.length > 0 ?\n        [renderFlagCheckIfStmt(core.RenderFlags.Update, this._bindingCode)] :\n        [];\n\n    // Generate maps of placeholder name to node indexes\n    // TODO(vicb): This is a WIP, not fully supported yet\n    for (const phToNodeIdx of this._phToNodeIdxes) {\n      if (Object.keys(phToNodeIdx).length > 0) {\n        const scopedName = this._bindingScope.freshReferenceName();\n        const phMap = o.variable(scopedName)\n                          .set(mapToExpression(phToNodeIdx, true))\n                          .toDeclStmt(o.INFERRED_TYPE, [o.StmtModifier.Final]);\n\n        this._prefixCode.push(phMap);\n      }\n    }\n\n    return o.fn(\n        [new o.FnParam(RENDER_FLAGS, o.NUMBER_TYPE), new o.FnParam(this.contextParameter, null)],\n        [\n          // Temporary variable declarations for query refresh (i.e. let _t: any;)\n          ...this._prefixCode,\n          // Creating mode (i.e. if (rf & RenderFlags.Create) { ... })\n          ...creationCode,\n          // Temporary variable declarations for local refs (i.e. const tmp = ld(1) as any)\n          ...this._variableCode,\n          // Binding and refresh mode (i.e. if (rf & RenderFlags.Update) {...})\n          ...updateCode,\n          // Nested templates (i.e. function CompTemplate() {})\n          ...this._postfixCode\n        ],\n        o.INFERRED_TYPE, null, this.templateName);\n  }\n\n  // LocalResolver\n  getLocal(name: string): o.Expression|null { return this._bindingScope.get(name); }\n\n  visitContent(ngContent: t.Content) {\n    const slot = this.allocateDataSlot();\n    const selectorIndex = ngContent.selectorIndex;\n    const parameters: o.Expression[] = [o.literal(slot)];\n\n    const attributeAsList: string[] = [];\n\n    ngContent.attributes.forEach((attribute) => {\n      const name = attribute.name;\n      if (name !== 'select') {\n        attributeAsList.push(name, attribute.value);\n      }\n    });\n\n    if (attributeAsList.length > 0) {\n      parameters.push(o.literal(selectorIndex), asLiteral(attributeAsList));\n    } else if (selectorIndex !== 0) {\n      parameters.push(o.literal(selectorIndex));\n    }\n\n    this.instruction(this._creationCode, ngContent.sourceSpan, R3.projection, ...parameters);\n  }\n\n\n  getNamespaceInstruction(namespaceKey: string|null) {\n    switch (namespaceKey) {\n      case 'math':\n        return R3.namespaceMathML;\n      case 'svg':\n        return R3.namespaceSVG;\n      default:\n        return R3.namespaceHTML;\n    }\n  }\n\n  addNamespaceInstruction(nsInstruction: o.ExternalReference, element: t.Element) {\n    this._namespace = nsInstruction;\n    this.instruction(this._creationCode, element.sourceSpan, nsInstruction);\n  }\n\n  visitElement(element: t.Element) {\n    const elementIndex = this.allocateDataSlot();\n    const referenceDataSlots = new Map<string, number>();\n    const wasInI18nSection = this._inI18nSection;\n\n    const outputAttrs: {[name: string]: string} = {};\n    const attrI18nMetas: {[name: string]: string} = {};\n    let i18nMeta: string = '';\n\n    const [namespaceKey, elementName] = splitNsName(element.name);\n\n    // Elements inside i18n sections are replaced with placeholders\n    // TODO(vicb): nested elements are a WIP in this phase\n    if (this._inI18nSection) {\n      const phName = element.name.toLowerCase();\n      if (!this._phToNodeIdxes[this._i18nSectionIndex][phName]) {\n        this._phToNodeIdxes[this._i18nSectionIndex][phName] = [];\n      }\n      this._phToNodeIdxes[this._i18nSectionIndex][phName].push(elementIndex);\n    }\n\n    // Handle i18n attributes\n    for (const attr of element.attributes) {\n      const name = attr.name;\n      const value = attr.value;\n      if (name === I18N_ATTR) {\n        if (this._inI18nSection) {\n          throw new Error(\n              `Could not mark an element as translatable inside of a translatable section`);\n        }\n        this._inI18nSection = true;\n        this._i18nSectionIndex++;\n        this._phToNodeIdxes[this._i18nSectionIndex] = {};\n        i18nMeta = value;\n      } else if (name.startsWith(I18N_ATTR_PREFIX)) {\n        attrI18nMetas[name.slice(I18N_ATTR_PREFIX.length)] = value;\n      } else {\n        outputAttrs[name] = value;\n      }\n    }\n\n    // Match directives on non i18n attributes\n    if (this.directiveMatcher) {\n      const selector = createCssSelector(element.name, outputAttrs);\n      this.directiveMatcher.match(\n          selector, (sel: CssSelector, staticType: any) => { this.directives.add(staticType); });\n    }\n\n    // Element creation mode\n    const parameters: o.Expression[] = [\n      o.literal(elementIndex),\n      o.literal(elementName),\n    ];\n\n    // Add the attributes\n    const i18nMessages: o.Statement[] = [];\n    const attributes: o.Expression[] = [];\n    const initialStyleDeclarations: o.Expression[] = [];\n    const initialClassDeclarations: o.Expression[] = [];\n\n    const styleInputs: t.BoundAttribute[] = [];\n    const classInputs: t.BoundAttribute[] = [];\n    const allOtherInputs: t.BoundAttribute[] = [];\n\n    element.inputs.forEach((input: t.BoundAttribute) => {\n      switch (input.type) {\n        // [attr.style] or [attr.class] should not be treated as styling-based\n        // bindings since they are intended to be written directly to the attr\n        // and therefore will skip all style/class resolution that is present\n        // with style=\"\", [style]=\"\" and [style.prop]=\"\", class=\"\",\n        // [class.prop]=\"\". [class]=\"\" assignments\n        case BindingType.Property:\n          if (input.name == 'style') {\n            // this should always go first in the compilation (for [style])\n            styleInputs.splice(0, 0, input);\n          } else if (isClassBinding(input)) {\n            // this should always go first in the compilation (for [class])\n            classInputs.splice(0, 0, input);\n          } else {\n            allOtherInputs.push(input);\n          }\n          break;\n        case BindingType.Style:\n          styleInputs.push(input);\n          break;\n        case BindingType.Class:\n          classInputs.push(input);\n          break;\n        default:\n          allOtherInputs.push(input);\n          break;\n      }\n    });\n\n    let currStyleIndex = 0;\n    let currClassIndex = 0;\n    let staticStylesMap: {[key: string]: any}|null = null;\n    let staticClassesMap: {[key: string]: boolean}|null = null;\n    const stylesIndexMap: {[key: string]: number} = {};\n    const classesIndexMap: {[key: string]: number} = {};\n    Object.getOwnPropertyNames(outputAttrs).forEach(name => {\n      const value = outputAttrs[name];\n      if (name == 'style') {\n        staticStylesMap = parseStyle(value);\n        Object.keys(staticStylesMap).forEach(prop => { stylesIndexMap[prop] = currStyleIndex++; });\n      } else if (name == 'class') {\n        staticClassesMap = {};\n        value.split(/\\s+/g).forEach(className => {\n          classesIndexMap[className] = currClassIndex++;\n          staticClassesMap ![className] = true;\n        });\n      } else {\n        attributes.push(o.literal(name));\n        if (attrI18nMetas.hasOwnProperty(name)) {\n          const meta = parseI18nMeta(attrI18nMetas[name]);\n          const variable = this.constantPool.getTranslation(value, meta);\n          attributes.push(variable);\n        } else {\n          attributes.push(o.literal(value));\n        }\n      }\n    });\n\n    let hasMapBasedStyling = false;\n    for (let i = 0; i < styleInputs.length; i++) {\n      const input = styleInputs[i];\n      const isMapBasedStyleBinding = i === 0 && input.name === 'style';\n      if (isMapBasedStyleBinding) {\n        hasMapBasedStyling = true;\n      } else if (!stylesIndexMap.hasOwnProperty(input.name)) {\n        stylesIndexMap[input.name] = currStyleIndex++;\n      }\n    }\n\n    for (let i = 0; i < classInputs.length; i++) {\n      const input = classInputs[i];\n      const isMapBasedClassBinding = i === 0 && isClassBinding(input);\n      if (!isMapBasedClassBinding && !stylesIndexMap.hasOwnProperty(input.name)) {\n        classesIndexMap[input.name] = currClassIndex++;\n      }\n    }\n\n    // in the event that a [style] binding is used then sanitization will\n    // always be imported because it is not possible to know ahead of time\n    // whether style bindings will use or not use any sanitizable properties\n    // that isStyleSanitizable() will detect\n    let useDefaultStyleSanitizer = hasMapBasedStyling;\n\n    // this will build the instructions so that they fall into the following syntax\n    // => [prop1, prop2, prop3, 0, prop1, value1, prop2, value2]\n    Object.keys(stylesIndexMap).forEach(prop => {\n      useDefaultStyleSanitizer = useDefaultStyleSanitizer || isStyleSanitizable(prop);\n      initialStyleDeclarations.push(o.literal(prop));\n    });\n\n    if (staticStylesMap) {\n      initialStyleDeclarations.push(o.literal(core.InitialStylingFlags.VALUES_MODE));\n\n      Object.keys(staticStylesMap).forEach(prop => {\n        initialStyleDeclarations.push(o.literal(prop));\n        const value = staticStylesMap ![prop];\n        initialStyleDeclarations.push(o.literal(value));\n      });\n    }\n\n    Object.keys(classesIndexMap).forEach(prop => {\n      initialClassDeclarations.push(o.literal(prop));\n    });\n\n    if (staticClassesMap) {\n      initialClassDeclarations.push(o.literal(core.InitialStylingFlags.VALUES_MODE));\n\n      Object.keys(staticClassesMap).forEach(className => {\n        initialClassDeclarations.push(o.literal(className));\n        initialClassDeclarations.push(o.literal(true));\n      });\n    }\n\n    const hasStylingInstructions = initialStyleDeclarations.length || styleInputs.length ||\n        initialClassDeclarations.length || classInputs.length;\n\n    const attrArg: o.Expression = attributes.length > 0 ?\n        this.constantPool.getConstLiteral(o.literalArr(attributes), true) :\n        o.TYPED_NULL_EXPR;\n    parameters.push(attrArg);\n\n    if (element.references && element.references.length > 0) {\n      const references = flatten(element.references.map(reference => {\n        const slot = this.allocateDataSlot();\n        referenceDataSlots.set(reference.name, slot);\n        // Generate the update temporary.\n        const variableName = this._bindingScope.freshReferenceName();\n        this._variableCode.push(o.variable(variableName, o.INFERRED_TYPE)\n                                    .set(o.importExpr(R3.load).callFn([o.literal(slot)]))\n                                    .toDeclStmt(o.INFERRED_TYPE, [o.StmtModifier.Final]));\n        this._bindingScope.set(reference.name, o.variable(variableName));\n        return [reference.name, reference.value];\n      }));\n      parameters.push(this.constantPool.getConstLiteral(asLiteral(references), true));\n    } else {\n      parameters.push(o.TYPED_NULL_EXPR);\n    }\n\n    // Generate the instruction create element instruction\n    if (i18nMessages.length > 0) {\n      this._creationCode.push(...i18nMessages);\n    }\n\n    const wasInNamespace = this._namespace;\n    const currentNamespace = this.getNamespaceInstruction(namespaceKey);\n\n    // If the namespace is changing now, include an instruction to change it\n    // during element creation.\n    if (currentNamespace !== wasInNamespace) {\n      this.addNamespaceInstruction(currentNamespace, element);\n    }\n\n    const implicit = o.variable(CONTEXT_NAME);\n\n    const createSelfClosingInstruction =\n        !hasStylingInstructions && element.children.length === 0 && element.outputs.length === 0;\n\n    if (createSelfClosingInstruction) {\n      this.instruction(\n          this._creationCode, element.sourceSpan, R3.element, ...trimTrailingNulls(parameters));\n    } else {\n      // Generate the instruction create element instruction\n      if (i18nMessages.length > 0) {\n        this._creationCode.push(...i18nMessages);\n      }\n      this.instruction(\n          this._creationCode, element.sourceSpan, R3.elementStart,\n          ...trimTrailingNulls(parameters));\n\n      // initial styling for static style=\"...\" attributes\n      if (hasStylingInstructions) {\n        const paramsList: (o.Expression)[] = [];\n\n        if (initialClassDeclarations.length) {\n          // the template compiler handles initial class styling (e.g. class=\"foo\") values\n          // in a special command called `elementClass` so that the initial class\n          // can be processed during runtime. These initial class values are bound to\n          // a constant because the inital class values do not change (since they're static).\n          paramsList.push(\n              this.constantPool.getConstLiteral(o.literalArr(initialClassDeclarations), true));\n        } else if (initialStyleDeclarations.length || useDefaultStyleSanitizer) {\n          // no point in having an extra `null` value unless there are follow-up params\n          paramsList.push(o.NULL_EXPR);\n        }\n\n        if (initialStyleDeclarations.length) {\n          // the template compiler handles initial style (e.g. style=\"foo\") values\n          // in a special command called `elementStyle` so that the initial styles\n          // can be processed during runtime. These initial styles values are bound to\n          // a constant because the inital style values do not change (since they're static).\n          paramsList.push(\n              this.constantPool.getConstLiteral(o.literalArr(initialStyleDeclarations), true));\n        } else if (useDefaultStyleSanitizer) {\n          // no point in having an extra `null` value unless there are follow-up params\n          paramsList.push(o.NULL_EXPR);\n        }\n\n\n        if (useDefaultStyleSanitizer) {\n          paramsList.push(o.importExpr(R3.defaultStyleSanitizer));\n        }\n\n        this._creationCode.push(o.importExpr(R3.elementStyling).callFn(paramsList).toStmt());\n      }\n\n      // Generate Listeners (outputs)\n      element.outputs.forEach((outputAst: t.BoundEvent) => {\n        const elName = sanitizeIdentifier(element.name);\n        const evName = sanitizeIdentifier(outputAst.name);\n        const functionName = `${this.templateName}_${elName}_${evName}_listener`;\n        const localVars: o.Statement[] = [];\n        const bindingScope =\n            this._bindingScope.nestedScope((lhsVar: o.ReadVarExpr, rhsExpression: o.Expression) => {\n              localVars.push(\n                  lhsVar.set(rhsExpression).toDeclStmt(o.INFERRED_TYPE, [o.StmtModifier.Final]));\n            });\n        const bindingExpr = convertActionBinding(\n            bindingScope, implicit, outputAst.handler, 'b',\n            () => error('Unexpected interpolation'));\n        const handler = o.fn(\n            [new o.FnParam('$event', o.DYNAMIC_TYPE)], [...localVars, ...bindingExpr.render3Stmts],\n            o.INFERRED_TYPE, null, functionName);\n        this.instruction(\n            this._creationCode, outputAst.sourceSpan, R3.listener, o.literal(outputAst.name),\n            handler);\n      });\n    }\n\n    if ((styleInputs.length || classInputs.length) && hasStylingInstructions) {\n      const indexLiteral = o.literal(elementIndex);\n\n      const firstStyle = styleInputs[0];\n      const mapBasedStyleInput = firstStyle && firstStyle.name == 'style' ? firstStyle : null;\n\n      const firstClass = classInputs[0];\n      const mapBasedClassInput = firstClass && isClassBinding(firstClass) ? firstClass : null;\n\n      const stylingInput = mapBasedStyleInput || mapBasedClassInput;\n      if (stylingInput) {\n        const params: o.Expression[] = [];\n        if (mapBasedClassInput) {\n          params.push(this.convertPropertyBinding(implicit, mapBasedClassInput.value, true));\n        } else if (mapBasedStyleInput) {\n          params.push(o.NULL_EXPR);\n        }\n        if (mapBasedStyleInput) {\n          params.push(this.convertPropertyBinding(implicit, mapBasedStyleInput.value, true));\n        }\n        this.instruction(\n            this._bindingCode, stylingInput.sourceSpan, R3.elementStylingMap, indexLiteral,\n            ...params);\n      }\n\n      let lastInputCommand: t.BoundAttribute|null = null;\n      if (styleInputs.length) {\n        let i = mapBasedStyleInput ? 1 : 0;\n        for (i; i < styleInputs.length; i++) {\n          const input = styleInputs[i];\n          const convertedBinding = this.convertPropertyBinding(implicit, input.value, true);\n          const params = [convertedBinding];\n          const sanitizationRef = resolveSanitizationFn(input, input.securityContext);\n          if (sanitizationRef) {\n            params.push(sanitizationRef);\n          }\n\n          const key = input.name;\n          const styleIndex: number = stylesIndexMap[key] !;\n          this.instruction(\n              this._bindingCode, input.sourceSpan, R3.elementStyleProp, indexLiteral,\n              o.literal(styleIndex), ...params);\n        }\n\n        lastInputCommand = styleInputs[styleInputs.length - 1];\n      }\n\n      if (classInputs.length) {\n        let i = mapBasedClassInput ? 1 : 0;\n        for (i; i < classInputs.length; i++) {\n          const input = classInputs[i];\n          const convertedBinding = this.convertPropertyBinding(implicit, input.value, true);\n          const params = [convertedBinding];\n          const sanitizationRef = resolveSanitizationFn(input, input.securityContext);\n          if (sanitizationRef) {\n            params.push(sanitizationRef);\n          }\n\n          const key = input.name;\n          const classIndex: number = classesIndexMap[key] !;\n          this.instruction(\n              this._bindingCode, input.sourceSpan, R3.elementClassProp, indexLiteral,\n              o.literal(classIndex), ...params);\n        }\n\n        lastInputCommand = classInputs[classInputs.length - 1];\n      }\n\n      this.instruction(\n          this._bindingCode, lastInputCommand !.sourceSpan, R3.elementStylingApply, indexLiteral);\n    }\n\n    // Generate element input bindings\n    allOtherInputs.forEach((input: t.BoundAttribute) => {\n      if (input.type === BindingType.Animation) {\n        console.error('warning: animation bindings not yet supported');\n        return;\n      }\n\n      const convertedBinding = this.convertPropertyBinding(implicit, input.value);\n\n      const instruction = mapBindingToInstruction(input.type);\n      if (instruction) {\n        const params = [convertedBinding];\n        const sanitizationRef = resolveSanitizationFn(input, input.securityContext);\n        if (sanitizationRef) {\n          params.push(sanitizationRef);\n        }\n\n        // TODO(chuckj): runtime: security context?\n        this.instruction(\n            this._bindingCode, input.sourceSpan, instruction, o.literal(elementIndex),\n            o.literal(input.name), ...params);\n      } else {\n        this._unsupported(`binding type ${input.type}`);\n      }\n    });\n\n    // Traverse element child nodes\n    if (this._inI18nSection && element.children.length == 1 &&\n        element.children[0] instanceof t.Text) {\n      const text = element.children[0] as t.Text;\n      this.visitSingleI18nTextChild(text, i18nMeta);\n    } else {\n      t.visitAll(this, element.children);\n    }\n\n    if (!createSelfClosingInstruction) {\n      // Finish element construction mode.\n      this.instruction(\n          this._creationCode, element.endSourceSpan || element.sourceSpan, R3.elementEnd);\n    }\n\n    // Restore the state before exiting this node\n    this._inI18nSection = wasInI18nSection;\n  }\n\n  visitTemplate(template: t.Template) {\n    const templateIndex = this.allocateDataSlot();\n\n    let elName = '';\n    if (template.children.length === 1 && template.children[0] instanceof t.Element) {\n      // When the template as a single child, derive the context name from the tag\n      elName = sanitizeIdentifier((template.children[0] as t.Element).name);\n    }\n\n    const contextName = elName ? `${this.contextName}_${elName}` : '';\n\n    const templateName =\n        contextName ? `${contextName}_Template_${templateIndex}` : `Template_${templateIndex}`;\n\n    const templateContext = `ctx${this.level}`;\n\n    const parameters: o.Expression[] = [\n      o.literal(templateIndex),\n      o.variable(templateName),\n      o.TYPED_NULL_EXPR,\n    ];\n\n    const attributeNames: o.Expression[] = [];\n    const attributeMap: {[name: string]: string} = {};\n\n    template.attributes.forEach(a => {\n      attributeNames.push(asLiteral(a.name), asLiteral(''));\n      attributeMap[a.name] = a.value;\n    });\n\n    // Match directives on template attributes\n    if (this.directiveMatcher) {\n      const selector = createCssSelector('ng-template', attributeMap);\n      this.directiveMatcher.match(\n          selector, (cssSelector, staticType) => { this.directives.add(staticType); });\n    }\n\n    if (attributeNames.length) {\n      parameters.push(this.constantPool.getConstLiteral(o.literalArr(attributeNames), true));\n    }\n\n    // e.g. C(1, C1Template)\n    this.instruction(\n        this._creationCode, template.sourceSpan, R3.containerCreate,\n        ...trimTrailingNulls(parameters));\n\n    // e.g. p(1, 'forOf', ɵb(ctx.items));\n    const context = o.variable(CONTEXT_NAME);\n    template.inputs.forEach(input => {\n      const convertedBinding = this.convertPropertyBinding(context, input.value);\n      this.instruction(\n          this._bindingCode, template.sourceSpan, R3.elementProperty, o.literal(templateIndex),\n          o.literal(input.name), convertedBinding);\n    });\n\n    // Create the template function\n    const templateVisitor = new TemplateDefinitionBuilder(\n        this.constantPool, templateContext, this._bindingScope, this.level + 1, contextName,\n        templateName, [], this.directiveMatcher, this.directives, this.pipeTypeByName, this.pipes,\n        this._namespace);\n    const templateFunctionExpr =\n        templateVisitor.buildTemplateFunction(template.children, template.variables);\n    this._postfixCode.push(templateFunctionExpr.toDeclStmt(templateName, null));\n  }\n\n  // These should be handled in the template or element directly.\n  readonly visitReference = invalid;\n  readonly visitVariable = invalid;\n  readonly visitTextAttribute = invalid;\n  readonly visitBoundAttribute = invalid;\n  readonly visitBoundEvent = invalid;\n\n  visitBoundText(text: t.BoundText) {\n    const nodeIndex = this.allocateDataSlot();\n\n    this.instruction(this._creationCode, text.sourceSpan, R3.text, o.literal(nodeIndex));\n\n    this.instruction(\n        this._bindingCode, text.sourceSpan, R3.textBinding, o.literal(nodeIndex),\n        this.convertPropertyBinding(o.variable(CONTEXT_NAME), text.value));\n  }\n\n  visitText(text: t.Text) {\n    this.instruction(\n        this._creationCode, text.sourceSpan, R3.text, o.literal(this.allocateDataSlot()),\n        o.literal(text.value));\n  }\n\n  // When the content of the element is a single text node the translation can be inlined:\n  //\n  // `<p i18n=\"desc|mean\">some content</p>`\n  // compiles to\n  // ```\n  // /**\n  // * @desc desc\n  // * @meaning mean\n  // */\n  // const MSG_XYZ = goog.getMsg('some content');\n  // i0.ɵT(1, MSG_XYZ);\n  // ```\n  visitSingleI18nTextChild(text: t.Text, i18nMeta: string) {\n    const meta = parseI18nMeta(i18nMeta);\n    const variable = this.constantPool.getTranslation(text.value, meta);\n    this.instruction(\n        this._creationCode, text.sourceSpan, R3.text, o.literal(this.allocateDataSlot()), variable);\n  }\n\n  private allocateDataSlot() { return this._dataIndex++; }\n  private bindingContext() { return `${this._bindingContext++}`; }\n\n  private instruction(\n      statements: o.Statement[], span: ParseSourceSpan|null, reference: o.ExternalReference,\n      ...params: o.Expression[]) {\n    statements.push(o.importExpr(reference, null, span).callFn(params, span).toStmt());\n  }\n\n  private convertPropertyBinding(implicit: o.Expression, value: AST, skipBindFn?: boolean):\n      o.Expression {\n    const pipesConvertedValue = value.visit(this._valueConverter);\n    if (pipesConvertedValue instanceof Interpolation) {\n      const convertedPropertyBinding = convertPropertyBinding(\n          this, implicit, pipesConvertedValue, this.bindingContext(), BindingForm.TrySimple,\n          interpolate);\n      this._bindingCode.push(...convertedPropertyBinding.stmts);\n      return convertedPropertyBinding.currValExpr;\n    } else {\n      const convertedPropertyBinding = convertPropertyBinding(\n          this, implicit, pipesConvertedValue, this.bindingContext(), BindingForm.TrySimple,\n          () => error('Unexpected interpolation'));\n      this._bindingCode.push(...convertedPropertyBinding.stmts);\n      const valExpr = convertedPropertyBinding.currValExpr;\n      return skipBindFn ? valExpr : o.importExpr(R3.bind).callFn([valExpr]);\n    }\n  }\n}\n\nclass ValueConverter extends AstMemoryEfficientTransformer {\n  constructor(\n      private constantPool: ConstantPool, private allocateSlot: () => number,\n      private allocatePureFunctionSlots: (numSlots: number) => number,\n      private definePipe:\n          (name: string, localName: string, slot: number, value: o.Expression) => void) {\n    super();\n  }\n\n  // AstMemoryEfficientTransformer\n  visitPipe(pipe: BindingPipe, context: any): AST {\n    // Allocate a slot to create the pipe\n    const slot = this.allocateSlot();\n    const slotPseudoLocal = `PIPE:${slot}`;\n    // Allocate one slot for the result plus one slot per pipe argument\n    const pureFunctionSlot = this.allocatePureFunctionSlots(2 + pipe.args.length);\n    const target = new PropertyRead(pipe.span, new ImplicitReceiver(pipe.span), slotPseudoLocal);\n    const {identifier, isVarLength} = pipeBindingCallInfo(pipe.args);\n    this.definePipe(pipe.name, slotPseudoLocal, slot, o.importExpr(identifier));\n    const args: AST[] = [pipe.exp, ...pipe.args];\n    const convertedArgs: AST[] =\n        isVarLength ? this.visitAll([new LiteralArray(pipe.span, args)]) : this.visitAll(args);\n\n    return new FunctionCall(pipe.span, target, [\n      new LiteralPrimitive(pipe.span, slot),\n      new LiteralPrimitive(pipe.span, pureFunctionSlot),\n      ...convertedArgs,\n    ]);\n  }\n\n  visitLiteralArray(array: LiteralArray, context: any): AST {\n    return new BuiltinFunctionCall(array.span, this.visitAll(array.expressions), values => {\n      // If the literal has calculated (non-literal) elements transform it into\n      // calls to literal factories that compose the literal and will cache intermediate\n      // values. Otherwise, just return an literal array that contains the values.\n      const literal = o.literalArr(values);\n      return values.every(a => a.isConstant()) ?\n          this.constantPool.getConstLiteral(literal, true) :\n          getLiteralFactory(this.constantPool, literal, this.allocatePureFunctionSlots);\n    });\n  }\n\n  visitLiteralMap(map: LiteralMap, context: any): AST {\n    return new BuiltinFunctionCall(map.span, this.visitAll(map.values), values => {\n      // If the literal has calculated (non-literal) elements  transform it into\n      // calls to literal factories that compose the literal and will cache intermediate\n      // values. Otherwise, just return an literal array that contains the values.\n      const literal = o.literalMap(values.map(\n          (value, index) => ({key: map.keys[index].key, value, quoted: map.keys[index].quoted})));\n      return values.every(a => a.isConstant()) ?\n          this.constantPool.getConstLiteral(literal, true) :\n          getLiteralFactory(this.constantPool, literal, this.allocatePureFunctionSlots);\n    });\n  }\n}\n\n// Pipes always have at least one parameter, the value they operate on\nconst pipeBindingIdentifiers = [R3.pipeBind1, R3.pipeBind2, R3.pipeBind3, R3.pipeBind4];\n\nfunction pipeBindingCallInfo(args: o.Expression[]) {\n  const identifier = pipeBindingIdentifiers[args.length];\n  return {\n    identifier: identifier || R3.pipeBindV,\n    isVarLength: !identifier,\n  };\n}\n\nconst pureFunctionIdentifiers = [\n  R3.pureFunction0, R3.pureFunction1, R3.pureFunction2, R3.pureFunction3, R3.pureFunction4,\n  R3.pureFunction5, R3.pureFunction6, R3.pureFunction7, R3.pureFunction8\n];\n\nfunction pureFunctionCallInfo(args: o.Expression[]) {\n  const identifier = pureFunctionIdentifiers[args.length];\n  return {\n    identifier: identifier || R3.pureFunctionV,\n    isVarLength: !identifier,\n  };\n}\n\nfunction getLiteralFactory(\n    constantPool: ConstantPool, literal: o.LiteralArrayExpr | o.LiteralMapExpr,\n    allocateSlots: (numSlots: number) => number): o.Expression {\n  const {literalFactory, literalFactoryArguments} = constantPool.getLiteralFactory(literal);\n  // Allocate 1 slot for the result plus 1 per argument\n  const startSlot = allocateSlots(1 + literalFactoryArguments.length);\n  literalFactoryArguments.length > 0 || error(`Expected arguments to a literal factory function`);\n  const {identifier, isVarLength} = pureFunctionCallInfo(literalFactoryArguments);\n\n  // Literal factories are pure functions that only need to be re-invoked when the parameters\n  // change.\n  const args = [\n    o.literal(startSlot),\n    literalFactory,\n  ];\n\n  if (isVarLength) {\n    args.push(o.literalArr(literalFactoryArguments));\n  } else {\n    args.push(...literalFactoryArguments);\n  }\n\n  return o.importExpr(identifier).callFn(args);\n}\n\n/**\n * Function which is executed whenever a variable is referenced for the first time in a given\n * scope.\n *\n * It is expected that the function creates the `const localName = expression`; statement.\n */\nexport type DeclareLocalVarCallback = (lhsVar: o.ReadVarExpr, rhsExpression: o.Expression) => void;\n\nexport class BindingScope implements LocalResolver {\n  /**\n   * Keeps a map from local variables to their expressions.\n   *\n   * This is used when one refers to variable such as: 'let abc = a.b.c`.\n   * - key to the map is the string literal `\"abc\"`.\n   * - value `lhs` is the left hand side which is an AST representing `abc`.\n   * - value `rhs` is the right hand side which is an AST representing `a.b.c`.\n   * - value `declared` is true if the `declareLocalVarCallback` has been called for this scope\n   * already.\n   */\n  private map = new Map < string, {\n    lhs: o.ReadVarExpr;\n    rhs: o.Expression|undefined;\n    declared: boolean;\n  }\n  > ();\n\n  private referenceNameIndex = 0;\n  private static _ROOT_SCOPE: BindingScope;\n\n  static get ROOT_SCOPE(): BindingScope {\n    if (!BindingScope._ROOT_SCOPE) {\n      BindingScope._ROOT_SCOPE = new BindingScope().set('$event', o.variable('$event'));\n    }\n    return BindingScope._ROOT_SCOPE;\n  }\n\n  private constructor(\n      private parent: BindingScope|null = null,\n      private declareLocalVarCallback: DeclareLocalVarCallback = noop) {}\n\n  get(name: string): o.Expression|null {\n    let current: BindingScope|null = this;\n    while (current) {\n      let value = current.map.get(name);\n      if (value != null) {\n        if (current !== this) {\n          // make a local copy and reset the `declared` state.\n          value = {lhs: value.lhs, rhs: value.rhs, declared: false};\n          // Cache the value locally.\n          this.map.set(name, value);\n        }\n        if (value.rhs && !value.declared) {\n          // if it is first time we are referencing the variable in the scope\n          // than invoke the callback to insert variable declaration.\n          this.declareLocalVarCallback(value.lhs, value.rhs);\n          value.declared = true;\n        }\n        return value.lhs;\n      }\n      current = current.parent;\n    }\n    return null;\n  }\n\n  /**\n   * Create a local variable for later reference.\n   *\n   * @param name Name of the variable.\n   * @param lhs AST representing the left hand side of the `let lhs = rhs;`.\n   * @param rhs AST representing the right hand side of the `let lhs = rhs;`. The `rhs` can be\n   * `undefined` for variable that are ambient such as `$event` and which don't have `rhs`\n   * declaration.\n   */\n  set(name: string, lhs: o.ReadVarExpr, rhs?: o.Expression): BindingScope {\n    !this.map.has(name) ||\n        error(`The name ${name} is already defined in scope to be ${this.map.get(name)}`);\n    this.map.set(name, {lhs: lhs, rhs: rhs, declared: false});\n    return this;\n  }\n\n  getLocal(name: string): (o.Expression|null) { return this.get(name); }\n\n  nestedScope(declareCallback: DeclareLocalVarCallback): BindingScope {\n    return new BindingScope(this, declareCallback);\n  }\n\n  freshReferenceName(): string {\n    let current: BindingScope = this;\n    // Find the top scope as it maintains the global reference count\n    while (current.parent) current = current.parent;\n    const ref = `${REFERENCE_PREFIX}${current.referenceNameIndex++}`;\n    return ref;\n  }\n}\n\n/**\n * Creates a `CssSelector` given a tag name and a map of attributes\n */\nfunction createCssSelector(tag: string, attributes: {[name: string]: string}): CssSelector {\n  const cssSelector = new CssSelector();\n\n  cssSelector.setElement(tag);\n\n  Object.getOwnPropertyNames(attributes).forEach((name) => {\n    const value = attributes[name];\n\n    cssSelector.addAttribute(name, value);\n    if (name.toLowerCase() === 'class') {\n      const classes = value.trim().split(/\\s+/g);\n      classes.forEach(className => cssSelector.addClassName(className));\n    }\n  });\n\n  return cssSelector;\n}\n\n// Parse i18n metas like:\n// - \"@@id\",\n// - \"description[@@id]\",\n// - \"meaning|description[@@id]\"\nfunction parseI18nMeta(i18n?: string): {description?: string, id?: string, meaning?: string} {\n  let meaning: string|undefined;\n  let description: string|undefined;\n  let id: string|undefined;\n\n  if (i18n) {\n    // TODO(vicb): figure out how to force a message ID with closure ?\n    const idIndex = i18n.indexOf(ID_SEPARATOR);\n\n    const descIndex = i18n.indexOf(MEANING_SEPARATOR);\n    let meaningAndDesc: string;\n    [meaningAndDesc, id] =\n        (idIndex > -1) ? [i18n.slice(0, idIndex), i18n.slice(idIndex + 2)] : [i18n, ''];\n    [meaning, description] = (descIndex > -1) ?\n        [meaningAndDesc.slice(0, descIndex), meaningAndDesc.slice(descIndex + 1)] :\n        ['', meaningAndDesc];\n  }\n\n  return {description, id, meaning};\n}\n\nfunction interpolate(args: o.Expression[]): o.Expression {\n  args = args.slice(1);  // Ignore the length prefix added for render2\n  switch (args.length) {\n    case 3:\n      return o.importExpr(R3.interpolation1).callFn(args);\n    case 5:\n      return o.importExpr(R3.interpolation2).callFn(args);\n    case 7:\n      return o.importExpr(R3.interpolation3).callFn(args);\n    case 9:\n      return o.importExpr(R3.interpolation4).callFn(args);\n    case 11:\n      return o.importExpr(R3.interpolation5).callFn(args);\n    case 13:\n      return o.importExpr(R3.interpolation6).callFn(args);\n    case 15:\n      return o.importExpr(R3.interpolation7).callFn(args);\n    case 17:\n      return o.importExpr(R3.interpolation8).callFn(args);\n  }\n  (args.length >= 19 && args.length % 2 == 1) ||\n      error(`Invalid interpolation argument length ${args.length}`);\n  return o.importExpr(R3.interpolationV).callFn([o.literalArr(args)]);\n}\n\n/**\n * Parse a template into render3 `Node`s and additional metadata, with no other dependencies.\n *\n * @param template text of the template to parse\n * @param templateUrl URL to use for source mapping of the parsed template\n */\nexport function parseTemplate(\n    template: string, templateUrl: string, options: {preserveWhitespaces?: boolean} = {}):\n    {errors?: ParseError[], nodes: t.Node[], hasNgContent: boolean, ngContentSelectors: string[]} {\n  const bindingParser = makeBindingParser();\n  const htmlParser = new HtmlParser();\n  const parseResult = htmlParser.parse(template, templateUrl);\n\n  if (parseResult.errors && parseResult.errors.length > 0) {\n    return {errors: parseResult.errors, nodes: [], hasNgContent: false, ngContentSelectors: []};\n  }\n\n  let rootNodes: html.Node[] = parseResult.rootNodes;\n  if (!options.preserveWhitespaces) {\n    rootNodes = html.visitAll(new WhitespaceVisitor(), rootNodes);\n  }\n\n  const {nodes, hasNgContent, ngContentSelectors, errors} =\n      htmlAstToRender3Ast(rootNodes, bindingParser);\n  if (errors && errors.length > 0) {\n    return {errors, nodes: [], hasNgContent: false, ngContentSelectors: []};\n  }\n\n  return {nodes, hasNgContent, ngContentSelectors};\n}\n\n/**\n * Construct a `BindingParser` with a default configuration.\n */\nexport function makeBindingParser(): BindingParser {\n  return new BindingParser(\n      new Parser(new Lexer()), DEFAULT_INTERPOLATION_CONFIG, new DomElementSchemaRegistry(), null,\n      []);\n}\n\nfunction isClassBinding(input: t.BoundAttribute): boolean {\n  return input.name == 'className' || input.name == 'class';\n}\n\nfunction resolveSanitizationFn(input: t.BoundAttribute, context: core.SecurityContext) {\n  switch (context) {\n    case core.SecurityContext.HTML:\n      return o.importExpr(R3.sanitizeHtml);\n    case core.SecurityContext.SCRIPT:\n      return o.importExpr(R3.sanitizeScript);\n    case core.SecurityContext.STYLE:\n      // the compiler does not fill in an instruction for [style.prop?] binding\n      // values because the style algorithm knows internally what props are subject\n      // to sanitization (only [attr.style] values are explicitly sanitized)\n      return input.type === BindingType.Attribute ? o.importExpr(R3.sanitizeStyle) : null;\n    case core.SecurityContext.URL:\n      return o.importExpr(R3.sanitizeUrl);\n    case core.SecurityContext.RESOURCE_URL:\n      return o.importExpr(R3.sanitizeResourceUrl);\n    default:\n      return null;\n  }\n}\n\nfunction isStyleSanitizable(prop: string): boolean {\n  switch (prop) {\n    case 'background-image':\n    case 'background':\n    case 'border-image':\n    case 'filter':\n    case 'list-style':\n    case 'list-style-image':\n      return true;\n  }\n  return false;\n}\n"],"sourceRoot":""}