Liferay.Loader.define('@example-angular-liferay$angular/compiler@6.1.10/esm2015/src/render3/r3_module_factory_compiler', ['module', 'exports', 'require'], function (module, exports, require) {
    var define = undefined;
    /**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */
    import { identifierName } from '../compile_metadata';
    import * as o from '../output/output_ast';
    import { Identifiers as R3 } from './r3_identifiers';
    /**
     * Write a Renderer2 compatibility module factory to the output context.
     */
    export function compileModuleFactory(outputCtx, module, backPatchReferenceOf, resolver) {
        const ngModuleFactoryVar = `${identifierName(module.type)}NgFactory`;
        const parentInjector = 'parentInjector';
        const createFunction = o.fn([new o.FnParam(parentInjector, o.DYNAMIC_TYPE)], [new o.IfStmt(o.THIS_EXPR.prop(R3.PATCH_DEPS).notIdentical(o.literal(true, o.INFERRED_TYPE)), [o.THIS_EXPR.prop(R3.PATCH_DEPS).set(o.literal(true, o.INFERRED_TYPE)).toStmt(), backPatchReferenceOf(module.type).callFn([]).toStmt()])], o.INFERRED_TYPE, null, `${ngModuleFactoryVar}_Create`);
        const moduleFactoryLiteral = o.literalMap([{ key: 'moduleType', value: outputCtx.importExpr(module.type.reference), quoted: false }, { key: 'create', value: createFunction, quoted: false }]);
        outputCtx.statements.push(o.variable(ngModuleFactoryVar).set(moduleFactoryLiteral).toDeclStmt(o.DYNAMIC_TYPE, [o.StmtModifier.Exported, o.StmtModifier.Final]));
    }
});
//# sourceMappingURL=r3_module_factory_compiler.js.map