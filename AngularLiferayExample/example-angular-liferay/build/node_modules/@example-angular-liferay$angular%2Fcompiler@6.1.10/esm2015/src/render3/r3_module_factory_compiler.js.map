{"version":3,"sources":["../../../../../../../packages/compiler/src/render3/r3_module_factory_compiler.ts"],"names":[],"mappings":";;;;;;;;;AAQA,aAAsD,cAAtD,QAA2E,qBAA3E;AAEA,WAAO,KAAK,CAAZ,MAAmB,sBAAnB;AAGA,aAAQ,eAAe,EAAvB,QAAgC,kBAAhC;AAEA;;;AAGA,WAAM,SAAA,oBAAA,CACF,SADE,EACwB,MADxB,EAEF,oBAFE,EAGF,QAHE,EAG+B;AACnC,cAAM,qBAAqB,GAAG,eAAe,OAAO,IAAtB,CAA2B,WAAzD;AAEA,cAAM,iBAAiB,gBAAvB;AACA,cAAM,iBAAiB,EAAE,EAAF,CACnB,CAAC,IAAI,EAAE,OAAN,CAAc,cAAd,EAA8B,EAAE,YAAhC,CAAD,CADmB,EAEnB,CAAC,IAAI,EAAE,MAAN,CACG,EAAE,SAAF,CAAY,IAAZ,CAAiB,GAAG,UAApB,EAAgC,YAAhC,CAA6C,EAAE,OAAF,CAAU,IAAV,EAAgB,EAAE,aAAlB,CAA7C,CADH,EAEG,CACE,EAAE,SAAF,CAAY,IAAZ,CAAiB,GAAG,UAApB,EAAgC,GAAhC,CAAoC,EAAE,OAAF,CAAU,IAAV,EAAgB,EAAE,aAAlB,CAApC,EAAsE,MAAtE,EADF,EAEE,qBAAqB,OAAO,IAA5B,EAAkC,MAAlC,CAAyC,EAAzC,EAA6C,MAA7C,EAFF,CAFH,CAAD,CAFmB,EAQnB,EAAE,aARiB,EAQF,IARE,EAQI,GAAG,kBAAkB,SARzB,CAAvB;AAUA,cAAM,uBAAuB,EAAE,UAAF,CAAa,CACxC,EAAC,KAAK,YAAN,EAAoB,OAAO,UAAU,UAAV,CAAqB,OAAO,IAAP,CAAY,SAAjC,CAA3B,EAAwE,QAAQ,KAAhF,EADwC,EAExC,EAAC,KAAK,QAAN,EAAgB,OAAO,cAAvB,EAAuC,QAAQ,KAA/C,EAFwC,CAAb,CAA7B;AAKA,kBAAU,UAAV,CAAqB,IAArB,CACI,EAAE,QAAF,CAAW,kBAAX,EAA+B,GAA/B,CAAmC,oBAAnC,EAAyD,UAAzD,CAAoE,EAAE,YAAtE,EAAoF,CAClF,EAAE,YAAF,CAAe,QADmE,EACzD,EAAE,YAAF,CAAe,KAD0C,CAApF,CADJ;AAID","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CompileNgModuleMetadata, CompileTypeMetadata, identifierName} from '../compile_metadata';\nimport {CompileMetadataResolver} from '../metadata_resolver';\nimport * as o from '../output/output_ast';\nimport {OutputContext} from '../util';\n\nimport {Identifiers as R3} from './r3_identifiers';\n\n/**\n * Write a Renderer2 compatibility module factory to the output context.\n */\nexport function compileModuleFactory(\n    outputCtx: OutputContext, module: CompileNgModuleMetadata,\n    backPatchReferenceOf: (module: CompileTypeMetadata) => o.Expression,\n    resolver: CompileMetadataResolver) {\n  const ngModuleFactoryVar = `${identifierName(module.type)}NgFactory`;\n\n  const parentInjector = 'parentInjector';\n  const createFunction = o.fn(\n      [new o.FnParam(parentInjector, o.DYNAMIC_TYPE)],\n      [new o.IfStmt(\n          o.THIS_EXPR.prop(R3.PATCH_DEPS).notIdentical(o.literal(true, o.INFERRED_TYPE)),\n          [\n            o.THIS_EXPR.prop(R3.PATCH_DEPS).set(o.literal(true, o.INFERRED_TYPE)).toStmt(),\n            backPatchReferenceOf(module.type).callFn([]).toStmt()\n          ])],\n      o.INFERRED_TYPE, null, `${ngModuleFactoryVar}_Create`);\n\n  const moduleFactoryLiteral = o.literalMap([\n    {key: 'moduleType', value: outputCtx.importExpr(module.type.reference), quoted: false},\n    {key: 'create', value: createFunction, quoted: false}\n  ]);\n\n  outputCtx.statements.push(\n      o.variable(ngModuleFactoryVar).set(moduleFactoryLiteral).toDeclStmt(o.DYNAMIC_TYPE, [\n        o.StmtModifier.Exported, o.StmtModifier.Final\n      ]));\n}\n"],"sourceRoot":""}