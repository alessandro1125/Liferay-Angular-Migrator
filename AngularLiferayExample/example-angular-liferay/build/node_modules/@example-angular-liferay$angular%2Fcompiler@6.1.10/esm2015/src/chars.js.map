{"version":3,"sources":["../../../../../../packages/compiler/src/chars.ts"],"names":[],"mappings":";;;;;;;;;AAQA,WAAO,MAAM,OAAO,CAAb;AACP,WAAO,MAAM,OAAO,CAAb;AACP,WAAO,MAAM,MAAM,EAAZ;AACP,WAAO,MAAM,QAAQ,EAAd;AACP,WAAO,MAAM,MAAM,EAAZ;AACP,WAAO,MAAM,MAAM,EAAZ;AACP,WAAO,MAAM,SAAS,EAAf;AACP,WAAO,MAAM,QAAQ,EAAd;AACP,WAAO,MAAM,MAAM,EAAZ;AACP,WAAO,MAAM,QAAQ,EAAd;AACP,WAAO,MAAM,KAAK,EAAX;AACP,WAAO,MAAM,WAAW,EAAjB;AACP,WAAO,MAAM,aAAa,EAAnB;AACP,WAAO,MAAM,MAAM,EAAZ;AACP,WAAO,MAAM,UAAU,EAAhB;AACP,WAAO,MAAM,UAAU,EAAhB;AACP,WAAO,MAAM,QAAQ,EAAd;AACP,WAAO,MAAM,QAAQ,EAAd;AACP,WAAO,MAAM,SAAS,EAAf;AACP,WAAO,MAAM,SAAS,EAAf;AACP,WAAO,MAAM,UAAU,EAAhB;AACP,WAAO,MAAM,SAAS,EAAf;AACP,WAAO,MAAM,SAAS,EAAf;AACP,WAAO,MAAM,aAAa,EAAnB;AACP,WAAO,MAAM,MAAM,EAAZ;AACP,WAAO,MAAM,MAAM,EAAZ;AACP,WAAO,MAAM,MAAM,EAAZ;AACP,WAAO,MAAM,YAAY,EAAlB;AAEP,WAAO,MAAM,KAAK,EAAX;AACP,WAAO,MAAM,KAAK,EAAX;AAEP,WAAO,MAAM,KAAK,EAAX;AACP,WAAO,MAAM,KAAK,EAAX;AACP,WAAO,MAAM,KAAK,EAAX;AACP,WAAO,MAAM,KAAK,EAAX;AACP,WAAO,MAAM,KAAK,EAAX;AAEP,WAAO,MAAM,YAAY,EAAlB;AACP,WAAO,MAAM,aAAa,EAAnB;AACP,WAAO,MAAM,YAAY,EAAlB;AACP,WAAO,MAAM,SAAS,EAAf;AACP,WAAO,MAAM,KAAK,EAAX;AAEP,WAAO,MAAM,KAAK,EAAX;AACP,WAAO,MAAM,KAAK,GAAX;AACP,WAAO,MAAM,KAAK,GAAX;AACP,WAAO,MAAM,KAAK,GAAX;AACP,WAAO,MAAM,KAAK,GAAX;AACP,WAAO,MAAM,KAAK,GAAX;AACP,WAAO,MAAM,KAAK,GAAX;AACP,WAAO,MAAM,KAAK,GAAX;AACP,WAAO,MAAM,KAAK,GAAX;AACP,WAAO,MAAM,KAAK,GAAX;AAEP,WAAO,MAAM,UAAU,GAAhB;AACP,WAAO,MAAM,OAAO,GAAb;AACP,WAAO,MAAM,UAAU,GAAhB;AACP,WAAO,MAAM,QAAQ,GAAd;AAEP,WAAO,MAAM,QAAQ,GAAd;AACP,WAAO,MAAM,SAAS,GAAf;AACP,WAAO,MAAM,MAAM,EAAZ;AAEP,WAAO,MAAM,MAAM,EAAZ;AAEP,WAAM,SAAA,YAAA,CAAuB,IAAvB,EAAmC;AACvC,eAAQ,QAAQ,IAAR,IAAgB,QAAQ,MAAzB,IAAqC,QAAQ,KAApD;AACD;AAED,WAAM,SAAA,OAAA,CAAkB,IAAlB,EAA8B;AAClC,eAAO,MAAM,IAAN,IAAc,QAAQ,EAA7B;AACD;AAED,WAAM,SAAA,aAAA,CAAwB,IAAxB,EAAoC;AACxC,eAAO,QAAQ,EAAR,IAAc,QAAQ,EAAtB,IAA4B,QAAQ,EAAR,IAAc,QAAQ,EAAzD;AACD;AAED,WAAM,SAAA,eAAA,CAA0B,IAA1B,EAAsC;AAC1C,eAAO,QAAQ,EAAR,IAAc,QAAQ,EAAtB,IAA4B,QAAQ,EAAR,IAAc,QAAQ,EAAlD,IAAwD,QAAQ,IAAR,CAA/D;AACD","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport const $EOF = 0;\nexport const $TAB = 9;\nexport const $LF = 10;\nexport const $VTAB = 11;\nexport const $FF = 12;\nexport const $CR = 13;\nexport const $SPACE = 32;\nexport const $BANG = 33;\nexport const $DQ = 34;\nexport const $HASH = 35;\nexport const $$ = 36;\nexport const $PERCENT = 37;\nexport const $AMPERSAND = 38;\nexport const $SQ = 39;\nexport const $LPAREN = 40;\nexport const $RPAREN = 41;\nexport const $STAR = 42;\nexport const $PLUS = 43;\nexport const $COMMA = 44;\nexport const $MINUS = 45;\nexport const $PERIOD = 46;\nexport const $SLASH = 47;\nexport const $COLON = 58;\nexport const $SEMICOLON = 59;\nexport const $LT = 60;\nexport const $EQ = 61;\nexport const $GT = 62;\nexport const $QUESTION = 63;\n\nexport const $0 = 48;\nexport const $9 = 57;\n\nexport const $A = 65;\nexport const $E = 69;\nexport const $F = 70;\nexport const $X = 88;\nexport const $Z = 90;\n\nexport const $LBRACKET = 91;\nexport const $BACKSLASH = 92;\nexport const $RBRACKET = 93;\nexport const $CARET = 94;\nexport const $_ = 95;\n\nexport const $a = 97;\nexport const $e = 101;\nexport const $f = 102;\nexport const $n = 110;\nexport const $r = 114;\nexport const $t = 116;\nexport const $u = 117;\nexport const $v = 118;\nexport const $x = 120;\nexport const $z = 122;\n\nexport const $LBRACE = 123;\nexport const $BAR = 124;\nexport const $RBRACE = 125;\nexport const $NBSP = 160;\n\nexport const $PIPE = 124;\nexport const $TILDA = 126;\nexport const $AT = 64;\n\nexport const $BT = 96;\n\nexport function isWhitespace(code: number): boolean {\n  return (code >= $TAB && code <= $SPACE) || (code == $NBSP);\n}\n\nexport function isDigit(code: number): boolean {\n  return $0 <= code && code <= $9;\n}\n\nexport function isAsciiLetter(code: number): boolean {\n  return code >= $a && code <= $z || code >= $A && code <= $Z;\n}\n\nexport function isAsciiHexDigit(code: number): boolean {\n  return code >= $a && code <= $f || code >= $A && code <= $F || isDigit(code);\n}\n"],"sourceRoot":""}