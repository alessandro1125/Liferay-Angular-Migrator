{"version":3,"sources":["../../../../../../../packages/compiler/src/css_parser/css_ast.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ParseLocation, ParseSourceSpan} from '../parse_util';\n\nimport {CssToken, CssTokenType} from './css_lexer';\n\nexport enum BlockType {\n  Import,\n  Charset,\n  Namespace,\n  Supports,\n  Keyframes,\n  MediaQuery,\n  Selector,\n  FontFace,\n  Page,\n  Document,\n  Viewport,\n  Unsupported\n}\n\nexport interface CssAstVisitor {\n  visitCssValue(ast: CssStyleValueAst, context?: any): any;\n  visitCssInlineRule(ast: CssInlineRuleAst, context?: any): any;\n  visitCssAtRulePredicate(ast: CssAtRulePredicateAst, context?: any): any;\n  visitCssKeyframeRule(ast: CssKeyframeRuleAst, context?: any): any;\n  visitCssKeyframeDefinition(ast: CssKeyframeDefinitionAst, context?: any): any;\n  visitCssMediaQueryRule(ast: CssMediaQueryRuleAst, context?: any): any;\n  visitCssSelectorRule(ast: CssSelectorRuleAst, context?: any): any;\n  visitCssSelector(ast: CssSelectorAst, context?: any): any;\n  visitCssSimpleSelector(ast: CssSimpleSelectorAst, context?: any): any;\n  visitCssPseudoSelector(ast: CssPseudoSelectorAst, context?: any): any;\n  visitCssDefinition(ast: CssDefinitionAst, context?: any): any;\n  visitCssBlock(ast: CssBlockAst, context?: any): any;\n  visitCssStylesBlock(ast: CssStylesBlockAst, context?: any): any;\n  visitCssStyleSheet(ast: CssStyleSheetAst, context?: any): any;\n  visitCssUnknownRule(ast: CssUnknownRuleAst, context?: any): any;\n  visitCssUnknownTokenList(ast: CssUnknownTokenListAst, context?: any): any;\n}\n\nexport abstract class CssAst {\n  constructor(public location: ParseSourceSpan) {}\n  get start(): ParseLocation { return this.location.start; }\n  get end(): ParseLocation { return this.location.end; }\n  abstract visit(visitor: CssAstVisitor, context?: any): any;\n}\n\nexport class CssStyleValueAst extends CssAst {\n  constructor(location: ParseSourceSpan, public tokens: CssToken[], public strValue: string) {\n    super(location);\n  }\n  visit(visitor: CssAstVisitor, context?: any): any { return visitor.visitCssValue(this); }\n}\n\nexport abstract class CssRuleAst extends CssAst {\n  constructor(location: ParseSourceSpan) { super(location); }\n}\n\nexport class CssBlockRuleAst extends CssRuleAst {\n  constructor(\n      public location: ParseSourceSpan, public type: BlockType, public block: CssBlockAst,\n      public name: CssToken|null = null) {\n    super(location);\n  }\n  visit(visitor: CssAstVisitor, context?: any): any {\n    return visitor.visitCssBlock(this.block, context);\n  }\n}\n\nexport class CssKeyframeRuleAst extends CssBlockRuleAst {\n  constructor(location: ParseSourceSpan, name: CssToken, block: CssBlockAst) {\n    super(location, BlockType.Keyframes, block, name);\n  }\n  visit(visitor: CssAstVisitor, context?: any): any {\n    return visitor.visitCssKeyframeRule(this, context);\n  }\n}\n\nexport class CssKeyframeDefinitionAst extends CssBlockRuleAst {\n  constructor(location: ParseSourceSpan, public steps: CssToken[], block: CssBlockAst) {\n    super(location, BlockType.Keyframes, block, mergeTokens(steps, ','));\n  }\n  visit(visitor: CssAstVisitor, context?: any): any {\n    return visitor.visitCssKeyframeDefinition(this, context);\n  }\n}\n\nexport class CssBlockDefinitionRuleAst extends CssBlockRuleAst {\n  constructor(\n      location: ParseSourceSpan, public strValue: string, type: BlockType,\n      public query: CssAtRulePredicateAst, block: CssBlockAst) {\n    super(location, type, block);\n    const firstCssToken: CssToken = query.tokens[0];\n    this.name = new CssToken(\n        firstCssToken.index, firstCssToken.column, firstCssToken.line, CssTokenType.Identifier,\n        this.strValue);\n  }\n  visit(visitor: CssAstVisitor, context?: any): any {\n    return visitor.visitCssBlock(this.block, context);\n  }\n}\n\nexport class CssMediaQueryRuleAst extends CssBlockDefinitionRuleAst {\n  constructor(\n      location: ParseSourceSpan, strValue: string, query: CssAtRulePredicateAst,\n      block: CssBlockAst) {\n    super(location, strValue, BlockType.MediaQuery, query, block);\n  }\n  visit(visitor: CssAstVisitor, context?: any): any {\n    return visitor.visitCssMediaQueryRule(this, context);\n  }\n}\n\nexport class CssAtRulePredicateAst extends CssAst {\n  constructor(location: ParseSourceSpan, public strValue: string, public tokens: CssToken[]) {\n    super(location);\n  }\n  visit(visitor: CssAstVisitor, context?: any): any {\n    return visitor.visitCssAtRulePredicate(this, context);\n  }\n}\n\nexport class CssInlineRuleAst extends CssRuleAst {\n  constructor(location: ParseSourceSpan, public type: BlockType, public value: CssStyleValueAst) {\n    super(location);\n  }\n  visit(visitor: CssAstVisitor, context?: any): any {\n    return visitor.visitCssInlineRule(this, context);\n  }\n}\n\nexport class CssSelectorRuleAst extends CssBlockRuleAst {\n  public strValue: string;\n\n  constructor(location: ParseSourceSpan, public selectors: CssSelectorAst[], block: CssBlockAst) {\n    super(location, BlockType.Selector, block);\n    this.strValue = selectors.map(selector => selector.strValue).join(',');\n  }\n  visit(visitor: CssAstVisitor, context?: any): any {\n    return visitor.visitCssSelectorRule(this, context);\n  }\n}\n\nexport class CssDefinitionAst extends CssAst {\n  constructor(\n      location: ParseSourceSpan, public property: CssToken, public value: CssStyleValueAst) {\n    super(location);\n  }\n  visit(visitor: CssAstVisitor, context?: any): any {\n    return visitor.visitCssDefinition(this, context);\n  }\n}\n\nexport abstract class CssSelectorPartAst extends CssAst {\n  constructor(location: ParseSourceSpan) { super(location); }\n}\n\nexport class CssSelectorAst extends CssSelectorPartAst {\n  public strValue: string;\n  constructor(location: ParseSourceSpan, public selectorParts: CssSimpleSelectorAst[]) {\n    super(location);\n    this.strValue = selectorParts.map(part => part.strValue).join('');\n  }\n  visit(visitor: CssAstVisitor, context?: any): any {\n    return visitor.visitCssSelector(this, context);\n  }\n}\n\nexport class CssSimpleSelectorAst extends CssSelectorPartAst {\n  constructor(\n      location: ParseSourceSpan, public tokens: CssToken[], public strValue: string,\n      public pseudoSelectors: CssPseudoSelectorAst[], public operator: CssToken) {\n    super(location);\n  }\n  visit(visitor: CssAstVisitor, context?: any): any {\n    return visitor.visitCssSimpleSelector(this, context);\n  }\n}\n\nexport class CssPseudoSelectorAst extends CssSelectorPartAst {\n  constructor(\n      location: ParseSourceSpan, public strValue: string, public name: string,\n      public tokens: CssToken[], public innerSelectors: CssSelectorAst[]) {\n    super(location);\n  }\n  visit(visitor: CssAstVisitor, context?: any): any {\n    return visitor.visitCssPseudoSelector(this, context);\n  }\n}\n\nexport class CssBlockAst extends CssAst {\n  constructor(location: ParseSourceSpan, public entries: CssAst[]) { super(location); }\n  visit(visitor: CssAstVisitor, context?: any): any { return visitor.visitCssBlock(this, context); }\n}\n\n/*\n a style block is different from a standard block because it contains\n css prop:value definitions. A regular block can contain a list of Ast entries.\n */\nexport class CssStylesBlockAst extends CssBlockAst {\n  constructor(location: ParseSourceSpan, public definitions: CssDefinitionAst[]) {\n    super(location, definitions);\n  }\n  visit(visitor: CssAstVisitor, context?: any): any {\n    return visitor.visitCssStylesBlock(this, context);\n  }\n}\n\nexport class CssStyleSheetAst extends CssAst {\n  constructor(location: ParseSourceSpan, public rules: CssAst[]) { super(location); }\n  visit(visitor: CssAstVisitor, context?: any): any {\n    return visitor.visitCssStyleSheet(this, context);\n  }\n}\n\nexport class CssUnknownRuleAst extends CssRuleAst {\n  constructor(location: ParseSourceSpan, public ruleName: string, public tokens: CssToken[]) {\n    super(location);\n  }\n  visit(visitor: CssAstVisitor, context?: any): any {\n    return visitor.visitCssUnknownRule(this, context);\n  }\n}\n\nexport class CssUnknownTokenListAst extends CssRuleAst {\n  constructor(location: ParseSourceSpan, public name: string, public tokens: CssToken[]) {\n    super(location);\n  }\n  visit(visitor: CssAstVisitor, context?: any): any {\n    return visitor.visitCssUnknownTokenList(this, context);\n  }\n}\n\nexport function mergeTokens(tokens: CssToken[], separator: string = ''): CssToken {\n  const mainToken = tokens[0];\n  let str = mainToken.strValue;\n  for (let i = 1; i < tokens.length; i++) {\n    str += separator + tokens[i].strValue;\n  }\n\n  return new CssToken(mainToken.index, mainToken.column, mainToken.line, mainToken.type, str);\n}\n"],"sourceRoot":""}