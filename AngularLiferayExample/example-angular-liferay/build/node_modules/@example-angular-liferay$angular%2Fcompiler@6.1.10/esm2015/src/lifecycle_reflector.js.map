{"version":3,"sources":["../../../../../../packages/compiler/src/lifecycle_reflector.ts"],"names":[],"mappings":";;;;;;;;;AAUA,WAAA,IAAY,cAAZ;AAAA,KAAA,UAAY,cAAZ,EAA0B;AACxB,uBAAA,eAAA,QAAA,IAAA,CAAA,IAAA,QAAA;AACA,uBAAA,eAAA,WAAA,IAAA,CAAA,IAAA,WAAA;AACA,uBAAA,eAAA,SAAA,IAAA,CAAA,IAAA,SAAA;AACA,uBAAA,eAAA,WAAA,IAAA,CAAA,IAAA,WAAA;AACA,uBAAA,eAAA,kBAAA,IAAA,CAAA,IAAA,kBAAA;AACA,uBAAA,eAAA,qBAAA,IAAA,CAAA,IAAA,qBAAA;AACA,uBAAA,eAAA,eAAA,IAAA,CAAA,IAAA,eAAA;AACA,uBAAA,eAAA,kBAAA,IAAA,CAAA,IAAA,kBAAA;AACD,KATD,EAAY,mBAAA,iBAAc,EAAd,CAAZ;AAWA,WAAO,MAAM,yBAAyB,CACpC,eAAe,MADqB,EACb,eAAe,SADF,EACa,eAAe,OAD5B,EACqC,eAAe,SADpD,EAEpC,eAAe,gBAFqB,EAEH,eAAe,mBAFZ,EAEiC,eAAe,aAFhD,EAGpC,eAAe,gBAHqB,CAA/B;AAMP,WAAM,SAAA,gBAAA,CACF,SADE,EAC2B,IAD3B,EACiD,KADjD,EAC2D;AAC/D,eAAO,UAAU,gBAAV,CAA2B,KAA3B,EAAkC,YAAY,IAAZ,CAAlC,CAAP;AACD;AAED,WAAM,SAAA,oBAAA,CAA+B,SAA/B,EAA4D,KAA5D,EAAsE;AAC1E,eAAO,uBAAuB,MAAvB,CAA8B,QAAQ,iBAAiB,SAAjB,EAA4B,IAA5B,EAAkC,KAAlC,CAAtC,CAAP;AACD;AAED,aAAA,WAAA,CAAqB,IAArB,EAAyC;AACvC,gBAAQ,IAAR;AACE,iBAAK,eAAe,MAApB;AACE,uBAAO,UAAP;AACF,iBAAK,eAAe,SAApB;AACE,uBAAO,aAAP;AACF,iBAAK,eAAe,OAApB;AACE,uBAAO,WAAP;AACF,iBAAK,eAAe,SAApB;AACE,uBAAO,aAAP;AACF,iBAAK,eAAe,gBAApB;AACE,uBAAO,oBAAP;AACF,iBAAK,eAAe,mBAApB;AACE,uBAAO,uBAAP;AACF,iBAAK,eAAe,aAApB;AACE,uBAAO,iBAAP;AACF,iBAAK,eAAe,gBAApB;AACE,uBAAO,oBAAP;AAhBJ;AAkBD","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CompileReflector} from './compile_reflector';\n\nexport enum LifecycleHooks {\n  OnInit,\n  OnDestroy,\n  DoCheck,\n  OnChanges,\n  AfterContentInit,\n  AfterContentChecked,\n  AfterViewInit,\n  AfterViewChecked\n}\n\nexport const LIFECYCLE_HOOKS_VALUES = [\n  LifecycleHooks.OnInit, LifecycleHooks.OnDestroy, LifecycleHooks.DoCheck, LifecycleHooks.OnChanges,\n  LifecycleHooks.AfterContentInit, LifecycleHooks.AfterContentChecked, LifecycleHooks.AfterViewInit,\n  LifecycleHooks.AfterViewChecked\n];\n\nexport function hasLifecycleHook(\n    reflector: CompileReflector, hook: LifecycleHooks, token: any): boolean {\n  return reflector.hasLifecycleHook(token, getHookName(hook));\n}\n\nexport function getAllLifecycleHooks(reflector: CompileReflector, token: any): LifecycleHooks[] {\n  return LIFECYCLE_HOOKS_VALUES.filter(hook => hasLifecycleHook(reflector, hook, token));\n}\n\nfunction getHookName(hook: LifecycleHooks): string {\n  switch (hook) {\n    case LifecycleHooks.OnInit:\n      return 'ngOnInit';\n    case LifecycleHooks.OnDestroy:\n      return 'ngOnDestroy';\n    case LifecycleHooks.DoCheck:\n      return 'ngDoCheck';\n    case LifecycleHooks.OnChanges:\n      return 'ngOnChanges';\n    case LifecycleHooks.AfterContentInit:\n      return 'ngAfterContentInit';\n    case LifecycleHooks.AfterContentChecked:\n      return 'ngAfterContentChecked';\n    case LifecycleHooks.AfterViewInit:\n      return 'ngAfterViewInit';\n    case LifecycleHooks.AfterViewChecked:\n      return 'ngAfterViewChecked';\n  }\n}\n"],"sourceRoot":""}