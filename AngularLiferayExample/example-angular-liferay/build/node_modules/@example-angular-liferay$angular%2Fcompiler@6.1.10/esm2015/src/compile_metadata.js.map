{"version":3,"sources":["../../../../../../packages/compiler/src/compile_metadata.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {StaticSymbol} from './aot/static_symbol';\nimport {ChangeDetectionStrategy, SchemaMetadata, Type, ViewEncapsulation} from './core';\nimport {LifecycleHooks} from './lifecycle_reflector';\nimport {ParseTreeResult as HtmlParseTreeResult} from './ml_parser/parser';\nimport {splitAtColon, stringify} from './util';\n\n// group 0: \"[prop] or (event) or @trigger\"\n// group 1: \"prop\" from \"[prop]\"\n// group 2: \"event\" from \"(event)\"\n// group 3: \"@trigger\" from \"@trigger\"\nconst HOST_REG_EXP = /^(?:(?:\\[([^\\]]+)\\])|(?:\\(([^\\)]+)\\)))|(\\@[-\\w]+)$/;\n\nexport function sanitizeIdentifier(name: string): string {\n  return name.replace(/\\W/g, '_');\n}\n\nlet _anonymousTypeIndex = 0;\n\nexport function identifierName(compileIdentifier: CompileIdentifierMetadata | null | undefined):\n    string|null {\n  if (!compileIdentifier || !compileIdentifier.reference) {\n    return null;\n  }\n  const ref = compileIdentifier.reference;\n  if (ref instanceof StaticSymbol) {\n    return ref.name;\n  }\n  if (ref['__anonymousType']) {\n    return ref['__anonymousType'];\n  }\n  let identifier = stringify(ref);\n  if (identifier.indexOf('(') >= 0) {\n    // case: anonymous functions!\n    identifier = `anonymous_${_anonymousTypeIndex++}`;\n    ref['__anonymousType'] = identifier;\n  } else {\n    identifier = sanitizeIdentifier(identifier);\n  }\n  return identifier;\n}\n\nexport function identifierModuleUrl(compileIdentifier: CompileIdentifierMetadata): string {\n  const ref = compileIdentifier.reference;\n  if (ref instanceof StaticSymbol) {\n    return ref.filePath;\n  }\n  // Runtime type\n  return `./${stringify(ref)}`;\n}\n\nexport function viewClassName(compType: any, embeddedTemplateIndex: number): string {\n  return `View_${identifierName({reference: compType})}_${embeddedTemplateIndex}`;\n}\n\nexport function rendererTypeName(compType: any): string {\n  return `RenderType_${identifierName({reference: compType})}`;\n}\n\nexport function hostViewClassName(compType: any): string {\n  return `HostView_${identifierName({reference: compType})}`;\n}\n\nexport function componentFactoryName(compType: any): string {\n  return `${identifierName({reference: compType})}NgFactory`;\n}\n\nexport interface ProxyClass { setDelegate(delegate: any): void; }\n\nexport interface CompileIdentifierMetadata { reference: any; }\n\nexport enum CompileSummaryKind {\n  Pipe,\n  Directive,\n  NgModule,\n  Injectable\n}\n\n/**\n * A CompileSummary is the data needed to use a directive / pipe / module\n * in other modules / components. However, this data is not enough to compile\n * the directive / module itself.\n */\nexport interface CompileTypeSummary {\n  summaryKind: CompileSummaryKind|null;\n  type: CompileTypeMetadata;\n}\n\nexport interface CompileDiDependencyMetadata {\n  isAttribute?: boolean;\n  isSelf?: boolean;\n  isHost?: boolean;\n  isSkipSelf?: boolean;\n  isOptional?: boolean;\n  isValue?: boolean;\n  token?: CompileTokenMetadata;\n  value?: any;\n}\n\nexport interface CompileProviderMetadata {\n  token: CompileTokenMetadata;\n  useClass?: CompileTypeMetadata;\n  useValue?: any;\n  useExisting?: CompileTokenMetadata;\n  useFactory?: CompileFactoryMetadata;\n  deps?: CompileDiDependencyMetadata[];\n  multi?: boolean;\n}\n\nexport interface CompileFactoryMetadata extends CompileIdentifierMetadata {\n  diDeps: CompileDiDependencyMetadata[];\n  reference: any;\n}\n\nexport function tokenName(token: CompileTokenMetadata) {\n  return token.value != null ? sanitizeIdentifier(token.value) : identifierName(token.identifier);\n}\n\nexport function tokenReference(token: CompileTokenMetadata) {\n  if (token.identifier != null) {\n    return token.identifier.reference;\n  } else {\n    return token.value;\n  }\n}\n\nexport interface CompileTokenMetadata {\n  value?: any;\n  identifier?: CompileIdentifierMetadata|CompileTypeMetadata;\n}\n\nexport interface CompileInjectableMetadata {\n  symbol: StaticSymbol;\n  type: CompileTypeMetadata;\n\n  providedIn?: StaticSymbol;\n\n  useValue?: any;\n  useClass?: StaticSymbol;\n  useExisting?: StaticSymbol;\n  useFactory?: StaticSymbol;\n  deps?: any[];\n}\n\n/**\n * Metadata regarding compilation of a type.\n */\nexport interface CompileTypeMetadata extends CompileIdentifierMetadata {\n  diDeps: CompileDiDependencyMetadata[];\n  lifecycleHooks: LifecycleHooks[];\n  reference: any;\n}\n\nexport interface CompileQueryMetadata {\n  selectors: Array<CompileTokenMetadata>;\n  descendants: boolean;\n  first: boolean;\n  propertyName: string;\n  read: CompileTokenMetadata;\n}\n\n/**\n * Metadata about a stylesheet\n */\nexport class CompileStylesheetMetadata {\n  moduleUrl: string|null;\n  styles: string[];\n  styleUrls: string[];\n  constructor(\n      {moduleUrl, styles,\n       styleUrls}: {moduleUrl?: string, styles?: string[], styleUrls?: string[]} = {}) {\n    this.moduleUrl = moduleUrl || null;\n    this.styles = _normalizeArray(styles);\n    this.styleUrls = _normalizeArray(styleUrls);\n  }\n}\n\n/**\n * Summary Metadata regarding compilation of a template.\n */\nexport interface CompileTemplateSummary {\n  ngContentSelectors: string[];\n  encapsulation: ViewEncapsulation|null;\n}\n\n/**\n * Metadata regarding compilation of a template.\n */\nexport class CompileTemplateMetadata {\n  encapsulation: ViewEncapsulation|null;\n  template: string|null;\n  templateUrl: string|null;\n  htmlAst: HtmlParseTreeResult|null;\n  isInline: boolean;\n  styles: string[];\n  styleUrls: string[];\n  externalStylesheets: CompileStylesheetMetadata[];\n  animations: any[];\n  ngContentSelectors: string[];\n  interpolation: [string, string]|null;\n  preserveWhitespaces: boolean;\n  constructor({encapsulation, template, templateUrl, htmlAst, styles, styleUrls,\n               externalStylesheets, animations, ngContentSelectors, interpolation, isInline,\n               preserveWhitespaces}: {\n    encapsulation: ViewEncapsulation | null,\n    template: string|null,\n    templateUrl: string|null,\n    htmlAst: HtmlParseTreeResult|null,\n    styles: string[],\n    styleUrls: string[],\n    externalStylesheets: CompileStylesheetMetadata[],\n    ngContentSelectors: string[],\n    animations: any[],\n    interpolation: [string, string]|null,\n    isInline: boolean,\n    preserveWhitespaces: boolean\n  }) {\n    this.encapsulation = encapsulation;\n    this.template = template;\n    this.templateUrl = templateUrl;\n    this.htmlAst = htmlAst;\n    this.styles = _normalizeArray(styles);\n    this.styleUrls = _normalizeArray(styleUrls);\n    this.externalStylesheets = _normalizeArray(externalStylesheets);\n    this.animations = animations ? flatten(animations) : [];\n    this.ngContentSelectors = ngContentSelectors || [];\n    if (interpolation && interpolation.length != 2) {\n      throw new Error(`'interpolation' should have a start and an end symbol.`);\n    }\n    this.interpolation = interpolation;\n    this.isInline = isInline;\n    this.preserveWhitespaces = preserveWhitespaces;\n  }\n\n  toSummary(): CompileTemplateSummary {\n    return {\n      ngContentSelectors: this.ngContentSelectors,\n      encapsulation: this.encapsulation,\n    };\n  }\n}\n\nexport interface CompileEntryComponentMetadata {\n  componentType: any;\n  componentFactory: StaticSymbol|object;\n}\n\n// Note: This should only use interfaces as nested data types\n// as we need to be able to serialize this from/to JSON!\nexport interface CompileDirectiveSummary extends CompileTypeSummary {\n  type: CompileTypeMetadata;\n  isComponent: boolean;\n  selector: string|null;\n  exportAs: string|null;\n  inputs: {[key: string]: string};\n  outputs: {[key: string]: string};\n  hostListeners: {[key: string]: string};\n  hostProperties: {[key: string]: string};\n  hostAttributes: {[key: string]: string};\n  providers: CompileProviderMetadata[];\n  viewProviders: CompileProviderMetadata[];\n  queries: CompileQueryMetadata[];\n  guards: {[key: string]: any};\n  viewQueries: CompileQueryMetadata[];\n  entryComponents: CompileEntryComponentMetadata[];\n  changeDetection: ChangeDetectionStrategy|null;\n  template: CompileTemplateSummary|null;\n  componentViewType: StaticSymbol|ProxyClass|null;\n  rendererType: StaticSymbol|object|null;\n  componentFactory: StaticSymbol|object|null;\n}\n\n/**\n * Metadata regarding compilation of a directive.\n */\nexport class CompileDirectiveMetadata {\n  static create({isHost, type, isComponent, selector, exportAs, changeDetection, inputs, outputs,\n                 host, providers, viewProviders, queries, guards, viewQueries, entryComponents,\n                 template, componentViewType, rendererType, componentFactory}: {\n    isHost: boolean,\n    type: CompileTypeMetadata,\n    isComponent: boolean,\n    selector: string|null,\n    exportAs: string|null,\n    changeDetection: ChangeDetectionStrategy|null,\n    inputs: string[],\n    outputs: string[],\n    host: {[key: string]: string},\n    providers: CompileProviderMetadata[],\n    viewProviders: CompileProviderMetadata[],\n    queries: CompileQueryMetadata[],\n    guards: {[key: string]: any};\n    viewQueries: CompileQueryMetadata[],\n    entryComponents: CompileEntryComponentMetadata[],\n    template: CompileTemplateMetadata,\n    componentViewType: StaticSymbol|ProxyClass|null,\n    rendererType: StaticSymbol|object|null,\n    componentFactory: StaticSymbol|object|null,\n  }): CompileDirectiveMetadata {\n    const hostListeners: {[key: string]: string} = {};\n    const hostProperties: {[key: string]: string} = {};\n    const hostAttributes: {[key: string]: string} = {};\n    if (host != null) {\n      Object.keys(host).forEach(key => {\n        const value = host[key];\n        const matches = key.match(HOST_REG_EXP);\n        if (matches === null) {\n          hostAttributes[key] = value;\n        } else if (matches[1] != null) {\n          hostProperties[matches[1]] = value;\n        } else if (matches[2] != null) {\n          hostListeners[matches[2]] = value;\n        }\n      });\n    }\n    const inputsMap: {[key: string]: string} = {};\n    if (inputs != null) {\n      inputs.forEach((bindConfig: string) => {\n        // canonical syntax: `dirProp: elProp`\n        // if there is no `:`, use dirProp = elProp\n        const parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n        inputsMap[parts[0]] = parts[1];\n      });\n    }\n    const outputsMap: {[key: string]: string} = {};\n    if (outputs != null) {\n      outputs.forEach((bindConfig: string) => {\n        // canonical syntax: `dirProp: elProp`\n        // if there is no `:`, use dirProp = elProp\n        const parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n        outputsMap[parts[0]] = parts[1];\n      });\n    }\n\n    return new CompileDirectiveMetadata({\n      isHost,\n      type,\n      isComponent: !!isComponent, selector, exportAs, changeDetection,\n      inputs: inputsMap,\n      outputs: outputsMap,\n      hostListeners,\n      hostProperties,\n      hostAttributes,\n      providers,\n      viewProviders,\n      queries,\n      guards,\n      viewQueries,\n      entryComponents,\n      template,\n      componentViewType,\n      rendererType,\n      componentFactory,\n    });\n  }\n  isHost: boolean;\n  type: CompileTypeMetadata;\n  isComponent: boolean;\n  selector: string|null;\n  exportAs: string|null;\n  changeDetection: ChangeDetectionStrategy|null;\n  inputs: {[key: string]: string};\n  outputs: {[key: string]: string};\n  hostListeners: {[key: string]: string};\n  hostProperties: {[key: string]: string};\n  hostAttributes: {[key: string]: string};\n  providers: CompileProviderMetadata[];\n  viewProviders: CompileProviderMetadata[];\n  queries: CompileQueryMetadata[];\n  guards: {[key: string]: any};\n  viewQueries: CompileQueryMetadata[];\n  entryComponents: CompileEntryComponentMetadata[];\n\n  template: CompileTemplateMetadata|null;\n\n  componentViewType: StaticSymbol|ProxyClass|null;\n  rendererType: StaticSymbol|object|null;\n  componentFactory: StaticSymbol|object|null;\n\n  constructor({isHost,\n               type,\n               isComponent,\n               selector,\n               exportAs,\n               changeDetection,\n               inputs,\n               outputs,\n               hostListeners,\n               hostProperties,\n               hostAttributes,\n               providers,\n               viewProviders,\n               queries,\n               guards,\n               viewQueries,\n               entryComponents,\n               template,\n               componentViewType,\n               rendererType,\n               componentFactory}: {\n    isHost: boolean,\n    type: CompileTypeMetadata,\n    isComponent: boolean,\n    selector: string|null,\n    exportAs: string|null,\n    changeDetection: ChangeDetectionStrategy|null,\n    inputs: {[key: string]: string},\n    outputs: {[key: string]: string},\n    hostListeners: {[key: string]: string},\n    hostProperties: {[key: string]: string},\n    hostAttributes: {[key: string]: string},\n    providers: CompileProviderMetadata[],\n    viewProviders: CompileProviderMetadata[],\n    queries: CompileQueryMetadata[],\n    guards: {[key: string]: any},\n    viewQueries: CompileQueryMetadata[],\n    entryComponents: CompileEntryComponentMetadata[],\n    template: CompileTemplateMetadata|null,\n    componentViewType: StaticSymbol|ProxyClass|null,\n    rendererType: StaticSymbol|object|null,\n    componentFactory: StaticSymbol|object|null,\n  }) {\n    this.isHost = !!isHost;\n    this.type = type;\n    this.isComponent = isComponent;\n    this.selector = selector;\n    this.exportAs = exportAs;\n    this.changeDetection = changeDetection;\n    this.inputs = inputs;\n    this.outputs = outputs;\n    this.hostListeners = hostListeners;\n    this.hostProperties = hostProperties;\n    this.hostAttributes = hostAttributes;\n    this.providers = _normalizeArray(providers);\n    this.viewProviders = _normalizeArray(viewProviders);\n    this.queries = _normalizeArray(queries);\n    this.guards = guards;\n    this.viewQueries = _normalizeArray(viewQueries);\n    this.entryComponents = _normalizeArray(entryComponents);\n    this.template = template;\n\n    this.componentViewType = componentViewType;\n    this.rendererType = rendererType;\n    this.componentFactory = componentFactory;\n  }\n\n  toSummary(): CompileDirectiveSummary {\n    return {\n      summaryKind: CompileSummaryKind.Directive,\n      type: this.type,\n      isComponent: this.isComponent,\n      selector: this.selector,\n      exportAs: this.exportAs,\n      inputs: this.inputs,\n      outputs: this.outputs,\n      hostListeners: this.hostListeners,\n      hostProperties: this.hostProperties,\n      hostAttributes: this.hostAttributes,\n      providers: this.providers,\n      viewProviders: this.viewProviders,\n      queries: this.queries,\n      guards: this.guards,\n      viewQueries: this.viewQueries,\n      entryComponents: this.entryComponents,\n      changeDetection: this.changeDetection,\n      template: this.template && this.template.toSummary(),\n      componentViewType: this.componentViewType,\n      rendererType: this.rendererType,\n      componentFactory: this.componentFactory\n    };\n  }\n}\n\nexport interface CompilePipeSummary extends CompileTypeSummary {\n  type: CompileTypeMetadata;\n  name: string;\n  pure: boolean;\n}\n\nexport class CompilePipeMetadata {\n  type: CompileTypeMetadata;\n  name: string;\n  pure: boolean;\n\n  constructor({type, name, pure}: {\n    type: CompileTypeMetadata,\n    name: string,\n    pure: boolean,\n  }) {\n    this.type = type;\n    this.name = name;\n    this.pure = !!pure;\n  }\n\n  toSummary(): CompilePipeSummary {\n    return {\n      summaryKind: CompileSummaryKind.Pipe,\n      type: this.type,\n      name: this.name,\n      pure: this.pure\n    };\n  }\n}\n\n// Note: This should only use interfaces as nested data types\n// as we need to be able to serialize this from/to JSON!\nexport interface CompileNgModuleSummary extends CompileTypeSummary {\n  type: CompileTypeMetadata;\n\n  // Note: This is transitive over the exported modules.\n  exportedDirectives: CompileIdentifierMetadata[];\n  // Note: This is transitive over the exported modules.\n  exportedPipes: CompileIdentifierMetadata[];\n\n  // Note: This is transitive.\n  entryComponents: CompileEntryComponentMetadata[];\n  // Note: This is transitive.\n  providers: {provider: CompileProviderMetadata, module: CompileIdentifierMetadata}[];\n  // Note: This is transitive.\n  modules: CompileTypeMetadata[];\n}\n\nexport class CompileShallowModuleMetadata {\n  // TODO(issue/24571): remove '!'.\n  type !: CompileTypeMetadata;\n\n  rawExports: any;\n  rawImports: any;\n  rawProviders: any;\n}\n\n/**\n * Metadata regarding compilation of a module.\n */\nexport class CompileNgModuleMetadata {\n  type: CompileTypeMetadata;\n  declaredDirectives: CompileIdentifierMetadata[];\n  exportedDirectives: CompileIdentifierMetadata[];\n  declaredPipes: CompileIdentifierMetadata[];\n\n  exportedPipes: CompileIdentifierMetadata[];\n  entryComponents: CompileEntryComponentMetadata[];\n  bootstrapComponents: CompileIdentifierMetadata[];\n  providers: CompileProviderMetadata[];\n\n  importedModules: CompileNgModuleSummary[];\n  exportedModules: CompileNgModuleSummary[];\n  schemas: SchemaMetadata[];\n  id: string|null;\n\n  transitiveModule: TransitiveCompileNgModuleMetadata;\n\n  constructor({type, providers, declaredDirectives, exportedDirectives, declaredPipes,\n               exportedPipes, entryComponents, bootstrapComponents, importedModules,\n               exportedModules, schemas, transitiveModule, id}: {\n    type: CompileTypeMetadata,\n    providers: CompileProviderMetadata[],\n    declaredDirectives: CompileIdentifierMetadata[],\n    exportedDirectives: CompileIdentifierMetadata[],\n    declaredPipes: CompileIdentifierMetadata[],\n    exportedPipes: CompileIdentifierMetadata[],\n    entryComponents: CompileEntryComponentMetadata[],\n    bootstrapComponents: CompileIdentifierMetadata[],\n    importedModules: CompileNgModuleSummary[],\n    exportedModules: CompileNgModuleSummary[],\n    transitiveModule: TransitiveCompileNgModuleMetadata,\n    schemas: SchemaMetadata[],\n    id: string|null\n  }) {\n    this.type = type || null;\n    this.declaredDirectives = _normalizeArray(declaredDirectives);\n    this.exportedDirectives = _normalizeArray(exportedDirectives);\n    this.declaredPipes = _normalizeArray(declaredPipes);\n    this.exportedPipes = _normalizeArray(exportedPipes);\n    this.providers = _normalizeArray(providers);\n    this.entryComponents = _normalizeArray(entryComponents);\n    this.bootstrapComponents = _normalizeArray(bootstrapComponents);\n    this.importedModules = _normalizeArray(importedModules);\n    this.exportedModules = _normalizeArray(exportedModules);\n    this.schemas = _normalizeArray(schemas);\n    this.id = id || null;\n    this.transitiveModule = transitiveModule || null;\n  }\n\n  toSummary(): CompileNgModuleSummary {\n    const module = this.transitiveModule !;\n    return {\n      summaryKind: CompileSummaryKind.NgModule,\n      type: this.type,\n      entryComponents: module.entryComponents,\n      providers: module.providers,\n      modules: module.modules,\n      exportedDirectives: module.exportedDirectives,\n      exportedPipes: module.exportedPipes\n    };\n  }\n}\n\nexport class TransitiveCompileNgModuleMetadata {\n  directivesSet = new Set<any>();\n  directives: CompileIdentifierMetadata[] = [];\n  exportedDirectivesSet = new Set<any>();\n  exportedDirectives: CompileIdentifierMetadata[] = [];\n  pipesSet = new Set<any>();\n  pipes: CompileIdentifierMetadata[] = [];\n  exportedPipesSet = new Set<any>();\n  exportedPipes: CompileIdentifierMetadata[] = [];\n  modulesSet = new Set<any>();\n  modules: CompileTypeMetadata[] = [];\n  entryComponentsSet = new Set<any>();\n  entryComponents: CompileEntryComponentMetadata[] = [];\n\n  providers: {provider: CompileProviderMetadata, module: CompileIdentifierMetadata}[] = [];\n\n  addProvider(provider: CompileProviderMetadata, module: CompileIdentifierMetadata) {\n    this.providers.push({provider: provider, module: module});\n  }\n\n  addDirective(id: CompileIdentifierMetadata) {\n    if (!this.directivesSet.has(id.reference)) {\n      this.directivesSet.add(id.reference);\n      this.directives.push(id);\n    }\n  }\n  addExportedDirective(id: CompileIdentifierMetadata) {\n    if (!this.exportedDirectivesSet.has(id.reference)) {\n      this.exportedDirectivesSet.add(id.reference);\n      this.exportedDirectives.push(id);\n    }\n  }\n  addPipe(id: CompileIdentifierMetadata) {\n    if (!this.pipesSet.has(id.reference)) {\n      this.pipesSet.add(id.reference);\n      this.pipes.push(id);\n    }\n  }\n  addExportedPipe(id: CompileIdentifierMetadata) {\n    if (!this.exportedPipesSet.has(id.reference)) {\n      this.exportedPipesSet.add(id.reference);\n      this.exportedPipes.push(id);\n    }\n  }\n  addModule(id: CompileTypeMetadata) {\n    if (!this.modulesSet.has(id.reference)) {\n      this.modulesSet.add(id.reference);\n      this.modules.push(id);\n    }\n  }\n  addEntryComponent(ec: CompileEntryComponentMetadata) {\n    if (!this.entryComponentsSet.has(ec.componentType)) {\n      this.entryComponentsSet.add(ec.componentType);\n      this.entryComponents.push(ec);\n    }\n  }\n}\n\nfunction _normalizeArray(obj: any[] | undefined | null): any[] {\n  return obj || [];\n}\n\nexport class ProviderMeta {\n  token: any;\n  useClass: Type|null;\n  useValue: any;\n  useExisting: any;\n  useFactory: Function|null;\n  dependencies: Object[]|null;\n  multi: boolean;\n\n  constructor(token: any, {useClass, useValue, useExisting, useFactory, deps, multi}: {\n    useClass?: Type,\n    useValue?: any,\n    useExisting?: any,\n    useFactory?: Function|null,\n    deps?: Object[]|null,\n    multi?: boolean\n  }) {\n    this.token = token;\n    this.useClass = useClass || null;\n    this.useValue = useValue;\n    this.useExisting = useExisting;\n    this.useFactory = useFactory || null;\n    this.dependencies = deps || null;\n    this.multi = !!multi;\n  }\n}\n\nexport function flatten<T>(list: Array<T|T[]>): T[] {\n  return list.reduce((flat: any[], item: T | T[]): T[] => {\n    const flatItem = Array.isArray(item) ? flatten(item) : item;\n    return (<T[]>flat).concat(flatItem);\n  }, []);\n}\n\nfunction jitSourceUrl(url: string) {\n  // Note: We need 3 \"/\" so that ng shows up as a separate domain\n  // in the chrome dev tools.\n  return url.replace(/(\\w+:\\/\\/[\\w:-]+)?(\\/+)?/, 'ng:///');\n}\n\nexport function templateSourceUrl(\n    ngModuleType: CompileIdentifierMetadata, compMeta: {type: CompileIdentifierMetadata},\n    templateMeta: {isInline: boolean, templateUrl: string | null}) {\n  let url: string;\n  if (templateMeta.isInline) {\n    if (compMeta.type.reference instanceof StaticSymbol) {\n      // Note: a .ts file might contain multiple components with inline templates,\n      // so we need to give them unique urls, as these will be used for sourcemaps.\n      url = `${compMeta.type.reference.filePath}.${compMeta.type.reference.name}.html`;\n    } else {\n      url = `${identifierName(ngModuleType)}/${identifierName(compMeta.type)}.html`;\n    }\n  } else {\n    url = templateMeta.templateUrl !;\n  }\n  return compMeta.type.reference instanceof StaticSymbol ? url : jitSourceUrl(url);\n}\n\nexport function sharedStylesheetJitUrl(meta: CompileStylesheetMetadata, id: number) {\n  const pathParts = meta.moduleUrl !.split(/\\/\\\\/g);\n  const baseName = pathParts[pathParts.length - 1];\n  return jitSourceUrl(`css/${id}${baseName}.ngstyle.js`);\n}\n\nexport function ngModuleJitUrl(moduleMeta: CompileNgModuleMetadata): string {\n  return jitSourceUrl(`${identifierName(moduleMeta.type)}/module.ngfactory.js`);\n}\n\nexport function templateJitUrl(\n    ngModuleType: CompileIdentifierMetadata, compMeta: CompileDirectiveMetadata): string {\n  return jitSourceUrl(\n      `${identifierName(ngModuleType)}/${identifierName(compMeta.type)}.ngfactory.js`);\n}\n"],"sourceRoot":""}