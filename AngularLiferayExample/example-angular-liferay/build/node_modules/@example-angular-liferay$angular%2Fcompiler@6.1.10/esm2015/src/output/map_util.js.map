{"version":3,"sources":["../../../../../../../packages/compiler/src/output/map_util.ts"],"names":[],"mappings":";;;;;;;;;AAQA,WAAO,KAAK,CAAZ,MAAmB,cAAnB;AAUA,WAAM,SAAA,QAAA,CAAmB,GAAnB,EAAgC,KAAhC,EAAmD;AACvD,eAAO,EAAC,GAAD,EAAM,KAAN,EAAa,QAAQ,KAArB,EAAP;AACD;AAED,WAAM,SAAA,UAAA,CAAqB,GAArB,EAAuD;AAC3D,eAAO,EAAE,UAAF,CAAa,OAAO,IAAP,CAAY,GAAZ,EAAiB,GAAjB,CAAqB,QAAQ;AACN,eADM;AAEN,oBAAQ,KAFF;AAGN,mBAAO,IAAI,GAAJ;AAHD,SAAR,CAArB,CAAb,CAAP;AAKD","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as o from './output_ast';\n\nexport type MapEntry = {\n  key: string,\n  quoted: boolean,\n  value: o.Expression\n};\n\nexport type MapLiteral = MapEntry[];\n\nexport function mapEntry(key: string, value: o.Expression): MapEntry {\n  return {key, value, quoted: false};\n}\n\nexport function mapLiteral(obj: {[key: string]: o.Expression}): o.Expression {\n  return o.literalMap(Object.keys(obj).map(key => ({\n                                             key,\n                                             quoted: false,\n                                             value: obj[key],\n                                           })));\n}\n"],"sourceRoot":""}