{"version":3,"sources":["../../../../../../packages/compiler/src/summary_resolver.ts"],"names":[],"mappings":";;WAgBM,MAAA,eAAA,CAAA;AAWN,WAAM,MAAA,kBAAA,CAAA;AAAN,sBAAA;AACU,iBAAA,UAAA,GAAa,IAAI,GAAJ,EAAb;AAYT;AAVC,wBAAa;AAAc,mBAAO,KAAP;AAAe;AAC1C,0BAAkB,QAAlB,EAAkC;AAAY,mBAAO,QAAP;AAAkB;AAChE,4BAAoB,QAApB,EAAoC;AAAY,mBAAO,QAAP;AAAkB;AAClE,uBAAe,SAAf,EAA8B;AAC5B,mBAAO,KAAK,UAAL,CAAgB,GAAhB,CAAoB,SAApB,KAAkC,IAAzC;AACD;AACD,uBAAY;AAAa,mBAAO,EAAP;AAAY;AACrC,oBAAY,SAAZ,EAA2B;AAAU,mBAAO,SAAP;AAAmB;AACxD,2BAAmB,QAAnB,EAAmC;AAAI,mBAAO,IAAP;AAAc;AACrD,mBAAW,OAAX,EAAiC;AAAI,iBAAK,UAAL,CAAgB,GAAhB,CAAoB,QAAQ,MAA5B,EAAoC,OAApC;AAA+C;AAZhF","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {CompileTypeSummary} from './compile_metadata';\nimport {Type} from './core';\n\nexport interface Summary<T> {\n  symbol: T;\n  metadata: any;\n  type?: CompileTypeSummary;\n}\n\nexport abstract class SummaryResolver<T> {\n  abstract isLibraryFile(fileName: string): boolean;\n  abstract toSummaryFileName(fileName: string, referringSrcFileName: string): string;\n  abstract fromSummaryFileName(fileName: string, referringLibFileName: string): string;\n  abstract resolveSummary(reference: T): Summary<T>|null;\n  abstract getSymbolsOf(filePath: string): T[]|null;\n  abstract getImportAs(reference: T): T;\n  abstract getKnownModuleName(fileName: string): string|null;\n  abstract addSummary(summary: Summary<T>): void;\n}\n\nexport class JitSummaryResolver implements SummaryResolver<Type> {\n  private _summaries = new Map<Type, Summary<Type>>();\n\n  isLibraryFile(): boolean { return false; }\n  toSummaryFileName(fileName: string): string { return fileName; }\n  fromSummaryFileName(fileName: string): string { return fileName; }\n  resolveSummary(reference: Type): Summary<Type>|null {\n    return this._summaries.get(reference) || null;\n  }\n  getSymbolsOf(): Type[] { return []; }\n  getImportAs(reference: Type): Type { return reference; }\n  getKnownModuleName(fileName: string) { return null; }\n  addSummary(summary: Summary<Type>) { this._summaries.set(summary.symbol, summary); }\n}\n"],"sourceRoot":""}