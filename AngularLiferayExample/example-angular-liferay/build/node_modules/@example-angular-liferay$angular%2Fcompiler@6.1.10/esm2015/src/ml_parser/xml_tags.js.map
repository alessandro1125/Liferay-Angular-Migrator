{"version":3,"sources":["../../../../../../../packages/compiler/src/ml_parser/xml_tags.ts"],"names":[],"mappings":";;;;;;;;;AAQA,aAAQ,cAAR,QAA4C,QAA5C;AAEA,WAAM,MAAA,gBAAA,CAAA;AAAN,sBAAA;AACE,iBAAA,cAAA,GAA0B,KAA1B;AAOA,iBAAA,WAAA,GAA8B,eAAe,aAA7C;AACA,iBAAA,MAAA,GAAkB,KAAlB;AACA,iBAAA,aAAA,GAAyB,KAAzB;AACA,iBAAA,YAAA,GAAwB,IAAxB;AAKD;AAHC,2BAAmB,aAAnB,EAAwC;AAAa,mBAAO,KAAP;AAAe;AAEpE,wBAAgB,IAAhB,EAA4B;AAAa,mBAAO,KAAP;AAAe;AAfpD;AAkBN,UAAM,kBAAkB,IAAI,gBAAJ,EAAxB;AAEA,WAAM,SAAA,mBAAA,CAA8B,OAA9B,EAA6C;AACjD,eAAO,eAAP;AACD","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {TagContentType, TagDefinition} from './tags';\n\nexport class XmlTagDefinition implements TagDefinition {\n  closedByParent: boolean = false;\n  // TODO(issue/24571): remove '!'.\n  requiredParents !: {[key: string]: boolean};\n  // TODO(issue/24571): remove '!'.\n  parentToAdd !: string;\n  // TODO(issue/24571): remove '!'.\n  implicitNamespacePrefix !: string;\n  contentType: TagContentType = TagContentType.PARSABLE_DATA;\n  isVoid: boolean = false;\n  ignoreFirstLf: boolean = false;\n  canSelfClose: boolean = true;\n\n  requireExtraParent(currentParent: string): boolean { return false; }\n\n  isClosedByChild(name: string): boolean { return false; }\n}\n\nconst _TAG_DEFINITION = new XmlTagDefinition();\n\nexport function getXmlTagDefinition(tagName: string): XmlTagDefinition {\n  return _TAG_DEFINITION;\n}\n"],"sourceRoot":""}