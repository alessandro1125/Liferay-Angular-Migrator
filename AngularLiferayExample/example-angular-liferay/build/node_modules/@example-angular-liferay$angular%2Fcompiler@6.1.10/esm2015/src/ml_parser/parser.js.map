{"version":3,"sources":["../../../../../../../packages/compiler/src/ml_parser/parser.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ParseError, ParseSourceSpan} from '../parse_util';\n\nimport * as html from './ast';\nimport {DEFAULT_INTERPOLATION_CONFIG, InterpolationConfig} from './interpolation_config';\nimport * as lex from './lexer';\nimport {TagDefinition, getNsPrefix, isNgContainer, mergeNsAndName} from './tags';\n\nexport class TreeError extends ParseError {\n  static create(elementName: string|null, span: ParseSourceSpan, msg: string): TreeError {\n    return new TreeError(elementName, span, msg);\n  }\n\n  constructor(public elementName: string|null, span: ParseSourceSpan, msg: string) {\n    super(span, msg);\n  }\n}\n\nexport class ParseTreeResult {\n  constructor(public rootNodes: html.Node[], public errors: ParseError[]) {}\n}\n\nexport class Parser {\n  constructor(public getTagDefinition: (tagName: string) => TagDefinition) {}\n\n  parse(\n      source: string, url: string, parseExpansionForms: boolean = false,\n      interpolationConfig: InterpolationConfig = DEFAULT_INTERPOLATION_CONFIG): ParseTreeResult {\n    const tokensAndErrors =\n        lex.tokenize(source, url, this.getTagDefinition, parseExpansionForms, interpolationConfig);\n\n    const treeAndErrors = new _TreeBuilder(tokensAndErrors.tokens, this.getTagDefinition).build();\n\n    return new ParseTreeResult(\n        treeAndErrors.rootNodes,\n        (<ParseError[]>tokensAndErrors.errors).concat(treeAndErrors.errors));\n  }\n}\n\nclass _TreeBuilder {\n  private _index: number = -1;\n  // TODO(issue/24571): remove '!'.\n  private _peek !: lex.Token;\n\n  private _rootNodes: html.Node[] = [];\n  private _errors: TreeError[] = [];\n\n  private _elementStack: html.Element[] = [];\n\n  constructor(\n      private tokens: lex.Token[], private getTagDefinition: (tagName: string) => TagDefinition) {\n    this._advance();\n  }\n\n  build(): ParseTreeResult {\n    while (this._peek.type !== lex.TokenType.EOF) {\n      if (this._peek.type === lex.TokenType.TAG_OPEN_START) {\n        this._consumeStartTag(this._advance());\n      } else if (this._peek.type === lex.TokenType.TAG_CLOSE) {\n        this._consumeEndTag(this._advance());\n      } else if (this._peek.type === lex.TokenType.CDATA_START) {\n        this._closeVoidElement();\n        this._consumeCdata(this._advance());\n      } else if (this._peek.type === lex.TokenType.COMMENT_START) {\n        this._closeVoidElement();\n        this._consumeComment(this._advance());\n      } else if (\n          this._peek.type === lex.TokenType.TEXT || this._peek.type === lex.TokenType.RAW_TEXT ||\n          this._peek.type === lex.TokenType.ESCAPABLE_RAW_TEXT) {\n        this._closeVoidElement();\n        this._consumeText(this._advance());\n      } else if (this._peek.type === lex.TokenType.EXPANSION_FORM_START) {\n        this._consumeExpansion(this._advance());\n      } else {\n        // Skip all other tokens...\n        this._advance();\n      }\n    }\n    return new ParseTreeResult(this._rootNodes, this._errors);\n  }\n\n  private _advance(): lex.Token {\n    const prev = this._peek;\n    if (this._index < this.tokens.length - 1) {\n      // Note: there is always an EOF token at the end\n      this._index++;\n    }\n    this._peek = this.tokens[this._index];\n    return prev;\n  }\n\n  private _advanceIf(type: lex.TokenType): lex.Token|null {\n    if (this._peek.type === type) {\n      return this._advance();\n    }\n    return null;\n  }\n\n  private _consumeCdata(startToken: lex.Token) {\n    this._consumeText(this._advance());\n    this._advanceIf(lex.TokenType.CDATA_END);\n  }\n\n  private _consumeComment(token: lex.Token) {\n    const text = this._advanceIf(lex.TokenType.RAW_TEXT);\n    this._advanceIf(lex.TokenType.COMMENT_END);\n    const value = text != null ? text.parts[0].trim() : null;\n    this._addToParent(new html.Comment(value, token.sourceSpan));\n  }\n\n  private _consumeExpansion(token: lex.Token) {\n    const switchValue = this._advance();\n\n    const type = this._advance();\n    const cases: html.ExpansionCase[] = [];\n\n    // read =\n    while (this._peek.type === lex.TokenType.EXPANSION_CASE_VALUE) {\n      const expCase = this._parseExpansionCase();\n      if (!expCase) return;  // error\n      cases.push(expCase);\n    }\n\n    // read the final }\n    if (this._peek.type !== lex.TokenType.EXPANSION_FORM_END) {\n      this._errors.push(\n          TreeError.create(null, this._peek.sourceSpan, `Invalid ICU message. Missing '}'.`));\n      return;\n    }\n    const sourceSpan = new ParseSourceSpan(token.sourceSpan.start, this._peek.sourceSpan.end);\n    this._addToParent(new html.Expansion(\n        switchValue.parts[0], type.parts[0], cases, sourceSpan, switchValue.sourceSpan));\n\n    this._advance();\n  }\n\n  private _parseExpansionCase(): html.ExpansionCase|null {\n    const value = this._advance();\n\n    // read {\n    if (this._peek.type !== lex.TokenType.EXPANSION_CASE_EXP_START) {\n      this._errors.push(\n          TreeError.create(null, this._peek.sourceSpan, `Invalid ICU message. Missing '{'.`));\n      return null;\n    }\n\n    // read until }\n    const start = this._advance();\n\n    const exp = this._collectExpansionExpTokens(start);\n    if (!exp) return null;\n\n    const end = this._advance();\n    exp.push(new lex.Token(lex.TokenType.EOF, [], end.sourceSpan));\n\n    // parse everything in between { and }\n    const parsedExp = new _TreeBuilder(exp, this.getTagDefinition).build();\n    if (parsedExp.errors.length > 0) {\n      this._errors = this._errors.concat(<TreeError[]>parsedExp.errors);\n      return null;\n    }\n\n    const sourceSpan = new ParseSourceSpan(value.sourceSpan.start, end.sourceSpan.end);\n    const expSourceSpan = new ParseSourceSpan(start.sourceSpan.start, end.sourceSpan.end);\n    return new html.ExpansionCase(\n        value.parts[0], parsedExp.rootNodes, sourceSpan, value.sourceSpan, expSourceSpan);\n  }\n\n  private _collectExpansionExpTokens(start: lex.Token): lex.Token[]|null {\n    const exp: lex.Token[] = [];\n    const expansionFormStack = [lex.TokenType.EXPANSION_CASE_EXP_START];\n\n    while (true) {\n      if (this._peek.type === lex.TokenType.EXPANSION_FORM_START ||\n          this._peek.type === lex.TokenType.EXPANSION_CASE_EXP_START) {\n        expansionFormStack.push(this._peek.type);\n      }\n\n      if (this._peek.type === lex.TokenType.EXPANSION_CASE_EXP_END) {\n        if (lastOnStack(expansionFormStack, lex.TokenType.EXPANSION_CASE_EXP_START)) {\n          expansionFormStack.pop();\n          if (expansionFormStack.length == 0) return exp;\n\n        } else {\n          this._errors.push(\n              TreeError.create(null, start.sourceSpan, `Invalid ICU message. Missing '}'.`));\n          return null;\n        }\n      }\n\n      if (this._peek.type === lex.TokenType.EXPANSION_FORM_END) {\n        if (lastOnStack(expansionFormStack, lex.TokenType.EXPANSION_FORM_START)) {\n          expansionFormStack.pop();\n        } else {\n          this._errors.push(\n              TreeError.create(null, start.sourceSpan, `Invalid ICU message. Missing '}'.`));\n          return null;\n        }\n      }\n\n      if (this._peek.type === lex.TokenType.EOF) {\n        this._errors.push(\n            TreeError.create(null, start.sourceSpan, `Invalid ICU message. Missing '}'.`));\n        return null;\n      }\n\n      exp.push(this._advance());\n    }\n  }\n\n  private _consumeText(token: lex.Token) {\n    let text = token.parts[0];\n    if (text.length > 0 && text[0] == '\\n') {\n      const parent = this._getParentElement();\n      if (parent != null && parent.children.length == 0 &&\n          this.getTagDefinition(parent.name).ignoreFirstLf) {\n        text = text.substring(1);\n      }\n    }\n\n    if (text.length > 0) {\n      this._addToParent(new html.Text(text, token.sourceSpan));\n    }\n  }\n\n  private _closeVoidElement(): void {\n    const el = this._getParentElement();\n    if (el && this.getTagDefinition(el.name).isVoid) {\n      this._elementStack.pop();\n    }\n  }\n\n  private _consumeStartTag(startTagToken: lex.Token) {\n    const prefix = startTagToken.parts[0];\n    const name = startTagToken.parts[1];\n    const attrs: html.Attribute[] = [];\n    while (this._peek.type === lex.TokenType.ATTR_NAME) {\n      attrs.push(this._consumeAttr(this._advance()));\n    }\n    const fullName = this._getElementFullName(prefix, name, this._getParentElement());\n    let selfClosing = false;\n    // Note: There could have been a tokenizer error\n    // so that we don't get a token for the end tag...\n    if (this._peek.type === lex.TokenType.TAG_OPEN_END_VOID) {\n      this._advance();\n      selfClosing = true;\n      const tagDef = this.getTagDefinition(fullName);\n      if (!(tagDef.canSelfClose || getNsPrefix(fullName) !== null || tagDef.isVoid)) {\n        this._errors.push(TreeError.create(\n            fullName, startTagToken.sourceSpan,\n            `Only void and foreign elements can be self closed \"${startTagToken.parts[1]}\"`));\n      }\n    } else if (this._peek.type === lex.TokenType.TAG_OPEN_END) {\n      this._advance();\n      selfClosing = false;\n    }\n    const end = this._peek.sourceSpan.start;\n    const span = new ParseSourceSpan(startTagToken.sourceSpan.start, end);\n    const el = new html.Element(fullName, attrs, [], span, span, undefined);\n    this._pushElement(el);\n    if (selfClosing) {\n      this._popElement(fullName);\n      el.endSourceSpan = span;\n    }\n  }\n\n  private _pushElement(el: html.Element) {\n    const parentEl = this._getParentElement();\n\n    if (parentEl && this.getTagDefinition(parentEl.name).isClosedByChild(el.name)) {\n      this._elementStack.pop();\n    }\n\n    const tagDef = this.getTagDefinition(el.name);\n    const {parent, container} = this._getParentElementSkippingContainers();\n\n    if (parent && tagDef.requireExtraParent(parent.name)) {\n      const newParent = new html.Element(\n          tagDef.parentToAdd, [], [], el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n      this._insertBeforeContainer(parent, container, newParent);\n    }\n\n    this._addToParent(el);\n    this._elementStack.push(el);\n  }\n\n  private _consumeEndTag(endTagToken: lex.Token) {\n    const fullName = this._getElementFullName(\n        endTagToken.parts[0], endTagToken.parts[1], this._getParentElement());\n\n    if (this._getParentElement()) {\n      this._getParentElement() !.endSourceSpan = endTagToken.sourceSpan;\n    }\n\n    if (this.getTagDefinition(fullName).isVoid) {\n      this._errors.push(TreeError.create(\n          fullName, endTagToken.sourceSpan,\n          `Void elements do not have end tags \"${endTagToken.parts[1]}\"`));\n    } else if (!this._popElement(fullName)) {\n      const errMsg =\n          `Unexpected closing tag \"${fullName}\". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags`;\n      this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, errMsg));\n    }\n  }\n\n  private _popElement(fullName: string): boolean {\n    for (let stackIndex = this._elementStack.length - 1; stackIndex >= 0; stackIndex--) {\n      const el = this._elementStack[stackIndex];\n      if (el.name == fullName) {\n        this._elementStack.splice(stackIndex, this._elementStack.length - stackIndex);\n        return true;\n      }\n\n      if (!this.getTagDefinition(el.name).closedByParent) {\n        return false;\n      }\n    }\n    return false;\n  }\n\n  private _consumeAttr(attrName: lex.Token): html.Attribute {\n    const fullName = mergeNsAndName(attrName.parts[0], attrName.parts[1]);\n    let end = attrName.sourceSpan.end;\n    let value = '';\n    let valueSpan: ParseSourceSpan = undefined !;\n    if (this._peek.type === lex.TokenType.ATTR_VALUE) {\n      const valueToken = this._advance();\n      value = valueToken.parts[0];\n      end = valueToken.sourceSpan.end;\n      valueSpan = valueToken.sourceSpan;\n    }\n    return new html.Attribute(\n        fullName, value, new ParseSourceSpan(attrName.sourceSpan.start, end), valueSpan);\n  }\n\n  private _getParentElement(): html.Element|null {\n    return this._elementStack.length > 0 ? this._elementStack[this._elementStack.length - 1] : null;\n  }\n\n  /**\n   * Returns the parent in the DOM and the container.\n   *\n   * `<ng-container>` elements are skipped as they are not rendered as DOM element.\n   */\n  private _getParentElementSkippingContainers():\n      {parent: html.Element | null, container: html.Element|null} {\n    let container: html.Element|null = null;\n\n    for (let i = this._elementStack.length - 1; i >= 0; i--) {\n      if (!isNgContainer(this._elementStack[i].name)) {\n        return {parent: this._elementStack[i], container};\n      }\n      container = this._elementStack[i];\n    }\n\n    return {parent: null, container};\n  }\n\n  private _addToParent(node: html.Node) {\n    const parent = this._getParentElement();\n    if (parent != null) {\n      parent.children.push(node);\n    } else {\n      this._rootNodes.push(node);\n    }\n  }\n\n  /**\n   * Insert a node between the parent and the container.\n   * When no container is given, the node is appended as a child of the parent.\n   * Also updates the element stack accordingly.\n   *\n   * @internal\n   */\n  private _insertBeforeContainer(\n      parent: html.Element, container: html.Element|null, node: html.Element) {\n    if (!container) {\n      this._addToParent(node);\n      this._elementStack.push(node);\n    } else {\n      if (parent) {\n        // replace the container with the new node in the children\n        const index = parent.children.indexOf(container);\n        parent.children[index] = node;\n      } else {\n        this._rootNodes.push(node);\n      }\n      node.children.push(container);\n      this._elementStack.splice(this._elementStack.indexOf(container), 0, node);\n    }\n  }\n\n  private _getElementFullName(prefix: string, localName: string, parentElement: html.Element|null):\n      string {\n    if (prefix == null) {\n      prefix = this.getTagDefinition(localName).implicitNamespacePrefix !;\n      if (prefix == null && parentElement != null) {\n        prefix = getNsPrefix(parentElement.name);\n      }\n    }\n\n    return mergeNsAndName(prefix, localName);\n  }\n}\n\nfunction lastOnStack(stack: any[], element: any): boolean {\n  return stack.length > 0 && stack[stack.length - 1] === element;\n}\n"],"sourceRoot":""}