Liferay.Loader.define('@example-angular-liferay$angular/compiler@6.1.10/esm2015/testing/src/output/source_map_util', ['module', 'exports', 'require', 'example-angular-liferay$base64-js', 'example-angular-liferay$source-map'], function (module, exports, require) {
  var define = undefined;
  /**
   * @fileoverview added by tsickle
   * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
   */
  /**
   * @license
   * Copyright Google Inc. All Rights Reserved.
   *
   * Use of this source code is governed by an MIT-style license that can be
   * found in the LICENSE file at https://angular.io/license
   */
  /** @type {?} */
  const b64 = require('example-angular-liferay$base64-js');
  /** @type {?} */
  const SourceMapConsumer = require('example-angular-liferay$source-map').SourceMapConsumer;
  /**
   * @record
   */
  export function SourceLocation() {}
  /** @type {?} */
  SourceLocation.prototype.line;
  /** @type {?} */
  SourceLocation.prototype.column;
  /** @type {?} */
  SourceLocation.prototype.source;
  /**
   * @param {?} sourceMap
   * @param {?} genPosition
   * @return {?}
   */
  export function originalPositionFor(sourceMap, genPosition) {
    /** @type {?} */
    const smc = new SourceMapConsumer(sourceMap);
    const { line, column, source } = smc.originalPositionFor(genPosition);
    return { line, column, source };
  }
  /**
   * @param {?} source
   * @return {?}
   */
  export function extractSourceMap(source) {
    /** @type {?} */
    let idx = source.lastIndexOf('\n//#');
    if (idx == -1) return null;
    /** @type {?} */
    const smComment = source.slice(idx).trim();
    /** @type {?} */
    const smB64 = smComment.split('sourceMappingURL=data:application/json;base64,')[1];
    return smB64 ? JSON.parse(decodeB64String(smB64)) : null;
  }
  /**
   * @param {?} s
   * @return {?}
   */
  function decodeB64String(s) {
    return b64.toByteArray(s).reduce((s, c) => s + String.fromCharCode(c), '');
  }
});
//# sourceMappingURL=source_map_util.js.map