{"version":3,"sources":["../../../../../../../packages/compiler/src/output/ts_emitter.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAYA,YAAA,qBAAA,QAAA,uEAAA,CAAA;AACA,YAAA,IAAA,QAAA,iEAAA,CAAA;AAEA,YAAM,iBAAiB,YAAvB;AAEA,iBAAA,0BAAA,CAA2C,GAA3C,EAA2F;AAEzF,gBAAM,YAAY,IAAI,iBAAJ,EAAlB;AACA,gBAAM,MAAM,mBAAA,qBAAA,CAAsB,UAAtB,EAAZ;AACA,gBAAM,OAAc,MAAM,OAAN,CAAc,GAAd,IAAqB,GAArB,GAA2B,CAAC,GAAD,CAA/C;AAEA,iBAAK,OAAL,CAAa,UAAC,GAAD,EAAI;AACf,oBAAI,eAAe,EAAE,SAArB,EAAgC;AAC9B,wBAAI,cAAJ,CAAmB,SAAnB,EAA8B,GAA9B;AACD,iBAFD,MAEO,IAAI,eAAe,EAAE,UAArB,EAAiC;AACtC,wBAAI,eAAJ,CAAoB,SAApB,EAA+B,GAA/B;AACD,iBAFM,MAEA,IAAI,eAAe,EAAE,IAArB,EAA2B;AAChC,wBAAI,SAAJ,CAAc,SAAd,EAAyB,GAAzB;AACD,iBAFM,MAEA;AACL,0BAAM,IAAI,KAAJ,CAAU,4CAA0C,GAApD,CAAN;AACD;AACF,aAVD;AAWA,mBAAO,IAAI,QAAJ,EAAP;AACD;AAlBD,gBAAA,0BAAA,GAAA,0BAAA;AAsBA,YAAA,oBAAA,aAAA,YAAA;AAAA,qBAAA,iBAAA,GAAA,CAwCC;AAvCC,8BAAA,SAAA,CAAA,wBAAA,GAAA,UACI,WADJ,EACyB,KADzB,EAC+C,QAD/C,EAEI,cAFJ,EAEoC,eAFpC,EAGI,YAHJ,EAGkC;AAFa,oBAAA,aAAA,KAAA,CAAA,EAAA;AAAA,+BAAA,EAAA;AAAqB;AAChE,oBAAA,mBAAA,KAAA,CAAA,EAAA;AAAA,qCAAA,IAAA;AAA8B;AAEhC,oBAAM,YAAY,IAAI,iBAAJ,CAAsB,eAAtB,EAAuC,YAAvC,CAAlB;AAEA,oBAAM,MAAM,mBAAA,qBAAA,CAAsB,UAAtB,EAAZ;AAEA,0BAAU,kBAAV,CAA6B,KAA7B,EAAoC,GAApC;AAEA,oBAAM,gBAAgB,WAAW,SAAS,KAAT,CAAe,IAAf,CAAX,GAAkC,EAAxD;AACA,0BAAU,SAAV,CAAoB,OAApB,CAA4B,UAAC,SAAD,EAAY,kBAAZ,EAA8B;AACxD,wBAAM,gBACF,UAAU,GAAV,CAAc,UAAA,QAAA,EAAQ;AAAI,+BAAG,SAAS,IAAT,GAAa,MAAb,GAAoB,SAAvB,EAAA;AAAoC,qBAA9D,EAAgE,IAAhE,CAAqE,GAArE,CADJ;AAEA,kCAAc,IAAd,CAAmB,aAAW,aAAX,GAAwB,UAAxB,GAAmC,kBAAnC,GAAqD,IAAxE;AACD,iBAJD;AAMA,0BAAU,mBAAV,CAA8B,OAA9B,CAAsC,UAAC,MAAD,EAAS,kBAAT,EAA2B;AAC/D;AACA,kCAAc,IAAd,CACI,SACA,cAAY,MAAZ,GAAkB,SAAlB,GAA4B,kBAA5B,GAA8C,IAD9C,CADJ;AAGD,iBALD;AAOA,oBAAM,KAAK,iBACP,IAAI,oBAAJ,CAAyB,WAAzB,EAAsC,cAAc,MAApD,EAA4D,WAA5D,EADO,GAEP,EAFJ;AAGA,oBAAM,QAAK,QAAA,QAAA,CAAO,aAAP,EAAoB,CAAE,IAAI,QAAJ,EAAF,EAAkB,EAAlB,CAApB,CAAX;AACA,oBAAI,EAAJ,EAAQ;AACN;AACA,0BAAM,IAAN,CAAW,EAAX;AACD;AACD,oBAAI,oBAAJ,CAAyB,cAAc,MAAvC;AACA,uBAAO,EAAC,YAAY,MAAM,IAAN,CAAW,IAAX,CAAb,EAA+B,SAAS,GAAxC,EAAP;AACD,aAlCD;AAoCA,8BAAA,SAAA,CAAA,cAAA,GAAA,UAAe,WAAf,EAAoC,KAApC,EAA0D,QAA1D,EAA+E;AAArB,oBAAA,aAAA,KAAA,CAAA,EAAA;AAAA,+BAAA,EAAA;AAAqB;AAC7E,uBAAO,KAAK,wBAAL,CAA8B,WAA9B,EAA2C,KAA3C,EAAkD,QAAlD,EAA4D,UAAnE;AACD,aAFD;AAGF,mBAAA,iBAAA;AAAC,SAxCD,EAAA;AAAa,gBAAA,iBAAA,GAAA,iBAAA;AA2Cb,YAAA,oBAAA,aAAA,UAAA,MAAA,EAAA;AAAgC,oBAAA,SAAA,CAAA,iBAAA,EAAA,MAAA;AAG9B,qBAAA,iBAAA,CAAoB,eAApB,EAA+D,YAA/D,EAA6F;AAA7F,oBAAA,QACE,OAAA,IAAA,CAAA,IAAA,EAAM,KAAN,KAAY,IADd;AAAoB,sBAAA,eAAA,GAAA,eAAA;AAA2C,sBAAA,YAAA,GAAA,YAAA;AAFvD,sBAAA,cAAA,GAAiB,CAAjB;AAMR,sBAAA,mBAAA,GAAsB,IAAI,GAAJ,EAAtB;AACA,sBAAA,SAAA,GAAY,IAAI,GAAJ,EAAZ;;AAHC;AAKD,8BAAA,SAAA,CAAA,SAAA,GAAA,UAAU,CAAV,EAA0B,GAA1B,EAAsD,WAAtD,EAAiF;AAA3B,oBAAA,gBAAA,KAAA,CAAA,EAAA;AAAA,kCAAA,KAAA;AAA2B;AAC/E,oBAAI,CAAJ,EAAO;AACL,yBAAK,cAAL;AACA,sBAAE,SAAF,CAAY,IAAZ,EAAkB,GAAlB;AACA,yBAAK,cAAL;AACD,iBAJD,MAIO;AACL,wBAAI,KAAJ,CAAU,IAAV,EAAgB,WAAhB;AACD;AACF,aARD;AAUA,8BAAA,SAAA,CAAA,gBAAA,GAAA,UAAiB,GAAjB,EAAqC,GAArC,EAA+D;AAC7D,oBAAM,QAAQ,IAAI,KAAlB;AACA,oBAAI,SAAS,IAAT,IAAiB,IAAI,IAAJ,IAAY,EAAE,aAAnC,EAAkD;AAChD,wBAAI,KAAJ,CAAU,GAAV,EAAe,MAAI,KAAJ,GAAS,UAAxB;AACA,2BAAO,IAAP;AACD;AACD,uBAAO,OAAA,SAAA,CAAM,gBAAN,CAAsB,IAAtB,CAAsB,IAAtB,EAAuB,GAAvB,EAA4B,GAA5B,CAAP;AACD,aAPD;AAUA;AACA;AACA;AACA;AACA,8BAAA,SAAA,CAAA,qBAAA,GAAA,UAAsB,GAAtB,EAA+C,GAA/C,EAAyE;AACvE,oBAAI,IAAI,OAAJ,CAAY,MAAZ,KAAuB,CAA3B,EAA8B;AAC5B,wBAAI,KAAJ,CAAU,GAAV,EAAe,GAAf;AACD;AACD,oBAAM,SAAS,OAAA,SAAA,CAAM,qBAAN,CAA2B,IAA3B,CAA2B,IAA3B,EAA4B,GAA5B,EAAiC,GAAjC,CAAf;AACA,oBAAI,IAAI,OAAJ,CAAY,MAAZ,KAAuB,CAA3B,EAA8B;AAC5B,wBAAI,KAAJ,CAAU,GAAV,EAAe,YAAf;AACD;AACD,uBAAO,MAAP;AACD,aATD;AAWA,8BAAA,SAAA,CAAA,iBAAA,GAAA,UAAkB,GAAlB,EAAuC,GAAvC,EAAiE;AAC/D,qBAAK,gBAAL,CAAsB,IAAI,KAA1B,EAAiC,IAAI,UAArC,EAAiD,GAAjD;AACA,uBAAO,IAAP;AACD,aAHD;AAKA,8BAAA,SAAA,CAAA,sBAAA,GAAA,UAAuB,GAAvB,EAA6C,GAA7C,EAAuE;AACrE,oBAAM,SAAS,OAAA,SAAA,CAAM,sBAAN,CAA4B,IAA5B,CAA4B,IAA5B,EAA6B,GAA7B,EAAkC,GAAlC,CAAf;AACA,oBAAI,KAAJ,CAAU,GAAV,EAAe,GAAf;AACA,uBAAO,MAAP;AACD,aAJD;AAMA,8BAAA,SAAA,CAAA,mBAAA,GAAA,UAAoB,IAApB,EAA4C,GAA5C,EAAsE;AACpE,oBAAI,KAAK,WAAL,CAAiB,EAAE,YAAF,CAAe,QAAhC,KAA6C,KAAK,KAAL,YAAsB,EAAE,YAArE,IACA,CAAC,KAAK,IADV,EACgB;AACd;AACM,wBAAA,KAAA,KAAA,KAAA,CAAA,KAAA;AAAA,wBAAC,SAAA,GAAA,IAAD;AAAA,wBAAO,aAAA,GAAA,UAAP;AACN,wBAAI,UAAJ,EAAgB;AACd,4BAAI,YAAY,KAAK,SAAL,CAAe,GAAf,CAAmB,UAAnB,CAAhB;AACA,4BAAI,CAAC,SAAL,EAAgB;AACd,wCAAY,EAAZ;AACA,iCAAK,SAAL,CAAe,GAAf,CAAmB,UAAnB,EAA+B,SAA/B;AACD;AACD,kCAAU,IAAV,CAAe,EAAC,MAAM,MAAP,EAAe,IAAI,KAAK,IAAxB,EAAf;AACA,+BAAO,IAAP;AACD;AACF;AACD,oBAAI,KAAK,WAAL,CAAiB,EAAE,YAAF,CAAe,QAAhC,CAAJ,EAA+C;AAC7C,wBAAI,KAAJ,CAAU,IAAV,EAAgB,SAAhB;AACD;AACD,oBAAI,KAAK,WAAL,CAAiB,EAAE,YAAF,CAAe,KAAhC,CAAJ,EAA4C;AAC1C,wBAAI,KAAJ,CAAU,IAAV,EAAgB,OAAhB;AACD,iBAFD,MAEO;AACL,wBAAI,KAAJ,CAAU,IAAV,EAAgB,KAAhB;AACD;AACD,oBAAI,KAAJ,CAAU,IAAV,EAAgB,MAAI,KAAK,IAAzB;AACA,qBAAK,eAAL,CAAqB,KAAK,IAA1B,EAAgC,GAAhC;AACA,oBAAI,KAAK,KAAT,EAAgB;AACd,wBAAI,KAAJ,CAAU,IAAV,EAAgB,KAAhB;AACA,yBAAK,KAAL,CAAW,eAAX,CAA2B,IAA3B,EAAiC,GAAjC;AACD;AACD,oBAAI,OAAJ,CAAY,IAAZ,EAAkB,GAAlB;AACA,uBAAO,IAAP;AACD,aA/BD;AAiCA,8BAAA,SAAA,CAAA,oBAAA,GAAA,UAAqB,GAArB,EAAkD,GAAlD,EAA4E;AAC1E,sBAAM,IAAI,KAAJ,CAAU,4DAAV,CAAN;AACD,aAFD;AAIA,8BAAA,SAAA,CAAA,aAAA,GAAA,UAAc,GAAd,EAA+B,GAA/B,EAAyD;AACvD,oBAAI,KAAJ,CAAU,GAAV,EAAe,IAAf;AACA,oBAAI,IAAJ,CAAW,SAAX,CAAqB,IAArB,EAA2B,GAA3B;AACA,oBAAI,KAAJ,CAAU,GAAV,EAAe,GAAf;AACA,oBAAI,KAAJ,CAAU,eAAV,CAA0B,IAA1B,EAAgC,GAAhC;AACA,oBAAI,KAAJ,CAAU,GAAV,EAAe,GAAf;AACA,uBAAO,IAAP;AACD,aAPD;AASA,8BAAA,SAAA,CAAA,oBAAA,GAAA,UAAqB,GAArB,EAA6C,GAA7C,EAAuE;AACrE,oBAAI,KAAJ,CAAU,GAAV,EAAe,MAAf;AACA,qBAAK,cAAL;AACA,oBAAI,SAAJ,CAAc,eAAd,CAA8B,IAA9B,EAAoC,GAApC;AACA,qBAAK,cAAL;AACA,oBAAI,KAAJ,CAAU,GAAV,EAAe,GAAf;AACA,qBAAK,mBAAL,CAAyB,IAAI,IAA7B,EAAmC,GAAnC,EAAwC,GAAxC;AACA,oBAAI,KAAJ,CAAU,GAAV,EAAe,GAAf;AACA,uBAAO,IAAP;AACD,aATD;AAWA,8BAAA,SAAA,CAAA,qBAAA,GAAA,UAAsB,IAAtB,EAAyC,GAAzC,EAAmE;AAAnE,oBAAA,QAAA,IAAA;AACE,oBAAI,SAAJ,CAAc,IAAd;AACA,oBAAI,KAAK,WAAL,CAAiB,EAAE,YAAF,CAAe,QAAhC,CAAJ,EAA+C;AAC7C,wBAAI,KAAJ,CAAU,IAAV,EAAgB,SAAhB;AACD;AACD,oBAAI,KAAJ,CAAU,IAAV,EAAgB,WAAS,KAAK,IAA9B;AACA,oBAAI,KAAK,MAAL,IAAe,IAAnB,EAAyB;AACvB,wBAAI,KAAJ,CAAU,IAAV,EAAgB,WAAhB;AACA,yBAAK,cAAL;AACA,yBAAK,MAAL,CAAY,eAAZ,CAA4B,IAA5B,EAAkC,GAAlC;AACA,yBAAK,cAAL;AACD;AACD,oBAAI,OAAJ,CAAY,IAAZ,EAAkB,IAAlB;AACA,oBAAI,SAAJ;AACA,qBAAK,MAAL,CAAY,OAAZ,CAAoB,UAAC,KAAD,EAAM;AAAK,2BAAA,MAAK,gBAAL,CAAsB,KAAtB,EAAA,GAAA,CAAA;AAAiC,iBAAhE;AACA,oBAAI,KAAK,iBAAL,IAA0B,IAA9B,EAAoC;AAClC,yBAAK,sBAAL,CAA4B,IAA5B,EAAkC,GAAlC;AACD;AACD,qBAAK,OAAL,CAAa,OAAb,CAAqB,UAAC,MAAD,EAAO;AAAK,2BAAA,MAAK,iBAAL,CAAuB,MAAvB,EAAA,GAAA,CAAA;AAAmC,iBAApE;AACA,qBAAK,OAAL,CAAa,OAAb,CAAqB,UAAC,MAAD,EAAO;AAAK,2BAAA,MAAK,iBAAL,CAAuB,MAAvB,EAAA,GAAA,CAAA;AAAmC,iBAApE;AACA,oBAAI,SAAJ;AACA,oBAAI,OAAJ,CAAY,IAAZ,EAAkB,GAAlB;AACA,oBAAI,QAAJ;AACA,uBAAO,IAAP;AACD,aAxBD;AA0BQ,8BAAA,SAAA,CAAA,gBAAA,GAAR,UAAyB,KAAzB,EAA8C,GAA9C,EAAwE;AACtE,oBAAI,MAAM,WAAN,CAAkB,EAAE,YAAF,CAAe,OAAjC,CAAJ,EAA+C;AAC7C;AACA,wBAAI,KAAJ,CAAU,IAAV,EAAgB,cAAhB;AACD;AACD,oBAAI,MAAM,WAAN,CAAkB,EAAE,YAAF,CAAe,MAAjC,CAAJ,EAA8C;AAC5C,wBAAI,KAAJ,CAAU,IAAV,EAAgB,SAAhB;AACD;AACD,oBAAI,KAAJ,CAAU,IAAV,EAAgB,MAAM,IAAtB;AACA,qBAAK,eAAL,CAAqB,MAAM,IAA3B,EAAiC,GAAjC;AACA,oBAAI,MAAM,WAAV,EAAuB;AACrB,wBAAI,KAAJ,CAAU,IAAV,EAAgB,KAAhB;AACA,0BAAM,WAAN,CAAkB,eAAlB,CAAkC,IAAlC,EAAwC,GAAxC;AACD;AACD,oBAAI,OAAJ,CAAY,IAAZ,EAAkB,GAAlB;AACD,aAfO;AAiBA,8BAAA,SAAA,CAAA,iBAAA,GAAR,UAA0B,MAA1B,EAAiD,GAAjD,EAA2E;AACzE,oBAAI,OAAO,WAAP,CAAmB,EAAE,YAAF,CAAe,OAAlC,CAAJ,EAAgD;AAC9C,wBAAI,KAAJ,CAAU,IAAV,EAAgB,UAAhB;AACD;AACD,oBAAI,KAAJ,CAAU,IAAV,EAAgB,SAAO,OAAO,IAAd,GAAkB,IAAlC;AACA,qBAAK,eAAL,CAAqB,OAAO,IAA5B,EAAkC,GAAlC;AACA,oBAAI,OAAJ,CAAY,IAAZ,EAAkB,IAAlB;AACA,oBAAI,SAAJ;AACA,qBAAK,kBAAL,CAAwB,OAAO,IAA/B,EAAqC,GAArC;AACA,oBAAI,SAAJ;AACA,oBAAI,OAAJ,CAAY,IAAZ,EAAkB,GAAlB;AACD,aAXO;AAaA,8BAAA,SAAA,CAAA,sBAAA,GAAR,UAA+B,IAA/B,EAAkD,GAAlD,EAA4E;AAC1E,oBAAI,KAAJ,CAAU,IAAV,EAAgB,cAAhB;AACA,qBAAK,YAAL,CAAkB,KAAK,iBAAL,CAAuB,MAAzC,EAAiD,GAAjD;AACA,oBAAI,OAAJ,CAAY,IAAZ,EAAkB,KAAlB;AACA,oBAAI,SAAJ;AACA,qBAAK,kBAAL,CAAwB,KAAK,iBAAL,CAAuB,IAA/C,EAAqD,GAArD;AACA,oBAAI,SAAJ;AACA,oBAAI,OAAJ,CAAY,IAAZ,EAAkB,GAAlB;AACD,aARO;AAUA,8BAAA,SAAA,CAAA,iBAAA,GAAR,UAA0B,MAA1B,EAAiD,GAAjD,EAA2E;AACzE,oBAAI,OAAO,WAAP,CAAmB,EAAE,YAAF,CAAe,OAAlC,CAAJ,EAAgD;AAC9C,wBAAI,KAAJ,CAAU,IAAV,EAAgB,UAAhB;AACD;AACD,oBAAI,KAAJ,CAAU,IAAV,EAAmB,OAAO,IAAP,GAAW,GAA9B;AACA,qBAAK,YAAL,CAAkB,OAAO,MAAzB,EAAiC,GAAjC;AACA,oBAAI,KAAJ,CAAU,IAAV,EAAgB,GAAhB;AACA,qBAAK,eAAL,CAAqB,OAAO,IAA5B,EAAkC,GAAlC,EAAuC,MAAvC;AACA,oBAAI,OAAJ,CAAY,IAAZ,EAAkB,IAAlB;AACA,oBAAI,SAAJ;AACA,qBAAK,kBAAL,CAAwB,OAAO,IAA/B,EAAqC,GAArC;AACA,oBAAI,SAAJ;AACA,oBAAI,OAAJ,CAAY,IAAZ,EAAkB,GAAlB;AACD,aAbO;AAeR,8BAAA,SAAA,CAAA,iBAAA,GAAA,UAAkB,GAAlB,EAAuC,GAAvC,EAAiE;AAC/D,oBAAI,IAAI,IAAR,EAAc;AACZ,wBAAI,KAAJ,CAAU,GAAV,EAAe,WAAf;AACA,wBAAI,KAAJ,CAAU,GAAV,EAAe,IAAI,IAAnB;AACD;AACD,oBAAI,KAAJ,CAAU,GAAV,EAAe,GAAf;AACA,qBAAK,YAAL,CAAkB,IAAI,MAAtB,EAA8B,GAA9B;AACA,oBAAI,KAAJ,CAAU,GAAV,EAAe,GAAf;AACA,qBAAK,eAAL,CAAqB,IAAI,IAAzB,EAA+B,GAA/B,EAAoC,MAApC;AACA,oBAAI,CAAC,IAAI,IAAT,EAAe;AACb,wBAAI,KAAJ,CAAU,GAAV,EAAe,MAAf;AACD;AACD,oBAAI,OAAJ,CAAY,GAAZ,EAAiB,GAAjB;AACA,oBAAI,SAAJ;AACA,qBAAK,kBAAL,CAAwB,IAAI,UAA5B,EAAwC,GAAxC;AACA,oBAAI,SAAJ;AACA,oBAAI,KAAJ,CAAU,GAAV,EAAe,GAAf;AAEA,uBAAO,IAAP;AACD,aAnBD;AAqBA,8BAAA,SAAA,CAAA,wBAAA,GAAA,UAAyB,IAAzB,EAAsD,GAAtD,EAAgF;AAC9E,oBAAI,KAAK,WAAL,CAAiB,EAAE,YAAF,CAAe,QAAhC,CAAJ,EAA+C;AAC7C,wBAAI,KAAJ,CAAU,IAAV,EAAgB,SAAhB;AACD;AACD,oBAAI,KAAJ,CAAU,IAAV,EAAgB,cAAY,KAAK,IAAjB,GAAqB,GAArC;AACA,qBAAK,YAAL,CAAkB,KAAK,MAAvB,EAA+B,GAA/B;AACA,oBAAI,KAAJ,CAAU,IAAV,EAAgB,GAAhB;AACA,qBAAK,eAAL,CAAqB,KAAK,IAA1B,EAAgC,GAAhC,EAAqC,MAArC;AACA,oBAAI,OAAJ,CAAY,IAAZ,EAAkB,IAAlB;AACA,oBAAI,SAAJ;AACA,qBAAK,kBAAL,CAAwB,KAAK,UAA7B,EAAyC,GAAzC;AACA,oBAAI,SAAJ;AACA,oBAAI,OAAJ,CAAY,IAAZ,EAAkB,GAAlB;AACA,uBAAO,IAAP;AACD,aAdD;AAgBA,8BAAA,SAAA,CAAA,iBAAA,GAAA,UAAkB,IAAlB,EAAwC,GAAxC,EAAkE;AAChE,oBAAI,OAAJ,CAAY,IAAZ,EAAkB,OAAlB;AACA,oBAAI,SAAJ;AACA,qBAAK,kBAAL,CAAwB,KAAK,SAA7B,EAAwC,GAAxC;AACA,oBAAI,SAAJ;AACA,oBAAI,OAAJ,CAAY,IAAZ,EAAkB,cAAY,mBAAA,eAAA,CAAgB,IAA5B,GAAgC,KAAlD;AACA,oBAAI,SAAJ;AACA,oBAAM,aACF,CAAc,mBAAA,eAAA,CAAgB,GAAhB,CAAoB,mBAAA,eAAA,CAAgB,IAAhB,CAAqB,OAArB,EAA8B,IAA9B,CAApB,EAAyD,UAAzD,CAAoE,IAApE,EAA0E,CACtF,EAAE,YAAF,CAAe,KADuE,CAA1E,CAAd,EAEI,MAFJ,CAEW,KAAK,UAFhB,CADJ;AAIA,qBAAK,kBAAL,CAAwB,UAAxB,EAAoC,GAApC;AACA,oBAAI,SAAJ;AACA,oBAAI,OAAJ,CAAY,IAAZ,EAAkB,GAAlB;AACA,uBAAO,IAAP;AACD,aAfD;AAiBA,8BAAA,SAAA,CAAA,gBAAA,GAAA,UAAiB,IAAjB,EAAsC,GAAtC,EAAgE;AAC9D,oBAAI,OAAJ;AACA,wBAAQ,KAAK,IAAb;AACE,yBAAK,EAAE,eAAF,CAAkB,IAAvB;AACE,kCAAU,SAAV;AACA;AACF,yBAAK,EAAE,eAAF,CAAkB,OAAvB;AACE,kCAAU,KAAV;AACA;AACF,yBAAK,EAAE,eAAF,CAAkB,QAAvB;AACE,kCAAU,UAAV;AACA;AACF,yBAAK,EAAE,eAAF,CAAkB,MAAvB;AACE,kCAAU,QAAV;AACA;AACF,yBAAK,EAAE,eAAF,CAAkB,GAAvB;AACE,kCAAU,QAAV;AACA;AACF,yBAAK,EAAE,eAAF,CAAkB,MAAvB;AACE,kCAAU,QAAV;AACA;AACF,yBAAK,EAAE,eAAF,CAAkB,IAAvB;AACE,kCAAU,OAAV;AACA;AACF;AACE,8BAAM,IAAI,KAAJ,CAAU,8BAA4B,KAAK,IAA3C,CAAN;AAvBJ;AAyBA,oBAAI,KAAJ,CAAU,IAAV,EAAgB,OAAhB;AACA,uBAAO,IAAP;AACD,aA7BD;AA+BA,8BAAA,SAAA,CAAA,mBAAA,GAAA,UAAoB,GAApB,EAA2C,GAA3C,EAAqE;AAArE,oBAAA,QAAA,IAAA;AACE,oBAAI,KAAJ,CAAU,eAAV,CAA0B,IAA1B,EAAgC,GAAhC;AACA,oBAAI,IAAI,UAAJ,KAAmB,IAAvB,EAA6B;AAC3B,wBAAI,KAAJ,CAAU,IAAV,EAAgB,GAAhB;AACA,yBAAK,eAAL,CAAqB,UAAA,IAAA,EAAI;AAAI,+BAAA,MAAK,SAAL,CAAe,IAAf,EAAA,GAAA,CAAA;AAAyB,qBAAtD,EAAwD,IAAI,UAA5D,EAAwE,GAAxE,EAA6E,GAA7E;AACA,wBAAI,KAAJ,CAAU,IAAV,EAAgB,GAAhB;AACD;AACD,uBAAO,IAAP;AACD,aARD;AAUA,8BAAA,SAAA,CAAA,cAAA,GAAA,UAAe,IAAf,EAAkC,GAAlC,EAA4D;AAC1D,qBAAK,SAAL,CAAe,KAAK,EAApB,EAAwB,GAAxB;AACA,oBAAI,KAAJ,CAAU,IAAV,EAAgB,IAAhB;AACA,uBAAO,IAAP;AACD,aAJD;AAMA,8BAAA,SAAA,CAAA,YAAA,GAAA,UAAa,IAAb,EAA8B,GAA9B,EAAwD;AACtD,oBAAI,KAAJ,CAAU,IAAV,EAAgB,iBAAhB;AACA,qBAAK,SAAL,CAAe,KAAK,SAApB,EAA+B,GAA/B;AACA,oBAAI,KAAJ,CAAU,IAAV,EAAgB,GAAhB;AACA,uBAAO,IAAP;AACD,aALD;AAOA,8BAAA,SAAA,CAAA,oBAAA,GAAA,UAAqB,MAArB,EAA4C;AAC1C,oBAAI,IAAJ;AACA,wBAAQ,MAAR;AACE,yBAAK,EAAE,aAAF,CAAgB,WAArB;AACE,+BAAO,QAAP;AACA;AACF,yBAAK,EAAE,aAAF,CAAgB,mBAArB;AACE,+BAAO,WAAP;AACA;AACF,yBAAK,EAAE,aAAF,CAAgB,IAArB;AACE,+BAAO,MAAP;AACA;AACF;AACE,8BAAM,IAAI,KAAJ,CAAU,6BAA2B,MAArC,CAAN;AAXJ;AAaA,uBAAO,IAAP;AACD,aAhBD;AAkBQ,8BAAA,SAAA,CAAA,YAAA,GAAR,UAAqB,MAArB,EAA0C,GAA1C,EAAoE;AAApE,oBAAA,QAAA,IAAA;AACE,qBAAK,eAAL,CAAqB,UAAA,KAAA,EAAK;AACxB,wBAAI,KAAJ,CAAU,IAAV,EAAgB,MAAM,IAAtB;AACA,0BAAK,eAAL,CAAqB,MAAM,IAA3B,EAAiC,GAAjC;AACD,iBAHD,EAGG,MAHH,EAGW,GAHX,EAGgB,GAHhB;AAID,aALO;AAOA,8BAAA,SAAA,CAAA,gBAAA,GAAR,UACI,KADJ,EACgC,UADhC,EAC2D,GAD3D,EACqF;AADrF,oBAAA,QAAA,IAAA;AAES,oBAAA,OAAA,MAAA,IAAA;AAAA,oBAAM,aAAA,MAAA,UAAN;AACP,oBAAI,KAAK,eAAL,IAAwB,KAAK,eAAL,CAAqB,KAArB,CAA5B,EAAyD;AACvD,wBAAI,KAAJ,CAAU,IAAV,EAAgB,eAAhB;AACA;AACD;AACD,oBAAI,eAAe,CAAC,KAAK,YAAN,IAAsB,CAAC,KAAK,YAAL,CAAkB,KAAlB,CAAtC,CAAJ,EAAqE;AACnE,wBAAI,SAAS,KAAK,mBAAL,CAAyB,GAAzB,CAA6B,UAA7B,CAAb;AACA,wBAAI,UAAU,IAAd,EAAoB;AAClB,iCAAS,MAAI,KAAK,mBAAL,CAAyB,IAAtC;AACA,6BAAK,mBAAL,CAAyB,GAAzB,CAA6B,UAA7B,EAAyC,MAAzC;AACD;AACD,wBAAI,KAAJ,CAAU,IAAV,EAAmB,SAAM,GAAzB;AACD;AACD,oBAAI,KAAJ,CAAU,IAAV,EAAgB,IAAhB;AAEA,oBAAI,KAAK,cAAL,GAAsB,CAA1B,EAA6B;AAC3B;AACA;AACA;AACA;AACA;AACA,wBAAM,qBAAqB,cAAc,EAAzC;AACA,wBAAI,mBAAmB,MAAnB,GAA4B,CAAhC,EAAmC;AACjC,4BAAI,KAAJ,CAAU,IAAV,EAAgB,GAAhB;AACA,6BAAK,eAAL,CAAqB,UAAA,IAAA,EAAI;AAAI,mCAAA,KAAK,SAAL,CAAe,KAAf,EAAA,GAAA,CAAA;AAAyB,yBAAtD,EAAwD,UAAxD,EAAsE,GAAtE,EAA2E,GAA3E;AACA,4BAAI,KAAJ,CAAU,IAAV,EAAgB,GAAhB;AACD;AACF;AACF,aA9BO;AAgCA,8BAAA,SAAA,CAAA,eAAA,GAAR,UAAwB,IAAxB,EAA2C,GAA3C,EAAuE,WAAvE,EAA2F;AACzF,oBAAI,SAAS,EAAE,aAAf,EAA8B;AAC5B,wBAAI,KAAJ,CAAU,IAAV,EAAgB,GAAhB;AACA,yBAAK,SAAL,CAAe,IAAf,EAAqB,GAArB,EAA0B,WAA1B;AACD;AACF,aALO;AAMV,mBAAA,iBAAA;AAAC,SA7WD,CAAgC,mBAAA,sBAAhC,CAAA","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {StaticSymbol} from '../aot/static_symbol';\nimport {CompileIdentifierMetadata} from '../compile_metadata';\n\nimport {AbstractEmitterVisitor, CATCH_ERROR_VAR, CATCH_STACK_VAR, EmitterVisitorContext, OutputEmitter} from './abstract_emitter';\nimport * as o from './output_ast';\n\nconst _debugFilePath = '/debug/lib';\n\nexport function debugOutputAstAsTypeScript(ast: o.Statement | o.Expression | o.Type | any[]):\n    string {\n  const converter = new _TsEmitterVisitor();\n  const ctx = EmitterVisitorContext.createRoot();\n  const asts: any[] = Array.isArray(ast) ? ast : [ast];\n\n  asts.forEach((ast) => {\n    if (ast instanceof o.Statement) {\n      ast.visitStatement(converter, ctx);\n    } else if (ast instanceof o.Expression) {\n      ast.visitExpression(converter, ctx);\n    } else if (ast instanceof o.Type) {\n      ast.visitType(converter, ctx);\n    } else {\n      throw new Error(`Don't know how to print debug info for ${ast}`);\n    }\n  });\n  return ctx.toSource();\n}\n\nexport type ReferenceFilter = (reference: o.ExternalReference) => boolean;\n\nexport class TypeScriptEmitter implements OutputEmitter {\n  emitStatementsAndContext(\n      genFilePath: string, stmts: o.Statement[], preamble: string = '',\n      emitSourceMaps: boolean = true, referenceFilter?: ReferenceFilter,\n      importFilter?: ReferenceFilter): {sourceText: string, context: EmitterVisitorContext} {\n    const converter = new _TsEmitterVisitor(referenceFilter, importFilter);\n\n    const ctx = EmitterVisitorContext.createRoot();\n\n    converter.visitAllStatements(stmts, ctx);\n\n    const preambleLines = preamble ? preamble.split('\\n') : [];\n    converter.reexports.forEach((reexports, exportedModuleName) => {\n      const reexportsCode =\n          reexports.map(reexport => `${reexport.name} as ${reexport.as}`).join(',');\n      preambleLines.push(`export {${reexportsCode}} from '${exportedModuleName}';`);\n    });\n\n    converter.importsWithPrefixes.forEach((prefix, importedModuleName) => {\n      // Note: can't write the real word for import as it screws up system.js auto detection...\n      preambleLines.push(\n          `imp` +\n          `ort * as ${prefix} from '${importedModuleName}';`);\n    });\n\n    const sm = emitSourceMaps ?\n        ctx.toSourceMapGenerator(genFilePath, preambleLines.length).toJsComment() :\n        '';\n    const lines = [...preambleLines, ctx.toSource(), sm];\n    if (sm) {\n      // always add a newline at the end, as some tools have bugs without it.\n      lines.push('');\n    }\n    ctx.setPreambleLineCount(preambleLines.length);\n    return {sourceText: lines.join('\\n'), context: ctx};\n  }\n\n  emitStatements(genFilePath: string, stmts: o.Statement[], preamble: string = '') {\n    return this.emitStatementsAndContext(genFilePath, stmts, preamble).sourceText;\n  }\n}\n\n\nclass _TsEmitterVisitor extends AbstractEmitterVisitor implements o.TypeVisitor {\n  private typeExpression = 0;\n\n  constructor(private referenceFilter?: ReferenceFilter, private importFilter?: ReferenceFilter) {\n    super(false);\n  }\n\n  importsWithPrefixes = new Map<string, string>();\n  reexports = new Map<string, {name: string, as: string}[]>();\n\n  visitType(t: o.Type|null, ctx: EmitterVisitorContext, defaultType: string = 'any') {\n    if (t) {\n      this.typeExpression++;\n      t.visitType(this, ctx);\n      this.typeExpression--;\n    } else {\n      ctx.print(null, defaultType);\n    }\n  }\n\n  visitLiteralExpr(ast: o.LiteralExpr, ctx: EmitterVisitorContext): any {\n    const value = ast.value;\n    if (value == null && ast.type != o.INFERRED_TYPE) {\n      ctx.print(ast, `(${value} as any)`);\n      return null;\n    }\n    return super.visitLiteralExpr(ast, ctx);\n  }\n\n\n  // Temporary workaround to support strictNullCheck enabled consumers of ngc emit.\n  // In SNC mode, [] have the type never[], so we cast here to any[].\n  // TODO: narrow the cast to a more explicit type, or use a pattern that does not\n  // start with [].concat. see https://github.com/angular/angular/pull/11846\n  visitLiteralArrayExpr(ast: o.LiteralArrayExpr, ctx: EmitterVisitorContext): any {\n    if (ast.entries.length === 0) {\n      ctx.print(ast, '(');\n    }\n    const result = super.visitLiteralArrayExpr(ast, ctx);\n    if (ast.entries.length === 0) {\n      ctx.print(ast, ' as any[])');\n    }\n    return result;\n  }\n\n  visitExternalExpr(ast: o.ExternalExpr, ctx: EmitterVisitorContext): any {\n    this._visitIdentifier(ast.value, ast.typeParams, ctx);\n    return null;\n  }\n\n  visitAssertNotNullExpr(ast: o.AssertNotNull, ctx: EmitterVisitorContext): any {\n    const result = super.visitAssertNotNullExpr(ast, ctx);\n    ctx.print(ast, '!');\n    return result;\n  }\n\n  visitDeclareVarStmt(stmt: o.DeclareVarStmt, ctx: EmitterVisitorContext): any {\n    if (stmt.hasModifier(o.StmtModifier.Exported) && stmt.value instanceof o.ExternalExpr &&\n        !stmt.type) {\n      // check for a reexport\n      const {name, moduleName} = stmt.value.value;\n      if (moduleName) {\n        let reexports = this.reexports.get(moduleName);\n        if (!reexports) {\n          reexports = [];\n          this.reexports.set(moduleName, reexports);\n        }\n        reexports.push({name: name !, as: stmt.name});\n        return null;\n      }\n    }\n    if (stmt.hasModifier(o.StmtModifier.Exported)) {\n      ctx.print(stmt, `export `);\n    }\n    if (stmt.hasModifier(o.StmtModifier.Final)) {\n      ctx.print(stmt, `const`);\n    } else {\n      ctx.print(stmt, `var`);\n    }\n    ctx.print(stmt, ` ${stmt.name}`);\n    this._printColonType(stmt.type, ctx);\n    if (stmt.value) {\n      ctx.print(stmt, ` = `);\n      stmt.value.visitExpression(this, ctx);\n    }\n    ctx.println(stmt, `;`);\n    return null;\n  }\n\n  visitWrappedNodeExpr(ast: o.WrappedNodeExpr<any>, ctx: EmitterVisitorContext): never {\n    throw new Error('Cannot visit a WrappedNodeExpr when outputting Typescript.');\n  }\n\n  visitCastExpr(ast: o.CastExpr, ctx: EmitterVisitorContext): any {\n    ctx.print(ast, `(<`);\n    ast.type !.visitType(this, ctx);\n    ctx.print(ast, `>`);\n    ast.value.visitExpression(this, ctx);\n    ctx.print(ast, `)`);\n    return null;\n  }\n\n  visitInstantiateExpr(ast: o.InstantiateExpr, ctx: EmitterVisitorContext): any {\n    ctx.print(ast, `new `);\n    this.typeExpression++;\n    ast.classExpr.visitExpression(this, ctx);\n    this.typeExpression--;\n    ctx.print(ast, `(`);\n    this.visitAllExpressions(ast.args, ctx, ',');\n    ctx.print(ast, `)`);\n    return null;\n  }\n\n  visitDeclareClassStmt(stmt: o.ClassStmt, ctx: EmitterVisitorContext): any {\n    ctx.pushClass(stmt);\n    if (stmt.hasModifier(o.StmtModifier.Exported)) {\n      ctx.print(stmt, `export `);\n    }\n    ctx.print(stmt, `class ${stmt.name}`);\n    if (stmt.parent != null) {\n      ctx.print(stmt, ` extends `);\n      this.typeExpression++;\n      stmt.parent.visitExpression(this, ctx);\n      this.typeExpression--;\n    }\n    ctx.println(stmt, ` {`);\n    ctx.incIndent();\n    stmt.fields.forEach((field) => this._visitClassField(field, ctx));\n    if (stmt.constructorMethod != null) {\n      this._visitClassConstructor(stmt, ctx);\n    }\n    stmt.getters.forEach((getter) => this._visitClassGetter(getter, ctx));\n    stmt.methods.forEach((method) => this._visitClassMethod(method, ctx));\n    ctx.decIndent();\n    ctx.println(stmt, `}`);\n    ctx.popClass();\n    return null;\n  }\n\n  private _visitClassField(field: o.ClassField, ctx: EmitterVisitorContext) {\n    if (field.hasModifier(o.StmtModifier.Private)) {\n      // comment out as a workaround for #10967\n      ctx.print(null, `/*private*/ `);\n    }\n    if (field.hasModifier(o.StmtModifier.Static)) {\n      ctx.print(null, 'static ');\n    }\n    ctx.print(null, field.name);\n    this._printColonType(field.type, ctx);\n    if (field.initializer) {\n      ctx.print(null, ' = ');\n      field.initializer.visitExpression(this, ctx);\n    }\n    ctx.println(null, `;`);\n  }\n\n  private _visitClassGetter(getter: o.ClassGetter, ctx: EmitterVisitorContext) {\n    if (getter.hasModifier(o.StmtModifier.Private)) {\n      ctx.print(null, `private `);\n    }\n    ctx.print(null, `get ${getter.name}()`);\n    this._printColonType(getter.type, ctx);\n    ctx.println(null, ` {`);\n    ctx.incIndent();\n    this.visitAllStatements(getter.body, ctx);\n    ctx.decIndent();\n    ctx.println(null, `}`);\n  }\n\n  private _visitClassConstructor(stmt: o.ClassStmt, ctx: EmitterVisitorContext) {\n    ctx.print(stmt, `constructor(`);\n    this._visitParams(stmt.constructorMethod.params, ctx);\n    ctx.println(stmt, `) {`);\n    ctx.incIndent();\n    this.visitAllStatements(stmt.constructorMethod.body, ctx);\n    ctx.decIndent();\n    ctx.println(stmt, `}`);\n  }\n\n  private _visitClassMethod(method: o.ClassMethod, ctx: EmitterVisitorContext) {\n    if (method.hasModifier(o.StmtModifier.Private)) {\n      ctx.print(null, `private `);\n    }\n    ctx.print(null, `${method.name}(`);\n    this._visitParams(method.params, ctx);\n    ctx.print(null, `)`);\n    this._printColonType(method.type, ctx, 'void');\n    ctx.println(null, ` {`);\n    ctx.incIndent();\n    this.visitAllStatements(method.body, ctx);\n    ctx.decIndent();\n    ctx.println(null, `}`);\n  }\n\n  visitFunctionExpr(ast: o.FunctionExpr, ctx: EmitterVisitorContext): any {\n    if (ast.name) {\n      ctx.print(ast, 'function ');\n      ctx.print(ast, ast.name);\n    }\n    ctx.print(ast, `(`);\n    this._visitParams(ast.params, ctx);\n    ctx.print(ast, `)`);\n    this._printColonType(ast.type, ctx, 'void');\n    if (!ast.name) {\n      ctx.print(ast, ` => `);\n    }\n    ctx.println(ast, '{');\n    ctx.incIndent();\n    this.visitAllStatements(ast.statements, ctx);\n    ctx.decIndent();\n    ctx.print(ast, `}`);\n\n    return null;\n  }\n\n  visitDeclareFunctionStmt(stmt: o.DeclareFunctionStmt, ctx: EmitterVisitorContext): any {\n    if (stmt.hasModifier(o.StmtModifier.Exported)) {\n      ctx.print(stmt, `export `);\n    }\n    ctx.print(stmt, `function ${stmt.name}(`);\n    this._visitParams(stmt.params, ctx);\n    ctx.print(stmt, `)`);\n    this._printColonType(stmt.type, ctx, 'void');\n    ctx.println(stmt, ` {`);\n    ctx.incIndent();\n    this.visitAllStatements(stmt.statements, ctx);\n    ctx.decIndent();\n    ctx.println(stmt, `}`);\n    return null;\n  }\n\n  visitTryCatchStmt(stmt: o.TryCatchStmt, ctx: EmitterVisitorContext): any {\n    ctx.println(stmt, `try {`);\n    ctx.incIndent();\n    this.visitAllStatements(stmt.bodyStmts, ctx);\n    ctx.decIndent();\n    ctx.println(stmt, `} catch (${CATCH_ERROR_VAR.name}) {`);\n    ctx.incIndent();\n    const catchStmts =\n        [<o.Statement>CATCH_STACK_VAR.set(CATCH_ERROR_VAR.prop('stack', null)).toDeclStmt(null, [\n          o.StmtModifier.Final\n        ])].concat(stmt.catchStmts);\n    this.visitAllStatements(catchStmts, ctx);\n    ctx.decIndent();\n    ctx.println(stmt, `}`);\n    return null;\n  }\n\n  visitBuiltinType(type: o.BuiltinType, ctx: EmitterVisitorContext): any {\n    let typeStr: string;\n    switch (type.name) {\n      case o.BuiltinTypeName.Bool:\n        typeStr = 'boolean';\n        break;\n      case o.BuiltinTypeName.Dynamic:\n        typeStr = 'any';\n        break;\n      case o.BuiltinTypeName.Function:\n        typeStr = 'Function';\n        break;\n      case o.BuiltinTypeName.Number:\n        typeStr = 'number';\n        break;\n      case o.BuiltinTypeName.Int:\n        typeStr = 'number';\n        break;\n      case o.BuiltinTypeName.String:\n        typeStr = 'string';\n        break;\n      case o.BuiltinTypeName.None:\n        typeStr = 'never';\n        break;\n      default:\n        throw new Error(`Unsupported builtin type ${type.name}`);\n    }\n    ctx.print(null, typeStr);\n    return null;\n  }\n\n  visitExpressionType(ast: o.ExpressionType, ctx: EmitterVisitorContext): any {\n    ast.value.visitExpression(this, ctx);\n    if (ast.typeParams !== null) {\n      ctx.print(null, '<');\n      this.visitAllObjects(type => this.visitType(type, ctx), ast.typeParams, ctx, ',');\n      ctx.print(null, '>');\n    }\n    return null;\n  }\n\n  visitArrayType(type: o.ArrayType, ctx: EmitterVisitorContext): any {\n    this.visitType(type.of, ctx);\n    ctx.print(null, `[]`);\n    return null;\n  }\n\n  visitMapType(type: o.MapType, ctx: EmitterVisitorContext): any {\n    ctx.print(null, `{[key: string]:`);\n    this.visitType(type.valueType, ctx);\n    ctx.print(null, `}`);\n    return null;\n  }\n\n  getBuiltinMethodName(method: o.BuiltinMethod): string {\n    let name: string;\n    switch (method) {\n      case o.BuiltinMethod.ConcatArray:\n        name = 'concat';\n        break;\n      case o.BuiltinMethod.SubscribeObservable:\n        name = 'subscribe';\n        break;\n      case o.BuiltinMethod.Bind:\n        name = 'bind';\n        break;\n      default:\n        throw new Error(`Unknown builtin method: ${method}`);\n    }\n    return name;\n  }\n\n  private _visitParams(params: o.FnParam[], ctx: EmitterVisitorContext): void {\n    this.visitAllObjects(param => {\n      ctx.print(null, param.name);\n      this._printColonType(param.type, ctx);\n    }, params, ctx, ',');\n  }\n\n  private _visitIdentifier(\n      value: o.ExternalReference, typeParams: o.Type[]|null, ctx: EmitterVisitorContext): void {\n    const {name, moduleName} = value;\n    if (this.referenceFilter && this.referenceFilter(value)) {\n      ctx.print(null, '(null as any)');\n      return;\n    }\n    if (moduleName && (!this.importFilter || !this.importFilter(value))) {\n      let prefix = this.importsWithPrefixes.get(moduleName);\n      if (prefix == null) {\n        prefix = `i${this.importsWithPrefixes.size}`;\n        this.importsWithPrefixes.set(moduleName, prefix);\n      }\n      ctx.print(null, `${prefix}.`);\n    }\n    ctx.print(null, name !);\n\n    if (this.typeExpression > 0) {\n      // If we are in a type expression that refers to a generic type then supply\n      // the required type parameters. If there were not enough type parameters\n      // supplied, supply any as the type. Outside a type expression the reference\n      // should not supply type parameters and be treated as a simple value reference\n      // to the constructor function itself.\n      const suppliedParameters = typeParams || [];\n      if (suppliedParameters.length > 0) {\n        ctx.print(null, `<`);\n        this.visitAllObjects(type => type.visitType(this, ctx), typeParams !, ctx, ',');\n        ctx.print(null, `>`);\n      }\n    }\n  }\n\n  private _printColonType(type: o.Type|null, ctx: EmitterVisitorContext, defaultType?: string) {\n    if (type !== o.INFERRED_TYPE) {\n      ctx.print(null, ':');\n      this.visitType(type, ctx, defaultType);\n    }\n  }\n}\n"],"sourceRoot":""}