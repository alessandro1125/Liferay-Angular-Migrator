{"version":3,"sources":["../../../../../../../packages/compiler/src/output/map_util.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAQA,YAAA,IAAA,QAAA,iEAAA,CAAA;AAUA,iBAAA,QAAA,CAAyB,GAAzB,EAAsC,KAAtC,EAAyD;AACvD,mBAAO,EAAC,KAAG,GAAJ,EAAM,OAAK,KAAX,EAAa,QAAQ,KAArB,EAAP;AACD;AAFD,gBAAA,QAAA,GAAA,QAAA;AAIA,iBAAA,UAAA,CAA2B,GAA3B,EAA6D;AAC3D,mBAAO,EAAE,UAAF,CAAa,OAAO,IAAP,CAAY,GAAZ,EAAiB,GAAjB,CAAqB,UAAA,GAAA,EAAG;AAAI,uBAAC;AACN,yBAAG,GADG;AAEN,4BAAQ,KAFF;AAGN,2BAAO,IAAI,GAAJ;AAHD,iBAAD;AAIL,aAJvB,CAAb,CAAP;AAKD;AAND,gBAAA,UAAA,GAAA,UAAA","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as o from './output_ast';\n\nexport type MapEntry = {\n  key: string,\n  quoted: boolean,\n  value: o.Expression\n};\n\nexport type MapLiteral = MapEntry[];\n\nexport function mapEntry(key: string, value: o.Expression): MapEntry {\n  return {key, value, quoted: false};\n}\n\nexport function mapLiteral(obj: {[key: string]: o.Expression}): o.Expression {\n  return o.literalMap(Object.keys(obj).map(key => ({\n                                             key,\n                                             quoted: false,\n                                             value: obj[key],\n                                           })));\n}\n"],"sourceRoot":""}