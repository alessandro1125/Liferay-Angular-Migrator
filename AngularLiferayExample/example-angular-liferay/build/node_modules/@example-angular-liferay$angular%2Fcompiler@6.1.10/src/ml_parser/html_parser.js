Liferay.Loader.define("@example-angular-liferay$angular/compiler@6.1.10/src/ml_parser/html_parser", ['module', 'exports', 'require', 'example-angular-liferay$tslib', '@example-angular-liferay$angular/compiler/src/ml_parser/html_tags', '@example-angular-liferay$angular/compiler/src/ml_parser/interpolation_config', '@example-angular-liferay$angular/compiler/src/ml_parser/parser'], function (module, exports, require) {
    var define = undefined;
    /**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */
    (function (factory) {
        if (typeof module === "object" && typeof module.exports === "object") {
            var v = factory(require, exports);
            if (v !== undefined) module.exports = v;
        } else if (typeof define === "function" && define.amd) {
            define("@angular/compiler/src/ml_parser/html_parser", ["require", "exports", "tslib", "@angular/compiler/src/ml_parser/html_tags", "@angular/compiler/src/ml_parser/interpolation_config", "@angular/compiler/src/ml_parser/parser", "@angular/compiler/src/ml_parser/parser"], factory);
        }
    })(function (require, exports) {
        "use strict";

        Object.defineProperty(exports, "__esModule", { value: true });
        var tslib_1 = require("example-angular-liferay$tslib");
        var html_tags_1 = require("@example-angular-liferay$angular/compiler/src/ml_parser/html_tags");
        var interpolation_config_1 = require("@example-angular-liferay$angular/compiler/src/ml_parser/interpolation_config");
        var parser_1 = require("@example-angular-liferay$angular/compiler/src/ml_parser/parser");
        var parser_2 = require("@example-angular-liferay$angular/compiler/src/ml_parser/parser");
        exports.ParseTreeResult = parser_2.ParseTreeResult;
        exports.TreeError = parser_2.TreeError;
        var HtmlParser = /** @class */function (_super) {
            tslib_1.__extends(HtmlParser, _super);
            function HtmlParser() {
                return _super.call(this, html_tags_1.getHtmlTagDefinition) || this;
            }
            HtmlParser.prototype.parse = function (source, url, parseExpansionForms, interpolationConfig) {
                if (parseExpansionForms === void 0) {
                    parseExpansionForms = false;
                }
                if (interpolationConfig === void 0) {
                    interpolationConfig = interpolation_config_1.DEFAULT_INTERPOLATION_CONFIG;
                }
                return _super.prototype.parse.call(this, source, url, parseExpansionForms, interpolationConfig);
            };
            return HtmlParser;
        }(parser_1.Parser);
        exports.HtmlParser = HtmlParser;
    });
});
//# sourceMappingURL=html_parser.js.map