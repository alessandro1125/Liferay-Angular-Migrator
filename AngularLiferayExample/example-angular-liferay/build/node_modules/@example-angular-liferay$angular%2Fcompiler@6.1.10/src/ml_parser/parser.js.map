{"version":3,"sources":["../../../../../../../packages/compiler/src/ml_parser/parser.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ParseError, ParseSourceSpan} from '../parse_util';\n\nimport * as html from './ast';\nimport {DEFAULT_INTERPOLATION_CONFIG, InterpolationConfig} from './interpolation_config';\nimport * as lex from './lexer';\nimport {TagDefinition, getNsPrefix, isNgContainer, mergeNsAndName} from './tags';\n\nexport class TreeError extends ParseError {\n  static create(elementName: string|null, span: ParseSourceSpan, msg: string): TreeError {\n    return new TreeError(elementName, span, msg);\n  }\n\n  constructor(public elementName: string|null, span: ParseSourceSpan, msg: string) {\n    super(span, msg);\n  }\n}\n\nexport class ParseTreeResult {\n  constructor(public rootNodes: html.Node[], public errors: ParseError[]) {}\n}\n\nexport class Parser {\n  constructor(public getTagDefinition: (tagName: string) => TagDefinition) {}\n\n  parse(\n      source: string, url: string, parseExpansionForms: boolean = false,\n      interpolationConfig: InterpolationConfig = DEFAULT_INTERPOLATION_CONFIG): ParseTreeResult {\n    const tokensAndErrors =\n        lex.tokenize(source, url, this.getTagDefinition, parseExpansionForms, interpolationConfig);\n\n    const treeAndErrors = new _TreeBuilder(tokensAndErrors.tokens, this.getTagDefinition).build();\n\n    return new ParseTreeResult(\n        treeAndErrors.rootNodes,\n        (<ParseError[]>tokensAndErrors.errors).concat(treeAndErrors.errors));\n  }\n}\n\nclass _TreeBuilder {\n  private _index: number = -1;\n  // TODO(issue/24571): remove '!'.\n  private _peek !: lex.Token;\n\n  private _rootNodes: html.Node[] = [];\n  private _errors: TreeError[] = [];\n\n  private _elementStack: html.Element[] = [];\n\n  constructor(\n      private tokens: lex.Token[], private getTagDefinition: (tagName: string) => TagDefinition) {\n    this._advance();\n  }\n\n  build(): ParseTreeResult {\n    while (this._peek.type !== lex.TokenType.EOF) {\n      if (this._peek.type === lex.TokenType.TAG_OPEN_START) {\n        this._consumeStartTag(this._advance());\n      } else if (this._peek.type === lex.TokenType.TAG_CLOSE) {\n        this._consumeEndTag(this._advance());\n      } else if (this._peek.type === lex.TokenType.CDATA_START) {\n        this._closeVoidElement();\n        this._consumeCdata(this._advance());\n      } else if (this._peek.type === lex.TokenType.COMMENT_START) {\n        this._closeVoidElement();\n        this._consumeComment(this._advance());\n      } else if (\n          this._peek.type === lex.TokenType.TEXT || this._peek.type === lex.TokenType.RAW_TEXT ||\n          this._peek.type === lex.TokenType.ESCAPABLE_RAW_TEXT) {\n        this._closeVoidElement();\n        this._consumeText(this._advance());\n      } else if (this._peek.type === lex.TokenType.EXPANSION_FORM_START) {\n        this._consumeExpansion(this._advance());\n      } else {\n        // Skip all other tokens...\n        this._advance();\n      }\n    }\n    return new ParseTreeResult(this._rootNodes, this._errors);\n  }\n\n  private _advance(): lex.Token {\n    const prev = this._peek;\n    if (this._index < this.tokens.length - 1) {\n      // Note: there is always an EOF token at the end\n      this._index++;\n    }\n    this._peek = this.tokens[this._index];\n    return prev;\n  }\n\n  private _advanceIf(type: lex.TokenType): lex.Token|null {\n    if (this._peek.type === type) {\n      return this._advance();\n    }\n    return null;\n  }\n\n  private _consumeCdata(startToken: lex.Token) {\n    this._consumeText(this._advance());\n    this._advanceIf(lex.TokenType.CDATA_END);\n  }\n\n  private _consumeComment(token: lex.Token) {\n    const text = this._advanceIf(lex.TokenType.RAW_TEXT);\n    this._advanceIf(lex.TokenType.COMMENT_END);\n    const value = text != null ? text.parts[0].trim() : null;\n    this._addToParent(new html.Comment(value, token.sourceSpan));\n  }\n\n  private _consumeExpansion(token: lex.Token) {\n    const switchValue = this._advance();\n\n    const type = this._advance();\n    const cases: html.ExpansionCase[] = [];\n\n    // read =\n    while (this._peek.type === lex.TokenType.EXPANSION_CASE_VALUE) {\n      const expCase = this._parseExpansionCase();\n      if (!expCase) return;  // error\n      cases.push(expCase);\n    }\n\n    // read the final }\n    if (this._peek.type !== lex.TokenType.EXPANSION_FORM_END) {\n      this._errors.push(\n          TreeError.create(null, this._peek.sourceSpan, `Invalid ICU message. Missing '}'.`));\n      return;\n    }\n    const sourceSpan = new ParseSourceSpan(token.sourceSpan.start, this._peek.sourceSpan.end);\n    this._addToParent(new html.Expansion(\n        switchValue.parts[0], type.parts[0], cases, sourceSpan, switchValue.sourceSpan));\n\n    this._advance();\n  }\n\n  private _parseExpansionCase(): html.ExpansionCase|null {\n    const value = this._advance();\n\n    // read {\n    if (this._peek.type !== lex.TokenType.EXPANSION_CASE_EXP_START) {\n      this._errors.push(\n          TreeError.create(null, this._peek.sourceSpan, `Invalid ICU message. Missing '{'.`));\n      return null;\n    }\n\n    // read until }\n    const start = this._advance();\n\n    const exp = this._collectExpansionExpTokens(start);\n    if (!exp) return null;\n\n    const end = this._advance();\n    exp.push(new lex.Token(lex.TokenType.EOF, [], end.sourceSpan));\n\n    // parse everything in between { and }\n    const parsedExp = new _TreeBuilder(exp, this.getTagDefinition).build();\n    if (parsedExp.errors.length > 0) {\n      this._errors = this._errors.concat(<TreeError[]>parsedExp.errors);\n      return null;\n    }\n\n    const sourceSpan = new ParseSourceSpan(value.sourceSpan.start, end.sourceSpan.end);\n    const expSourceSpan = new ParseSourceSpan(start.sourceSpan.start, end.sourceSpan.end);\n    return new html.ExpansionCase(\n        value.parts[0], parsedExp.rootNodes, sourceSpan, value.sourceSpan, expSourceSpan);\n  }\n\n  private _collectExpansionExpTokens(start: lex.Token): lex.Token[]|null {\n    const exp: lex.Token[] = [];\n    const expansionFormStack = [lex.TokenType.EXPANSION_CASE_EXP_START];\n\n    while (true) {\n      if (this._peek.type === lex.TokenType.EXPANSION_FORM_START ||\n          this._peek.type === lex.TokenType.EXPANSION_CASE_EXP_START) {\n        expansionFormStack.push(this._peek.type);\n      }\n\n      if (this._peek.type === lex.TokenType.EXPANSION_CASE_EXP_END) {\n        if (lastOnStack(expansionFormStack, lex.TokenType.EXPANSION_CASE_EXP_START)) {\n          expansionFormStack.pop();\n          if (expansionFormStack.length == 0) return exp;\n\n        } else {\n          this._errors.push(\n              TreeError.create(null, start.sourceSpan, `Invalid ICU message. Missing '}'.`));\n          return null;\n        }\n      }\n\n      if (this._peek.type === lex.TokenType.EXPANSION_FORM_END) {\n        if (lastOnStack(expansionFormStack, lex.TokenType.EXPANSION_FORM_START)) {\n          expansionFormStack.pop();\n        } else {\n          this._errors.push(\n              TreeError.create(null, start.sourceSpan, `Invalid ICU message. Missing '}'.`));\n          return null;\n        }\n      }\n\n      if (this._peek.type === lex.TokenType.EOF) {\n        this._errors.push(\n            TreeError.create(null, start.sourceSpan, `Invalid ICU message. Missing '}'.`));\n        return null;\n      }\n\n      exp.push(this._advance());\n    }\n  }\n\n  private _consumeText(token: lex.Token) {\n    let text = token.parts[0];\n    if (text.length > 0 && text[0] == '\\n') {\n      const parent = this._getParentElement();\n      if (parent != null && parent.children.length == 0 &&\n          this.getTagDefinition(parent.name).ignoreFirstLf) {\n        text = text.substring(1);\n      }\n    }\n\n    if (text.length > 0) {\n      this._addToParent(new html.Text(text, token.sourceSpan));\n    }\n  }\n\n  private _closeVoidElement(): void {\n    const el = this._getParentElement();\n    if (el && this.getTagDefinition(el.name).isVoid) {\n      this._elementStack.pop();\n    }\n  }\n\n  private _consumeStartTag(startTagToken: lex.Token) {\n    const prefix = startTagToken.parts[0];\n    const name = startTagToken.parts[1];\n    const attrs: html.Attribute[] = [];\n    while (this._peek.type === lex.TokenType.ATTR_NAME) {\n      attrs.push(this._consumeAttr(this._advance()));\n    }\n    const fullName = this._getElementFullName(prefix, name, this._getParentElement());\n    let selfClosing = false;\n    // Note: There could have been a tokenizer error\n    // so that we don't get a token for the end tag...\n    if (this._peek.type === lex.TokenType.TAG_OPEN_END_VOID) {\n      this._advance();\n      selfClosing = true;\n      const tagDef = this.getTagDefinition(fullName);\n      if (!(tagDef.canSelfClose || getNsPrefix(fullName) !== null || tagDef.isVoid)) {\n        this._errors.push(TreeError.create(\n            fullName, startTagToken.sourceSpan,\n            `Only void and foreign elements can be self closed \"${startTagToken.parts[1]}\"`));\n      }\n    } else if (this._peek.type === lex.TokenType.TAG_OPEN_END) {\n      this._advance();\n      selfClosing = false;\n    }\n    const end = this._peek.sourceSpan.start;\n    const span = new ParseSourceSpan(startTagToken.sourceSpan.start, end);\n    const el = new html.Element(fullName, attrs, [], span, span, undefined);\n    this._pushElement(el);\n    if (selfClosing) {\n      this._popElement(fullName);\n      el.endSourceSpan = span;\n    }\n  }\n\n  private _pushElement(el: html.Element) {\n    const parentEl = this._getParentElement();\n\n    if (parentEl && this.getTagDefinition(parentEl.name).isClosedByChild(el.name)) {\n      this._elementStack.pop();\n    }\n\n    const tagDef = this.getTagDefinition(el.name);\n    const {parent, container} = this._getParentElementSkippingContainers();\n\n    if (parent && tagDef.requireExtraParent(parent.name)) {\n      const newParent = new html.Element(\n          tagDef.parentToAdd, [], [], el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n      this._insertBeforeContainer(parent, container, newParent);\n    }\n\n    this._addToParent(el);\n    this._elementStack.push(el);\n  }\n\n  private _consumeEndTag(endTagToken: lex.Token) {\n    const fullName = this._getElementFullName(\n        endTagToken.parts[0], endTagToken.parts[1], this._getParentElement());\n\n    if (this._getParentElement()) {\n      this._getParentElement() !.endSourceSpan = endTagToken.sourceSpan;\n    }\n\n    if (this.getTagDefinition(fullName).isVoid) {\n      this._errors.push(TreeError.create(\n          fullName, endTagToken.sourceSpan,\n          `Void elements do not have end tags \"${endTagToken.parts[1]}\"`));\n    } else if (!this._popElement(fullName)) {\n      const errMsg =\n          `Unexpected closing tag \"${fullName}\". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags`;\n      this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, errMsg));\n    }\n  }\n\n  private _popElement(fullName: string): boolean {\n    for (let stackIndex = this._elementStack.length - 1; stackIndex >= 0; stackIndex--) {\n      const el = this._elementStack[stackIndex];\n      if (el.name == fullName) {\n        this._elementStack.splice(stackIndex, this._elementStack.length - stackIndex);\n        return true;\n      }\n\n      if (!this.getTagDefinition(el.name).closedByParent) {\n        return false;\n      }\n    }\n    return false;\n  }\n\n  private _consumeAttr(attrName: lex.Token): html.Attribute {\n    const fullName = mergeNsAndName(attrName.parts[0], attrName.parts[1]);\n    let end = attrName.sourceSpan.end;\n    let value = '';\n    let valueSpan: ParseSourceSpan = undefined !;\n    if (this._peek.type === lex.TokenType.ATTR_VALUE) {\n      const valueToken = this._advance();\n      value = valueToken.parts[0];\n      end = valueToken.sourceSpan.end;\n      valueSpan = valueToken.sourceSpan;\n    }\n    return new html.Attribute(\n        fullName, value, new ParseSourceSpan(attrName.sourceSpan.start, end), valueSpan);\n  }\n\n  private _getParentElement(): html.Element|null {\n    return this._elementStack.length > 0 ? this._elementStack[this._elementStack.length - 1] : null;\n  }\n\n  /**\n   * Returns the parent in the DOM and the container.\n   *\n   * `<ng-container>` elements are skipped as they are not rendered as DOM element.\n   */\n  private _getParentElementSkippingContainers():\n      {parent: html.Element | null, container: html.Element|null} {\n    let container: html.Element|null = null;\n\n    for (let i = this._elementStack.length - 1; i >= 0; i--) {\n      if (!isNgContainer(this._elementStack[i].name)) {\n        return {parent: this._elementStack[i], container};\n      }\n      container = this._elementStack[i];\n    }\n\n    return {parent: null, container};\n  }\n\n  private _addToParent(node: html.Node) {\n    const parent = this._getParentElement();\n    if (parent != null) {\n      parent.children.push(node);\n    } else {\n      this._rootNodes.push(node);\n    }\n  }\n\n  /**\n   * Insert a node between the parent and the container.\n   * When no container is given, the node is appended as a child of the parent.\n   * Also updates the element stack accordingly.\n   *\n   * @internal\n   */\n  private _insertBeforeContainer(\n      parent: html.Element, container: html.Element|null, node: html.Element) {\n    if (!container) {\n      this._addToParent(node);\n      this._elementStack.push(node);\n    } else {\n      if (parent) {\n        // replace the container with the new node in the children\n        const index = parent.children.indexOf(container);\n        parent.children[index] = node;\n      } else {\n        this._rootNodes.push(node);\n      }\n      node.children.push(container);\n      this._elementStack.splice(this._elementStack.indexOf(container), 0, node);\n    }\n  }\n\n  private _getElementFullName(prefix: string, localName: string, parentElement: html.Element|null):\n      string {\n    if (prefix == null) {\n      prefix = this.getTagDefinition(localName).implicitNamespacePrefix !;\n      if (prefix == null && parentElement != null) {\n        prefix = getNsPrefix(parentElement.name);\n      }\n    }\n\n    return mergeNsAndName(prefix, localName);\n  }\n}\n\nfunction lastOnStack(stack: any[], element: any): boolean {\n  return stack.length > 0 && stack[stack.length - 1] === element;\n}\n"],"sourceRoot":""}