Liferay.Loader.define("@example-angular-liferay$angular/compiler@6.1.10/src/ml_parser/interpolation_config", ['module', 'exports', 'require', '@example-angular-liferay$angular/compiler/src/assertions'], function (module, exports, require) {
    var define = undefined;
    /**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */
    (function (factory) {
        if (typeof module === "object" && typeof module.exports === "object") {
            var v = factory(require, exports);
            if (v !== undefined) module.exports = v;
        } else if (typeof define === "function" && define.amd) {
            define("@angular/compiler/src/ml_parser/interpolation_config", ["require", "exports", "@angular/compiler/src/assertions"], factory);
        }
    })(function (require, exports) {
        "use strict";

        Object.defineProperty(exports, "__esModule", { value: true });
        var assertions_1 = require("@example-angular-liferay$angular/compiler/src/assertions");
        var InterpolationConfig = /** @class */function () {
            function InterpolationConfig(start, end) {
                this.start = start;
                this.end = end;
            }
            InterpolationConfig.fromArray = function (markers) {
                if (!markers) {
                    return exports.DEFAULT_INTERPOLATION_CONFIG;
                }
                assertions_1.assertInterpolationSymbols('interpolation', markers);
                return new InterpolationConfig(markers[0], markers[1]);
            };
            return InterpolationConfig;
        }();
        exports.InterpolationConfig = InterpolationConfig;
        exports.DEFAULT_INTERPOLATION_CONFIG = new InterpolationConfig('{{', '}}');
    });
});
//# sourceMappingURL=interpolation_config.js.map