{"version":3,"sources":["../../../../../../packages/compiler/src/shadow_css.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * This file is a port of shadowCSS from webcomponents.js to TypeScript.\n *\n * Please make sure to keep to edits in sync with the source file.\n *\n * Source:\n * https://github.com/webcomponents/webcomponentsjs/blob/4efecd7e0e/src/ShadowCSS/ShadowCSS.js\n *\n * The original file level comment is reproduced below\n */\n\n/*\n  This is a limited shim for ShadowDOM css styling.\n  https://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/shadow/index.html#styles\n\n  The intention here is to support only the styling features which can be\n  relatively simply implemented. The goal is to allow users to avoid the\n  most obvious pitfalls and do so without compromising performance significantly.\n  For ShadowDOM styling that's not covered here, a set of best practices\n  can be provided that should allow users to accomplish more complex styling.\n\n  The following is a list of specific ShadowDOM styling features and a brief\n  discussion of the approach used to shim.\n\n  Shimmed features:\n\n  * :host, :host-context: ShadowDOM allows styling of the shadowRoot's host\n  element using the :host rule. To shim this feature, the :host styles are\n  reformatted and prefixed with a given scope name and promoted to a\n  document level stylesheet.\n  For example, given a scope name of .foo, a rule like this:\n\n    :host {\n        background: red;\n      }\n    }\n\n  becomes:\n\n    .foo {\n      background: red;\n    }\n\n  * encapsulation: Styles defined within ShadowDOM, apply only to\n  dom inside the ShadowDOM. Polymer uses one of two techniques to implement\n  this feature.\n\n  By default, rules are prefixed with the host element tag name\n  as a descendant selector. This ensures styling does not leak out of the 'top'\n  of the element's ShadowDOM. For example,\n\n  div {\n      font-weight: bold;\n    }\n\n  becomes:\n\n  x-foo div {\n      font-weight: bold;\n    }\n\n  becomes:\n\n\n  Alternatively, if WebComponents.ShadowCSS.strictStyling is set to true then\n  selectors are scoped by adding an attribute selector suffix to each\n  simple selector that contains the host element tag name. Each element\n  in the element's ShadowDOM template is also given the scope attribute.\n  Thus, these rules match only elements that have the scope attribute.\n  For example, given a scope name of x-foo, a rule like this:\n\n    div {\n      font-weight: bold;\n    }\n\n  becomes:\n\n    div[x-foo] {\n      font-weight: bold;\n    }\n\n  Note that elements that are dynamically added to a scope must have the scope\n  selector added to them manually.\n\n  * upper/lower bound encapsulation: Styles which are defined outside a\n  shadowRoot should not cross the ShadowDOM boundary and should not apply\n  inside a shadowRoot.\n\n  This styling behavior is not emulated. Some possible ways to do this that\n  were rejected due to complexity and/or performance concerns include: (1) reset\n  every possible property for every possible selector for a given scope name;\n  (2) re-implement css in javascript.\n\n  As an alternative, users should make sure to use selectors\n  specific to the scope in which they are working.\n\n  * ::distributed: This behavior is not emulated. It's often not necessary\n  to style the contents of a specific insertion point and instead, descendants\n  of the host element can be styled selectively. Users can also create an\n  extra node around an insertion point and style that node's contents\n  via descendent selectors. For example, with a shadowRoot like this:\n\n    <style>\n      ::content(div) {\n        background: red;\n      }\n    </style>\n    <content></content>\n\n  could become:\n\n    <style>\n      / *@polyfill .content-container div * /\n      ::content(div) {\n        background: red;\n      }\n    </style>\n    <div class=\"content-container\">\n      <content></content>\n    </div>\n\n  Note the use of @polyfill in the comment above a ShadowDOM specific style\n  declaration. This is a directive to the styling shim to use the selector\n  in comments in lieu of the next selector when running under polyfill.\n*/\n\nexport class ShadowCss {\n  strictStyling: boolean = true;\n\n  constructor() {}\n\n  /*\n  * Shim some cssText with the given selector. Returns cssText that can\n  * be included in the document via WebComponents.ShadowCSS.addCssToDocument(css).\n  *\n  * When strictStyling is true:\n  * - selector is the attribute added to all elements inside the host,\n  * - hostSelector is the attribute added to the host itself.\n  */\n  shimCssText(cssText: string, selector: string, hostSelector: string = ''): string {\n    const commentsWithHash = extractCommentsWithHash(cssText);\n    cssText = stripComments(cssText);\n    cssText = this._insertDirectives(cssText);\n\n    const scopedCssText = this._scopeCssText(cssText, selector, hostSelector);\n    return [scopedCssText, ...commentsWithHash].join('\\n');\n  }\n\n  private _insertDirectives(cssText: string): string {\n    cssText = this._insertPolyfillDirectivesInCssText(cssText);\n    return this._insertPolyfillRulesInCssText(cssText);\n  }\n\n  /*\n   * Process styles to convert native ShadowDOM rules that will trip\n   * up the css parser; we rely on decorating the stylesheet with inert rules.\n   *\n   * For example, we convert this rule:\n   *\n   * polyfill-next-selector { content: ':host menu-item'; }\n   * ::content menu-item {\n   *\n   * to this:\n   *\n   * scopeName menu-item {\n   *\n  **/\n  private _insertPolyfillDirectivesInCssText(cssText: string): string {\n    // Difference with webcomponents.js: does not handle comments\n    return cssText.replace(\n        _cssContentNextSelectorRe, function(...m: string[]) { return m[2] + '{'; });\n  }\n\n  /*\n   * Process styles to add rules which will only apply under the polyfill\n   *\n   * For example, we convert this rule:\n   *\n   * polyfill-rule {\n   *   content: ':host menu-item';\n   * ...\n   * }\n   *\n   * to this:\n   *\n   * scopeName menu-item {...}\n   *\n  **/\n  private _insertPolyfillRulesInCssText(cssText: string): string {\n    // Difference with webcomponents.js: does not handle comments\n    return cssText.replace(_cssContentRuleRe, (...m: string[]) => {\n      const rule = m[0].replace(m[1], '').replace(m[2], '');\n      return m[4] + rule;\n    });\n  }\n\n  /* Ensure styles are scoped. Pseudo-scoping takes a rule like:\n   *\n   *  .foo {... }\n   *\n   *  and converts this to\n   *\n   *  scopeName .foo { ... }\n  */\n  private _scopeCssText(cssText: string, scopeSelector: string, hostSelector: string): string {\n    const unscopedRules = this._extractUnscopedRulesFromCssText(cssText);\n    // replace :host and :host-context -shadowcsshost and -shadowcsshost respectively\n    cssText = this._insertPolyfillHostInCssText(cssText);\n    cssText = this._convertColonHost(cssText);\n    cssText = this._convertColonHostContext(cssText);\n    cssText = this._convertShadowDOMSelectors(cssText);\n    if (scopeSelector) {\n      cssText = this._scopeSelectors(cssText, scopeSelector, hostSelector);\n    }\n    cssText = cssText + '\\n' + unscopedRules;\n    return cssText.trim();\n  }\n\n  /*\n   * Process styles to add rules which will only apply under the polyfill\n   * and do not process via CSSOM. (CSSOM is destructive to rules on rare\n   * occasions, e.g. -webkit-calc on Safari.)\n   * For example, we convert this rule:\n   *\n   * @polyfill-unscoped-rule {\n   *   content: 'menu-item';\n   * ... }\n   *\n   * to this:\n   *\n   * menu-item {...}\n   *\n  **/\n  private _extractUnscopedRulesFromCssText(cssText: string): string {\n    // Difference with webcomponents.js: does not handle comments\n    let r = '';\n    let m: RegExpExecArray|null;\n    _cssContentUnscopedRuleRe.lastIndex = 0;\n    while ((m = _cssContentUnscopedRuleRe.exec(cssText)) !== null) {\n      const rule = m[0].replace(m[2], '').replace(m[1], m[4]);\n      r += rule + '\\n\\n';\n    }\n    return r;\n  }\n\n  /*\n   * convert a rule like :host(.foo) > .bar { }\n   *\n   * to\n   *\n   * .foo<scopeName> > .bar\n  */\n  private _convertColonHost(cssText: string): string {\n    return this._convertColonRule(cssText, _cssColonHostRe, this._colonHostPartReplacer);\n  }\n\n  /*\n   * convert a rule like :host-context(.foo) > .bar { }\n   *\n   * to\n   *\n   * .foo<scopeName> > .bar, .foo scopeName > .bar { }\n   *\n   * and\n   *\n   * :host-context(.foo:host) .bar { ... }\n   *\n   * to\n   *\n   * .foo<scopeName> .bar { ... }\n  */\n  private _convertColonHostContext(cssText: string): string {\n    return this._convertColonRule(\n        cssText, _cssColonHostContextRe, this._colonHostContextPartReplacer);\n  }\n\n  private _convertColonRule(cssText: string, regExp: RegExp, partReplacer: Function): string {\n    // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n    return cssText.replace(regExp, function(...m: string[]) {\n      if (m[2]) {\n        const parts = m[2].split(',');\n        const r: string[] = [];\n        for (let i = 0; i < parts.length; i++) {\n          const p = parts[i].trim();\n          if (!p) break;\n          r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n        }\n        return r.join(',');\n      } else {\n        return _polyfillHostNoCombinator + m[3];\n      }\n    });\n  }\n\n  private _colonHostContextPartReplacer(host: string, part: string, suffix: string): string {\n    if (part.indexOf(_polyfillHost) > -1) {\n      return this._colonHostPartReplacer(host, part, suffix);\n    } else {\n      return host + part + suffix + ', ' + part + ' ' + host + suffix;\n    }\n  }\n\n  private _colonHostPartReplacer(host: string, part: string, suffix: string): string {\n    return host + part.replace(_polyfillHost, '') + suffix;\n  }\n\n  /*\n   * Convert combinators like ::shadow and pseudo-elements like ::content\n   * by replacing with space.\n  */\n  private _convertShadowDOMSelectors(cssText: string): string {\n    return _shadowDOMSelectorsRe.reduce((result, pattern) => result.replace(pattern, ' '), cssText);\n  }\n\n  // change a selector like 'div' to 'name div'\n  private _scopeSelectors(cssText: string, scopeSelector: string, hostSelector: string): string {\n    return processRules(cssText, (rule: CssRule) => {\n      let selector = rule.selector;\n      let content = rule.content;\n      if (rule.selector[0] != '@') {\n        selector =\n            this._scopeSelector(rule.selector, scopeSelector, hostSelector, this.strictStyling);\n      } else if (\n          rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\n          rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n        content = this._scopeSelectors(rule.content, scopeSelector, hostSelector);\n      }\n      return new CssRule(selector, content);\n    });\n  }\n\n  private _scopeSelector(\n      selector: string, scopeSelector: string, hostSelector: string, strict: boolean): string {\n    return selector.split(',')\n        .map(part => part.trim().split(_shadowDeepSelectors))\n        .map((deepParts) => {\n          const [shallowPart, ...otherParts] = deepParts;\n          const applyScope = (shallowPart: string) => {\n            if (this._selectorNeedsScoping(shallowPart, scopeSelector)) {\n              return strict ?\n                  this._applyStrictSelectorScope(shallowPart, scopeSelector, hostSelector) :\n                  this._applySelectorScope(shallowPart, scopeSelector, hostSelector);\n            } else {\n              return shallowPart;\n            }\n          };\n          return [applyScope(shallowPart), ...otherParts].join(' ');\n        })\n        .join(', ');\n  }\n\n  private _selectorNeedsScoping(selector: string, scopeSelector: string): boolean {\n    const re = this._makeScopeMatcher(scopeSelector);\n    return !re.test(selector);\n  }\n\n  private _makeScopeMatcher(scopeSelector: string): RegExp {\n    const lre = /\\[/g;\n    const rre = /\\]/g;\n    scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n    return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n  }\n\n  private _applySelectorScope(selector: string, scopeSelector: string, hostSelector: string):\n      string {\n    // Difference from webcomponents.js: scopeSelector could not be an array\n    return this._applySimpleSelectorScope(selector, scopeSelector, hostSelector);\n  }\n\n  // scope via name and [is=name]\n  private _applySimpleSelectorScope(selector: string, scopeSelector: string, hostSelector: string):\n      string {\n    // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n    _polyfillHostRe.lastIndex = 0;\n    if (_polyfillHostRe.test(selector)) {\n      const replaceBy = this.strictStyling ? `[${hostSelector}]` : scopeSelector;\n      return selector\n          .replace(\n              _polyfillHostNoCombinatorRe,\n              (hnc, selector) => {\n                return selector.replace(\n                    /([^:]*)(:*)(.*)/,\n                    (_: string, before: string, colon: string, after: string) => {\n                      return before + replaceBy + colon + after;\n                    });\n              })\n          .replace(_polyfillHostRe, replaceBy + ' ');\n    }\n\n    return scopeSelector + ' ' + selector;\n  }\n\n  // return a selector with [name] suffix on each simple selector\n  // e.g. .foo.bar > .zot becomes .foo[name].bar[name] > .zot[name]  /** @internal */\n  private _applyStrictSelectorScope(selector: string, scopeSelector: string, hostSelector: string):\n      string {\n    const isRe = /\\[is=([^\\]]*)\\]/g;\n    scopeSelector = scopeSelector.replace(isRe, (_: string, ...parts: string[]) => parts[0]);\n\n    const attrName = '[' + scopeSelector + ']';\n\n    const _scopeSelectorPart = (p: string) => {\n      let scopedP = p.trim();\n\n      if (!scopedP) {\n        return '';\n      }\n\n      if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n        scopedP = this._applySimpleSelectorScope(p, scopeSelector, hostSelector);\n      } else {\n        // remove :host since it should be unnecessary\n        const t = p.replace(_polyfillHostRe, '');\n        if (t.length > 0) {\n          const matches = t.match(/([^:]*)(:*)(.*)/);\n          if (matches) {\n            scopedP = matches[1] + attrName + matches[2] + matches[3];\n          }\n        }\n      }\n\n      return scopedP;\n    };\n\n    const safeContent = new SafeSelector(selector);\n    selector = safeContent.content();\n\n    let scopedSelector = '';\n    let startIndex = 0;\n    let res: RegExpExecArray|null;\n    const sep = /( |>|\\+|~(?!=))\\s*/g;\n\n    // If a selector appears before :host it should not be shimmed as it\n    // matches on ancestor elements and not on elements in the host's shadow\n    // `:host-context(div)` is transformed to\n    // `-shadowcsshost-no-combinatordiv, div -shadowcsshost-no-combinator`\n    // the `div` is not part of the component in the 2nd selectors and should not be scoped.\n    // Historically `component-tag:host` was matching the component so we also want to preserve\n    // this behavior to avoid breaking legacy apps (it should not match).\n    // The behavior should be:\n    // - `tag:host` -> `tag[h]` (this is to avoid breaking legacy apps, should not match anything)\n    // - `tag :host` -> `tag [h]` (`tag` is not scoped because it's considered part of a\n    //   `:host-context(tag)`)\n    const hasHost = selector.indexOf(_polyfillHostNoCombinator) > -1;\n    // Only scope parts after the first `-shadowcsshost-no-combinator` when it is present\n    let shouldScope = !hasHost;\n\n    while ((res = sep.exec(selector)) !== null) {\n      const separator = res[1];\n      const part = selector.slice(startIndex, res.index).trim();\n      shouldScope = shouldScope || part.indexOf(_polyfillHostNoCombinator) > -1;\n      const scopedPart = shouldScope ? _scopeSelectorPart(part) : part;\n      scopedSelector += `${scopedPart} ${separator} `;\n      startIndex = sep.lastIndex;\n    }\n\n    const part = selector.substring(startIndex);\n    shouldScope = shouldScope || part.indexOf(_polyfillHostNoCombinator) > -1;\n    scopedSelector += shouldScope ? _scopeSelectorPart(part) : part;\n\n    // replace the placeholders with their original values\n    return safeContent.restore(scopedSelector);\n  }\n\n  private _insertPolyfillHostInCssText(selector: string): string {\n    return selector.replace(_colonHostContextRe, _polyfillHostContext)\n        .replace(_colonHostRe, _polyfillHost);\n  }\n}\n\nclass SafeSelector {\n  private placeholders: string[] = [];\n  private index = 0;\n  private _content: string;\n\n  constructor(selector: string) {\n    // Replaces attribute selectors with placeholders.\n    // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\n    selector = selector.replace(/(\\[[^\\]]*\\])/g, (_, keep) => {\n      const replaceBy = `__ph-${this.index}__`;\n      this.placeholders.push(keep);\n      this.index++;\n      return replaceBy;\n    });\n\n    // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\n    // WS and \"+\" would otherwise be interpreted as selector separators.\n    this._content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, (_, pseudo, exp) => {\n      const replaceBy = `__ph-${this.index}__`;\n      this.placeholders.push(exp);\n      this.index++;\n      return pseudo + replaceBy;\n    });\n  }\n\n  restore(content: string): string {\n    return content.replace(/__ph-(\\d+)__/g, (ph, index) => this.placeholders[+index]);\n  }\n\n  content(): string { return this._content; }\n}\n\nconst _cssContentNextSelectorRe =\n    /polyfill-next-selector[^}]*content:[\\s]*?(['\"])(.*?)\\1[;\\s]*}([^{]*?){/gim;\nconst _cssContentRuleRe = /(polyfill-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nconst _cssContentUnscopedRuleRe =\n    /(polyfill-unscoped-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nconst _polyfillHost = '-shadowcsshost';\n// note: :host-context pre-processed to -shadowcsshostcontext.\nconst _polyfillHostContext = '-shadowcsscontext';\nconst _parenSuffix = ')(?:\\\\((' +\n    '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\n    ')\\\\))?([^,{]*)';\nconst _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\nconst _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\nconst _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\nconst _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\nconst _shadowDOMSelectorsRe = [\n  /::shadow/g,\n  /::content/g,\n  // Deprecated selectors\n  /\\/shadow-deep\\//g,\n  /\\/shadow\\//g,\n];\n\n// The deep combinator is deprecated in the CSS spec\n// Support for `>>>`, `deep`, `::ng-deep` is then also deprecated and will be removed in the future.\n// see https://github.com/angular/angular/pull/17677\nconst _shadowDeepSelectors = /(?:>>>)|(?:\\/deep\\/)|(?:::ng-deep)/g;\nconst _selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$';\nconst _polyfillHostRe = /-shadowcsshost/gim;\nconst _colonHostRe = /:host/gim;\nconst _colonHostContextRe = /:host-context/gim;\n\nconst _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\n\nfunction stripComments(input: string): string {\n  return input.replace(_commentRe, '');\n}\n\nconst _commentWithHashRe = /\\/\\*\\s*#\\s*source(Mapping)?URL=[\\s\\S]+?\\*\\//g;\n\nfunction extractCommentsWithHash(input: string): string[] {\n  return input.match(_commentWithHashRe) || [];\n}\n\nconst _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\nconst _curlyRe = /([{}])/g;\nconst OPEN_CURLY = '{';\nconst CLOSE_CURLY = '}';\nconst BLOCK_PLACEHOLDER = '%BLOCK%';\n\nexport class CssRule {\n  constructor(public selector: string, public content: string) {}\n}\n\nexport function processRules(input: string, ruleCallback: (rule: CssRule) => CssRule): string {\n  const inputWithEscapedBlocks = escapeBlocks(input);\n  let nextBlockIndex = 0;\n  return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function(...m: string[]) {\n    const selector = m[2];\n    let content = '';\n    let suffix = m[4];\n    let contentPrefix = '';\n    if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n      content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n      suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n      contentPrefix = '{';\n    }\n    const rule = ruleCallback(new CssRule(selector, content));\n    return `${m[1]}${rule.selector}${m[3]}${contentPrefix}${rule.content}${suffix}`;\n  });\n}\n\nclass StringWithEscapedBlocks {\n  constructor(public escapedString: string, public blocks: string[]) {}\n}\n\nfunction escapeBlocks(input: string): StringWithEscapedBlocks {\n  const inputParts = input.split(_curlyRe);\n  const resultParts: string[] = [];\n  const escapedBlocks: string[] = [];\n  let bracketCount = 0;\n  let currentBlockParts: string[] = [];\n  for (let partIndex = 0; partIndex < inputParts.length; partIndex++) {\n    const part = inputParts[partIndex];\n    if (part == CLOSE_CURLY) {\n      bracketCount--;\n    }\n    if (bracketCount > 0) {\n      currentBlockParts.push(part);\n    } else {\n      if (currentBlockParts.length > 0) {\n        escapedBlocks.push(currentBlockParts.join(''));\n        resultParts.push(BLOCK_PLACEHOLDER);\n        currentBlockParts = [];\n      }\n      resultParts.push(part);\n    }\n    if (part == OPEN_CURLY) {\n      bracketCount++;\n    }\n  }\n  if (currentBlockParts.length > 0) {\n    escapedBlocks.push(currentBlockParts.join(''));\n    resultParts.push(BLOCK_PLACEHOLDER);\n  }\n  return new StringWithEscapedBlocks(resultParts.join(''), escapedBlocks);\n}\n"],"sourceRoot":""}