{"version":3,"sources":["../../../../../../../../packages/compiler/src/i18n/serializers/xliff2.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as ml from '../../ml_parser/ast';\nimport {XmlParser} from '../../ml_parser/xml_parser';\nimport {decimalDigest} from '../digest';\nimport * as i18n from '../i18n_ast';\nimport {I18nError} from '../parse_util';\n\nimport {Serializer} from './serializer';\nimport * as xml from './xml_helper';\n\nconst _VERSION = '2.0';\nconst _XMLNS = 'urn:oasis:names:tc:xliff:document:2.0';\n// TODO(vicb): make this a param (s/_/-/)\nconst _DEFAULT_SOURCE_LANG = 'en';\nconst _PLACEHOLDER_TAG = 'ph';\nconst _PLACEHOLDER_SPANNING_TAG = 'pc';\nconst _MARKER_TAG = 'mrk';\n\nconst _XLIFF_TAG = 'xliff';\nconst _SOURCE_TAG = 'source';\nconst _TARGET_TAG = 'target';\nconst _UNIT_TAG = 'unit';\n\n// http://docs.oasis-open.org/xliff/xliff-core/v2.0/os/xliff-core-v2.0-os.html\nexport class Xliff2 extends Serializer {\n  write(messages: i18n.Message[], locale: string|null): string {\n    const visitor = new _WriteVisitor();\n    const units: xml.Node[] = [];\n\n    messages.forEach(message => {\n      const unit = new xml.Tag(_UNIT_TAG, {id: message.id});\n      const notes = new xml.Tag('notes');\n\n      if (message.description || message.meaning) {\n        if (message.description) {\n          notes.children.push(\n              new xml.CR(8),\n              new xml.Tag('note', {category: 'description'}, [new xml.Text(message.description)]));\n        }\n\n        if (message.meaning) {\n          notes.children.push(\n              new xml.CR(8),\n              new xml.Tag('note', {category: 'meaning'}, [new xml.Text(message.meaning)]));\n        }\n      }\n\n      message.sources.forEach((source: i18n.MessageSpan) => {\n        notes.children.push(new xml.CR(8), new xml.Tag('note', {category: 'location'}, [\n          new xml.Text(\n              `${source.filePath}:${source.startLine}${source.endLine !== source.startLine ? ',' + source.endLine : ''}`)\n        ]));\n      });\n\n      notes.children.push(new xml.CR(6));\n      unit.children.push(new xml.CR(6), notes);\n\n      const segment = new xml.Tag('segment');\n\n      segment.children.push(\n          new xml.CR(8), new xml.Tag(_SOURCE_TAG, {}, visitor.serialize(message.nodes)),\n          new xml.CR(6));\n\n      unit.children.push(new xml.CR(6), segment, new xml.CR(4));\n\n      units.push(new xml.CR(4), unit);\n    });\n\n    const file =\n        new xml.Tag('file', {'original': 'ng.template', id: 'ngi18n'}, [...units, new xml.CR(2)]);\n\n    const xliff = new xml.Tag(\n        _XLIFF_TAG, {version: _VERSION, xmlns: _XMLNS, srcLang: locale || _DEFAULT_SOURCE_LANG},\n        [new xml.CR(2), file, new xml.CR()]);\n\n    return xml.serialize([\n      new xml.Declaration({version: '1.0', encoding: 'UTF-8'}), new xml.CR(), xliff, new xml.CR()\n    ]);\n  }\n\n  load(content: string, url: string):\n      {locale: string, i18nNodesByMsgId: {[msgId: string]: i18n.Node[]}} {\n    // xliff to xml nodes\n    const xliff2Parser = new Xliff2Parser();\n    const {locale, msgIdToHtml, errors} = xliff2Parser.parse(content, url);\n\n    // xml nodes to i18n nodes\n    const i18nNodesByMsgId: {[msgId: string]: i18n.Node[]} = {};\n    const converter = new XmlToI18n();\n\n    Object.keys(msgIdToHtml).forEach(msgId => {\n      const {i18nNodes, errors: e} = converter.convert(msgIdToHtml[msgId], url);\n      errors.push(...e);\n      i18nNodesByMsgId[msgId] = i18nNodes;\n    });\n\n    if (errors.length) {\n      throw new Error(`xliff2 parse errors:\\n${errors.join('\\n')}`);\n    }\n\n    return {locale: locale !, i18nNodesByMsgId};\n  }\n\n  digest(message: i18n.Message): string { return decimalDigest(message); }\n}\n\nclass _WriteVisitor implements i18n.Visitor {\n  // TODO(issue/24571): remove '!'.\n  private _nextPlaceholderId !: number;\n\n  visitText(text: i18n.Text, context?: any): xml.Node[] { return [new xml.Text(text.value)]; }\n\n  visitContainer(container: i18n.Container, context?: any): xml.Node[] {\n    const nodes: xml.Node[] = [];\n    container.children.forEach((node: i18n.Node) => nodes.push(...node.visit(this)));\n    return nodes;\n  }\n\n  visitIcu(icu: i18n.Icu, context?: any): xml.Node[] {\n    const nodes = [new xml.Text(`{${icu.expressionPlaceholder}, ${icu.type}, `)];\n\n    Object.keys(icu.cases).forEach((c: string) => {\n      nodes.push(new xml.Text(`${c} {`), ...icu.cases[c].visit(this), new xml.Text(`} `));\n    });\n\n    nodes.push(new xml.Text(`}`));\n\n    return nodes;\n  }\n\n  visitTagPlaceholder(ph: i18n.TagPlaceholder, context?: any): xml.Node[] {\n    const type = getTypeForTag(ph.tag);\n\n    if (ph.isVoid) {\n      const tagPh = new xml.Tag(_PLACEHOLDER_TAG, {\n        id: (this._nextPlaceholderId++).toString(),\n        equiv: ph.startName,\n        type: type,\n        disp: `<${ph.tag}/>`,\n      });\n      return [tagPh];\n    }\n\n    const tagPc = new xml.Tag(_PLACEHOLDER_SPANNING_TAG, {\n      id: (this._nextPlaceholderId++).toString(),\n      equivStart: ph.startName,\n      equivEnd: ph.closeName,\n      type: type,\n      dispStart: `<${ph.tag}>`,\n      dispEnd: `</${ph.tag}>`,\n    });\n    const nodes: xml.Node[] = [].concat(...ph.children.map(node => node.visit(this)));\n    if (nodes.length) {\n      nodes.forEach((node: xml.Node) => tagPc.children.push(node));\n    } else {\n      tagPc.children.push(new xml.Text(''));\n    }\n\n    return [tagPc];\n  }\n\n  visitPlaceholder(ph: i18n.Placeholder, context?: any): xml.Node[] {\n    const idStr = (this._nextPlaceholderId++).toString();\n    return [new xml.Tag(_PLACEHOLDER_TAG, {\n      id: idStr,\n      equiv: ph.name,\n      disp: `{{${ph.value}}}`,\n    })];\n  }\n\n  visitIcuPlaceholder(ph: i18n.IcuPlaceholder, context?: any): xml.Node[] {\n    const cases = Object.keys(ph.value.cases).map((value: string) => value + ' {...}').join(' ');\n    const idStr = (this._nextPlaceholderId++).toString();\n    return [new xml.Tag(\n        _PLACEHOLDER_TAG,\n        {id: idStr, equiv: ph.name, disp: `{${ph.value.expression}, ${ph.value.type}, ${cases}}`})];\n  }\n\n  serialize(nodes: i18n.Node[]): xml.Node[] {\n    this._nextPlaceholderId = 0;\n    return [].concat(...nodes.map(node => node.visit(this)));\n  }\n}\n\n// Extract messages as xml nodes from the xliff file\nclass Xliff2Parser implements ml.Visitor {\n  // TODO(issue/24571): remove '!'.\n  private _unitMlString !: string | null;\n  // TODO(issue/24571): remove '!'.\n  private _errors !: I18nError[];\n  // TODO(issue/24571): remove '!'.\n  private _msgIdToHtml !: {[msgId: string]: string};\n  private _locale: string|null = null;\n\n  parse(xliff: string, url: string) {\n    this._unitMlString = null;\n    this._msgIdToHtml = {};\n\n    const xml = new XmlParser().parse(xliff, url, false);\n\n    this._errors = xml.errors;\n    ml.visitAll(this, xml.rootNodes, null);\n\n    return {\n      msgIdToHtml: this._msgIdToHtml,\n      errors: this._errors,\n      locale: this._locale,\n    };\n  }\n\n  visitElement(element: ml.Element, context: any): any {\n    switch (element.name) {\n      case _UNIT_TAG:\n        this._unitMlString = null;\n        const idAttr = element.attrs.find((attr) => attr.name === 'id');\n        if (!idAttr) {\n          this._addError(element, `<${_UNIT_TAG}> misses the \"id\" attribute`);\n        } else {\n          const id = idAttr.value;\n          if (this._msgIdToHtml.hasOwnProperty(id)) {\n            this._addError(element, `Duplicated translations for msg ${id}`);\n          } else {\n            ml.visitAll(this, element.children, null);\n            if (typeof this._unitMlString === 'string') {\n              this._msgIdToHtml[id] = this._unitMlString;\n            } else {\n              this._addError(element, `Message ${id} misses a translation`);\n            }\n          }\n        }\n        break;\n\n      case _SOURCE_TAG:\n        // ignore source message\n        break;\n\n      case _TARGET_TAG:\n        const innerTextStart = element.startSourceSpan !.end.offset;\n        const innerTextEnd = element.endSourceSpan !.start.offset;\n        const content = element.startSourceSpan !.start.file.content;\n        const innerText = content.slice(innerTextStart, innerTextEnd);\n        this._unitMlString = innerText;\n        break;\n\n      case _XLIFF_TAG:\n        const localeAttr = element.attrs.find((attr) => attr.name === 'trgLang');\n        if (localeAttr) {\n          this._locale = localeAttr.value;\n        }\n\n        const versionAttr = element.attrs.find((attr) => attr.name === 'version');\n        if (versionAttr) {\n          const version = versionAttr.value;\n          if (version !== '2.0') {\n            this._addError(\n                element,\n                `The XLIFF file version ${version} is not compatible with XLIFF 2.0 serializer`);\n          } else {\n            ml.visitAll(this, element.children, null);\n          }\n        }\n        break;\n      default:\n        ml.visitAll(this, element.children, null);\n    }\n  }\n\n  visitAttribute(attribute: ml.Attribute, context: any): any {}\n\n  visitText(text: ml.Text, context: any): any {}\n\n  visitComment(comment: ml.Comment, context: any): any {}\n\n  visitExpansion(expansion: ml.Expansion, context: any): any {}\n\n  visitExpansionCase(expansionCase: ml.ExpansionCase, context: any): any {}\n\n  private _addError(node: ml.Node, message: string): void {\n    this._errors.push(new I18nError(node.sourceSpan, message));\n  }\n}\n\n// Convert ml nodes (xliff syntax) to i18n nodes\nclass XmlToI18n implements ml.Visitor {\n  // TODO(issue/24571): remove '!'.\n  private _errors !: I18nError[];\n\n  convert(message: string, url: string) {\n    const xmlIcu = new XmlParser().parse(message, url, true);\n    this._errors = xmlIcu.errors;\n\n    const i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n        [] :\n        [].concat(...ml.visitAll(this, xmlIcu.rootNodes));\n\n    return {\n      i18nNodes,\n      errors: this._errors,\n    };\n  }\n\n  visitText(text: ml.Text, context: any) { return new i18n.Text(text.value, text.sourceSpan); }\n\n  visitElement(el: ml.Element, context: any): i18n.Node[]|null {\n    switch (el.name) {\n      case _PLACEHOLDER_TAG:\n        const nameAttr = el.attrs.find((attr) => attr.name === 'equiv');\n        if (nameAttr) {\n          return [new i18n.Placeholder('', nameAttr.value, el.sourceSpan)];\n        }\n\n        this._addError(el, `<${_PLACEHOLDER_TAG}> misses the \"equiv\" attribute`);\n        break;\n      case _PLACEHOLDER_SPANNING_TAG:\n        const startAttr = el.attrs.find((attr) => attr.name === 'equivStart');\n        const endAttr = el.attrs.find((attr) => attr.name === 'equivEnd');\n\n        if (!startAttr) {\n          this._addError(el, `<${_PLACEHOLDER_TAG}> misses the \"equivStart\" attribute`);\n        } else if (!endAttr) {\n          this._addError(el, `<${_PLACEHOLDER_TAG}> misses the \"equivEnd\" attribute`);\n        } else {\n          const startId = startAttr.value;\n          const endId = endAttr.value;\n\n          const nodes: i18n.Node[] = [];\n\n          return nodes.concat(\n              new i18n.Placeholder('', startId, el.sourceSpan),\n              ...el.children.map(node => node.visit(this, null)),\n              new i18n.Placeholder('', endId, el.sourceSpan));\n        }\n        break;\n      case _MARKER_TAG:\n        return [].concat(...ml.visitAll(this, el.children));\n      default:\n        this._addError(el, `Unexpected tag`);\n    }\n\n    return null;\n  }\n\n  visitExpansion(icu: ml.Expansion, context: any) {\n    const caseMap: {[value: string]: i18n.Node} = {};\n\n    ml.visitAll(this, icu.cases).forEach((c: any) => {\n      caseMap[c.value] = new i18n.Container(c.nodes, icu.sourceSpan);\n    });\n\n    return new i18n.Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n  }\n\n  visitExpansionCase(icuCase: ml.ExpansionCase, context: any): any {\n    return {\n      value: icuCase.value,\n      nodes: [].concat(...ml.visitAll(this, icuCase.expression)),\n    };\n  }\n\n  visitComment(comment: ml.Comment, context: any) {}\n\n  visitAttribute(attribute: ml.Attribute, context: any) {}\n\n  private _addError(node: ml.Node, message: string): void {\n    this._errors.push(new I18nError(node.sourceSpan, message));\n  }\n}\n\nfunction getTypeForTag(tag: string): string {\n  switch (tag.toLowerCase()) {\n    case 'br':\n    case 'b':\n    case 'i':\n    case 'u':\n      return 'fmt';\n    case 'img':\n      return 'image';\n    case 'a':\n      return 'link';\n    default:\n      return 'other';\n  }\n}\n"],"sourceRoot":""}