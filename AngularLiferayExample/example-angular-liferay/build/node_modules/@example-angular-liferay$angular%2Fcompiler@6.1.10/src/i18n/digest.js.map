{"version":3,"sources":["../../../../../../../packages/compiler/src/i18n/digest.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAQA,YAAA,SAAA,QAAA,oDAAA,CAAA;AAIA,iBAAA,MAAA,CAAuB,OAAvB,EAA4C;AAC1C,mBAAO,QAAQ,EAAR,IAAc,KAAK,eAAe,QAAQ,KAAvB,EAA8B,IAA9B,CAAmC,EAAnC,KAAyC,MAAI,QAAQ,OAAZ,GAAmB,GAA5D,CAAL,CAArB;AACD;AAFD,gBAAA,MAAA,GAAA,MAAA;AAIA,iBAAA,aAAA,CAA8B,OAA9B,EAAmD;AACjD,gBAAI,QAAQ,EAAZ,EAAgB;AACd,uBAAO,QAAQ,EAAf;AACD;AAED,gBAAM,UAAU,IAAI,8BAAJ,EAAhB;AACA,gBAAM,QAAQ,QAAQ,KAAR,CAAc,GAAd,CAAkB,UAAA,CAAA,EAAC;AAAI,uBAAA,EAAE,KAAF,CAAQ,OAAR,EAAA,IAAA,CAAA;AAAsB,aAA7C,CAAd;AACA,mBAAO,aAAa,MAAM,IAAN,CAAW,EAAX,CAAb,EAA6B,QAAQ,OAArC,CAAP;AACD;AARD,gBAAA,aAAA,GAAA,aAAA;AAUA;;;;;;;AAOA,YAAA,qBAAA,aAAA,YAAA;AAAA,qBAAA,kBAAA,GAAA,CA0BC;AAzBC,+BAAA,SAAA,CAAA,SAAA,GAAA,UAAU,IAAV,EAA2B,OAA3B,EAAuC;AAAS,uBAAO,KAAK,KAAZ;AAAoB,aAApE;AAEA,+BAAA,SAAA,CAAA,cAAA,GAAA,UAAe,SAAf,EAA0C,OAA1C,EAAsD;AAAtD,oBAAA,QAAA,IAAA;AACE,uBAAO,MAAI,UAAU,QAAV,CAAmB,GAAnB,CAAuB,UAAA,KAAA,EAAK;AAAI,2BAAA,MAAM,KAAN,CAAA,KAAA,CAAA;AAAiB,iBAAjD,EAAmD,IAAnD,CAAwD,IAAxD,CAAJ,GAAiE,GAAxE;AACD,aAFD;AAIA,+BAAA,SAAA,CAAA,QAAA,GAAA,UAAS,GAAT,EAAwB,OAAxB,EAAoC;AAApC,oBAAA,QAAA,IAAA;AACE,oBAAM,WACF,OAAO,IAAP,CAAY,IAAI,KAAhB,EAAuB,GAAvB,CAA2B,UAAC,CAAD,EAAU;AAAK,2BAAG,IAAC,IAAD,GAAM,IAAI,KAAJ,CAAU,CAAV,EAAa,KAAb,CAAmB,KAAnB,CAAN,GAAH,GAAA;AAAoC,iBAA9E,CADJ;AAEA,uBAAO,MAAI,IAAI,UAAR,GAAkB,IAAlB,GAAuB,IAAI,IAA3B,GAA+B,IAA/B,GAAoC,SAAS,IAAT,CAAc,IAAd,CAApC,GAAuD,GAA9D;AACD,aAJD;AAMA,+BAAA,SAAA,CAAA,mBAAA,GAAA,UAAoB,EAApB,EAA6C,OAA7C,EAAyD;AAAzD,oBAAA,QAAA,IAAA;AACE,uBAAO,GAAG,MAAH,GACH,oBAAiB,GAAG,SAApB,GAA6B,MAD1B,GAEH,oBAAiB,GAAG,SAApB,GAA6B,KAA7B,GAAkC,GAAG,QAAH,CAAY,GAAZ,CAAgB,UAAA,KAAA,EAAK;AAAI,2BAAA,MAAM,KAAN,CAAA,KAAA,CAAA;AAAiB,iBAA1C,EAA4C,IAA5C,CAAiD,IAAjD,CAAlC,GAAwF,cAAxF,GAAsG,GAAG,SAAzG,GAAkH,KAFtH;AAGD,aAJD;AAMA,+BAAA,SAAA,CAAA,gBAAA,GAAA,UAAiB,EAAjB,EAAuC,OAAvC,EAAmD;AACjD,uBAAO,GAAG,KAAH,GAAW,gBAAa,GAAG,IAAhB,GAAoB,KAApB,GAAyB,GAAG,KAA5B,GAAiC,OAA5C,GAAsD,gBAAa,GAAG,IAAhB,GAAoB,MAAjF;AACD,aAFD;AAIA,+BAAA,SAAA,CAAA,mBAAA,GAAA,UAAoB,EAApB,EAA6C,OAA7C,EAA0D;AACxD,uBAAO,oBAAiB,GAAG,IAApB,GAAwB,KAAxB,GAA6B,GAAG,KAAH,CAAS,KAAT,CAAe,IAAf,CAA7B,GAAiD,OAAxD;AACD,aAFD;AAGF,mBAAA,kBAAA;AAAC,SA1BD,EAAA;AA4BA,YAAM,oBAAoB,IAAI,kBAAJ,EAA1B;AAEA,iBAAA,cAAA,CAA+B,KAA/B,EAAiD;AAC/C,mBAAO,MAAM,GAAN,CAAU,UAAA,CAAA,EAAC;AAAI,uBAAA,EAAE,KAAF,CAAQ,iBAAR,EAAA,IAAA,CAAA;AAAgC,aAA/C,CAAP;AACD;AAFD,gBAAA,cAAA,GAAA,cAAA;AAIA;;;;;;;AAOA,YAAA,iCAAA,aAAA,UAAA,MAAA,EAAA;AAA6C,oBAAA,SAAA,CAAA,8BAAA,EAAA,MAAA;AAA7C,qBAAA,8BAAA,GAAA;;AAMC;AALC,2CAAA,SAAA,CAAA,QAAA,GAAA,UAAS,GAAT,EAAwB,OAAxB,EAAoC;AAApC,oBAAA,QAAA,IAAA;AACE,oBAAI,WAAW,OAAO,IAAP,CAAY,IAAI,KAAhB,EAAuB,GAAvB,CAA2B,UAAC,CAAD,EAAU;AAAK,2BAAG,IAAC,IAAD,GAAM,IAAI,KAAJ,CAAU,CAAV,EAAa,KAAb,CAAmB,KAAnB,CAAN,GAAH,GAAA;AAAoC,iBAA9E,CAAf;AACA;AACA,uBAAO,MAAI,IAAI,IAAR,GAAY,IAAZ,GAAiB,SAAS,IAAT,CAAc,IAAd,CAAjB,GAAoC,GAA3C;AACD,aAJD;AAKF,mBAAA,8BAAA;AAAC,SAND,CAA6C,kBAA7C,CAAA;AAQA;;;;;;;;AAQA,iBAAA,IAAA,CAAqB,GAArB,EAAgC;;AAC9B,gBAAM,OAAO,OAAA,UAAA,CAAW,GAAX,CAAb;AACA,gBAAM,UAAU,gBAAgB,IAAhB,EAAsB,OAAO,GAA7B,CAAhB;AACA,gBAAM,MAAM,KAAK,MAAL,GAAc,CAA1B;AAEA,gBAAM,IAAI,IAAI,KAAJ,CAAU,EAAV,CAAV;AACI,gBAAA,KAAA,QAAA,MAAA,CAAA,CAAA,UAAA,EAAA,UAAA,EAAA,UAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,CAAA,CAAA;AAAA,gBAAC,IAAA,GAAA,CAAA,CAAD;AAAA,gBAAI,IAAA,GAAA,CAAA,CAAJ;AAAA,gBAAO,IAAA,GAAA,CAAA,CAAP;AAAA,gBAAU,IAAA,GAAA,CAAA,CAAV;AAAA,gBAAa,IAAA,GAAA,CAAA,CAAb;AAEJ,oBAAQ,OAAO,CAAf,KAAqB,QAAS,KAAK,MAAM,EAAzC;AACA,oBAAQ,CAAE,MAAM,EAAN,IAAY,CAAb,IAAmB,CAApB,IAAyB,EAAjC,IAAuC,GAAvC;AAEA,iBAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,QAAQ,MAA5B,EAAoC,KAAK,EAAzC,EAA6C;AACrC,oBAAA,KAAA,QAAA,MAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AAAA,oBAAC,KAAA,GAAA,CAAA,CAAD;AAAA,oBAAK,KAAA,GAAA,CAAA,CAAL;AAAA,oBAAS,KAAA,GAAA,CAAA,CAAT;AAAA,oBAAa,KAAA,GAAA,CAAA,CAAb;AAAA,oBAAiB,KAAA,GAAA,CAAA,CAAjB;AAEN,qBAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,EAApB,EAAwB,GAAxB,EAA6B;AAC3B,wBAAI,IAAI,EAAR,EAAY;AACV,0BAAE,CAAF,IAAO,QAAQ,IAAI,CAAZ,CAAP;AACD,qBAFD,MAEO;AACL,0BAAE,CAAF,IAAO,MAAM,EAAE,IAAI,CAAN,IAAW,EAAE,IAAI,CAAN,CAAX,GAAsB,EAAE,IAAI,EAAN,CAAtB,GAAkC,EAAE,IAAI,EAAN,CAAxC,EAAmD,CAAnD,CAAP;AACD;AAEK,wBAAA,KAAA,QAAA,MAAA,CAAA,GAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AAAA,wBAAC,IAAA,GAAA,CAAA,CAAD;AAAA,wBAAI,IAAA,GAAA,CAAA,CAAJ;AACN,wBAAM,OAAO,CAAC,MAAM,CAAN,EAAS,CAAT,CAAD,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,EAAE,CAAF,CAAvB,EAA6B,MAA7B,CAAoC,KAApC,CAAb;AACA,yBAAA,QAAA,MAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,MAAA,CAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,CAAA,EAAA,CAAA,CAAA,EAAC,IAAA,GAAA,CAAA,CAAD,EAAI,IAAA,GAAA,CAAA,CAAJ,EAAO,IAAA,GAAA,CAAA,CAAP,EAAU,IAAA,GAAA,CAAA,CAAV,EAAa,IAAA,GAAA,CAAA,CAAb;AACD;AAED,qBAAA,QAAA,MAAA,CAAA,CAAA,MAAA,CAAA,EAAA,EAAA,CAAA,EAAA,MAAA,CAAA,EAAA,EAAA,CAAA,EAAA,MAAA,CAAA,EAAA,EAAA,CAAA,EAAA,MAAA,CAAA,EAAA,EAAA,CAAA,EAAA,MAAA,CAAA,EAAA,EAAA,CAAA,CAAA,EAAA,CAAA,CAAA,EAAC,IAAA,GAAA,CAAA,CAAD,EAAI,IAAA,GAAA,CAAA,CAAJ,EAAO,IAAA,GAAA,CAAA,CAAP,EAAU,IAAA,GAAA,CAAA,CAAV,EAAa,IAAA,GAAA,CAAA,CAAb;AACD;AAED,mBAAO,sBAAsB,oBAAoB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAApB,CAAtB,CAAP;AACD;AA9BD,gBAAA,IAAA,GAAA,IAAA;AAgCA,iBAAA,EAAA,CAAY,KAAZ,EAA2B,CAA3B,EAAsC,CAAtC,EAAiD,CAAjD,EAA0D;AACxD,gBAAI,QAAQ,EAAZ,EAAgB;AACd,uBAAO,CAAE,IAAI,CAAL,GAAW,CAAC,CAAD,GAAK,CAAjB,EAAqB,UAArB,CAAP;AACD;AAED,gBAAI,QAAQ,EAAZ,EAAgB;AACd,uBAAO,CAAC,IAAI,CAAJ,GAAQ,CAAT,EAAY,UAAZ,CAAP;AACD;AAED,gBAAI,QAAQ,EAAZ,EAAgB;AACd,uBAAO,CAAE,IAAI,CAAL,GAAW,IAAI,CAAf,GAAqB,IAAI,CAA1B,EAA8B,UAA9B,CAAP;AACD;AAED,mBAAO,CAAC,IAAI,CAAJ,GAAQ,CAAT,EAAY,UAAZ,CAAP;AACD;AAED;;;;;;;;AAQA,iBAAA,WAAA,CAA4B,GAA5B,EAAuC;AACrC,gBAAM,OAAO,OAAA,UAAA,CAAW,GAAX,CAAb;AAEI,gBAAA,KAAA,QAAA,MAAA,CAAA,CAAA,OAAA,IAAA,EAAA,CAAA,CAAA,EAAA,OAAA,IAAA,EAAA,MAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AAAA,gBAAC,KAAA,GAAA,CAAA,CAAD;AAAA,gBAAK,KAAA,GAAA,CAAA,CAAL;AAEJ,gBAAI,MAAM,CAAN,KAAY,MAAM,CAAN,IAAW,MAAM,CAA7B,CAAJ,EAAqC;AACnC,qBAAK,KAAK,UAAV;AACA,qBAAK,KAAK,CAAC,UAAX;AACD;AAED,mBAAO,CAAC,EAAD,EAAK,EAAL,CAAP;AACD;AAXD,gBAAA,WAAA,GAAA,WAAA;AAaA,iBAAA,YAAA,CAA6B,GAA7B,EAA0C,OAA1C,EAAyD;;AACnD,gBAAA,KAAA,QAAA,MAAA,CAAA,YAAA,GAAA,CAAA,EAAA,CAAA,CAAA;AAAA,gBAAC,KAAA,GAAA,CAAA,CAAD;AAAA,gBAAK,KAAA,GAAA,CAAA,CAAL;AAEJ,gBAAI,OAAJ,EAAa;AACL,oBAAA,KAAA,QAAA,MAAA,CAAA,YAAA,OAAA,CAAA,EAAA,CAAA,CAAA;AAAA,oBAAC,MAAA,GAAA,CAAA,CAAD;AAAA,oBAAM,MAAA,GAAA,CAAA,CAAN;AACN,qBAAA,QAAA,MAAA,CAAA,MAAA,MAAA,CAAA,EAAA,EAAA,EAAA,CAAA,EAAA,CAAA,CAAA,EAAA,CAAA,GAAA,EAAA,GAAA,CAAA,CAAA,EAAA,CAAA,CAAA,EAAC,KAAA,GAAA,CAAA,CAAD,EAAK,KAAA,GAAA,CAAA,CAAL;AACD;AAED,mBAAO,sBAAsB,oBAAoB,CAAC,KAAK,UAAN,EAAkB,EAAlB,CAApB,CAAtB,CAAP;AACD;AATD,gBAAA,YAAA,GAAA,YAAA;AAWA,iBAAA,MAAA,CAAgB,GAAhB,EAA6B,CAA7B,EAAsC;;AAChC,gBAAA,KAAA,QAAA,MAAA,CAAA,CAAA,UAAA,EAAA,UAAA,CAAA,EAAA,CAAA,CAAA;AAAA,gBAAC,IAAA,GAAA,CAAA,CAAD;AAAA,gBAAI,IAAA,GAAA,CAAA,CAAJ;AACJ,gBAAI,CAAJ;AAEA,gBAAM,MAAM,IAAI,MAAhB;AAEA,iBAAK,IAAI,CAAT,EAAY,IAAI,EAAJ,IAAU,GAAtB,EAA2B,KAAK,EAAhC,EAAoC;AAClC,oBAAI,MAAM,CAAN,EAAS,OAAO,GAAP,EAAY,CAAZ,EAAe,OAAO,MAAtB,CAAT,CAAJ;AACA,oBAAI,MAAM,CAAN,EAAS,OAAO,GAAP,EAAY,IAAI,CAAhB,EAAmB,OAAO,MAA1B,CAAT,CAAJ;AACA,oBAAI,MAAM,CAAN,EAAS,OAAO,GAAP,EAAY,IAAI,CAAhB,EAAmB,OAAO,MAA1B,CAAT,CAAJ;AACA,qBAAA,QAAA,MAAA,CAAA,IAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,EAAC,IAAA,GAAA,CAAA,CAAD,EAAI,IAAA,GAAA,CAAA,CAAJ,EAAO,IAAA,GAAA,CAAA,CAAP;AACD;AAED,gBAAI,MAAM,CAAN,EAAS,OAAO,GAAP,EAAY,CAAZ,EAAe,OAAO,MAAtB,CAAT,CAAJ;AACA,gBAAI,MAAM,CAAN,EAAS,OAAO,GAAP,EAAY,IAAI,CAAhB,EAAmB,OAAO,MAA1B,CAAT,CAAJ;AACA;AACA,gBAAI,MAAM,CAAN,EAAS,GAAT,CAAJ;AACA,gBAAI,MAAM,CAAN,EAAS,OAAO,GAAP,EAAY,IAAI,CAAhB,EAAmB,OAAO,MAA1B,KAAqC,CAA9C,CAAJ;AAEA,mBAAO,IAAI,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAJ,EAAe,CAAf,CAAP;AACD;AAED;AACA,iBAAA,GAAA,CAAa,EAAb,EAAgD;gBAAnC,KAAA,QAAA,MAAA,CAAA,EAAA,EAAA,CAAA,C;gBAAC,IAAA,GAAA,CAAA,C;gBAAG,IAAA,GAAA,CAAA,C;gBAAG,IAAA,GAAA,CAAA,C;AAClB,gBAAI,MAAM,CAAN,EAAS,CAAT,CAAJ;AAAiB,gBAAI,MAAM,CAAN,EAAS,CAAT,CAAJ;AAAiB,iBAAK,MAAM,EAAX;AAClC,gBAAI,MAAM,CAAN,EAAS,CAAT,CAAJ;AAAiB,gBAAI,MAAM,CAAN,EAAS,CAAT,CAAJ;AAAiB,iBAAK,KAAK,CAAV;AAClC,gBAAI,MAAM,CAAN,EAAS,CAAT,CAAJ;AAAiB,gBAAI,MAAM,CAAN,EAAS,CAAT,CAAJ;AAAiB,iBAAK,MAAM,EAAX;AAClC,gBAAI,MAAM,CAAN,EAAS,CAAT,CAAJ;AAAiB,gBAAI,MAAM,CAAN,EAAS,CAAT,CAAJ;AAAiB,iBAAK,MAAM,EAAX;AAClC,gBAAI,MAAM,CAAN,EAAS,CAAT,CAAJ;AAAiB,gBAAI,MAAM,CAAN,EAAS,CAAT,CAAJ;AAAiB,iBAAK,KAAK,EAAV;AAClC,gBAAI,MAAM,CAAN,EAAS,CAAT,CAAJ;AAAiB,gBAAI,MAAM,CAAN,EAAS,CAAT,CAAJ;AAAiB,iBAAK,MAAM,CAAX;AAClC,gBAAI,MAAM,CAAN,EAAS,CAAT,CAAJ;AAAiB,gBAAI,MAAM,CAAN,EAAS,CAAT,CAAJ;AAAiB,iBAAK,MAAM,CAAX;AAClC,gBAAI,MAAM,CAAN,EAAS,CAAT,CAAJ;AAAiB,gBAAI,MAAM,CAAN,EAAS,CAAT,CAAJ;AAAiB,iBAAK,KAAK,EAAV;AAClC,gBAAI,MAAM,CAAN,EAAS,CAAT,CAAJ;AAAiB,gBAAI,MAAM,CAAN,EAAS,CAAT,CAAJ;AAAiB,iBAAK,MAAM,EAAX;AAClC,mBAAO,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAP;AACD;AACD;AAEA;AAEA,YAAK,MAAL;AAAA,SAAA,UAAK,MAAL,EAAW;AACT,mBAAA,OAAA,QAAA,IAAA,CAAA,IAAA,QAAA;AACA,mBAAA,OAAA,KAAA,IAAA,CAAA,IAAA,KAAA;AACD,SAHD,EAAK,WAAA,SAAM,EAAN,CAAL;AAKA,iBAAA,KAAA,CAAe,CAAf,EAA0B,CAA1B,EAAmC;AACjC,mBAAO,UAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CAAP;AACD;AAED,iBAAA,SAAA,CAAmB,CAAnB,EAA8B,CAA9B,EAAuC;AACrC,gBAAM,MAAM,CAAC,IAAI,MAAL,KAAgB,IAAI,MAApB,CAAZ;AACA,gBAAM,OAAO,CAAC,MAAM,EAAP,KAAc,MAAM,EAApB,KAA2B,QAAQ,EAAnC,CAAb;AACA,mBAAO,CAAC,SAAS,EAAV,EAAe,QAAQ,EAAT,GAAgB,MAAM,MAApC,CAAP;AACD;AAED,iBAAA,KAAA,CAAe,EAAf,EAA2C,EAA3C,EAAqE;gBAAtD,KAAA,QAAA,MAAA,CAAA,EAAA,EAAA,CAAA,C;gBAAC,KAAA,GAAA,CAAA,C;gBAAI,KAAA,GAAA,CAAA,C;gBAAuB,KAAA,QAAA,MAAA,CAAA,EAAA,EAAA,CAAA,C;gBAAC,KAAA,GAAA,CAAA,C;gBAAI,KAAA,GAAA,CAAA,C;AACxC,gBAAA,KAAA,QAAA,MAAA,CAAA,UAAA,EAAA,EAAA,EAAA,CAAA,EAAA,CAAA,CAAA;AAAA,gBAAC,QAAA,GAAA,CAAA,CAAD;AAAA,gBAAQ,IAAA,GAAA,CAAA,CAAR;AACN,gBAAM,IAAI,MAAM,MAAM,EAAN,EAAU,EAAV,CAAN,EAAqB,KAArB,CAAV;AACA,mBAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;AACD;AAED,iBAAA,KAAA,CAAe,CAAf,EAA0B,CAA1B,EAAmC;AACjC,gBAAM,MAAM,CAAC,IAAI,MAAL,KAAgB,IAAI,MAApB,CAAZ;AACA,gBAAM,OAAO,CAAC,KAAK,EAAN,KAAa,KAAK,EAAlB,KAAyB,OAAO,EAAhC,CAAb;AACA,mBAAQ,QAAQ,EAAT,GAAgB,MAAM,MAA7B;AACD;AAED;AACA,iBAAA,KAAA,CAAe,CAAf,EAA0B,KAA1B,EAAuC;AACrC,mBAAQ,KAAK,KAAN,GAAgB,MAAO,KAAK,KAAnC;AACD;AAED;AACA,iBAAA,KAAA,CAAe,EAAf,EAA2C,KAA3C,EAAwD;gBAAzC,KAAA,QAAA,MAAA,CAAA,EAAA,EAAA,CAAA,C;gBAAC,KAAA,GAAA,CAAA,C;gBAAI,KAAA,GAAA,CAAA,C;AAClB,gBAAM,IAAK,MAAM,KAAP,GAAiB,OAAQ,KAAK,KAAxC;AACA,gBAAM,IAAK,MAAM,KAAP,GAAiB,OAAQ,KAAK,KAAxC;AACA,mBAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;AACD;AAED,iBAAA,eAAA,CAAyB,GAAzB,EAAsC,MAAtC,EAAoD;AAClD,gBAAM,UAAU,MAAO,IAAI,MAAJ,GAAa,CAAd,KAAqB,CAA3B,CAAhB;AAEA,iBAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,QAAQ,MAA5B,EAAoC,GAApC,EAAyC;AACvC,wBAAQ,CAAR,IAAa,OAAO,GAAP,EAAY,IAAI,CAAhB,EAAmB,MAAnB,CAAb;AACD;AAED,mBAAO,OAAP;AACD;AAED,iBAAA,MAAA,CAAgB,GAAhB,EAA6B,KAA7B,EAA0C;AACxC,mBAAO,SAAS,IAAI,MAAb,GAAsB,CAAtB,GAA0B,IAAI,UAAJ,CAAe,KAAf,IAAwB,IAAzD;AACD;AAED,iBAAA,MAAA,CAAgB,GAAhB,EAA6B,KAA7B,EAA4C,MAA5C,EAA0D;AACxD,gBAAI,OAAO,CAAX;AACA,gBAAI,WAAW,OAAO,GAAtB,EAA2B;AACzB,qBAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,CAApB,EAAuB,GAAvB,EAA4B;AAC1B,4BAAQ,OAAO,GAAP,EAAY,QAAQ,CAApB,KAA2B,KAAK,IAAI,CAA5C;AACD;AACF,aAJD,MAIO;AACL,qBAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,CAApB,EAAuB,GAAvB,EAA4B;AAC1B,4BAAQ,OAAO,GAAP,EAAY,QAAQ,CAApB,KAA0B,IAAI,CAAtC;AACD;AACF;AACD,mBAAO,IAAP;AACD;AAED,iBAAA,mBAAA,CAA6B,OAA7B,EAA8C;AAC5C,mBAAO,QAAQ,MAAR,CAAe,UAAC,GAAD,EAAM,IAAN,EAAU;AAAK,uBAAA,MAAM,mBAAN,IAAM,CAAN;AAA8B,aAA5D,EAA8D,EAA9D,CAAP;AACD;AAED,iBAAA,kBAAA,CAA4B,IAA5B,EAAwC;AACtC,gBAAI,MAAM,EAAV;AACA,iBAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,CAApB,EAAuB,GAAvB,EAA4B;AAC1B,uBAAO,OAAO,YAAP,CAAqB,SAAS,KAAK,IAAI,CAAT,CAAV,GAAyB,IAA7C,CAAP;AACD;AACD,mBAAO,GAAP;AACD;AAED,iBAAA,qBAAA,CAA+B,GAA/B,EAA0C;AACxC,gBAAI,MAAc,EAAlB;AACA,iBAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,IAAI,MAAxB,EAAgC,GAAhC,EAAqC;AACnC,oBAAM,IAAI,OAAO,GAAP,EAAY,CAAZ,CAAV;AACA,uBAAO,CAAC,MAAM,CAAP,EAAU,QAAV,CAAmB,EAAnB,IAAyB,CAAC,IAAI,IAAL,EAAW,QAAX,CAAoB,EAApB,CAAhC;AACD;AACD,mBAAO,IAAI,WAAJ,EAAP;AACD;AAED;AACA,iBAAA,qBAAA,CAA+B,GAA/B,EAA0C;AACxC,gBAAI,UAAU,EAAd;AACA,gBAAI,aAAa,GAAjB;AAEA,iBAAK,IAAI,IAAI,IAAI,MAAJ,GAAa,CAA1B,EAA6B,KAAK,CAAlC,EAAqC,GAArC,EAA0C;AACxC,0BAAU,UAAU,OAAV,EAAmB,kBAAkB,OAAO,GAAP,EAAY,CAAZ,CAAlB,EAAkC,UAAlC,CAAnB,CAAV;AACA,6BAAa,kBAAkB,GAAlB,EAAuB,UAAvB,CAAb;AACD;AAED,mBAAO,QAAQ,KAAR,CAAc,EAAd,EAAkB,OAAlB,GAA4B,IAA5B,CAAiC,EAAjC,CAAP;AACD;AAED;AACA,iBAAA,SAAA,CAAmB,CAAnB,EAA8B,CAA9B,EAAuC;AACrC,gBAAI,MAAM,EAAV;AACA,gBAAM,MAAM,KAAK,GAAL,CAAS,EAAE,MAAX,EAAmB,EAAE,MAArB,CAAZ;AACA,iBAAK,IAAI,IAAI,CAAR,EAAW,QAAQ,CAAxB,EAA2B,IAAI,GAAJ,IAAW,KAAtC,EAA6C,GAA7C,EAAkD;AAChD,oBAAM,SAAS,QAAQ,EAAE,EAAE,CAAF,KAAQ,CAAV,CAAR,GAAuB,EAAE,EAAE,CAAF,KAAQ,CAAV,CAAtC;AACA,oBAAI,UAAU,EAAd,EAAkB;AAChB,4BAAQ,CAAR;AACA,2BAAO,SAAS,EAAhB;AACD,iBAHD,MAGO;AACL,4BAAQ,CAAR;AACA,2BAAO,MAAP;AACD;AACF;AAED,mBAAO,GAAP;AACD;AAED,iBAAA,iBAAA,CAA2B,GAA3B,EAAwC,CAAxC,EAAiD;AAC/C,gBAAI,UAAU,EAAd;AACA,gBAAI,cAAc,CAAlB;AACA,mBAAO,QAAQ,CAAf,EAAkB,MAAM,QAAQ,CAAhC,EAAmC;AACjC,oBAAI,MAAM,CAAV,EAAa,UAAU,UAAU,OAAV,EAAmB,WAAnB,CAAV;AACb,8BAAc,UAAU,WAAV,EAAuB,WAAvB,CAAd;AACD;AACD,mBAAO,OAAP;AACD","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {utf8Encode} from '../util';\n\nimport * as i18n from './i18n_ast';\n\nexport function digest(message: i18n.Message): string {\n  return message.id || sha1(serializeNodes(message.nodes).join('') + `[${message.meaning}]`);\n}\n\nexport function decimalDigest(message: i18n.Message): string {\n  if (message.id) {\n    return message.id;\n  }\n\n  const visitor = new _SerializerIgnoreIcuExpVisitor();\n  const parts = message.nodes.map(a => a.visit(visitor, null));\n  return computeMsgId(parts.join(''), message.meaning);\n}\n\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * The visitor is also used in the i18n parser tests\n *\n * @internal\n */\nclass _SerializerVisitor implements i18n.Visitor {\n  visitText(text: i18n.Text, context: any): any { return text.value; }\n\n  visitContainer(container: i18n.Container, context: any): any {\n    return `[${container.children.map(child => child.visit(this)).join(', ')}]`;\n  }\n\n  visitIcu(icu: i18n.Icu, context: any): any {\n    const strCases =\n        Object.keys(icu.cases).map((k: string) => `${k} {${icu.cases[k].visit(this)}}`);\n    return `{${icu.expression}, ${icu.type}, ${strCases.join(', ')}}`;\n  }\n\n  visitTagPlaceholder(ph: i18n.TagPlaceholder, context: any): any {\n    return ph.isVoid ?\n        `<ph tag name=\"${ph.startName}\"/>` :\n        `<ph tag name=\"${ph.startName}\">${ph.children.map(child => child.visit(this)).join(', ')}</ph name=\"${ph.closeName}\">`;\n  }\n\n  visitPlaceholder(ph: i18n.Placeholder, context: any): any {\n    return ph.value ? `<ph name=\"${ph.name}\">${ph.value}</ph>` : `<ph name=\"${ph.name}\"/>`;\n  }\n\n  visitIcuPlaceholder(ph: i18n.IcuPlaceholder, context?: any): any {\n    return `<ph icu name=\"${ph.name}\">${ph.value.visit(this)}</ph>`;\n  }\n}\n\nconst serializerVisitor = new _SerializerVisitor();\n\nexport function serializeNodes(nodes: i18n.Node[]): string[] {\n  return nodes.map(a => a.visit(serializerVisitor, null));\n}\n\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * Ignore the ICU expressions so that message IDs stays identical if only the expression changes.\n *\n * @internal\n */\nclass _SerializerIgnoreIcuExpVisitor extends _SerializerVisitor {\n  visitIcu(icu: i18n.Icu, context: any): any {\n    let strCases = Object.keys(icu.cases).map((k: string) => `${k} {${icu.cases[k].visit(this)}}`);\n    // Do not take the expression into account\n    return `{${icu.type}, ${strCases.join(', ')}}`;\n  }\n}\n\n/**\n * Compute the SHA1 of the given string\n *\n * see http://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf\n *\n * WARNING: this function has not been designed not tested with security in mind.\n *          DO NOT USE IT IN A SECURITY SENSITIVE CONTEXT.\n */\nexport function sha1(str: string): string {\n  const utf8 = utf8Encode(str);\n  const words32 = stringToWords32(utf8, Endian.Big);\n  const len = utf8.length * 8;\n\n  const w = new Array(80);\n  let [a, b, c, d, e]: number[] = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  words32[len >> 5] |= 0x80 << (24 - len % 32);\n  words32[((len + 64 >> 9) << 4) + 15] = len;\n\n  for (let i = 0; i < words32.length; i += 16) {\n    const [h0, h1, h2, h3, h4]: number[] = [a, b, c, d, e];\n\n    for (let j = 0; j < 80; j++) {\n      if (j < 16) {\n        w[j] = words32[i + j];\n      } else {\n        w[j] = rol32(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1);\n      }\n\n      const [f, k] = fk(j, b, c, d);\n      const temp = [rol32(a, 5), f, e, k, w[j]].reduce(add32);\n      [e, d, c, b, a] = [d, c, rol32(b, 30), a, temp];\n    }\n\n    [a, b, c, d, e] = [add32(a, h0), add32(b, h1), add32(c, h2), add32(d, h3), add32(e, h4)];\n  }\n\n  return byteStringToHexString(words32ToByteString([a, b, c, d, e]));\n}\n\nfunction fk(index: number, b: number, c: number, d: number): [number, number] {\n  if (index < 20) {\n    return [(b & c) | (~b & d), 0x5a827999];\n  }\n\n  if (index < 40) {\n    return [b ^ c ^ d, 0x6ed9eba1];\n  }\n\n  if (index < 60) {\n    return [(b & c) | (b & d) | (c & d), 0x8f1bbcdc];\n  }\n\n  return [b ^ c ^ d, 0xca62c1d6];\n}\n\n/**\n * Compute the fingerprint of the given string\n *\n * The output is 64 bit number encoded as a decimal string\n *\n * based on:\n * https://github.com/google/closure-compiler/blob/master/src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java\n */\nexport function fingerprint(str: string): [number, number] {\n  const utf8 = utf8Encode(str);\n\n  let [hi, lo] = [hash32(utf8, 0), hash32(utf8, 102072)];\n\n  if (hi == 0 && (lo == 0 || lo == 1)) {\n    hi = hi ^ 0x130f9bef;\n    lo = lo ^ -0x6b5f56d8;\n  }\n\n  return [hi, lo];\n}\n\nexport function computeMsgId(msg: string, meaning: string): string {\n  let [hi, lo] = fingerprint(msg);\n\n  if (meaning) {\n    const [him, lom] = fingerprint(meaning);\n    [hi, lo] = add64(rol64([hi, lo], 1), [him, lom]);\n  }\n\n  return byteStringToDecString(words32ToByteString([hi & 0x7fffffff, lo]));\n}\n\nfunction hash32(str: string, c: number): number {\n  let [a, b] = [0x9e3779b9, 0x9e3779b9];\n  let i: number;\n\n  const len = str.length;\n\n  for (i = 0; i + 12 <= len; i += 12) {\n    a = add32(a, wordAt(str, i, Endian.Little));\n    b = add32(b, wordAt(str, i + 4, Endian.Little));\n    c = add32(c, wordAt(str, i + 8, Endian.Little));\n    [a, b, c] = mix([a, b, c]);\n  }\n\n  a = add32(a, wordAt(str, i, Endian.Little));\n  b = add32(b, wordAt(str, i + 4, Endian.Little));\n  // the first byte of c is reserved for the length\n  c = add32(c, len);\n  c = add32(c, wordAt(str, i + 8, Endian.Little) << 8);\n\n  return mix([a, b, c])[2];\n}\n\n// clang-format off\nfunction mix([a, b, c]: [number, number, number]): [number, number, number] {\n  a = sub32(a, b); a = sub32(a, c); a ^= c >>> 13;\n  b = sub32(b, c); b = sub32(b, a); b ^= a << 8;\n  c = sub32(c, a); c = sub32(c, b); c ^= b >>> 13;\n  a = sub32(a, b); a = sub32(a, c); a ^= c >>> 12;\n  b = sub32(b, c); b = sub32(b, a); b ^= a << 16;\n  c = sub32(c, a); c = sub32(c, b); c ^= b >>> 5;\n  a = sub32(a, b); a = sub32(a, c); a ^= c >>> 3;\n  b = sub32(b, c); b = sub32(b, a); b ^= a << 10;\n  c = sub32(c, a); c = sub32(c, b); c ^= b >>> 15;\n  return [a, b, c];\n}\n// clang-format on\n\n// Utils\n\nenum Endian {\n  Little,\n  Big,\n}\n\nfunction add32(a: number, b: number): number {\n  return add32to64(a, b)[1];\n}\n\nfunction add32to64(a: number, b: number): [number, number] {\n  const low = (a & 0xffff) + (b & 0xffff);\n  const high = (a >>> 16) + (b >>> 16) + (low >>> 16);\n  return [high >>> 16, (high << 16) | (low & 0xffff)];\n}\n\nfunction add64([ah, al]: [number, number], [bh, bl]: [number, number]): [number, number] {\n  const [carry, l] = add32to64(al, bl);\n  const h = add32(add32(ah, bh), carry);\n  return [h, l];\n}\n\nfunction sub32(a: number, b: number): number {\n  const low = (a & 0xffff) - (b & 0xffff);\n  const high = (a >> 16) - (b >> 16) + (low >> 16);\n  return (high << 16) | (low & 0xffff);\n}\n\n// Rotate a 32b number left `count` position\nfunction rol32(a: number, count: number): number {\n  return (a << count) | (a >>> (32 - count));\n}\n\n// Rotate a 64b number left `count` position\nfunction rol64([hi, lo]: [number, number], count: number): [number, number] {\n  const h = (hi << count) | (lo >>> (32 - count));\n  const l = (lo << count) | (hi >>> (32 - count));\n  return [h, l];\n}\n\nfunction stringToWords32(str: string, endian: Endian): number[] {\n  const words32 = Array((str.length + 3) >>> 2);\n\n  for (let i = 0; i < words32.length; i++) {\n    words32[i] = wordAt(str, i * 4, endian);\n  }\n\n  return words32;\n}\n\nfunction byteAt(str: string, index: number): number {\n  return index >= str.length ? 0 : str.charCodeAt(index) & 0xff;\n}\n\nfunction wordAt(str: string, index: number, endian: Endian): number {\n  let word = 0;\n  if (endian === Endian.Big) {\n    for (let i = 0; i < 4; i++) {\n      word += byteAt(str, index + i) << (24 - 8 * i);\n    }\n  } else {\n    for (let i = 0; i < 4; i++) {\n      word += byteAt(str, index + i) << 8 * i;\n    }\n  }\n  return word;\n}\n\nfunction words32ToByteString(words32: number[]): string {\n  return words32.reduce((str, word) => str + word32ToByteString(word), '');\n}\n\nfunction word32ToByteString(word: number): string {\n  let str = '';\n  for (let i = 0; i < 4; i++) {\n    str += String.fromCharCode((word >>> 8 * (3 - i)) & 0xff);\n  }\n  return str;\n}\n\nfunction byteStringToHexString(str: string): string {\n  let hex: string = '';\n  for (let i = 0; i < str.length; i++) {\n    const b = byteAt(str, i);\n    hex += (b >>> 4).toString(16) + (b & 0x0f).toString(16);\n  }\n  return hex.toLowerCase();\n}\n\n// based on http://www.danvk.org/hex2dec.html (JS can not handle more than 56b)\nfunction byteStringToDecString(str: string): string {\n  let decimal = '';\n  let toThePower = '1';\n\n  for (let i = str.length - 1; i >= 0; i--) {\n    decimal = addBigInt(decimal, numberTimesBigInt(byteAt(str, i), toThePower));\n    toThePower = numberTimesBigInt(256, toThePower);\n  }\n\n  return decimal.split('').reverse().join('');\n}\n\n// x and y decimal, lowest significant digit first\nfunction addBigInt(x: string, y: string): string {\n  let sum = '';\n  const len = Math.max(x.length, y.length);\n  for (let i = 0, carry = 0; i < len || carry; i++) {\n    const tmpSum = carry + +(x[i] || 0) + +(y[i] || 0);\n    if (tmpSum >= 10) {\n      carry = 1;\n      sum += tmpSum - 10;\n    } else {\n      carry = 0;\n      sum += tmpSum;\n    }\n  }\n\n  return sum;\n}\n\nfunction numberTimesBigInt(num: number, b: string): string {\n  let product = '';\n  let bToThePower = b;\n  for (; num !== 0; num = num >>> 1) {\n    if (num & 1) product = addBigInt(product, bToThePower);\n    bToThePower = addBigInt(bToThePower, bToThePower);\n  }\n  return product;\n}\n"],"sourceRoot":""}