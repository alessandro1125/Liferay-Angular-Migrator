{"version":3,"sources":["../../../../../../packages/compiler/src/util.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ConstantPool} from './constant_pool';\n\nimport * as o from './output/output_ast';\nimport {ParseError} from './parse_util';\n\nconst DASH_CASE_REGEXP = /-+([a-z0-9])/g;\n\nexport function dashCaseToCamelCase(input: string): string {\n  return input.replace(DASH_CASE_REGEXP, (...m: any[]) => m[1].toUpperCase());\n}\n\nexport function splitAtColon(input: string, defaultValues: string[]): string[] {\n  return _splitAt(input, ':', defaultValues);\n}\n\nexport function splitAtPeriod(input: string, defaultValues: string[]): string[] {\n  return _splitAt(input, '.', defaultValues);\n}\n\nfunction _splitAt(input: string, character: string, defaultValues: string[]): string[] {\n  const characterIndex = input.indexOf(character);\n  if (characterIndex == -1) return defaultValues;\n  return [input.slice(0, characterIndex).trim(), input.slice(characterIndex + 1).trim()];\n}\n\nexport function visitValue(value: any, visitor: ValueVisitor, context: any): any {\n  if (Array.isArray(value)) {\n    return visitor.visitArray(<any[]>value, context);\n  }\n\n  if (isStrictStringMap(value)) {\n    return visitor.visitStringMap(<{[key: string]: any}>value, context);\n  }\n\n  if (value == null || typeof value == 'string' || typeof value == 'number' ||\n      typeof value == 'boolean') {\n    return visitor.visitPrimitive(value, context);\n  }\n\n  return visitor.visitOther(value, context);\n}\n\nexport function isDefined(val: any): boolean {\n  return val !== null && val !== undefined;\n}\n\nexport function noUndefined<T>(val: T | undefined): T {\n  return val === undefined ? null ! : val;\n}\n\nexport interface ValueVisitor {\n  visitArray(arr: any[], context: any): any;\n  visitStringMap(map: {[key: string]: any}, context: any): any;\n  visitPrimitive(value: any, context: any): any;\n  visitOther(value: any, context: any): any;\n}\n\nexport class ValueTransformer implements ValueVisitor {\n  visitArray(arr: any[], context: any): any {\n    return arr.map(value => visitValue(value, this, context));\n  }\n  visitStringMap(map: {[key: string]: any}, context: any): any {\n    const result: {[key: string]: any} = {};\n    Object.keys(map).forEach(key => { result[key] = visitValue(map[key], this, context); });\n    return result;\n  }\n  visitPrimitive(value: any, context: any): any { return value; }\n  visitOther(value: any, context: any): any { return value; }\n}\n\nexport type SyncAsync<T> = T | Promise<T>;\n\nexport const SyncAsync = {\n  assertSync: <T>(value: SyncAsync<T>): T => {\n    if (isPromise(value)) {\n      throw new Error(`Illegal state: value cannot be a promise`);\n    }\n    return value;\n  },\n  then: <T, R>(value: SyncAsync<T>, cb: (value: T) => R | Promise<R>| SyncAsync<R>):\n            SyncAsync<R> => { return isPromise(value) ? value.then(cb) : cb(value);},\n  all: <T>(syncAsyncValues: SyncAsync<T>[]): SyncAsync<T[]> => {\n    return syncAsyncValues.some(isPromise) ? Promise.all(syncAsyncValues) : syncAsyncValues as T[];\n  }\n};\n\nexport function error(msg: string): never {\n  throw new Error(`Internal Error: ${msg}`);\n}\n\nexport function syntaxError(msg: string, parseErrors?: ParseError[]): Error {\n  const error = Error(msg);\n  (error as any)[ERROR_SYNTAX_ERROR] = true;\n  if (parseErrors) (error as any)[ERROR_PARSE_ERRORS] = parseErrors;\n  return error;\n}\n\nconst ERROR_SYNTAX_ERROR = 'ngSyntaxError';\nconst ERROR_PARSE_ERRORS = 'ngParseErrors';\n\nexport function isSyntaxError(error: Error): boolean {\n  return (error as any)[ERROR_SYNTAX_ERROR];\n}\n\nexport function getParseErrors(error: Error): ParseError[] {\n  return (error as any)[ERROR_PARSE_ERRORS] || [];\n}\n\n// Escape characters that have a special meaning in Regular Expressions\nexport function escapeRegExp(s: string): string {\n  return s.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n}\n\nconst STRING_MAP_PROTO = Object.getPrototypeOf({});\nfunction isStrictStringMap(obj: any): boolean {\n  return typeof obj === 'object' && obj !== null && Object.getPrototypeOf(obj) === STRING_MAP_PROTO;\n}\n\nexport function utf8Encode(str: string): string {\n  let encoded = '';\n  for (let index = 0; index < str.length; index++) {\n    let codePoint = str.charCodeAt(index);\n\n    // decode surrogate\n    // see https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n    if (codePoint >= 0xd800 && codePoint <= 0xdbff && str.length > (index + 1)) {\n      const low = str.charCodeAt(index + 1);\n      if (low >= 0xdc00 && low <= 0xdfff) {\n        index++;\n        codePoint = ((codePoint - 0xd800) << 10) + low - 0xdc00 + 0x10000;\n      }\n    }\n\n    if (codePoint <= 0x7f) {\n      encoded += String.fromCharCode(codePoint);\n    } else if (codePoint <= 0x7ff) {\n      encoded += String.fromCharCode(((codePoint >> 6) & 0x1F) | 0xc0, (codePoint & 0x3f) | 0x80);\n    } else if (codePoint <= 0xffff) {\n      encoded += String.fromCharCode(\n          (codePoint >> 12) | 0xe0, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n    } else if (codePoint <= 0x1fffff) {\n      encoded += String.fromCharCode(\n          ((codePoint >> 18) & 0x07) | 0xf0, ((codePoint >> 12) & 0x3f) | 0x80,\n          ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n    }\n  }\n\n  return encoded;\n}\n\nexport interface OutputContext {\n  genFilePath: string;\n  statements: o.Statement[];\n  constantPool: ConstantPool;\n  importExpr(reference: any, typeParams?: o.Type[]|null, useSummaries?: boolean): o.Expression;\n}\n\nexport function stringify(token: any): string {\n  if (typeof token === 'string') {\n    return token;\n  }\n\n  if (token instanceof Array) {\n    return '[' + token.map(stringify).join(', ') + ']';\n  }\n\n  if (token == null) {\n    return '' + token;\n  }\n\n  if (token.overriddenName) {\n    return `${token.overriddenName}`;\n  }\n\n  if (token.name) {\n    return `${token.name}`;\n  }\n\n  // WARNING: do not try to `JSON.stringify(token)` here\n  // see https://github.com/angular/angular/issues/23440\n  const res = token.toString();\n\n  if (res == null) {\n    return '' + res;\n  }\n\n  const newLineIndex = res.indexOf('\\n');\n  return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n\n/**\n * Lazily retrieves the reference value from a forwardRef.\n */\nexport function resolveForwardRef(type: any): any {\n  if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__')) {\n    return type();\n  } else {\n    return type;\n  }\n}\n\n/**\n * Determine if the argument is shaped like a Promise\n */\nexport function isPromise(obj: any): obj is Promise<any> {\n  // allow any Promise/A+ compliant thenable.\n  // It's up to the caller to ensure that obj.then conforms to the spec\n  return !!obj && typeof obj.then === 'function';\n}\n\nexport class Version {\n  public readonly major: string;\n  public readonly minor: string;\n  public readonly patch: string;\n\n  constructor(public full: string) {\n    const splits = full.split('.');\n    this.major = splits[0];\n    this.minor = splits[1];\n    this.patch = splits.slice(2).join('.');\n  }\n}\n\nexport interface Console {\n  log(message: string): void;\n  warn(message: string): void;\n}\n"],"sourceRoot":""}