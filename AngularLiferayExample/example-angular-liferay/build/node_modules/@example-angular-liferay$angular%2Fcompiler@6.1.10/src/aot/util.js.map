{"version":3,"sources":["../../../../../../../packages/compiler/src/aot/util.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nconst STRIP_SRC_FILE_SUFFIXES = /(\\.ts|\\.d\\.ts|\\.js|\\.jsx|\\.tsx)$/;\nconst GENERATED_FILE = /\\.ngfactory\\.|\\.ngsummary\\./;\nconst JIT_SUMMARY_FILE = /\\.ngsummary\\./;\nconst JIT_SUMMARY_NAME = /NgSummary$/;\n\nexport function ngfactoryFilePath(filePath: string, forceSourceFile = false): string {\n  const urlWithSuffix = splitTypescriptSuffix(filePath, forceSourceFile);\n  return `${urlWithSuffix[0]}.ngfactory${normalizeGenFileSuffix(urlWithSuffix[1])}`;\n}\n\nexport function stripGeneratedFileSuffix(filePath: string): string {\n  return filePath.replace(GENERATED_FILE, '.');\n}\n\nexport function isGeneratedFile(filePath: string): boolean {\n  return GENERATED_FILE.test(filePath);\n}\n\nexport function splitTypescriptSuffix(path: string, forceSourceFile = false): string[] {\n  if (path.endsWith('.d.ts')) {\n    return [path.slice(0, -5), forceSourceFile ? '.ts' : '.d.ts'];\n  }\n\n  const lastDot = path.lastIndexOf('.');\n\n  if (lastDot !== -1) {\n    return [path.substring(0, lastDot), path.substring(lastDot)];\n  }\n\n  return [path, ''];\n}\n\nexport function normalizeGenFileSuffix(srcFileSuffix: string): string {\n  return srcFileSuffix === '.tsx' ? '.ts' : srcFileSuffix;\n}\n\nexport function summaryFileName(fileName: string): string {\n  const fileNameWithoutSuffix = fileName.replace(STRIP_SRC_FILE_SUFFIXES, '');\n  return `${fileNameWithoutSuffix}.ngsummary.json`;\n}\n\nexport function summaryForJitFileName(fileName: string, forceSourceFile = false): string {\n  const urlWithSuffix = splitTypescriptSuffix(stripGeneratedFileSuffix(fileName), forceSourceFile);\n  return `${urlWithSuffix[0]}.ngsummary${urlWithSuffix[1]}`;\n}\n\nexport function stripSummaryForJitFileSuffix(filePath: string): string {\n  return filePath.replace(JIT_SUMMARY_FILE, '.');\n}\n\nexport function summaryForJitName(symbolName: string): string {\n  return `${symbolName}NgSummary`;\n}\n\nexport function stripSummaryForJitNameSuffix(symbolName: string): string {\n  return symbolName.replace(JIT_SUMMARY_NAME, '');\n}\n\nconst LOWERED_SYMBOL = /\\u0275\\d+/;\n\nexport function isLoweredSymbol(name: string) {\n  return LOWERED_SYMBOL.test(name);\n}\n\nexport function createLoweredSymbol(id: number): string {\n  return `\\u0275${id}`;\n}\n"],"sourceRoot":""}