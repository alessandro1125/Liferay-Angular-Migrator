{"version":3,"sources":["../../../../../../../packages/compiler/src/css_parser/css_ast.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ParseLocation, ParseSourceSpan} from '../parse_util';\n\nimport {CssToken, CssTokenType} from './css_lexer';\n\nexport enum BlockType {\n  Import,\n  Charset,\n  Namespace,\n  Supports,\n  Keyframes,\n  MediaQuery,\n  Selector,\n  FontFace,\n  Page,\n  Document,\n  Viewport,\n  Unsupported\n}\n\nexport interface CssAstVisitor {\n  visitCssValue(ast: CssStyleValueAst, context?: any): any;\n  visitCssInlineRule(ast: CssInlineRuleAst, context?: any): any;\n  visitCssAtRulePredicate(ast: CssAtRulePredicateAst, context?: any): any;\n  visitCssKeyframeRule(ast: CssKeyframeRuleAst, context?: any): any;\n  visitCssKeyframeDefinition(ast: CssKeyframeDefinitionAst, context?: any): any;\n  visitCssMediaQueryRule(ast: CssMediaQueryRuleAst, context?: any): any;\n  visitCssSelectorRule(ast: CssSelectorRuleAst, context?: any): any;\n  visitCssSelector(ast: CssSelectorAst, context?: any): any;\n  visitCssSimpleSelector(ast: CssSimpleSelectorAst, context?: any): any;\n  visitCssPseudoSelector(ast: CssPseudoSelectorAst, context?: any): any;\n  visitCssDefinition(ast: CssDefinitionAst, context?: any): any;\n  visitCssBlock(ast: CssBlockAst, context?: any): any;\n  visitCssStylesBlock(ast: CssStylesBlockAst, context?: any): any;\n  visitCssStyleSheet(ast: CssStyleSheetAst, context?: any): any;\n  visitCssUnknownRule(ast: CssUnknownRuleAst, context?: any): any;\n  visitCssUnknownTokenList(ast: CssUnknownTokenListAst, context?: any): any;\n}\n\nexport abstract class CssAst {\n  constructor(public location: ParseSourceSpan) {}\n  get start(): ParseLocation { return this.location.start; }\n  get end(): ParseLocation { return this.location.end; }\n  abstract visit(visitor: CssAstVisitor, context?: any): any;\n}\n\nexport class CssStyleValueAst extends CssAst {\n  constructor(location: ParseSourceSpan, public tokens: CssToken[], public strValue: string) {\n    super(location);\n  }\n  visit(visitor: CssAstVisitor, context?: any): any { return visitor.visitCssValue(this); }\n}\n\nexport abstract class CssRuleAst extends CssAst {\n  constructor(location: ParseSourceSpan) { super(location); }\n}\n\nexport class CssBlockRuleAst extends CssRuleAst {\n  constructor(\n      public location: ParseSourceSpan, public type: BlockType, public block: CssBlockAst,\n      public name: CssToken|null = null) {\n    super(location);\n  }\n  visit(visitor: CssAstVisitor, context?: any): any {\n    return visitor.visitCssBlock(this.block, context);\n  }\n}\n\nexport class CssKeyframeRuleAst extends CssBlockRuleAst {\n  constructor(location: ParseSourceSpan, name: CssToken, block: CssBlockAst) {\n    super(location, BlockType.Keyframes, block, name);\n  }\n  visit(visitor: CssAstVisitor, context?: any): any {\n    return visitor.visitCssKeyframeRule(this, context);\n  }\n}\n\nexport class CssKeyframeDefinitionAst extends CssBlockRuleAst {\n  constructor(location: ParseSourceSpan, public steps: CssToken[], block: CssBlockAst) {\n    super(location, BlockType.Keyframes, block, mergeTokens(steps, ','));\n  }\n  visit(visitor: CssAstVisitor, context?: any): any {\n    return visitor.visitCssKeyframeDefinition(this, context);\n  }\n}\n\nexport class CssBlockDefinitionRuleAst extends CssBlockRuleAst {\n  constructor(\n      location: ParseSourceSpan, public strValue: string, type: BlockType,\n      public query: CssAtRulePredicateAst, block: CssBlockAst) {\n    super(location, type, block);\n    const firstCssToken: CssToken = query.tokens[0];\n    this.name = new CssToken(\n        firstCssToken.index, firstCssToken.column, firstCssToken.line, CssTokenType.Identifier,\n        this.strValue);\n  }\n  visit(visitor: CssAstVisitor, context?: any): any {\n    return visitor.visitCssBlock(this.block, context);\n  }\n}\n\nexport class CssMediaQueryRuleAst extends CssBlockDefinitionRuleAst {\n  constructor(\n      location: ParseSourceSpan, strValue: string, query: CssAtRulePredicateAst,\n      block: CssBlockAst) {\n    super(location, strValue, BlockType.MediaQuery, query, block);\n  }\n  visit(visitor: CssAstVisitor, context?: any): any {\n    return visitor.visitCssMediaQueryRule(this, context);\n  }\n}\n\nexport class CssAtRulePredicateAst extends CssAst {\n  constructor(location: ParseSourceSpan, public strValue: string, public tokens: CssToken[]) {\n    super(location);\n  }\n  visit(visitor: CssAstVisitor, context?: any): any {\n    return visitor.visitCssAtRulePredicate(this, context);\n  }\n}\n\nexport class CssInlineRuleAst extends CssRuleAst {\n  constructor(location: ParseSourceSpan, public type: BlockType, public value: CssStyleValueAst) {\n    super(location);\n  }\n  visit(visitor: CssAstVisitor, context?: any): any {\n    return visitor.visitCssInlineRule(this, context);\n  }\n}\n\nexport class CssSelectorRuleAst extends CssBlockRuleAst {\n  public strValue: string;\n\n  constructor(location: ParseSourceSpan, public selectors: CssSelectorAst[], block: CssBlockAst) {\n    super(location, BlockType.Selector, block);\n    this.strValue = selectors.map(selector => selector.strValue).join(',');\n  }\n  visit(visitor: CssAstVisitor, context?: any): any {\n    return visitor.visitCssSelectorRule(this, context);\n  }\n}\n\nexport class CssDefinitionAst extends CssAst {\n  constructor(\n      location: ParseSourceSpan, public property: CssToken, public value: CssStyleValueAst) {\n    super(location);\n  }\n  visit(visitor: CssAstVisitor, context?: any): any {\n    return visitor.visitCssDefinition(this, context);\n  }\n}\n\nexport abstract class CssSelectorPartAst extends CssAst {\n  constructor(location: ParseSourceSpan) { super(location); }\n}\n\nexport class CssSelectorAst extends CssSelectorPartAst {\n  public strValue: string;\n  constructor(location: ParseSourceSpan, public selectorParts: CssSimpleSelectorAst[]) {\n    super(location);\n    this.strValue = selectorParts.map(part => part.strValue).join('');\n  }\n  visit(visitor: CssAstVisitor, context?: any): any {\n    return visitor.visitCssSelector(this, context);\n  }\n}\n\nexport class CssSimpleSelectorAst extends CssSelectorPartAst {\n  constructor(\n      location: ParseSourceSpan, public tokens: CssToken[], public strValue: string,\n      public pseudoSelectors: CssPseudoSelectorAst[], public operator: CssToken) {\n    super(location);\n  }\n  visit(visitor: CssAstVisitor, context?: any): any {\n    return visitor.visitCssSimpleSelector(this, context);\n  }\n}\n\nexport class CssPseudoSelectorAst extends CssSelectorPartAst {\n  constructor(\n      location: ParseSourceSpan, public strValue: string, public name: string,\n      public tokens: CssToken[], public innerSelectors: CssSelectorAst[]) {\n    super(location);\n  }\n  visit(visitor: CssAstVisitor, context?: any): any {\n    return visitor.visitCssPseudoSelector(this, context);\n  }\n}\n\nexport class CssBlockAst extends CssAst {\n  constructor(location: ParseSourceSpan, public entries: CssAst[]) { super(location); }\n  visit(visitor: CssAstVisitor, context?: any): any { return visitor.visitCssBlock(this, context); }\n}\n\n/*\n a style block is different from a standard block because it contains\n css prop:value definitions. A regular block can contain a list of Ast entries.\n */\nexport class CssStylesBlockAst extends CssBlockAst {\n  constructor(location: ParseSourceSpan, public definitions: CssDefinitionAst[]) {\n    super(location, definitions);\n  }\n  visit(visitor: CssAstVisitor, context?: any): any {\n    return visitor.visitCssStylesBlock(this, context);\n  }\n}\n\nexport class CssStyleSheetAst extends CssAst {\n  constructor(location: ParseSourceSpan, public rules: CssAst[]) { super(location); }\n  visit(visitor: CssAstVisitor, context?: any): any {\n    return visitor.visitCssStyleSheet(this, context);\n  }\n}\n\nexport class CssUnknownRuleAst extends CssRuleAst {\n  constructor(location: ParseSourceSpan, public ruleName: string, public tokens: CssToken[]) {\n    super(location);\n  }\n  visit(visitor: CssAstVisitor, context?: any): any {\n    return visitor.visitCssUnknownRule(this, context);\n  }\n}\n\nexport class CssUnknownTokenListAst extends CssRuleAst {\n  constructor(location: ParseSourceSpan, public name: string, public tokens: CssToken[]) {\n    super(location);\n  }\n  visit(visitor: CssAstVisitor, context?: any): any {\n    return visitor.visitCssUnknownTokenList(this, context);\n  }\n}\n\nexport function mergeTokens(tokens: CssToken[], separator: string = ''): CssToken {\n  const mainToken = tokens[0];\n  let str = mainToken.strValue;\n  for (let i = 1; i < tokens.length; i++) {\n    str += separator + tokens[i].strValue;\n  }\n\n  return new CssToken(mainToken.index, mainToken.column, mainToken.line, mainToken.type, str);\n}\n"],"sourceRoot":""}