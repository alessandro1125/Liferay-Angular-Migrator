Liferay.Loader.define('@example-angular-liferay$angular/compiler@6.1.10/esm5/testing/src/output/source_map_util', ['module', 'exports', 'require', 'example-angular-liferay$base64-js', 'example-angular-liferay$source-map'], function (module, exports, require) {
    var define = undefined;
    /**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */
    var b64 = require('example-angular-liferay$base64-js');
    var SourceMapConsumer = require('example-angular-liferay$source-map').SourceMapConsumer;
    export function originalPositionFor(sourceMap, genPosition) {
        var smc = new SourceMapConsumer(sourceMap);
        // Note: We don't return the original object as it also contains a `name` property
        // which is always null and we don't want to include that in our assertions...
        var _a = smc.originalPositionFor(genPosition),
            line = _a.line,
            column = _a.column,
            source = _a.source;
        return { line: line, column: column, source: source };
    }
    export function extractSourceMap(source) {
        var idx = source.lastIndexOf('\n//#');
        if (idx == -1) return null;
        var smComment = source.slice(idx).trim();
        var smB64 = smComment.split('sourceMappingURL=data:application/json;base64,')[1];
        return smB64 ? JSON.parse(decodeB64String(smB64)) : null;
    }
    function decodeB64String(s) {
        return b64.toByteArray(s).reduce(function (s, c) {
            return s + String.fromCharCode(c);
        }, '');
    }
});
//# sourceMappingURL=source_map_util.js.map