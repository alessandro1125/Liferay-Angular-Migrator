{"version":3,"sources":["../../../../../../../../../../../packages/compiler/testing/src/ng_module_resolver_mock.ts"],"names":[],"mappings":";;;;;;;;;;AAQA,aAA0B,gBAA1B,QAAuD,mBAAvD;AAEA,QAAA,uBAAA,aAAA,UAAA,MAAA,EAAA;AAA0C,gBAAA,SAAA,CAAA,oBAAA,EAAA,MAAA;AAGxC,iBAAA,oBAAA,CAAY,SAAZ,EAAuC;AAAvC,gBAAA,QAA2C,OAAA,IAAA,CAAA,IAAA,EAAM,SAAN,KAAgB,IAA3D;AAFQ,kBAAA,UAAA,GAAa,IAAI,GAAJ,EAAb;;AAEsD;AAE9D;;;AAGA,6BAAA,SAAA,CAAA,WAAA,GAAA,UAAY,IAAZ,EAA6B,QAA7B,EAAoD;AAClD,iBAAK,UAAL,CAAgB,GAAhB,CAAoB,IAApB,EAA0B,QAA1B;AACD,SAFD;AAIA;;;;;;AAMA,6BAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,IAAR,EAAyB,eAAzB,EAA+C;AAAtB,gBAAA,oBAAA,KAAA,CAAA,EAAA;AAAA,kCAAA,IAAA;AAAsB;AAC7C,mBAAO,KAAK,UAAL,CAAgB,GAAhB,CAAoB,IAApB,KAA6B,OAAA,SAAA,CAAM,OAAN,CAAa,IAAb,CAAa,IAAb,EAAc,IAAd,EAAoB,eAApB,CAApC;AACD,SAFD;AAGF,eAAA,oBAAA;AAAC,KArBD,CAA0C,gBAA1C,CAAA","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CompileReflector, NgModuleResolver, core} from '@angular/compiler';\n\nexport class MockNgModuleResolver extends NgModuleResolver {\n  private _ngModules = new Map<core.Type, core.NgModule>();\n\n  constructor(reflector: CompileReflector) { super(reflector); }\n\n  /**\n   * Overrides the {@link NgModule} for a module.\n   */\n  setNgModule(type: core.Type, metadata: core.NgModule): void {\n    this._ngModules.set(type, metadata);\n  }\n\n  /**\n   * Returns the {@link NgModule} for a module:\n   * - Set the {@link NgModule} to the overridden view when it exists or fallback to the\n   * default\n   * `NgModuleResolver`, see `setNgModule`.\n   */\n  resolve(type: core.Type, throwIfNotFound = true): core.NgModule {\n    return this._ngModules.get(type) || super.resolve(type, throwIfNotFound) !;\n  }\n}\n"],"sourceRoot":""}