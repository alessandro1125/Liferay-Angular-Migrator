{"version":3,"sources":["../../../../../../../../../../../packages/compiler/testing/src/directive_resolver_mock.ts"],"names":[],"mappings":";;;AAAA;;;;;;;AAOA,aAA0B,iBAA1B,QAAwD,mBAAxD;AAEA;;;;AAIA,QAAA,wBAAA,aAAA,UAAA,MAAA,EAAA;AAA2C,gBAAA,SAAA,CAAA,qBAAA,EAAA,MAAA;AAGzC,iBAAA,qBAAA,CAAY,SAAZ,EAAuC;AAAvC,gBAAA,QAA2C,OAAA,IAAA,CAAA,IAAA,EAAM,SAAN,KAAgB,IAA3D;AAFQ,kBAAA,WAAA,GAAc,IAAI,GAAJ,EAAd;;AAEsD;AAK9D,8BAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,IAAR,EAAyB,eAAzB,EAA+C;AAAtB,gBAAA,oBAAA,KAAA,CAAA,EAAA;AAAA,kCAAA,IAAA;AAAsB;AAC7C,mBAAO,KAAK,WAAL,CAAiB,GAAjB,CAAqB,IAArB,KAA8B,OAAA,SAAA,CAAM,OAAN,CAAa,IAAb,CAAa,IAAb,EAAc,IAAd,EAAoB,eAApB,CAArC;AACD,SAFD;AAIA;;;AAGA,8BAAA,SAAA,CAAA,YAAA,GAAA,UAAa,IAAb,EAA8B,QAA9B,EAAsD;AACpD,iBAAK,WAAL,CAAiB,GAAjB,CAAqB,IAArB,EAA2B,QAA3B;AACD,SAFD;AAGF,eAAA,qBAAA;AAAC,KAlBD,CAA2C,iBAA3C,CAAA","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {CompileReflector, DirectiveResolver, core} from '@angular/compiler';\n\n/**\n * An implementation of {@link DirectiveResolver} that allows overriding\n * various properties of directives.\n */\nexport class MockDirectiveResolver extends DirectiveResolver {\n  private _directives = new Map<core.Type, core.Directive>();\n\n  constructor(reflector: CompileReflector) { super(reflector); }\n\n  resolve(type: core.Type): core.Directive;\n  resolve(type: core.Type, throwIfNotFound: true): core.Directive;\n  resolve(type: core.Type, throwIfNotFound: boolean): core.Directive|null;\n  resolve(type: core.Type, throwIfNotFound = true): core.Directive|null {\n    return this._directives.get(type) || super.resolve(type, throwIfNotFound);\n  }\n\n  /**\n   * Overrides the {@link core.Directive} for a directive.\n   */\n  setDirective(type: core.Type, metadata: core.Directive): void {\n    this._directives.set(type, metadata);\n  }\n}\n"],"sourceRoot":""}