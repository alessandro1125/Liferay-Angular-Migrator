{"version":3,"sources":["../../../../../../../../../../../packages/compiler/src/i18n/serializers/xliff.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as ml from '../../ml_parser/ast';\nimport {XmlParser} from '../../ml_parser/xml_parser';\nimport {digest} from '../digest';\nimport * as i18n from '../i18n_ast';\nimport {I18nError} from '../parse_util';\n\nimport {Serializer} from './serializer';\nimport * as xml from './xml_helper';\n\nconst _VERSION = '1.2';\nconst _XMLNS = 'urn:oasis:names:tc:xliff:document:1.2';\n// TODO(vicb): make this a param (s/_/-/)\nconst _DEFAULT_SOURCE_LANG = 'en';\nconst _PLACEHOLDER_TAG = 'x';\nconst _MARKER_TAG = 'mrk';\n\nconst _FILE_TAG = 'file';\nconst _SOURCE_TAG = 'source';\nconst _SEGMENT_SOURCE_TAG = 'seg-source';\nconst _TARGET_TAG = 'target';\nconst _UNIT_TAG = 'trans-unit';\nconst _CONTEXT_GROUP_TAG = 'context-group';\nconst _CONTEXT_TAG = 'context';\n\n// http://docs.oasis-open.org/xliff/v1.2/os/xliff-core.html\n// http://docs.oasis-open.org/xliff/v1.2/xliff-profile-html/xliff-profile-html-1.2.html\nexport class Xliff extends Serializer {\n  write(messages: i18n.Message[], locale: string|null): string {\n    const visitor = new _WriteVisitor();\n    const transUnits: xml.Node[] = [];\n\n    messages.forEach(message => {\n      let contextTags: xml.Node[] = [];\n      message.sources.forEach((source: i18n.MessageSpan) => {\n        let contextGroupTag = new xml.Tag(_CONTEXT_GROUP_TAG, {purpose: 'location'});\n        contextGroupTag.children.push(\n            new xml.CR(10),\n            new xml.Tag(\n                _CONTEXT_TAG, {'context-type': 'sourcefile'}, [new xml.Text(source.filePath)]),\n            new xml.CR(10), new xml.Tag(\n                                _CONTEXT_TAG, {'context-type': 'linenumber'},\n                                [new xml.Text(`${source.startLine}`)]),\n            new xml.CR(8));\n        contextTags.push(new xml.CR(8), contextGroupTag);\n      });\n\n      const transUnit = new xml.Tag(_UNIT_TAG, {id: message.id, datatype: 'html'});\n      transUnit.children.push(\n          new xml.CR(8), new xml.Tag(_SOURCE_TAG, {}, visitor.serialize(message.nodes)),\n          ...contextTags);\n\n      if (message.description) {\n        transUnit.children.push(\n            new xml.CR(8),\n            new xml.Tag(\n                'note', {priority: '1', from: 'description'}, [new xml.Text(message.description)]));\n      }\n\n      if (message.meaning) {\n        transUnit.children.push(\n            new xml.CR(8),\n            new xml.Tag('note', {priority: '1', from: 'meaning'}, [new xml.Text(message.meaning)]));\n      }\n\n      transUnit.children.push(new xml.CR(6));\n\n      transUnits.push(new xml.CR(6), transUnit);\n    });\n\n    const body = new xml.Tag('body', {}, [...transUnits, new xml.CR(4)]);\n    const file = new xml.Tag(\n        'file', {\n          'source-language': locale || _DEFAULT_SOURCE_LANG,\n          datatype: 'plaintext',\n          original: 'ng2.template',\n        },\n        [new xml.CR(4), body, new xml.CR(2)]);\n    const xliff = new xml.Tag(\n        'xliff', {version: _VERSION, xmlns: _XMLNS}, [new xml.CR(2), file, new xml.CR()]);\n\n    return xml.serialize([\n      new xml.Declaration({version: '1.0', encoding: 'UTF-8'}), new xml.CR(), xliff, new xml.CR()\n    ]);\n  }\n\n  load(content: string, url: string):\n      {locale: string, i18nNodesByMsgId: {[msgId: string]: i18n.Node[]}} {\n    // xliff to xml nodes\n    const xliffParser = new XliffParser();\n    const {locale, msgIdToHtml, errors} = xliffParser.parse(content, url);\n\n    // xml nodes to i18n nodes\n    const i18nNodesByMsgId: {[msgId: string]: i18n.Node[]} = {};\n    const converter = new XmlToI18n();\n\n    Object.keys(msgIdToHtml).forEach(msgId => {\n      const {i18nNodes, errors: e} = converter.convert(msgIdToHtml[msgId], url);\n      errors.push(...e);\n      i18nNodesByMsgId[msgId] = i18nNodes;\n    });\n\n    if (errors.length) {\n      throw new Error(`xliff parse errors:\\n${errors.join('\\n')}`);\n    }\n\n    return {locale: locale !, i18nNodesByMsgId};\n  }\n\n  digest(message: i18n.Message): string { return digest(message); }\n}\n\nclass _WriteVisitor implements i18n.Visitor {\n  visitText(text: i18n.Text, context?: any): xml.Node[] { return [new xml.Text(text.value)]; }\n\n  visitContainer(container: i18n.Container, context?: any): xml.Node[] {\n    const nodes: xml.Node[] = [];\n    container.children.forEach((node: i18n.Node) => nodes.push(...node.visit(this)));\n    return nodes;\n  }\n\n  visitIcu(icu: i18n.Icu, context?: any): xml.Node[] {\n    const nodes = [new xml.Text(`{${icu.expressionPlaceholder}, ${icu.type}, `)];\n\n    Object.keys(icu.cases).forEach((c: string) => {\n      nodes.push(new xml.Text(`${c} {`), ...icu.cases[c].visit(this), new xml.Text(`} `));\n    });\n\n    nodes.push(new xml.Text(`}`));\n\n    return nodes;\n  }\n\n  visitTagPlaceholder(ph: i18n.TagPlaceholder, context?: any): xml.Node[] {\n    const ctype = getCtypeForTag(ph.tag);\n\n    if (ph.isVoid) {\n      // void tags have no children nor closing tags\n      return [new xml.Tag(\n          _PLACEHOLDER_TAG, {id: ph.startName, ctype, 'equiv-text': `<${ph.tag}/>`})];\n    }\n\n    const startTagPh =\n        new xml.Tag(_PLACEHOLDER_TAG, {id: ph.startName, ctype, 'equiv-text': `<${ph.tag}>`});\n    const closeTagPh =\n        new xml.Tag(_PLACEHOLDER_TAG, {id: ph.closeName, ctype, 'equiv-text': `</${ph.tag}>`});\n\n    return [startTagPh, ...this.serialize(ph.children), closeTagPh];\n  }\n\n  visitPlaceholder(ph: i18n.Placeholder, context?: any): xml.Node[] {\n    return [new xml.Tag(_PLACEHOLDER_TAG, {id: ph.name, 'equiv-text': `{{${ph.value}}}`})];\n  }\n\n  visitIcuPlaceholder(ph: i18n.IcuPlaceholder, context?: any): xml.Node[] {\n    const equivText =\n        `{${ph.value.expression}, ${ph.value.type}, ${Object.keys(ph.value.cases).map((value: string) => value + ' {...}').join(' ')}}`;\n    return [new xml.Tag(_PLACEHOLDER_TAG, {id: ph.name, 'equiv-text': equivText})];\n  }\n\n  serialize(nodes: i18n.Node[]): xml.Node[] {\n    return [].concat(...nodes.map(node => node.visit(this)));\n  }\n}\n\n// TODO(vicb): add error management (structure)\n// Extract messages as xml nodes from the xliff file\nclass XliffParser implements ml.Visitor {\n  // TODO(issue/24571): remove '!'.\n  private _unitMlString !: string | null;\n  // TODO(issue/24571): remove '!'.\n  private _errors !: I18nError[];\n  // TODO(issue/24571): remove '!'.\n  private _msgIdToHtml !: {[msgId: string]: string};\n  private _locale: string|null = null;\n\n  parse(xliff: string, url: string) {\n    this._unitMlString = null;\n    this._msgIdToHtml = {};\n\n    const xml = new XmlParser().parse(xliff, url, false);\n\n    this._errors = xml.errors;\n    ml.visitAll(this, xml.rootNodes, null);\n\n    return {\n      msgIdToHtml: this._msgIdToHtml,\n      errors: this._errors,\n      locale: this._locale,\n    };\n  }\n\n  visitElement(element: ml.Element, context: any): any {\n    switch (element.name) {\n      case _UNIT_TAG:\n        this._unitMlString = null !;\n        const idAttr = element.attrs.find((attr) => attr.name === 'id');\n        if (!idAttr) {\n          this._addError(element, `<${_UNIT_TAG}> misses the \"id\" attribute`);\n        } else {\n          const id = idAttr.value;\n          if (this._msgIdToHtml.hasOwnProperty(id)) {\n            this._addError(element, `Duplicated translations for msg ${id}`);\n          } else {\n            ml.visitAll(this, element.children, null);\n            if (typeof this._unitMlString === 'string') {\n              this._msgIdToHtml[id] = this._unitMlString;\n            } else {\n              this._addError(element, `Message ${id} misses a translation`);\n            }\n          }\n        }\n        break;\n\n      // ignore those tags\n      case _SOURCE_TAG:\n      case _SEGMENT_SOURCE_TAG:\n        break;\n\n      case _TARGET_TAG:\n        const innerTextStart = element.startSourceSpan !.end.offset;\n        const innerTextEnd = element.endSourceSpan !.start.offset;\n        const content = element.startSourceSpan !.start.file.content;\n        const innerText = content.slice(innerTextStart, innerTextEnd);\n        this._unitMlString = innerText;\n        break;\n\n      case _FILE_TAG:\n        const localeAttr = element.attrs.find((attr) => attr.name === 'target-language');\n        if (localeAttr) {\n          this._locale = localeAttr.value;\n        }\n        ml.visitAll(this, element.children, null);\n        break;\n\n      default:\n        // TODO(vicb): assert file structure, xliff version\n        // For now only recurse on unhandled nodes\n        ml.visitAll(this, element.children, null);\n    }\n  }\n\n  visitAttribute(attribute: ml.Attribute, context: any): any {}\n\n  visitText(text: ml.Text, context: any): any {}\n\n  visitComment(comment: ml.Comment, context: any): any {}\n\n  visitExpansion(expansion: ml.Expansion, context: any): any {}\n\n  visitExpansionCase(expansionCase: ml.ExpansionCase, context: any): any {}\n\n  private _addError(node: ml.Node, message: string): void {\n    this._errors.push(new I18nError(node.sourceSpan !, message));\n  }\n}\n\n// Convert ml nodes (xliff syntax) to i18n nodes\nclass XmlToI18n implements ml.Visitor {\n  // TODO(issue/24571): remove '!'.\n  private _errors !: I18nError[];\n\n  convert(message: string, url: string) {\n    const xmlIcu = new XmlParser().parse(message, url, true);\n    this._errors = xmlIcu.errors;\n\n    const i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n        [] :\n        [].concat(...ml.visitAll(this, xmlIcu.rootNodes));\n\n    return {\n      i18nNodes: i18nNodes,\n      errors: this._errors,\n    };\n  }\n\n  visitText(text: ml.Text, context: any) { return new i18n.Text(text.value, text.sourceSpan !); }\n\n  visitElement(el: ml.Element, context: any): i18n.Placeholder|ml.Node[]|null {\n    if (el.name === _PLACEHOLDER_TAG) {\n      const nameAttr = el.attrs.find((attr) => attr.name === 'id');\n      if (nameAttr) {\n        return new i18n.Placeholder('', nameAttr.value, el.sourceSpan !);\n      }\n\n      this._addError(el, `<${_PLACEHOLDER_TAG}> misses the \"id\" attribute`);\n      return null;\n    }\n\n    if (el.name === _MARKER_TAG) {\n      return [].concat(...ml.visitAll(this, el.children));\n    }\n\n    this._addError(el, `Unexpected tag`);\n    return null;\n  }\n\n  visitExpansion(icu: ml.Expansion, context: any) {\n    const caseMap: {[value: string]: i18n.Node} = {};\n\n    ml.visitAll(this, icu.cases).forEach((c: any) => {\n      caseMap[c.value] = new i18n.Container(c.nodes, icu.sourceSpan);\n    });\n\n    return new i18n.Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n  }\n\n  visitExpansionCase(icuCase: ml.ExpansionCase, context: any): any {\n    return {\n      value: icuCase.value,\n      nodes: ml.visitAll(this, icuCase.expression),\n    };\n  }\n\n  visitComment(comment: ml.Comment, context: any) {}\n\n  visitAttribute(attribute: ml.Attribute, context: any) {}\n\n  private _addError(node: ml.Node, message: string): void {\n    this._errors.push(new I18nError(node.sourceSpan !, message));\n  }\n}\n\nfunction getCtypeForTag(tag: string): string {\n  switch (tag.toLowerCase()) {\n    case 'br':\n      return 'lb';\n    case 'img':\n      return 'image';\n    default:\n      return `x-${tag}`;\n  }\n}\n"],"sourceRoot":""}