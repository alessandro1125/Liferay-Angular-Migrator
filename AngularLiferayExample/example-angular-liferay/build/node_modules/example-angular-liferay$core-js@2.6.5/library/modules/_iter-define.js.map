{"version":3,"sources":["_iter-define.js"],"names":["LIBRARY","require","$export","redefine","hide","Iterators","$iterCreate","setToStringTag","getPrototypeOf","ITERATOR","BUGGY","keys","FF_ITERATOR","KEYS","VALUES","returnThis","module","exports","Base","NAME","Constructor","next","DEFAULT","IS_SET","FORCED","getMethod","kind","proto","values","entries","TAG","DEF_VALUES","VALUES_BUG","prototype","$native","$default","$entries","undefined","$anyNative","methods","key","IteratorPrototype","call","Object","name","P","F"],"mappings":"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","file":"_iter-define.js","sourcesContent":["'use strict';\nvar LIBRARY = require('./_library');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar $iterCreate = require('./_iter-create');\nvar setToStringTag = require('./_set-to-string-tag');\nvar getPrototypeOf = require('./_object-gpo');\nvar ITERATOR = require('./_wks')('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n"]}