{"version":3,"sources":["es6.array.find-index.js"],"names":["$export","require","$find","KEY","forced","Array","P","F","findIndex","callbackfn","arguments","length","undefined"],"mappings":"AAAA;AACA;;;;AACA,MAAIA,UAAUC,QAAQ,WAAR,CAAd;AACA,MAAIC,QAAQD,QAAQ,kBAAR,EAA4B,CAA5B,CAAZ;AACA,MAAIE,MAAM,WAAV;AACA,MAAIC,SAAS,IAAb;AACA;AACA,MAAID,OAAO,EAAX,EAAeE,MAAM,CAAN,EAASF,GAAT,EAAc,YAAY;AAAEC,aAAS,KAAT;AAAiB,GAA7C;AACfJ,UAAQA,QAAQM,CAAR,GAAYN,QAAQO,CAAR,GAAYH,MAAhC,EAAwC,OAAxC,EAAiD;AAC/CI,eAAW,SAASA,SAAT,CAAmBC,UAAnB,CAA8B,wBAA9B,EAAwD;AACjE,aAAOP,MAAM,IAAN,EAAYO,UAAZ,EAAwBC,UAAUC,MAAV,GAAmB,CAAnB,GAAuBD,UAAU,CAAV,CAAvB,GAAsCE,SAA9D,CAAP;AACD;AAH8C,GAAjD;AAKAX,UAAQ,uBAAR,EAAiCE,GAAjC","file":"es6.array.find-index.js","sourcesContent":["'use strict';\n// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)\nvar $export = require('./_export');\nvar $find = require('./_array-methods')(6);\nvar KEY = 'findIndex';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n$export($export.P + $export.F * forced, 'Array', {\n  findIndex: function findIndex(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\nrequire('./_add-to-unscopables')(KEY);\n"]}