{"version":3,"sources":["es6.array.from.js"],"names":["ctx","require","$export","toObject","call","isArrayIter","toLength","createProperty","getIterFn","S","F","iter","Array","from","arrayLike","O","C","aLen","arguments","length","mapfn","undefined","mapping","index","iterFn","result","step","iterator","next","done","value"],"mappings":"AAAA;;;;AACA,MAAIA,MAAMC,QAAQ,QAAR,CAAV;AACA,MAAIC,UAAUD,QAAQ,WAAR,CAAd;AACA,MAAIE,WAAWF,QAAQ,cAAR,CAAf;AACA,MAAIG,OAAOH,QAAQ,cAAR,CAAX;AACA,MAAII,cAAcJ,QAAQ,kBAAR,CAAlB;AACA,MAAIK,WAAWL,QAAQ,cAAR,CAAf;AACA,MAAIM,iBAAiBN,QAAQ,oBAAR,CAArB;AACA,MAAIO,YAAYP,QAAQ,4BAAR,CAAhB;;AAEAC,UAAQA,QAAQO,CAAR,GAAYP,QAAQQ,CAAR,GAAY,CAACT,QAAQ,gBAAR,EAA0B,UAAUU,IAAV,EAAgB;AAAEC,UAAMC,IAAN,CAAWF,IAAX;AAAmB,GAA/D,CAAjC,EAAmG,OAAnG,EAA4G;AAC1G;AACAE,UAAM,SAASA,IAAT,CAAcC,SAAd,CAAwB,8CAAxB,EAAwE;AAC5E,UAAIC,IAAIZ,SAASW,SAAT,CAAR;AACA,UAAIE,IAAI,OAAO,IAAP,IAAe,UAAf,GAA4B,IAA5B,GAAmCJ,KAA3C;AACA,UAAIK,OAAOC,UAAUC,MAArB;AACA,UAAIC,QAAQH,OAAO,CAAP,GAAWC,UAAU,CAAV,CAAX,GAA0BG,SAAtC;AACA,UAAIC,UAAUF,UAAUC,SAAxB;AACA,UAAIE,QAAQ,CAAZ;AACA,UAAIC,SAAShB,UAAUO,CAAV,CAAb;AACA,UAAII,MAAJ,EAAYM,MAAZ,EAAoBC,IAApB,EAA0BC,QAA1B;AACA,UAAIL,OAAJ,EAAaF,QAAQpB,IAAIoB,KAAJ,EAAWH,OAAO,CAAP,GAAWC,UAAU,CAAV,CAAX,GAA0BG,SAArC,EAAgD,CAAhD,CAAR;AACb;AACA,UAAIG,UAAUH,SAAV,IAAuB,EAAEL,KAAKJ,KAAL,IAAcP,YAAYmB,MAAZ,CAAhB,CAA3B,EAAiE;AAC/D,aAAKG,WAAWH,OAAOpB,IAAP,CAAYW,CAAZ,CAAX,EAA2BU,SAAS,IAAIT,CAAJ,EAAzC,EAAkD,CAAC,CAACU,OAAOC,SAASC,IAAT,EAAR,EAAyBC,IAA5E,EAAkFN,OAAlF,EAA2F;AACzFhB,yBAAekB,MAAf,EAAuBF,KAAvB,EAA8BD,UAAUlB,KAAKuB,QAAL,EAAeP,KAAf,EAAsB,CAACM,KAAKI,KAAN,EAAaP,KAAb,CAAtB,EAA2C,IAA3C,CAAV,GAA6DG,KAAKI,KAAhG;AACD;AACF,OAJD,MAIO;AACLX,iBAASb,SAASS,EAAEI,MAAX,CAAT;AACA,aAAKM,SAAS,IAAIT,CAAJ,CAAMG,MAAN,CAAd,EAA6BA,SAASI,KAAtC,EAA6CA,OAA7C,EAAsD;AACpDhB,yBAAekB,MAAf,EAAuBF,KAAvB,EAA8BD,UAAUF,MAAML,EAAEQ,KAAF,CAAN,EAAgBA,KAAhB,CAAV,GAAmCR,EAAEQ,KAAF,CAAjE;AACD;AACF;AACDE,aAAON,MAAP,GAAgBI,KAAhB;AACA,aAAOE,MAAP;AACD;AAzByG,GAA5G","file":"es6.array.from.js","sourcesContent":["'use strict';\nvar ctx = require('./_ctx');\nvar $export = require('./_export');\nvar toObject = require('./_to-object');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar toLength = require('./_to-length');\nvar createProperty = require('./_create-property');\nvar getIterFn = require('./core.get-iterator-method');\n\n$export($export.S + $export.F * !require('./_iter-detect')(function (iter) { Array.from(iter); }), 'Array', {\n  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n    var O = toObject(arrayLike);\n    var C = typeof this == 'function' ? this : Array;\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var index = 0;\n    var iterFn = getIterFn(O);\n    var length, result, step, iterator;\n    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);\n    // if object isn't iterable or it's array with default iterator - use simple case\n    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {\n      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {\n        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);\n      }\n    } else {\n      length = toLength(O.length);\n      for (result = new C(length); length > index; index++) {\n        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);\n      }\n    }\n    result.length = index;\n    return result;\n  }\n});\n"]}