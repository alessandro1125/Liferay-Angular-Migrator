{"version":3,"sources":["es6.regexp.search.js"],"names":["anObject","require","sameValue","regExpExec","defined","SEARCH","$search","maybeCallNative","search","regexp","O","fn","undefined","call","RegExp","String","res","done","value","rx","S","previousLastIndex","lastIndex","result","index"],"mappings":"AAAA;;;;AAEA,MAAIA,WAAWC,QAAQ,cAAR,CAAf;AACA,MAAIC,YAAYD,QAAQ,eAAR,CAAhB;AACA,MAAIE,aAAaF,QAAQ,yBAAR,CAAjB;;AAEA;AACAA,UAAQ,eAAR,EAAyB,QAAzB,EAAmC,CAAnC,EAAsC,UAAUG,OAAV,EAAmBC,MAAnB,EAA2BC,OAA3B,EAAoCC,eAApC,EAAqD;AACzF,WAAO;AACL;AACA;AACA,aAASC,MAAT,CAAgBC,MAAhB,EAAwB;AACtB,UAAIC,IAAIN,QAAQ,IAAR,CAAR;AACA,UAAIO,KAAKF,UAAUG,SAAV,GAAsBA,SAAtB,GAAkCH,OAAOJ,MAAP,CAA3C;AACA,aAAOM,OAAOC,SAAP,GAAmBD,GAAGE,IAAH,CAAQJ,MAAR,EAAgBC,CAAhB,CAAnB,GAAwC,IAAII,MAAJ,CAAWL,MAAX,EAAmBJ,MAAnB,EAA2BU,OAAOL,CAAP,CAA3B,CAA/C;AACD,KAPI;AAQL;AACA;AACA,cAAUD,MAAV,EAAkB;AAChB,UAAIO,MAAMT,gBAAgBD,OAAhB,EAAyBG,MAAzB,EAAiC,IAAjC,CAAV;AACA,UAAIO,IAAIC,IAAR,EAAc,OAAOD,IAAIE,KAAX;AACd,UAAIC,KAAKnB,SAASS,MAAT,CAAT;AACA,UAAIW,IAAIL,OAAO,IAAP,CAAR;AACA,UAAIM,oBAAoBF,GAAGG,SAA3B;AACA,UAAI,CAACpB,UAAUmB,iBAAV,EAA6B,CAA7B,CAAL,EAAsCF,GAAGG,SAAH,GAAe,CAAf;AACtC,UAAIC,SAASpB,WAAWgB,EAAX,EAAeC,CAAf,CAAb;AACA,UAAI,CAAClB,UAAUiB,GAAGG,SAAb,EAAwBD,iBAAxB,CAAL,EAAiDF,GAAGG,SAAH,GAAeD,iBAAf;AACjD,aAAOE,WAAW,IAAX,GAAkB,CAAC,CAAnB,GAAuBA,OAAOC,KAArC;AACD,KApBI,CAAP;AAsBD,GAvBD","file":"es6.regexp.search.js","sourcesContent":["'use strict';\n\nvar anObject = require('./_an-object');\nvar sameValue = require('./_same-value');\nvar regExpExec = require('./_regexp-exec-abstract');\n\n// @@search logic\nrequire('./_fix-re-wks')('search', 1, function (defined, SEARCH, $search, maybeCallNative) {\n  return [\n    // `String.prototype.search` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.search\n    function search(regexp) {\n      var O = defined(this);\n      var fn = regexp == undefined ? undefined : regexp[SEARCH];\n      return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));\n    },\n    // `RegExp.prototype[@@search]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@search\n    function (regexp) {\n      var res = maybeCallNative($search, regexp, this);\n      if (res.done) return res.value;\n      var rx = anObject(regexp);\n      var S = String(this);\n      var previousLastIndex = rx.lastIndex;\n      if (!sameValue(previousLastIndex, 0)) rx.lastIndex = 0;\n      var result = regExpExec(rx, S);\n      if (!sameValue(rx.lastIndex, previousLastIndex)) rx.lastIndex = previousLastIndex;\n      return result === null ? -1 : result.index;\n    }\n  ];\n});\n"]}