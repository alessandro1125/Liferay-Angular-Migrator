Liferay.Loader.define('@example-angular-liferay$angular/forms@6.1.10/esm5/src/form_providers', ['module', 'exports', 'require'], function (module, exports, require) {
    var define = undefined;
    /**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */
    import * as tslib_1 from "tslib";
    import { NgModule } from '@angular/core';
    import { InternalFormsSharedModule, NG_MODEL_WITH_FORM_CONTROL_WARNING, REACTIVE_DRIVEN_DIRECTIVES, TEMPLATE_DRIVEN_DIRECTIVES } from './directives';
    import { RadioControlRegistry } from './directives/radio_control_value_accessor';
    import { FormBuilder } from './form_builder';
    /**
     * Exports the required providers and directives for template-driven forms,
     * making them available for import by NgModules that import this module.
     * @see [Forms](guide/forms)
     *
     * @see [Forms Guide](/guide/forms)
     */
    var FormsModule = /** @class */function () {
        function FormsModule() {}
        FormsModule = tslib_1.__decorate([NgModule({
            declarations: TEMPLATE_DRIVEN_DIRECTIVES,
            providers: [RadioControlRegistry],
            exports: [InternalFormsSharedModule, TEMPLATE_DRIVEN_DIRECTIVES]
        })], FormsModule);
        return FormsModule;
    }();
    export { FormsModule };
    /**
     * Exports the required infrastructure and directives for reactive forms,
     * making them available for import by NgModules that import this module.
     * @see [Forms](guide/reactive-forms)
     *
     * @see [Reactive Forms Guide](/guide/reactive-forms)
     *
     */
    var ReactiveFormsModule = /** @class */function () {
        function ReactiveFormsModule() {}
        ReactiveFormsModule_1 = ReactiveFormsModule;
        /**
         * @description
         * Provides options for configuring the reactive forms module.
         *
         * @param opts An object of configuration options `warnOnNgModelWithFormControl` Configures when
         * to emit a warning when an `ngModel binding is used with reactive form directives.
         */
        ReactiveFormsModule.withConfig = function (opts) {
            return {
                ngModule: ReactiveFormsModule_1,
                providers: [{
                    provide: NG_MODEL_WITH_FORM_CONTROL_WARNING,
                    useValue: opts.warnOnNgModelWithFormControl
                }]
            };
        };
        var ReactiveFormsModule_1;
        ReactiveFormsModule = ReactiveFormsModule_1 = tslib_1.__decorate([NgModule({
            declarations: [REACTIVE_DRIVEN_DIRECTIVES],
            providers: [FormBuilder, RadioControlRegistry],
            exports: [InternalFormsSharedModule, REACTIVE_DRIVEN_DIRECTIVES]
        })], ReactiveFormsModule);
        return ReactiveFormsModule;
    }();
    export { ReactiveFormsModule };
});
//# sourceMappingURL=form_providers.js.map