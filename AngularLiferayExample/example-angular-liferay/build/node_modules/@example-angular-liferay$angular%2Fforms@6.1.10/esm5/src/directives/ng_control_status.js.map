{"version":3,"sources":["../../../../../../../../../../packages/forms/src/directives/ng_control_status.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, Self} from '@angular/core';\n\nimport {AbstractControlDirective} from './abstract_control_directive';\nimport {ControlContainer} from './control_container';\nimport {NgControl} from './ng_control';\n\nexport class AbstractControlStatus {\n  private _cd: AbstractControlDirective;\n\n  constructor(cd: AbstractControlDirective) { this._cd = cd; }\n\n  get ngClassUntouched(): boolean { return this._cd.control ? this._cd.control.untouched : false; }\n  get ngClassTouched(): boolean { return this._cd.control ? this._cd.control.touched : false; }\n  get ngClassPristine(): boolean { return this._cd.control ? this._cd.control.pristine : false; }\n  get ngClassDirty(): boolean { return this._cd.control ? this._cd.control.dirty : false; }\n  get ngClassValid(): boolean { return this._cd.control ? this._cd.control.valid : false; }\n  get ngClassInvalid(): boolean { return this._cd.control ? this._cd.control.invalid : false; }\n  get ngClassPending(): boolean { return this._cd.control ? this._cd.control.pending : false; }\n}\n\nexport const ngControlStatusHost = {\n  '[class.ng-untouched]': 'ngClassUntouched',\n  '[class.ng-touched]': 'ngClassTouched',\n  '[class.ng-pristine]': 'ngClassPristine',\n  '[class.ng-dirty]': 'ngClassDirty',\n  '[class.ng-valid]': 'ngClassValid',\n  '[class.ng-invalid]': 'ngClassInvalid',\n  '[class.ng-pending]': 'ngClassPending',\n};\n\n/**\n * Directive automatically applied to Angular form controls that sets CSS classes\n * based on control status. The following classes are applied as the properties\n * become true:\n *\n * * ng-valid\n * * ng-invalid\n * * ng-pending\n * * ng-pristine\n * * ng-dirty\n * * ng-untouched\n * * ng-touched\n *\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n */\n@Directive({selector: '[formControlName],[ngModel],[formControl]', host: ngControlStatusHost})\nexport class NgControlStatus extends AbstractControlStatus {\n  constructor(@Self() cd: NgControl) { super(cd); }\n}\n\n/**\n * Directive automatically applied to Angular form groups that sets CSS classes\n * based on control status (valid/invalid/dirty/etc).\n *\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n */\n@Directive({\n  selector:\n      '[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]',\n  host: ngControlStatusHost\n})\nexport class NgControlStatusGroup extends AbstractControlStatus {\n  constructor(@Self() cd: ControlContainer) { super(cd); }\n}\n"],"sourceRoot":""}