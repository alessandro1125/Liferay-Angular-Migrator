{"version":3,"sources":["../../../../../../../../../../packages/forms/src/directives/abstract_form_group_directive.ts"],"names":[],"mappings":";;;;;;;;;;AAYA,aAAQ,gBAAR,QAA+B,qBAA/B;AAEA,aAAQ,sBAAR,EAAgC,iBAAhC,EAAmD,WAAnD,QAAqE,UAArE;AAKA;;;;;AAKA,QAAA,6BAAA,aAAA,UAAA,MAAA,EAAA;AAAgD,gBAAA,SAAA,CAAA,0BAAA,EAAA,MAAA;AAAhD,iBAAA,0BAAA,GAAA;;AAmFC;AAvDC;;;;;AAKA,mCAAA,SAAA,CAAA,QAAA,GAAA,YAAA;AACE,iBAAK,gBAAL;AACA,iBAAK,aAAL,CAAqB,YAArB,CAAkC,IAAlC;AACD,SAHD;AAKA;;;;;AAKA,mCAAA,SAAA,CAAA,WAAA,GAAA,YAAA;AACE,gBAAI,KAAK,aAAT,EAAwB;AACtB,qBAAK,aAAL,CAAmB,eAAnB,CAAmC,IAAnC;AACD;AACF,SAJD;AAUA,eAAA,cAAA,CAAI,2BAAA,SAAJ,EAAI,SAAJ,EAAW;AAJX;;;;iBAIA,YAAA;AAA2B,uBAAO,KAAK,aAAL,CAAqB,YAArB,CAAkC,IAAlC,CAAP;AAAiD,aAAjE;4BAAA;;AAAA,SAAX;AAMA,eAAA,cAAA,CAAI,2BAAA,SAAJ,EAAI,MAAJ,EAAQ;AAJR;;;;iBAIA,YAAA;AAAuB,uBAAO,YAAY,KAAK,IAAjB,EAAuB,KAAK,OAA5B,CAAP;AAA8C,aAA7D;4BAAA;;AAAA,SAAR;AAMA,eAAA,cAAA,CAAI,2BAAA,SAAJ,EAAI,eAAJ,EAAiB;AAJjB;;;;iBAIA,YAAA;AAAiC,uBAAO,KAAK,OAAL,GAAe,KAAK,OAAL,CAAa,aAA5B,GAA4C,IAAnD;AAA0D,aAA1E;4BAAA;;AAAA,SAAjB;AAMA,eAAA,cAAA,CAAI,2BAAA,SAAJ,EAAI,WAAJ,EAAa;AAJb;;;;iBAIA,YAAA;AAAoC,uBAAO,kBAAkB,KAAK,WAAvB,CAAP;AAA6C,aAApE;4BAAA;;AAAA,SAAb;AAMA,eAAA,cAAA,CAAI,2BAAA,SAAJ,EAAI,gBAAJ,EAAkB;AAJlB;;;;iBAIA,YAAA;AACE,uBAAO,uBAAuB,KAAK,gBAA5B,CAAP;AACD,aAFiB;4BAAA;;AAAA,SAAlB;AAIA;AACA,mCAAA,SAAA,CAAA,gBAAA,GAAA,YAAA,CAA2B,CAA3B;AACF,eAAA,0BAAA;AAAC,KAnFD,CAAgD,gBAAhD,CAAA","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {OnDestroy, OnInit} from '@angular/core';\n\nimport {FormGroup} from '../model';\n\nimport {ControlContainer} from './control_container';\nimport {Form} from './form_interface';\nimport {composeAsyncValidators, composeValidators, controlPath} from './shared';\nimport {AsyncValidatorFn, ValidatorFn} from './validators';\n\n\n\n/**\n * @description\n * A base class for code shared between the `NgModelGroup` and `FormGroupName` directives.\n *\n */\nexport class AbstractFormGroupDirective extends ControlContainer implements OnInit, OnDestroy {\n  /**\n   * @description\n   * The parent control for the group\n   *\n   * @internal\n   */\n  // TODO(issue/24571): remove '!'.\n  _parent !: ControlContainer;\n\n  /**\n   * @description\n   * An array of synchronous validators for the group\n   *\n   * @internal\n   */\n  // TODO(issue/24571): remove '!'.\n  _validators !: any[];\n\n  /**\n   * @description\n   * An array of async validators for the group\n   *\n   * @internal\n   */\n  // TODO(issue/24571): remove '!'.\n  _asyncValidators !: any[];\n\n  /**\n   * @description\n   * An internal callback method triggered on the instance after the inputs are set.\n   * Registers the group with its parent group.\n   */\n  ngOnInit(): void {\n    this._checkParentType();\n    this.formDirective !.addFormGroup(this);\n  }\n\n  /**\n   * @description\n   * An internal callback method triggered before the instance is destroyed.\n   * Removes the group from its parent group.\n   */\n  ngOnDestroy(): void {\n    if (this.formDirective) {\n      this.formDirective.removeFormGroup(this);\n    }\n  }\n\n  /**\n   * @description\n   * The `FormGroup` bound to this directive.\n   */\n  get control(): FormGroup { return this.formDirective !.getFormGroup(this); }\n\n  /**\n   * @description\n   * The path to this group from the top-level directive.\n   */\n  get path(): string[] { return controlPath(this.name, this._parent); }\n\n  /**\n   * @description\n   * The top-level directive for this group if present, otherwise null.\n   */\n  get formDirective(): Form|null { return this._parent ? this._parent.formDirective : null; }\n\n  /**\n   * @description\n   * The synchronous validators registered with this group.\n   */\n  get validator(): ValidatorFn|null { return composeValidators(this._validators); }\n\n  /**\n   * @description\n   * The async validators registered with this group.\n   */\n  get asyncValidator(): AsyncValidatorFn|null {\n    return composeAsyncValidators(this._asyncValidators);\n  }\n\n  /** @internal */\n  _checkParentType(): void {}\n}\n"],"sourceRoot":""}