{"version":3,"sources":["../../../../../../../../../../packages/forms/src/directives/shared.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {isDevMode, ÉµlooseIdentical as looseIdentical} from '@angular/core';\n\nimport {FormArray, FormControl, FormGroup} from '../model';\nimport {Validators} from '../validators';\nimport {AbstractControlDirective} from './abstract_control_directive';\nimport {AbstractFormGroupDirective} from './abstract_form_group_directive';\nimport {CheckboxControlValueAccessor} from './checkbox_value_accessor';\nimport {ControlContainer} from './control_container';\nimport {ControlValueAccessor} from './control_value_accessor';\nimport {DefaultValueAccessor} from './default_value_accessor';\nimport {NgControl} from './ng_control';\nimport {normalizeAsyncValidator, normalizeValidator} from './normalize_validator';\nimport {NumberValueAccessor} from './number_value_accessor';\nimport {RadioControlValueAccessor} from './radio_control_value_accessor';\nimport {RangeValueAccessor} from './range_value_accessor';\nimport {FormArrayName} from './reactive_directives/form_group_name';\nimport {ReactiveErrors} from './reactive_errors';\nimport {SelectControlValueAccessor} from './select_control_value_accessor';\nimport {SelectMultipleControlValueAccessor} from './select_multiple_control_value_accessor';\nimport {AsyncValidator, AsyncValidatorFn, Validator, ValidatorFn} from './validators';\n\n\nexport function controlPath(name: string, parent: ControlContainer): string[] {\n  return [...parent.path !, name];\n}\n\nexport function setUpControl(control: FormControl, dir: NgControl): void {\n  if (!control) _throwError(dir, 'Cannot find control with');\n  if (!dir.valueAccessor) _throwError(dir, 'No value accessor for form control with');\n\n  control.validator = Validators.compose([control.validator !, dir.validator]);\n  control.asyncValidator = Validators.composeAsync([control.asyncValidator !, dir.asyncValidator]);\n  dir.valueAccessor !.writeValue(control.value);\n\n  setUpViewChangePipeline(control, dir);\n  setUpModelChangePipeline(control, dir);\n\n  setUpBlurPipeline(control, dir);\n\n  if (dir.valueAccessor !.setDisabledState) {\n    control.registerOnDisabledChange(\n        (isDisabled: boolean) => { dir.valueAccessor !.setDisabledState !(isDisabled); });\n  }\n\n  // re-run validation when validator binding changes, e.g. minlength=3 -> minlength=4\n  dir._rawValidators.forEach((validator: Validator | ValidatorFn) => {\n    if ((<Validator>validator).registerOnValidatorChange)\n      (<Validator>validator).registerOnValidatorChange !(() => control.updateValueAndValidity());\n  });\n\n  dir._rawAsyncValidators.forEach((validator: AsyncValidator | AsyncValidatorFn) => {\n    if ((<Validator>validator).registerOnValidatorChange)\n      (<Validator>validator).registerOnValidatorChange !(() => control.updateValueAndValidity());\n  });\n}\n\nexport function cleanUpControl(control: FormControl, dir: NgControl) {\n  dir.valueAccessor !.registerOnChange(() => _noControlError(dir));\n  dir.valueAccessor !.registerOnTouched(() => _noControlError(dir));\n\n  dir._rawValidators.forEach((validator: any) => {\n    if (validator.registerOnValidatorChange) {\n      validator.registerOnValidatorChange(null);\n    }\n  });\n\n  dir._rawAsyncValidators.forEach((validator: any) => {\n    if (validator.registerOnValidatorChange) {\n      validator.registerOnValidatorChange(null);\n    }\n  });\n\n  if (control) control._clearChangeFns();\n}\n\nfunction setUpViewChangePipeline(control: FormControl, dir: NgControl): void {\n  dir.valueAccessor !.registerOnChange((newValue: any) => {\n    control._pendingValue = newValue;\n    control._pendingChange = true;\n    control._pendingDirty = true;\n\n    if (control.updateOn === 'change') updateControl(control, dir);\n  });\n}\n\nfunction setUpBlurPipeline(control: FormControl, dir: NgControl): void {\n  dir.valueAccessor !.registerOnTouched(() => {\n    control._pendingTouched = true;\n\n    if (control.updateOn === 'blur' && control._pendingChange) updateControl(control, dir);\n    if (control.updateOn !== 'submit') control.markAsTouched();\n  });\n}\n\nfunction updateControl(control: FormControl, dir: NgControl): void {\n  if (control._pendingDirty) control.markAsDirty();\n  control.setValue(control._pendingValue, {emitModelToViewChange: false});\n  dir.viewToModelUpdate(control._pendingValue);\n  control._pendingChange = false;\n}\n\nfunction setUpModelChangePipeline(control: FormControl, dir: NgControl): void {\n  control.registerOnChange((newValue: any, emitModelEvent: boolean) => {\n    // control -> view\n    dir.valueAccessor !.writeValue(newValue);\n\n    // control -> ngModel\n    if (emitModelEvent) dir.viewToModelUpdate(newValue);\n  });\n}\n\nexport function setUpFormContainer(\n    control: FormGroup | FormArray, dir: AbstractFormGroupDirective | FormArrayName) {\n  if (control == null) _throwError(dir, 'Cannot find control with');\n  control.validator = Validators.compose([control.validator, dir.validator]);\n  control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);\n}\n\nfunction _noControlError(dir: NgControl) {\n  return _throwError(dir, 'There is no FormControl instance attached to form control element with');\n}\n\nfunction _throwError(dir: AbstractControlDirective, message: string): void {\n  let messageEnd: string;\n  if (dir.path !.length > 1) {\n    messageEnd = `path: '${dir.path!.join(' -> ')}'`;\n  } else if (dir.path ![0]) {\n    messageEnd = `name: '${dir.path}'`;\n  } else {\n    messageEnd = 'unspecified name attribute';\n  }\n  throw new Error(`${message} ${messageEnd}`);\n}\n\nexport function composeValidators(validators: Array<Validator|Function>): ValidatorFn|null {\n  return validators != null ? Validators.compose(validators.map(normalizeValidator)) : null;\n}\n\nexport function composeAsyncValidators(validators: Array<Validator|Function>): AsyncValidatorFn|\n    null {\n  return validators != null ? Validators.composeAsync(validators.map(normalizeAsyncValidator)) :\n                              null;\n}\n\nexport function isPropertyUpdated(changes: {[key: string]: any}, viewModel: any): boolean {\n  if (!changes.hasOwnProperty('model')) return false;\n  const change = changes['model'];\n\n  if (change.isFirstChange()) return true;\n  return !looseIdentical(viewModel, change.currentValue);\n}\n\nconst BUILTIN_ACCESSORS = [\n  CheckboxControlValueAccessor,\n  RangeValueAccessor,\n  NumberValueAccessor,\n  SelectControlValueAccessor,\n  SelectMultipleControlValueAccessor,\n  RadioControlValueAccessor,\n];\n\nexport function isBuiltInAccessor(valueAccessor: ControlValueAccessor): boolean {\n  return BUILTIN_ACCESSORS.some(a => valueAccessor.constructor === a);\n}\n\nexport function syncPendingControls(form: FormGroup, directives: NgControl[]): void {\n  form._syncPendingControls();\n  directives.forEach(dir => {\n    const control = dir.control as FormControl;\n    if (control.updateOn === 'submit' && control._pendingChange) {\n      dir.viewToModelUpdate(control._pendingValue);\n      control._pendingChange = false;\n    }\n  });\n}\n\n// TODO: vsavkin remove it once https://github.com/angular/angular/issues/3011 is implemented\nexport function selectValueAccessor(\n    dir: NgControl, valueAccessors: ControlValueAccessor[]): ControlValueAccessor|null {\n  if (!valueAccessors) return null;\n\n  if (!Array.isArray(valueAccessors))\n    _throwError(dir, 'Value accessor was not provided as an array for form control with');\n\n  let defaultAccessor: ControlValueAccessor|undefined = undefined;\n  let builtinAccessor: ControlValueAccessor|undefined = undefined;\n  let customAccessor: ControlValueAccessor|undefined = undefined;\n\n  valueAccessors.forEach((v: ControlValueAccessor) => {\n    if (v.constructor === DefaultValueAccessor) {\n      defaultAccessor = v;\n\n    } else if (isBuiltInAccessor(v)) {\n      if (builtinAccessor)\n        _throwError(dir, 'More than one built-in value accessor matches form control with');\n      builtinAccessor = v;\n\n    } else {\n      if (customAccessor)\n        _throwError(dir, 'More than one custom value accessor matches form control with');\n      customAccessor = v;\n    }\n  });\n\n  if (customAccessor) return customAccessor;\n  if (builtinAccessor) return builtinAccessor;\n  if (defaultAccessor) return defaultAccessor;\n\n  _throwError(dir, 'No valid value accessor for form control with');\n  return null;\n}\n\nexport function removeDir<T>(list: T[], el: T): void {\n  const index = list.indexOf(el);\n  if (index > -1) list.splice(index, 1);\n}\n\n// TODO(kara): remove after deprecation period\nexport function _ngModelWarning(\n    name: string, type: {_ngModelWarningSentOnce: boolean},\n    instance: {_ngModelWarningSent: boolean}, warningConfig: string | null) {\n  if (!isDevMode() || warningConfig === 'never') return;\n\n  if (((warningConfig === null || warningConfig === 'once') && !type._ngModelWarningSentOnce) ||\n      (warningConfig === 'always' && !instance._ngModelWarningSent)) {\n    ReactiveErrors.ngModelWarning(name);\n    type._ngModelWarningSentOnce = true;\n    instance._ngModelWarningSent = true;\n  }\n}\n"],"sourceRoot":""}