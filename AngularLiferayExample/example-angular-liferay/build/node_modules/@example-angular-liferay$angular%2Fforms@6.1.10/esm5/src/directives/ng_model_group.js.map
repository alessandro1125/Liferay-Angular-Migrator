{"version":3,"sources":["../../../../../../../../../../packages/forms/src/directives/ng_model_group.ts"],"names":[],"mappings":";;;;;;;;;;AAQA,aAAQ,SAAR,EAAmB,IAAnB,EAAyB,MAAzB,EAAiC,KAAjC,EAA2D,QAA3D,EAAqE,IAArE,EAA2E,QAA3E,EAAqF,UAArF,QAAsG,eAAtG;AAEA,aAAQ,mBAAR,EAA6B,aAA7B,QAAiD,eAAjD;AAEA,aAAQ,0BAAR,QAAyC,iCAAzC;AACA,aAAQ,gBAAR,QAA+B,qBAA/B;AACA,aAAQ,MAAR,QAAqB,WAArB;AACA,aAAQ,oBAAR,QAAmC,0BAAnC;AAEA,WAAO,IAAM,qBAA0B;AACrC,iBAAS,gBAD4B;AAErC,qBAAa,WAAW,YAAA;AAAM,mBAAA,YAAA;AAAY,SAA7B;AAFwB,KAAhC;AAKP;;;;;;;;;;;;;;;;;;;;;AAsBA,QAAA,eAAA,aAAA,UAAA,MAAA,EAAA;AAAkC,gBAAA,SAAA,CAAA,YAAA,EAAA,MAAA;AAIhC,iBAAA,YAAA,CACwB,MADxB,EAE+C,UAF/C,EAGqD,eAHrD,EAG2E;AAH3E,gBAAA,QAIE,OAAA,IAAA,CAAA,IAAA,KAAO,IAJT;AAKE,kBAAK,OAAL,GAAe,MAAf;AACA,kBAAK,WAAL,GAAmB,UAAnB;AACA,kBAAK,gBAAL,GAAwB,eAAxB;;AACD;yBAZU,Y;AAcX;AACA,qBAAA,SAAA,CAAA,gBAAA,GAAA,YAAA;AACE,gBAAI,EAAE,KAAK,OAAL,YAAwB,cAA1B,KAA2C,EAAE,KAAK,OAAL,YAAwB,MAA1B,CAA/C,EAAkF;AAChF,qCAAqB,yBAArB;AACD;AACF,SAJD;;AAbuB,gBAAA,UAAA,CAAA,CAAtB,MAAM,cAAN,CAAsB,E,yCAAA,CAAA,E,sBAAA,E,MAAA,E,KAAe,CAAf;AAFZ,uBAAY,iBAAA,QAAA,UAAA,CAAA,CADxB,UAAU,EAAC,UAAU,gBAAX,EAA6B,WAAW,CAAC,kBAAD,CAAxC,EAA8D,UAAU,cAAxE,EAAV,CACwB,EAKlB,QAAA,OAAA,CAAA,CAAA,EAAA,MAAA,CALkB,EAKV,QAAA,OAAA,CAAA,CAAA,EAAA,UAAA,CALU,EAMlB,QAAA,OAAA,CAAA,CAAA,EAAA,UAAA,CANkB,EAMN,QAAA,OAAA,CAAA,CAAA,EAAA,MAAA,CANM,EAME,QAAA,OAAA,CAAA,CAAA,EAAA,OAAO,aAAP,CAAA,CANF,EAOlB,QAAA,OAAA,CAAA,CAAA,EAAA,UAAA,CAPkB,EAON,QAAA,OAAA,CAAA,CAAA,EAAA,MAAA,CAPM,EAOE,QAAA,OAAA,CAAA,CAAA,EAAA,OAAO,mBAAP,CAAA,CAPF,E,yCAKS,gB,EAAgB,K,EAAA,K,EALzB,CAAA,EAAZ,YAAY,CAAZ;AAoBb,eAAA,YAAA;AAAC,KApBD,CAAkC,0BAAlC,CAAA;aAAa,Y","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, Host, Inject, Input, OnDestroy, OnInit, Optional, Self, SkipSelf, forwardRef} from '@angular/core';\n\nimport {NG_ASYNC_VALIDATORS, NG_VALIDATORS} from '../validators';\n\nimport {AbstractFormGroupDirective} from './abstract_form_group_directive';\nimport {ControlContainer} from './control_container';\nimport {NgForm} from './ng_form';\nimport {TemplateDrivenErrors} from './template_driven_errors';\n\nexport const modelGroupProvider: any = {\n  provide: ControlContainer,\n  useExisting: forwardRef(() => NgModelGroup)\n};\n\n/**\n * @description\n *\n * Creates and binds a `FormGroup` instance to a DOM element.\n *\n * This directive can only be used as a child of `NgForm` (or in other words,\n * within `<form>` tags).\n *\n * Use this directive if you'd like to create a sub-group within a form. This can\n * come in handy if you want to validate a sub-group of your form separately from\n * the rest of your form, or if some values in your domain model make more sense to\n * consume together in a nested object.\n *\n * Pass in the name you'd like this sub-group to have and it will become the key\n * for the sub-group in the form's full value. You can also export the directive into\n * a local template variable using `ngModelGroup` (ex: `#myGroup=\"ngModelGroup\"`).\n *\n * {@example forms/ts/ngModelGroup/ng_model_group_example.ts region='Component'}\n *\n * @ngModule FormsModule\n */\n@Directive({selector: '[ngModelGroup]', providers: [modelGroupProvider], exportAs: 'ngModelGroup'})\nexport class NgModelGroup extends AbstractFormGroupDirective implements OnInit, OnDestroy {\n  // TODO(issue/24571): remove '!'.\n  @Input('ngModelGroup') name !: string;\n\n  constructor(\n      @Host() @SkipSelf() parent: ControlContainer,\n      @Optional() @Self() @Inject(NG_VALIDATORS) validators: any[],\n      @Optional() @Self() @Inject(NG_ASYNC_VALIDATORS) asyncValidators: any[]) {\n    super();\n    this._parent = parent;\n    this._validators = validators;\n    this._asyncValidators = asyncValidators;\n  }\n\n  /** @internal */\n  _checkParentType(): void {\n    if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n      TemplateDrivenErrors.modelGroupParentException();\n    }\n  }\n}\n"],"sourceRoot":""}