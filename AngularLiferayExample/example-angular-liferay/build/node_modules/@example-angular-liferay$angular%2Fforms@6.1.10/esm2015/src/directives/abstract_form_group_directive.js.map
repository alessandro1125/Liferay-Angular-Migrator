{"version":3,"sources":["../../../../../../../packages/forms/src/directives/abstract_form_group_directive.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAYA,WAAQ,gBAAR,QAA+B,qBAA/B;AAEA,WAAQ,sBAAR,EAAgC,iBAAhC,EAAmD,WAAnD,QAAqE,UAArE;;;;;;AAUA,SAAM,MAAA,0BAAA,SAA0C,gBAA1C,CAA0D;;;;;;;AAiC9D,eAAQ;AACN,WAAK,gBAAL,GADM,CACkB;AACxB,WAAK,a,CAAgB,Y,CAAa,I;AACnC;;;;;;;AAOD,kBAAW;AACT,UAAI,KAAK,aAAT,EAAwB;AACtB,aAAK,aAAL,CAAmB,eAAnB,CAAmC,IAAnC;AACD;AACF;;;;;;AAMD,QAAI,OAAJ,GAAW;AAAgB,aAAA,iBAAO,KAAK,aAAZ,CAA4B,YAA5B,CAAyC,IAAzC;AAAA;AAAiD;;;;;;AAM5E,QAAI,IAAJ,GAAQ;AAAe,aAAO,YAAY,KAAK,IAAjB,EAAuB,KAAK,OAA5B,CAAP;AAA8C;;;;;;AAMrE,QAAI,aAAJ,GAAiB;AAAgB,aAAO,KAAK,OAAL,GAAe,KAAK,OAAL,CAAa,aAA5B,GAA4C,IAAnD;AAA0D;;;;;;AAM3F,QAAI,SAAJ,GAAa;AAAuB,aAAO,kBAAkB,KAAK,WAAvB,CAAP;AAA6C;;;;;;AAMjF,QAAI,cAAJ,GAAkB;AAChB,aAAO,uBAAuB,KAAK,gBAA5B,CAAP;AACD;;;;;AAGD,uBAAgB,CAAW;AAlFmC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {OnDestroy, OnInit} from '@angular/core';\n\nimport {FormGroup} from '../model';\n\nimport {ControlContainer} from './control_container';\nimport {Form} from './form_interface';\nimport {composeAsyncValidators, composeValidators, controlPath} from './shared';\nimport {AsyncValidatorFn, ValidatorFn} from './validators';\n\n\n\n/**\n * @description\n * A base class for code shared between the `NgModelGroup` and `FormGroupName` directives.\n *\n */\nexport class AbstractFormGroupDirective extends ControlContainer implements OnInit, OnDestroy {\n  /**\n   * @description\n   * The parent control for the group\n   *\n   * @internal\n   */\n  // TODO(issue/24571): remove '!'.\n  _parent !: ControlContainer;\n\n  /**\n   * @description\n   * An array of synchronous validators for the group\n   *\n   * @internal\n   */\n  // TODO(issue/24571): remove '!'.\n  _validators !: any[];\n\n  /**\n   * @description\n   * An array of async validators for the group\n   *\n   * @internal\n   */\n  // TODO(issue/24571): remove '!'.\n  _asyncValidators !: any[];\n\n  /**\n   * @description\n   * An internal callback method triggered on the instance after the inputs are set.\n   * Registers the group with its parent group.\n   */\n  ngOnInit(): void {\n    this._checkParentType();\n    this.formDirective !.addFormGroup(this);\n  }\n\n  /**\n   * @description\n   * An internal callback method triggered before the instance is destroyed.\n   * Removes the group from its parent group.\n   */\n  ngOnDestroy(): void {\n    if (this.formDirective) {\n      this.formDirective.removeFormGroup(this);\n    }\n  }\n\n  /**\n   * @description\n   * The `FormGroup` bound to this directive.\n   */\n  get control(): FormGroup { return this.formDirective !.getFormGroup(this); }\n\n  /**\n   * @description\n   * The path to this group from the top-level directive.\n   */\n  get path(): string[] { return controlPath(this.name, this._parent); }\n\n  /**\n   * @description\n   * The top-level directive for this group if present, otherwise null.\n   */\n  get formDirective(): Form|null { return this._parent ? this._parent.formDirective : null; }\n\n  /**\n   * @description\n   * The synchronous validators registered with this group.\n   */\n  get validator(): ValidatorFn|null { return composeValidators(this._validators); }\n\n  /**\n   * @description\n   * The async validators registered with this group.\n   */\n  get asyncValidator(): AsyncValidatorFn|null {\n    return composeAsyncValidators(this._asyncValidators);\n  }\n\n  /** @internal */\n  _checkParentType(): void {}\n}\n"],"sourceRoot":""}