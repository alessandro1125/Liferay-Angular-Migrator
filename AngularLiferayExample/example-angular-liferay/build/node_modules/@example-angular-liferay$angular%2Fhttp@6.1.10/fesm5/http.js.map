{"version":3,"sources":["http.js"],"names":["__decorate","__metadata","__extends","__read","__spread","Injectable","NgModule","Version","Observable","ɵgetDOM","BrowserXhr","prototype","build","XMLHttpRequest","RequestMethod","ReadyState","ResponseType","ContentType","ResponseContentType","Headers","headers","_this","_headers","Map","_normalizedNames","forEach","values","name","value","append","Object","keys","Array","isArray","delete","fromResponseHeaderString","headersString","split","line","index","indexOf","name_1","slice","trim","set","getAll","push","lcName","toLowerCase","fn","get","length","has","from","join","mayBeSetNormalizedName","toJSON","serialized","v","apply","entries","Error","ResponseOptions","opts","body","status","statusText","type","url","merge","options","BaseResponseOptions","_super","call","Default","ConnectionBackend","Connection","XSRFStrategy","normalizeMethodName","method","toUpperCase","Get","Post","Put","Delete","Options","Head","Patch","isSuccess","getResponseURL","xhr","responseURL","test","getAllResponseHeaders","getResponseHeader","stringToArrayBuffer","input","view","Uint16Array","i","strLen","charCodeAt","buffer","paramParser","rawParams","map","params","param","eqIdx","_a","key","val","list","QueryEncoder","encodeKey","standardEncoding","encodeValue","encodeURIComponent","replace","URLSearchParams","queryEncoder","paramsMap","clone","appendAll","storedParam","setAll","searchParams","replaceAll","toString","paramsList","k","Body","json","_body","JSON","parse","ArrayBuffer","text","encodingHint","String","fromCharCode","Uint8Array","stringify","arrayBuffer","blob","Blob","Response","responseOptions","ok","_nextRequestId","JSONP_HOME","_jsonpConnections","_getJsonpConnections","w","window","BrowserJsonp","node","document","createElement","src","nextRequestID","requestCallback","id","exposeConnection","connection","connections","removeConnection","send","appendChild","cleanup","parentNode","removeChild","JSONP_ERR_NO_CALLBACK","JSONP_ERR_WRONG_METHOD","JSONPConnection","req","_dom","baseResponseOptions","_finished","TypeError","request","response","responseObserver","readyState","Loading","_id","callback","lastIndexOf","substring","script","_script","onLoad","event","Cancelled","Done","responseOptions_1","error","_responseData","next","complete","onError","message","addEventListener","removeEventListener","finished","data","JSONPBackend","_browserJSONP","_baseResponseOptions","createConnection","XSSI_PREFIX","XHRConnection","browserXHR","_xhr","open","withCredentials","responseText","err","setDetectedContentType","setRequestHeader","responseType","Json","Text","getBody","abort","contentType","NONE","FORM","TEXT","BLOB","CookieXSRFStrategy","_cookieName","_headerName","configureRequest","xsrfToken","getCookie","XHRBackend","_browserXHR","_xsrfStrategy","RequestOptions","search","_mergeSearchParams","defineProperty","enumerable","configurable","_parseParams","objParams","item","_appendParam","BaseRequestOptions","Request","requestOptions","paramsArg","urlEncodeParams","prefix","detectContentType","FORM_DATA","ArrayBuffer$1","ARRAY_BUFFER","detectContentTypeFromBody","FormData","Blob$1","element","noop","httpRequest","backend","mergeOptions","defaultOpts","providedOpts","newOptions","Http","_backend","_defaultOptions","responseObservable","post","put","patch","head","Jsonp","defaultOptions","_createDefaultCookieXSRFStrategy","httpFactory","xhrBackend","jsonpFactory","jsonpBackend","HttpModule","providers","provide","useFactory","deps","useClass","JsonpModule","VERSION","ɵangular_packages_http_http_e","ɵangular_packages_http_http_f","ɵangular_packages_http_http_a","ɵangular_packages_http_http_b","ɵangular_packages_http_http_c"],"mappings":"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","file":"http.js","sourcesContent":["/**\n * @license Angular v6.1.10\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\nimport { __decorate, __metadata, __extends, __read, __spread } from 'tslib';\nimport { Injectable, NgModule, Version } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ɵgetDOM } from '@angular/platform-browser';\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A backend for http that uses the `XMLHttpRequest` browser API.\n *\n * Take care not to evaluate this in non-browser contexts.\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar BrowserXhr = /** @class */ (function () {\n    function BrowserXhr() {\n    }\n    BrowserXhr.prototype.build = function () { return (new XMLHttpRequest()); };\n    BrowserXhr = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [])\n    ], BrowserXhr);\n    return BrowserXhr;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Supported http methods.\n * @deprecated see https://angular.io/guide/http\n */\nvar RequestMethod;\n(function (RequestMethod) {\n    RequestMethod[RequestMethod[\"Get\"] = 0] = \"Get\";\n    RequestMethod[RequestMethod[\"Post\"] = 1] = \"Post\";\n    RequestMethod[RequestMethod[\"Put\"] = 2] = \"Put\";\n    RequestMethod[RequestMethod[\"Delete\"] = 3] = \"Delete\";\n    RequestMethod[RequestMethod[\"Options\"] = 4] = \"Options\";\n    RequestMethod[RequestMethod[\"Head\"] = 5] = \"Head\";\n    RequestMethod[RequestMethod[\"Patch\"] = 6] = \"Patch\";\n})(RequestMethod || (RequestMethod = {}));\n/**\n * All possible states in which a connection can be, based on\n * [States](http://www.w3.org/TR/XMLHttpRequest/#states) from the `XMLHttpRequest` spec, but with an\n * additional \"CANCELLED\" state.\n * @deprecated see https://angular.io/guide/http\n */\nvar ReadyState;\n(function (ReadyState) {\n    ReadyState[ReadyState[\"Unsent\"] = 0] = \"Unsent\";\n    ReadyState[ReadyState[\"Open\"] = 1] = \"Open\";\n    ReadyState[ReadyState[\"HeadersReceived\"] = 2] = \"HeadersReceived\";\n    ReadyState[ReadyState[\"Loading\"] = 3] = \"Loading\";\n    ReadyState[ReadyState[\"Done\"] = 4] = \"Done\";\n    ReadyState[ReadyState[\"Cancelled\"] = 5] = \"Cancelled\";\n})(ReadyState || (ReadyState = {}));\n/**\n * Acceptable response types to be associated with a {@link Response}, based on\n * [ResponseType](https://fetch.spec.whatwg.org/#responsetype) from the Fetch spec.\n * @deprecated see https://angular.io/guide/http\n */\nvar ResponseType;\n(function (ResponseType) {\n    ResponseType[ResponseType[\"Basic\"] = 0] = \"Basic\";\n    ResponseType[ResponseType[\"Cors\"] = 1] = \"Cors\";\n    ResponseType[ResponseType[\"Default\"] = 2] = \"Default\";\n    ResponseType[ResponseType[\"Error\"] = 3] = \"Error\";\n    ResponseType[ResponseType[\"Opaque\"] = 4] = \"Opaque\";\n})(ResponseType || (ResponseType = {}));\n/**\n * Supported content type to be automatically associated with a {@link Request}.\n * @deprecated see https://angular.io/guide/http\n */\nvar ContentType;\n(function (ContentType) {\n    ContentType[ContentType[\"NONE\"] = 0] = \"NONE\";\n    ContentType[ContentType[\"JSON\"] = 1] = \"JSON\";\n    ContentType[ContentType[\"FORM\"] = 2] = \"FORM\";\n    ContentType[ContentType[\"FORM_DATA\"] = 3] = \"FORM_DATA\";\n    ContentType[ContentType[\"TEXT\"] = 4] = \"TEXT\";\n    ContentType[ContentType[\"BLOB\"] = 5] = \"BLOB\";\n    ContentType[ContentType[\"ARRAY_BUFFER\"] = 6] = \"ARRAY_BUFFER\";\n})(ContentType || (ContentType = {}));\n/**\n * Define which buffer to use to store the response\n * @deprecated see https://angular.io/guide/http\n */\nvar ResponseContentType;\n(function (ResponseContentType) {\n    ResponseContentType[ResponseContentType[\"Text\"] = 0] = \"Text\";\n    ResponseContentType[ResponseContentType[\"Json\"] = 1] = \"Json\";\n    ResponseContentType[ResponseContentType[\"ArrayBuffer\"] = 2] = \"ArrayBuffer\";\n    ResponseContentType[ResponseContentType[\"Blob\"] = 3] = \"Blob\";\n})(ResponseContentType || (ResponseContentType = {}));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Polyfill for [Headers](https://developer.mozilla.org/en-US/docs/Web/API/Headers/Headers), as\n * specified in the [Fetch Spec](https://fetch.spec.whatwg.org/#headers-class).\n *\n * The only known difference between this `Headers` implementation and the spec is the\n * lack of an `entries` method.\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * import {Headers} from '@angular/http';\n *\n * var firstHeaders = new Headers();\n * firstHeaders.append('Content-Type', 'image/jpeg');\n * console.log(firstHeaders.get('Content-Type')) //'image/jpeg'\n *\n * // Create headers from Plain Old JavaScript Object\n * var secondHeaders = new Headers({\n *   'X-My-Custom-Header': 'Angular'\n * });\n * console.log(secondHeaders.get('X-My-Custom-Header')); //'Angular'\n *\n * var thirdHeaders = new Headers(secondHeaders);\n * console.log(thirdHeaders.get('X-My-Custom-Header')); //'Angular'\n * ```\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar Headers = /** @class */ (function () {\n    // TODO(vicb): any -> string|string[]\n    function Headers(headers) {\n        var _this = this;\n        /** @internal header names are lower case */\n        this._headers = new Map();\n        /** @internal map lower case names to actual names */\n        this._normalizedNames = new Map();\n        if (!headers) {\n            return;\n        }\n        if (headers instanceof Headers) {\n            headers.forEach(function (values, name) {\n                values.forEach(function (value) { return _this.append(name, value); });\n            });\n            return;\n        }\n        Object.keys(headers).forEach(function (name) {\n            var values = Array.isArray(headers[name]) ? headers[name] : [headers[name]];\n            _this.delete(name);\n            values.forEach(function (value) { return _this.append(name, value); });\n        });\n    }\n    /**\n     * Returns a new Headers instance from the given DOMString of Response Headers\n     */\n    Headers.fromResponseHeaderString = function (headersString) {\n        var headers = new Headers();\n        headersString.split('\\n').forEach(function (line) {\n            var index = line.indexOf(':');\n            if (index > 0) {\n                var name_1 = line.slice(0, index);\n                var value = line.slice(index + 1).trim();\n                headers.set(name_1, value);\n            }\n        });\n        return headers;\n    };\n    /**\n     * Appends a header to existing list of header values for a given header name.\n     */\n    Headers.prototype.append = function (name, value) {\n        var values = this.getAll(name);\n        if (values === null) {\n            this.set(name, value);\n        }\n        else {\n            values.push(value);\n        }\n    };\n    /**\n     * Deletes all header values for the given name.\n     */\n    Headers.prototype.delete = function (name) {\n        var lcName = name.toLowerCase();\n        this._normalizedNames.delete(lcName);\n        this._headers.delete(lcName);\n    };\n    Headers.prototype.forEach = function (fn) {\n        var _this = this;\n        this._headers.forEach(function (values, lcName) { return fn(values, _this._normalizedNames.get(lcName), _this._headers); });\n    };\n    /**\n     * Returns first header that matches given name.\n     */\n    Headers.prototype.get = function (name) {\n        var values = this.getAll(name);\n        if (values === null) {\n            return null;\n        }\n        return values.length > 0 ? values[0] : null;\n    };\n    /**\n     * Checks for existence of header by given name.\n     */\n    Headers.prototype.has = function (name) { return this._headers.has(name.toLowerCase()); };\n    /**\n     * Returns the names of the headers\n     */\n    Headers.prototype.keys = function () { return Array.from(this._normalizedNames.values()); };\n    /**\n     * Sets or overrides header value for given name.\n     */\n    Headers.prototype.set = function (name, value) {\n        if (Array.isArray(value)) {\n            if (value.length) {\n                this._headers.set(name.toLowerCase(), [value.join(',')]);\n            }\n        }\n        else {\n            this._headers.set(name.toLowerCase(), [value]);\n        }\n        this.mayBeSetNormalizedName(name);\n    };\n    /**\n     * Returns values of all headers.\n     */\n    Headers.prototype.values = function () { return Array.from(this._headers.values()); };\n    /**\n     * Returns string of all headers.\n     */\n    // TODO(vicb): returns {[name: string]: string[]}\n    Headers.prototype.toJSON = function () {\n        var _this = this;\n        var serialized = {};\n        this._headers.forEach(function (values, name) {\n            var split = [];\n            values.forEach(function (v) { return split.push.apply(split, __spread(v.split(','))); });\n            serialized[_this._normalizedNames.get(name)] = split;\n        });\n        return serialized;\n    };\n    /**\n     * Returns list of header values for a given name.\n     */\n    Headers.prototype.getAll = function (name) {\n        return this.has(name) ? this._headers.get(name.toLowerCase()) || null : null;\n    };\n    /**\n     * This method is not implemented.\n     */\n    Headers.prototype.entries = function () { throw new Error('\"entries\" method is not implemented on Headers class'); };\n    Headers.prototype.mayBeSetNormalizedName = function (name) {\n        var lcName = name.toLowerCase();\n        if (!this._normalizedNames.has(lcName)) {\n            this._normalizedNames.set(lcName, name);\n        }\n    };\n    return Headers;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates a response options object to be optionally provided when instantiating a\n * {@link Response}.\n *\n * This class is based on the `ResponseInit` description in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#responseinit).\n *\n * All values are null by default. Typical defaults can be found in the\n * {@link BaseResponseOptions} class, which sub-classes `ResponseOptions`.\n *\n * This class may be used in tests to build {@link Response Responses} for\n * mock responses (see {@link MockBackend}).\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * import {ResponseOptions, Response} from '@angular/http';\n *\n * var options = new ResponseOptions({\n *   body: '{\"name\":\"Jeff\"}'\n * });\n * var res = new Response(options);\n *\n * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\n * ```\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar ResponseOptions = /** @class */ (function () {\n    function ResponseOptions(opts) {\n        if (opts === void 0) { opts = {}; }\n        var body = opts.body, status = opts.status, headers = opts.headers, statusText = opts.statusText, type = opts.type, url = opts.url;\n        this.body = body != null ? body : null;\n        this.status = status != null ? status : null;\n        this.headers = headers != null ? headers : null;\n        this.statusText = statusText != null ? statusText : null;\n        this.type = type != null ? type : null;\n        this.url = url != null ? url : null;\n    }\n    /**\n     * Creates a copy of the `ResponseOptions` instance, using the optional input as values to\n     * override\n     * existing values. This method will not change the values of the instance on which it is being\n     * called.\n     *\n     * This may be useful when sharing a base `ResponseOptions` object inside tests,\n     * where certain properties may change from test to test.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import {ResponseOptions, Response} from '@angular/http';\n     *\n     * var options = new ResponseOptions({\n     *   body: {name: 'Jeff'}\n     * });\n     * var res = new Response(options.merge({\n     *   url: 'https://google.com'\n     * }));\n     * console.log('options.url:', options.url); // null\n     * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\n     * console.log('res.url:', res.url); // https://google.com\n     * ```\n     */\n    ResponseOptions.prototype.merge = function (options) {\n        return new ResponseOptions({\n            body: options && options.body != null ? options.body : this.body,\n            status: options && options.status != null ? options.status : this.status,\n            headers: options && options.headers != null ? options.headers : this.headers,\n            statusText: options && options.statusText != null ? options.statusText : this.statusText,\n            type: options && options.type != null ? options.type : this.type,\n            url: options && options.url != null ? options.url : this.url,\n        });\n    };\n    return ResponseOptions;\n}());\n/**\n * Subclass of {@link ResponseOptions}, with default values.\n *\n * Default values:\n *  * status: 200\n *  * headers: empty {@link Headers} object\n *\n * This class could be extended and bound to the {@link ResponseOptions} class\n * when configuring an {@link Injector}, in order to override the default options\n * used by {@link Http} to create {@link Response Responses}.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * import {provide} from '@angular/core';\n * import {bootstrap} from '@angular/platform-browser/browser';\n * import {HTTP_PROVIDERS, Headers, Http, BaseResponseOptions, ResponseOptions} from\n * '@angular/http';\n * import {App} from './myapp';\n *\n * class MyOptions extends BaseResponseOptions {\n *   headers:Headers = new Headers({network: 'github'});\n * }\n *\n * bootstrap(App, [HTTP_PROVIDERS, {provide: ResponseOptions, useClass: MyOptions}]);\n * ```\n *\n * The options could also be extended when manually creating a {@link Response}\n * object.\n *\n * ### Example\n *\n * ```\n * import {BaseResponseOptions, Response} from '@angular/http';\n *\n * var options = new BaseResponseOptions();\n * var res = new Response(options.merge({\n *   body: 'Angular',\n *   headers: new Headers({framework: 'angular'})\n * }));\n * console.log('res.headers.get(\"framework\"):', res.headers.get('framework')); // angular\n * console.log('res.text():', res.text()); // Angular;\n * ```\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar BaseResponseOptions = /** @class */ (function (_super) {\n    __extends(BaseResponseOptions, _super);\n    function BaseResponseOptions() {\n        return _super.call(this, { status: 200, statusText: 'Ok', type: ResponseType.Default, headers: new Headers() }) || this;\n    }\n    BaseResponseOptions = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [])\n    ], BaseResponseOptions);\n    return BaseResponseOptions;\n}(ResponseOptions));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Abstract class from which real backends are derived.\n *\n * The primary purpose of a `ConnectionBackend` is to create new connections to fulfill a given\n * {@link Request}.\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar ConnectionBackend = /** @class */ (function () {\n    function ConnectionBackend() {\n    }\n    return ConnectionBackend;\n}());\n/**\n * Abstract class from which real connections are derived.\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar Connection = /** @class */ (function () {\n    function Connection() {\n    }\n    return Connection;\n}());\n/**\n * An XSRFStrategy configures XSRF protection (e.g. via headers) on an HTTP request.\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar XSRFStrategy = /** @class */ (function () {\n    function XSRFStrategy() {\n    }\n    return XSRFStrategy;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction normalizeMethodName(method) {\n    if (typeof method !== 'string')\n        return method;\n    switch (method.toUpperCase()) {\n        case 'GET':\n            return RequestMethod.Get;\n        case 'POST':\n            return RequestMethod.Post;\n        case 'PUT':\n            return RequestMethod.Put;\n        case 'DELETE':\n            return RequestMethod.Delete;\n        case 'OPTIONS':\n            return RequestMethod.Options;\n        case 'HEAD':\n            return RequestMethod.Head;\n        case 'PATCH':\n            return RequestMethod.Patch;\n    }\n    throw new Error(\"Invalid request method. The method \\\"\" + method + \"\\\" is not supported.\");\n}\nvar isSuccess = function (status) { return (status >= 200 && status < 300); };\nfunction getResponseURL(xhr) {\n    if ('responseURL' in xhr) {\n        return xhr.responseURL;\n    }\n    if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n        return xhr.getResponseHeader('X-Request-URL');\n    }\n    return null;\n}\nfunction stringToArrayBuffer(input) {\n    var view = new Uint16Array(input.length);\n    for (var i = 0, strLen = input.length; i < strLen; i++) {\n        view[i] = input.charCodeAt(i);\n    }\n    return view.buffer;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction paramParser(rawParams) {\n    if (rawParams === void 0) { rawParams = ''; }\n    var map = new Map();\n    if (rawParams.length > 0) {\n        var params = rawParams.split('&');\n        params.forEach(function (param) {\n            var eqIdx = param.indexOf('=');\n            var _a = __read(eqIdx == -1 ? [param, ''] : [param.slice(0, eqIdx), param.slice(eqIdx + 1)], 2), key = _a[0], val = _a[1];\n            var list = map.get(key) || [];\n            list.push(val);\n            map.set(key, list);\n        });\n    }\n    return map;\n}\n/**\n * @deprecated see https://angular.io/guide/http\n **/\nvar QueryEncoder = /** @class */ (function () {\n    function QueryEncoder() {\n    }\n    QueryEncoder.prototype.encodeKey = function (key) { return standardEncoding(key); };\n    QueryEncoder.prototype.encodeValue = function (value) { return standardEncoding(value); };\n    return QueryEncoder;\n}());\nfunction standardEncoding(v) {\n    return encodeURIComponent(v)\n        .replace(/%40/gi, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/gi, '$')\n        .replace(/%2C/gi, ',')\n        .replace(/%3B/gi, ';')\n        .replace(/%2B/gi, '+')\n        .replace(/%3D/gi, '=')\n        .replace(/%3F/gi, '?')\n        .replace(/%2F/gi, '/');\n}\n/**\n * Map-like representation of url search parameters, based on\n * [URLSearchParams](https://url.spec.whatwg.org/#urlsearchparams) in the url living standard,\n * with several extensions for merging URLSearchParams objects:\n *   - setAll()\n *   - appendAll()\n *   - replaceAll()\n *\n * This class accepts an optional second parameter of ${@link QueryEncoder},\n * which is used to serialize parameters before making a request. By default,\n * `QueryEncoder` encodes keys and values of parameters using `encodeURIComponent`,\n * and then un-encodes certain characters that are allowed to be part of the query\n * according to IETF RFC 3986: https://tools.ietf.org/html/rfc3986.\n *\n * These are the characters that are not encoded: `! $ \\' ( ) * + , ; A 9 - . _ ~ ? /`\n *\n * If the set of allowed query characters is not acceptable for a particular backend,\n * `QueryEncoder` can be subclassed and provided as the 2nd argument to URLSearchParams.\n *\n * ```\n * import {URLSearchParams, QueryEncoder} from '@angular/http';\n * class MyQueryEncoder extends QueryEncoder {\n *   encodeKey(k: string): string {\n *     return myEncodingFunction(k);\n *   }\n *\n *   encodeValue(v: string): string {\n *     return myEncodingFunction(v);\n *   }\n * }\n *\n * let params = new URLSearchParams('', new MyQueryEncoder());\n * ```\n * @deprecated see https://angular.io/guide/http\n */\nvar URLSearchParams = /** @class */ (function () {\n    function URLSearchParams(rawParams, queryEncoder) {\n        if (rawParams === void 0) { rawParams = ''; }\n        if (queryEncoder === void 0) { queryEncoder = new QueryEncoder(); }\n        this.rawParams = rawParams;\n        this.queryEncoder = queryEncoder;\n        this.paramsMap = paramParser(rawParams);\n    }\n    URLSearchParams.prototype.clone = function () {\n        var clone = new URLSearchParams('', this.queryEncoder);\n        clone.appendAll(this);\n        return clone;\n    };\n    URLSearchParams.prototype.has = function (param) { return this.paramsMap.has(param); };\n    URLSearchParams.prototype.get = function (param) {\n        var storedParam = this.paramsMap.get(param);\n        return Array.isArray(storedParam) ? storedParam[0] : null;\n    };\n    URLSearchParams.prototype.getAll = function (param) { return this.paramsMap.get(param) || []; };\n    URLSearchParams.prototype.set = function (param, val) {\n        if (val === void 0 || val === null) {\n            this.delete(param);\n            return;\n        }\n        var list = this.paramsMap.get(param) || [];\n        list.length = 0;\n        list.push(val);\n        this.paramsMap.set(param, list);\n    };\n    // A merge operation\n    // For each name-values pair in `searchParams`, perform `set(name, values[0])`\n    //\n    // E.g: \"a=[1,2,3], c=[8]\" + \"a=[4,5,6], b=[7]\" = \"a=[4], c=[8], b=[7]\"\n    //\n    // TODO(@caitp): document this better\n    URLSearchParams.prototype.setAll = function (searchParams) {\n        var _this = this;\n        searchParams.paramsMap.forEach(function (value, param) {\n            var list = _this.paramsMap.get(param) || [];\n            list.length = 0;\n            list.push(value[0]);\n            _this.paramsMap.set(param, list);\n        });\n    };\n    URLSearchParams.prototype.append = function (param, val) {\n        if (val === void 0 || val === null)\n            return;\n        var list = this.paramsMap.get(param) || [];\n        list.push(val);\n        this.paramsMap.set(param, list);\n    };\n    // A merge operation\n    // For each name-values pair in `searchParams`, perform `append(name, value)`\n    // for each value in `values`.\n    //\n    // E.g: \"a=[1,2], c=[8]\" + \"a=[3,4], b=[7]\" = \"a=[1,2,3,4], c=[8], b=[7]\"\n    //\n    // TODO(@caitp): document this better\n    URLSearchParams.prototype.appendAll = function (searchParams) {\n        var _this = this;\n        searchParams.paramsMap.forEach(function (value, param) {\n            var list = _this.paramsMap.get(param) || [];\n            for (var i = 0; i < value.length; ++i) {\n                list.push(value[i]);\n            }\n            _this.paramsMap.set(param, list);\n        });\n    };\n    // A merge operation\n    // For each name-values pair in `searchParams`, perform `delete(name)`,\n    // followed by `set(name, values)`\n    //\n    // E.g: \"a=[1,2,3], c=[8]\" + \"a=[4,5,6], b=[7]\" = \"a=[4,5,6], c=[8], b=[7]\"\n    //\n    // TODO(@caitp): document this better\n    URLSearchParams.prototype.replaceAll = function (searchParams) {\n        var _this = this;\n        searchParams.paramsMap.forEach(function (value, param) {\n            var list = _this.paramsMap.get(param) || [];\n            list.length = 0;\n            for (var i = 0; i < value.length; ++i) {\n                list.push(value[i]);\n            }\n            _this.paramsMap.set(param, list);\n        });\n    };\n    URLSearchParams.prototype.toString = function () {\n        var _this = this;\n        var paramsList = [];\n        this.paramsMap.forEach(function (values, k) {\n            values.forEach(function (v) { return paramsList.push(_this.queryEncoder.encodeKey(k) + '=' + _this.queryEncoder.encodeValue(v)); });\n        });\n        return paramsList.join('&');\n    };\n    URLSearchParams.prototype.delete = function (param) { this.paramsMap.delete(param); };\n    return URLSearchParams;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * HTTP request body used by both {@link Request} and {@link Response}\n * https://fetch.spec.whatwg.org/#body\n */\nvar Body = /** @class */ (function () {\n    function Body() {\n    }\n    /**\n     * Attempts to return body as parsed `JSON` object, or raises an exception.\n     */\n    Body.prototype.json = function () {\n        if (typeof this._body === 'string') {\n            return JSON.parse(this._body);\n        }\n        if (this._body instanceof ArrayBuffer) {\n            return JSON.parse(this.text());\n        }\n        return this._body;\n    };\n    /**\n     * Returns the body as a string, presuming `toString()` can be called on the response body.\n     *\n     * When decoding an `ArrayBuffer`, the optional `encodingHint` parameter determines how the\n     * bytes in the buffer will be interpreted. Valid values are:\n     *\n     * - `legacy` - incorrectly interpret the bytes as UTF-16 (technically, UCS-2). Only characters\n     *   in the Basic Multilingual Plane are supported, surrogate pairs are not handled correctly.\n     *   In addition, the endianness of the 16-bit octet pairs in the `ArrayBuffer` is not taken\n     *   into consideration. This is the default behavior to avoid breaking apps, but should be\n     *   considered deprecated.\n     *\n     * - `iso-8859` - interpret the bytes as ISO-8859 (which can be used for ASCII encoded text).\n     */\n    Body.prototype.text = function (encodingHint) {\n        if (encodingHint === void 0) { encodingHint = 'legacy'; }\n        if (this._body instanceof URLSearchParams) {\n            return this._body.toString();\n        }\n        if (this._body instanceof ArrayBuffer) {\n            switch (encodingHint) {\n                case 'legacy':\n                    return String.fromCharCode.apply(null, new Uint16Array(this._body));\n                case 'iso-8859':\n                    return String.fromCharCode.apply(null, new Uint8Array(this._body));\n                default:\n                    throw new Error(\"Invalid value for encodingHint: \" + encodingHint);\n            }\n        }\n        if (this._body == null) {\n            return '';\n        }\n        if (typeof this._body === 'object') {\n            return JSON.stringify(this._body, null, 2);\n        }\n        return this._body.toString();\n    };\n    /**\n     * Return the body as an ArrayBuffer\n     */\n    Body.prototype.arrayBuffer = function () {\n        if (this._body instanceof ArrayBuffer) {\n            return this._body;\n        }\n        return stringToArrayBuffer(this.text());\n    };\n    /**\n      * Returns the request's body as a Blob, assuming that body exists.\n      */\n    Body.prototype.blob = function () {\n        if (this._body instanceof Blob) {\n            return this._body;\n        }\n        if (this._body instanceof ArrayBuffer) {\n            return new Blob([this._body]);\n        }\n        throw new Error('The request body isn\\'t either a blob or an array buffer');\n    };\n    return Body;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates `Response` instances from provided values.\n *\n * Though this object isn't\n * usually instantiated by end-users, it is the primary object interacted with when it comes time to\n * add data to a view.\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * http.request('my-friends.txt').subscribe(response => this.friends = response.text());\n * ```\n *\n * The Response's interface is inspired by the Response constructor defined in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#response-class), but is considered a static value whose body\n * can be accessed many times. There are other differences in the implementation, but this is the\n * most significant.\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar Response = /** @class */ (function (_super) {\n    __extends(Response, _super);\n    function Response(responseOptions) {\n        var _this = _super.call(this) || this;\n        _this._body = responseOptions.body;\n        _this.status = responseOptions.status;\n        _this.ok = (_this.status >= 200 && _this.status <= 299);\n        _this.statusText = responseOptions.statusText;\n        _this.headers = responseOptions.headers;\n        _this.type = responseOptions.type;\n        _this.url = responseOptions.url;\n        return _this;\n    }\n    Response.prototype.toString = function () {\n        return \"Response with status: \" + this.status + \" \" + this.statusText + \" for URL: \" + this.url;\n    };\n    return Response;\n}(Body));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _nextRequestId = 0;\nvar JSONP_HOME = '__ng_jsonp__';\nvar _jsonpConnections = null;\nfunction _getJsonpConnections() {\n    var w = typeof window == 'object' ? window : {};\n    if (_jsonpConnections === null) {\n        _jsonpConnections = w[JSONP_HOME] = {};\n    }\n    return _jsonpConnections;\n}\n// Make sure not to evaluate this in a non-browser environment!\nvar BrowserJsonp = /** @class */ (function () {\n    function BrowserJsonp() {\n    }\n    // Construct a <script> element with the specified URL\n    BrowserJsonp.prototype.build = function (url) {\n        var node = document.createElement('script');\n        node.src = url;\n        return node;\n    };\n    BrowserJsonp.prototype.nextRequestID = function () { return \"__req\" + _nextRequestId++; };\n    BrowserJsonp.prototype.requestCallback = function (id) { return JSONP_HOME + \".\" + id + \".finished\"; };\n    BrowserJsonp.prototype.exposeConnection = function (id, connection) {\n        var connections = _getJsonpConnections();\n        connections[id] = connection;\n    };\n    BrowserJsonp.prototype.removeConnection = function (id) {\n        var connections = _getJsonpConnections();\n        connections[id] = null;\n    };\n    // Attach the <script> element to the DOM\n    BrowserJsonp.prototype.send = function (node) { document.body.appendChild((node)); };\n    // Remove <script> element from the DOM\n    BrowserJsonp.prototype.cleanup = function (node) {\n        if (node.parentNode) {\n            node.parentNode.removeChild((node));\n        }\n    };\n    BrowserJsonp = __decorate([\n        Injectable()\n    ], BrowserJsonp);\n    return BrowserJsonp;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar JSONP_ERR_NO_CALLBACK = 'JSONP injected script did not invoke callback.';\nvar JSONP_ERR_WRONG_METHOD = 'JSONP requests must use GET request method.';\n/**\n * Base class for an in-flight JSONP request.\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar JSONPConnection = /** @class */ (function () {\n    /** @internal */\n    function JSONPConnection(req, _dom, baseResponseOptions) {\n        var _this = this;\n        this._dom = _dom;\n        this.baseResponseOptions = baseResponseOptions;\n        this._finished = false;\n        if (req.method !== RequestMethod.Get) {\n            throw new TypeError(JSONP_ERR_WRONG_METHOD);\n        }\n        this.request = req;\n        this.response = new Observable(function (responseObserver) {\n            _this.readyState = ReadyState.Loading;\n            var id = _this._id = _dom.nextRequestID();\n            _dom.exposeConnection(id, _this);\n            // Workaround Dart\n            // url = url.replace(/=JSONP_CALLBACK(&|$)/, `generated method`);\n            var callback = _dom.requestCallback(_this._id);\n            var url = req.url;\n            if (url.indexOf('=JSONP_CALLBACK&') > -1) {\n                url = url.replace('=JSONP_CALLBACK&', \"=\" + callback + \"&\");\n            }\n            else if (url.lastIndexOf('=JSONP_CALLBACK') === url.length - '=JSONP_CALLBACK'.length) {\n                url = url.substring(0, url.length - '=JSONP_CALLBACK'.length) + (\"=\" + callback);\n            }\n            var script = _this._script = _dom.build(url);\n            var onLoad = function (event) {\n                if (_this.readyState === ReadyState.Cancelled)\n                    return;\n                _this.readyState = ReadyState.Done;\n                _dom.cleanup(script);\n                if (!_this._finished) {\n                    var responseOptions_1 = new ResponseOptions({ body: JSONP_ERR_NO_CALLBACK, type: ResponseType.Error, url: url });\n                    if (baseResponseOptions) {\n                        responseOptions_1 = baseResponseOptions.merge(responseOptions_1);\n                    }\n                    responseObserver.error(new Response(responseOptions_1));\n                    return;\n                }\n                var responseOptions = new ResponseOptions({ body: _this._responseData, url: url });\n                if (_this.baseResponseOptions) {\n                    responseOptions = _this.baseResponseOptions.merge(responseOptions);\n                }\n                responseObserver.next(new Response(responseOptions));\n                responseObserver.complete();\n            };\n            var onError = function (error) {\n                if (_this.readyState === ReadyState.Cancelled)\n                    return;\n                _this.readyState = ReadyState.Done;\n                _dom.cleanup(script);\n                var responseOptions = new ResponseOptions({ body: error.message, type: ResponseType.Error });\n                if (baseResponseOptions) {\n                    responseOptions = baseResponseOptions.merge(responseOptions);\n                }\n                responseObserver.error(new Response(responseOptions));\n            };\n            script.addEventListener('load', onLoad);\n            script.addEventListener('error', onError);\n            _dom.send(script);\n            return function () {\n                _this.readyState = ReadyState.Cancelled;\n                script.removeEventListener('load', onLoad);\n                script.removeEventListener('error', onError);\n                _this._dom.cleanup(script);\n            };\n        });\n    }\n    /**\n     * Callback called when the JSONP request completes, to notify the application\n     * of the new data.\n     */\n    JSONPConnection.prototype.finished = function (data) {\n        // Don't leak connections\n        this._finished = true;\n        this._dom.removeConnection(this._id);\n        if (this.readyState === ReadyState.Cancelled)\n            return;\n        this._responseData = data;\n    };\n    return JSONPConnection;\n}());\n/**\n * A {@link ConnectionBackend} that uses the JSONP strategy of making requests.\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar JSONPBackend = /** @class */ (function (_super) {\n    __extends(JSONPBackend, _super);\n    /** @internal */\n    function JSONPBackend(_browserJSONP, _baseResponseOptions) {\n        var _this = _super.call(this) || this;\n        _this._browserJSONP = _browserJSONP;\n        _this._baseResponseOptions = _baseResponseOptions;\n        return _this;\n    }\n    JSONPBackend.prototype.createConnection = function (request) {\n        return new JSONPConnection(request, this._browserJSONP, this._baseResponseOptions);\n    };\n    JSONPBackend = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [BrowserJsonp, ResponseOptions])\n    ], JSONPBackend);\n    return JSONPBackend;\n}(ConnectionBackend));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XSSI_PREFIX = /^\\)\\]\\}',?\\n/;\n/**\n * Creates connections using `XMLHttpRequest`. Given a fully-qualified\n * request, an `XHRConnection` will immediately create an `XMLHttpRequest` object and send the\n * request.\n *\n * This class would typically not be created or interacted with directly inside applications, though\n * the {@link MockConnection} may be interacted with in tests.\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar XHRConnection = /** @class */ (function () {\n    function XHRConnection(req, browserXHR, baseResponseOptions) {\n        var _this = this;\n        this.request = req;\n        this.response = new Observable(function (responseObserver) {\n            var _xhr = browserXHR.build();\n            _xhr.open(RequestMethod[req.method].toUpperCase(), req.url);\n            if (req.withCredentials != null) {\n                _xhr.withCredentials = req.withCredentials;\n            }\n            // load event handler\n            var onLoad = function () {\n                // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\n                var status = _xhr.status === 1223 ? 204 : _xhr.status;\n                var body = null;\n                // HTTP 204 means no content\n                if (status !== 204) {\n                    // responseText is the old-school way of retrieving response (supported by IE8 & 9)\n                    // response/responseType properties were introduced in ResourceLoader Level2 spec\n                    // (supported by IE10)\n                    body = (typeof _xhr.response === 'undefined') ? _xhr.responseText : _xhr.response;\n                    // Implicitly strip a potential XSSI prefix.\n                    if (typeof body === 'string') {\n                        body = body.replace(XSSI_PREFIX, '');\n                    }\n                }\n                // fix status code when it is 0 (0 status is undocumented).\n                // Occurs when accessing file resources or on Android 4.1 stock browser\n                // while retrieving files from application cache.\n                if (status === 0) {\n                    status = body ? 200 : 0;\n                }\n                var headers = Headers.fromResponseHeaderString(_xhr.getAllResponseHeaders());\n                // IE 9 does not provide the way to get URL of response\n                var url = getResponseURL(_xhr) || req.url;\n                var statusText = _xhr.statusText || 'OK';\n                var responseOptions = new ResponseOptions({ body: body, status: status, headers: headers, statusText: statusText, url: url });\n                if (baseResponseOptions != null) {\n                    responseOptions = baseResponseOptions.merge(responseOptions);\n                }\n                var response = new Response(responseOptions);\n                response.ok = isSuccess(status);\n                if (response.ok) {\n                    responseObserver.next(response);\n                    // TODO(gdi2290): defer complete if array buffer until done\n                    responseObserver.complete();\n                    return;\n                }\n                responseObserver.error(response);\n            };\n            // error event handler\n            var onError = function (err) {\n                var responseOptions = new ResponseOptions({\n                    body: err,\n                    type: ResponseType.Error,\n                    status: _xhr.status,\n                    statusText: _xhr.statusText,\n                });\n                if (baseResponseOptions != null) {\n                    responseOptions = baseResponseOptions.merge(responseOptions);\n                }\n                responseObserver.error(new Response(responseOptions));\n            };\n            _this.setDetectedContentType(req, _xhr);\n            if (req.headers == null) {\n                req.headers = new Headers();\n            }\n            if (!req.headers.has('Accept')) {\n                req.headers.append('Accept', 'application/json, text/plain, */*');\n            }\n            req.headers.forEach(function (values, name) { return _xhr.setRequestHeader(name, values.join(',')); });\n            // Select the correct buffer type to store the response\n            if (req.responseType != null && _xhr.responseType != null) {\n                switch (req.responseType) {\n                    case ResponseContentType.ArrayBuffer:\n                        _xhr.responseType = 'arraybuffer';\n                        break;\n                    case ResponseContentType.Json:\n                        _xhr.responseType = 'json';\n                        break;\n                    case ResponseContentType.Text:\n                        _xhr.responseType = 'text';\n                        break;\n                    case ResponseContentType.Blob:\n                        _xhr.responseType = 'blob';\n                        break;\n                    default:\n                        throw new Error('The selected responseType is not supported');\n                }\n            }\n            _xhr.addEventListener('load', onLoad);\n            _xhr.addEventListener('error', onError);\n            _xhr.send(_this.request.getBody());\n            return function () {\n                _xhr.removeEventListener('load', onLoad);\n                _xhr.removeEventListener('error', onError);\n                _xhr.abort();\n            };\n        });\n    }\n    XHRConnection.prototype.setDetectedContentType = function (req /** TODO Request */, _xhr /** XMLHttpRequest */) {\n        // Skip if a custom Content-Type header is provided\n        if (req.headers != null && req.headers.get('Content-Type') != null) {\n            return;\n        }\n        // Set the detected content type\n        switch (req.contentType) {\n            case ContentType.NONE:\n                break;\n            case ContentType.JSON:\n                _xhr.setRequestHeader('content-type', 'application/json');\n                break;\n            case ContentType.FORM:\n                _xhr.setRequestHeader('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n                break;\n            case ContentType.TEXT:\n                _xhr.setRequestHeader('content-type', 'text/plain');\n                break;\n            case ContentType.BLOB:\n                var blob = req.blob();\n                if (blob.type) {\n                    _xhr.setRequestHeader('content-type', blob.type);\n                }\n                break;\n        }\n    };\n    return XHRConnection;\n}());\n/**\n * `XSRFConfiguration` sets up Cross Site Request Forgery (XSRF) protection for the application\n * using a cookie. See https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF)\n * for more information on XSRF.\n *\n * Applications can configure custom cookie and header names by binding an instance of this class\n * with different `cookieName` and `headerName` values. See the main HTTP documentation for more\n * details.\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar CookieXSRFStrategy = /** @class */ (function () {\n    function CookieXSRFStrategy(_cookieName, _headerName) {\n        if (_cookieName === void 0) { _cookieName = 'XSRF-TOKEN'; }\n        if (_headerName === void 0) { _headerName = 'X-XSRF-TOKEN'; }\n        this._cookieName = _cookieName;\n        this._headerName = _headerName;\n    }\n    CookieXSRFStrategy.prototype.configureRequest = function (req) {\n        var xsrfToken = ɵgetDOM().getCookie(this._cookieName);\n        if (xsrfToken) {\n            req.headers.set(this._headerName, xsrfToken);\n        }\n    };\n    return CookieXSRFStrategy;\n}());\n/**\n * Creates {@link XHRConnection} instances.\n *\n * This class would typically not be used by end users, but could be\n * overridden if a different backend implementation should be used,\n * such as in a node backend.\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * import {Http, MyNodeBackend, HTTP_PROVIDERS, BaseRequestOptions} from '@angular/http';\n * @Component({\n *   viewProviders: [\n *     HTTP_PROVIDERS,\n *     {provide: Http, useFactory: (backend, options) => {\n *       return new Http(backend, options);\n *     }, deps: [MyNodeBackend, BaseRequestOptions]}]\n * })\n * class MyComponent {\n *   constructor(http:Http) {\n *     http.request('people.json').subscribe(res => this.people = res.json());\n *   }\n * }\n * ```\n * @deprecated see https://angular.io/guide/http\n */\nvar XHRBackend = /** @class */ (function () {\n    function XHRBackend(_browserXHR, _baseResponseOptions, _xsrfStrategy) {\n        this._browserXHR = _browserXHR;\n        this._baseResponseOptions = _baseResponseOptions;\n        this._xsrfStrategy = _xsrfStrategy;\n    }\n    XHRBackend.prototype.createConnection = function (request) {\n        this._xsrfStrategy.configureRequest(request);\n        return new XHRConnection(request, this._browserXHR, this._baseResponseOptions);\n    };\n    XHRBackend = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [BrowserXhr, ResponseOptions,\n            XSRFStrategy])\n    ], XHRBackend);\n    return XHRBackend;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates a request options object to be optionally provided when instantiating a\n * {@link Request}.\n *\n * This class is based on the `RequestInit` description in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#requestinit).\n *\n * All values are null by default. Typical defaults can be found in the {@link BaseRequestOptions}\n * class, which sub-classes `RequestOptions`.\n *\n * ```typescript\n * import {RequestOptions, Request, RequestMethod} from '@angular/http';\n *\n * const options = new RequestOptions({\n *   method: RequestMethod.Post,\n *   url: 'https://google.com'\n * });\n * const req = new Request(options);\n * console.log('req.method:', RequestMethod[req.method]); // Post\n * console.log('options.url:', options.url); // https://google.com\n * ```\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar RequestOptions = /** @class */ (function () {\n    // TODO(Dzmitry): remove search when this.search is removed\n    function RequestOptions(opts) {\n        if (opts === void 0) { opts = {}; }\n        var method = opts.method, headers = opts.headers, body = opts.body, url = opts.url, search = opts.search, params = opts.params, withCredentials = opts.withCredentials, responseType = opts.responseType;\n        this.method = method != null ? normalizeMethodName(method) : null;\n        this.headers = headers != null ? headers : null;\n        this.body = body != null ? body : null;\n        this.url = url != null ? url : null;\n        this.params = this._mergeSearchParams(params || search);\n        this.withCredentials = withCredentials != null ? withCredentials : null;\n        this.responseType = responseType != null ? responseType : null;\n    }\n    Object.defineProperty(RequestOptions.prototype, \"search\", {\n        /**\n         * @deprecated from 4.0.0. Use params instead.\n         */\n        get: function () { return this.params; },\n        /**\n         * @deprecated from 4.0.0. Use params instead.\n         */\n        set: function (params) { this.params = params; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a copy of the `RequestOptions` instance, using the optional input as values to override\n     * existing values. This method will not change the values of the instance on which it is being\n     * called.\n     *\n     * Note that `headers` and `search` will override existing values completely if present in\n     * the `options` object. If these values should be merged, it should be done prior to calling\n     * `merge` on the `RequestOptions` instance.\n     *\n     * ```typescript\n     * import {RequestOptions, Request, RequestMethod} from '@angular/http';\n     *\n     * const options = new RequestOptions({\n     *   method: RequestMethod.Post\n     * });\n     * const req = new Request(options.merge({\n     *   url: 'https://google.com'\n     * }));\n     * console.log('req.method:', RequestMethod[req.method]); // Post\n     * console.log('options.url:', options.url); // null\n     * console.log('req.url:', req.url); // https://google.com\n     * ```\n     */\n    RequestOptions.prototype.merge = function (options) {\n        return new RequestOptions({\n            method: options && options.method != null ? options.method : this.method,\n            headers: options && options.headers != null ? options.headers : new Headers(this.headers),\n            body: options && options.body != null ? options.body : this.body,\n            url: options && options.url != null ? options.url : this.url,\n            params: options && this._mergeSearchParams(options.params || options.search),\n            withCredentials: options && options.withCredentials != null ? options.withCredentials :\n                this.withCredentials,\n            responseType: options && options.responseType != null ? options.responseType :\n                this.responseType\n        });\n    };\n    RequestOptions.prototype._mergeSearchParams = function (params) {\n        if (!params)\n            return this.params;\n        if (params instanceof URLSearchParams) {\n            return params.clone();\n        }\n        if (typeof params === 'string') {\n            return new URLSearchParams(params);\n        }\n        return this._parseParams(params);\n    };\n    RequestOptions.prototype._parseParams = function (objParams) {\n        var _this = this;\n        if (objParams === void 0) { objParams = {}; }\n        var params = new URLSearchParams();\n        Object.keys(objParams).forEach(function (key) {\n            var value = objParams[key];\n            if (Array.isArray(value)) {\n                value.forEach(function (item) { return _this._appendParam(key, item, params); });\n            }\n            else {\n                _this._appendParam(key, value, params);\n            }\n        });\n        return params;\n    };\n    RequestOptions.prototype._appendParam = function (key, value, params) {\n        if (typeof value !== 'string') {\n            value = JSON.stringify(value);\n        }\n        params.append(key, value);\n    };\n    return RequestOptions;\n}());\n/**\n * Subclass of {@link RequestOptions}, with default values.\n *\n * Default values:\n *  * method: {@link RequestMethod RequestMethod.Get}\n *  * headers: empty {@link Headers} object\n *\n * This class could be extended and bound to the {@link RequestOptions} class\n * when configuring an {@link Injector}, in order to override the default options\n * used by {@link Http} to create and send {@link Request Requests}.\n *\n * ```typescript\n * import {BaseRequestOptions, RequestOptions} from '@angular/http';\n *\n * class MyOptions extends BaseRequestOptions {\n *   search: string = 'coreTeam=true';\n * }\n *\n * {provide: RequestOptions, useClass: MyOptions};\n * ```\n *\n * The options could also be extended when manually creating a {@link Request}\n * object.\n *\n * ```\n * import {BaseRequestOptions, Request, RequestMethod} from '@angular/http';\n *\n * const options = new BaseRequestOptions();\n * const req = new Request(options.merge({\n *   method: RequestMethod.Post,\n *   url: 'https://google.com'\n * }));\n * console.log('req.method:', RequestMethod[req.method]); // Post\n * console.log('options.url:', options.url); // null\n * console.log('req.url:', req.url); // https://google.com\n * ```\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar BaseRequestOptions = /** @class */ (function (_super) {\n    __extends(BaseRequestOptions, _super);\n    function BaseRequestOptions() {\n        return _super.call(this, { method: RequestMethod.Get, headers: new Headers() }) || this;\n    }\n    BaseRequestOptions = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [])\n    ], BaseRequestOptions);\n    return BaseRequestOptions;\n}(RequestOptions));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(jeffbcross): properly implement body accessors\n/**\n * Creates `Request` instances from provided values.\n *\n * The Request's interface is inspired by the Request constructor defined in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#request-class),\n * but is considered a static value whose body can be accessed many times. There are other\n * differences in the implementation, but this is the most significant.\n *\n * `Request` instances are typically created by higher-level classes, like {@link Http} and\n * {@link Jsonp}, but it may occasionally be useful to explicitly create `Request` instances.\n * One such example is when creating services that wrap higher-level services, like {@link Http},\n * where it may be useful to generate a `Request` with arbitrary headers and search params.\n *\n * ```typescript\n * import {Injectable, Injector} from '@angular/core';\n * import {HTTP_PROVIDERS, Http, Request, RequestMethod} from '@angular/http';\n *\n * @Injectable()\n * class AutoAuthenticator {\n *   constructor(public http:Http) {}\n *   request(url:string) {\n *     return this.http.request(new Request({\n *       method: RequestMethod.Get,\n *       url: url,\n *       search: 'password=123'\n *     }));\n *   }\n * }\n *\n * var injector = Injector.resolveAndCreate([HTTP_PROVIDERS, AutoAuthenticator]);\n * var authenticator = injector.get(AutoAuthenticator);\n * authenticator.request('people.json').subscribe(res => {\n *   //URL should have included '?password=123'\n *   console.log('people', res.json());\n * });\n * ```\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar Request = /** @class */ (function (_super) {\n    __extends(Request, _super);\n    function Request(requestOptions) {\n        var _this = _super.call(this) || this;\n        // TODO: assert that url is present\n        var url = requestOptions.url;\n        _this.url = requestOptions.url;\n        var paramsArg = requestOptions.params || requestOptions.search;\n        if (paramsArg) {\n            var params = void 0;\n            if (typeof paramsArg === 'object' && !(paramsArg instanceof URLSearchParams)) {\n                params = urlEncodeParams(paramsArg).toString();\n            }\n            else {\n                params = paramsArg.toString();\n            }\n            if (params.length > 0) {\n                var prefix = '?';\n                if (_this.url.indexOf('?') != -1) {\n                    prefix = (_this.url[_this.url.length - 1] == '&') ? '' : '&';\n                }\n                // TODO: just delete search-query-looking string in url?\n                _this.url = url + prefix + params;\n            }\n        }\n        _this._body = requestOptions.body;\n        _this.method = normalizeMethodName(requestOptions.method);\n        // TODO(jeffbcross): implement behavior\n        // Defaults to 'omit', consistent with browser\n        _this.headers = new Headers(requestOptions.headers);\n        _this.contentType = _this.detectContentType();\n        _this.withCredentials = requestOptions.withCredentials;\n        _this.responseType = requestOptions.responseType;\n        return _this;\n    }\n    /**\n     * Returns the content type enum based on header options.\n     */\n    Request.prototype.detectContentType = function () {\n        switch (this.headers.get('content-type')) {\n            case 'application/json':\n                return ContentType.JSON;\n            case 'application/x-www-form-urlencoded':\n                return ContentType.FORM;\n            case 'multipart/form-data':\n                return ContentType.FORM_DATA;\n            case 'text/plain':\n            case 'text/html':\n                return ContentType.TEXT;\n            case 'application/octet-stream':\n                return this._body instanceof ArrayBuffer$1 ? ContentType.ARRAY_BUFFER : ContentType.BLOB;\n            default:\n                return this.detectContentTypeFromBody();\n        }\n    };\n    /**\n     * Returns the content type of request's body based on its type.\n     */\n    Request.prototype.detectContentTypeFromBody = function () {\n        if (this._body == null) {\n            return ContentType.NONE;\n        }\n        else if (this._body instanceof URLSearchParams) {\n            return ContentType.FORM;\n        }\n        else if (this._body instanceof FormData) {\n            return ContentType.FORM_DATA;\n        }\n        else if (this._body instanceof Blob$1) {\n            return ContentType.BLOB;\n        }\n        else if (this._body instanceof ArrayBuffer$1) {\n            return ContentType.ARRAY_BUFFER;\n        }\n        else if (this._body && typeof this._body === 'object') {\n            return ContentType.JSON;\n        }\n        else {\n            return ContentType.TEXT;\n        }\n    };\n    /**\n     * Returns the request's body according to its type. If body is undefined, return\n     * null.\n     */\n    Request.prototype.getBody = function () {\n        switch (this.contentType) {\n            case ContentType.JSON:\n                return this.text();\n            case ContentType.FORM:\n                return this.text();\n            case ContentType.FORM_DATA:\n                return this._body;\n            case ContentType.TEXT:\n                return this.text();\n            case ContentType.BLOB:\n                return this.blob();\n            case ContentType.ARRAY_BUFFER:\n                return this.arrayBuffer();\n            default:\n                return null;\n        }\n    };\n    return Request;\n}(Body));\nfunction urlEncodeParams(params) {\n    var searchParams = new URLSearchParams();\n    Object.keys(params).forEach(function (key) {\n        var value = params[key];\n        if (value && Array.isArray(value)) {\n            value.forEach(function (element) { return searchParams.append(key, element.toString()); });\n        }\n        else {\n            searchParams.append(key, value.toString());\n        }\n    });\n    return searchParams;\n}\nvar noop = function () { };\nvar w = typeof window == 'object' ? window : noop;\nvar FormData = w /** TODO #9100 */['FormData'] || noop;\nvar Blob$1 = w /** TODO #9100 */['Blob'] || noop;\nvar ArrayBuffer$1 = w /** TODO #9100 */['ArrayBuffer'] || noop;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction httpRequest(backend, request) {\n    return backend.createConnection(request).response;\n}\nfunction mergeOptions(defaultOpts, providedOpts, method, url) {\n    var newOptions = defaultOpts;\n    if (providedOpts) {\n        // Hack so Dart can used named parameters\n        return newOptions.merge(new RequestOptions({\n            method: providedOpts.method || method,\n            url: providedOpts.url || url,\n            search: providedOpts.search,\n            params: providedOpts.params,\n            headers: providedOpts.headers,\n            body: providedOpts.body,\n            withCredentials: providedOpts.withCredentials,\n            responseType: providedOpts.responseType\n        }));\n    }\n    return newOptions.merge(new RequestOptions({ method: method, url: url }));\n}\n/**\n * Performs http requests using `XMLHttpRequest` as the default backend.\n *\n * `Http` is available as an injectable class, with methods to perform http requests. Calling\n * `request` returns an `Observable` which will emit a single {@link Response} when a\n * response is received.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * import {Http, HTTP_PROVIDERS} from '@angular/http';\n * import {map} from 'rxjs/operators';\n *\n * @Component({\n *   selector: 'http-app',\n *   viewProviders: [HTTP_PROVIDERS],\n *   templateUrl: 'people.html'\n * })\n * class PeopleComponent {\n *   constructor(http: Http) {\n *     http.get('people.json')\n *       // Call map on the response observable to get the parsed people object\n *       .pipe(map(res => res.json()))\n *       // Subscribe to the observable to get the parsed people object and attach it to the\n *       // component\n *       .subscribe(people => this.people = people);\n *   }\n * }\n * ```\n *\n *\n * ### Example\n *\n * ```\n * http.get('people.json').subscribe((res:Response) => this.people = res.json());\n * ```\n *\n * The default construct used to perform requests, `XMLHttpRequest`, is abstracted as a \"Backend\" (\n * {@link XHRBackend} in this case), which could be mocked with dependency injection by replacing\n * the {@link XHRBackend} provider, as in the following example:\n *\n * ### Example\n *\n * ```typescript\n * import {BaseRequestOptions, Http} from '@angular/http';\n * import {MockBackend} from '@angular/http/testing';\n * var injector = Injector.resolveAndCreate([\n *   BaseRequestOptions,\n *   MockBackend,\n *   {provide: Http, useFactory:\n *       function(backend, defaultOptions) {\n *         return new Http(backend, defaultOptions);\n *       },\n *       deps: [MockBackend, BaseRequestOptions]}\n * ]);\n * var http = injector.get(Http);\n * http.get('request-from-mock-backend.json').subscribe((res:Response) => doSomething(res));\n * ```\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar Http = /** @class */ (function () {\n    function Http(_backend, _defaultOptions) {\n        this._backend = _backend;\n        this._defaultOptions = _defaultOptions;\n    }\n    /**\n     * Performs any type of http request. First argument is required, and can either be a url or\n     * a {@link Request} instance. If the first argument is a url, an optional {@link RequestOptions}\n     * object can be provided as the 2nd argument. The options object will be merged with the values\n     * of {@link BaseRequestOptions} before performing the request.\n     */\n    Http.prototype.request = function (url, options) {\n        var responseObservable;\n        if (typeof url === 'string') {\n            responseObservable = httpRequest(this._backend, new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, url)));\n        }\n        else if (url instanceof Request) {\n            responseObservable = httpRequest(this._backend, url);\n        }\n        else {\n            throw new Error('First argument must be a url string or Request instance.');\n        }\n        return responseObservable;\n    };\n    /**\n     * Performs a request with `get` http method.\n     */\n    Http.prototype.get = function (url, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, url)));\n    };\n    /**\n     * Performs a request with `post` http method.\n     */\n    Http.prototype.post = function (url, body, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, RequestMethod.Post, url)));\n    };\n    /**\n     * Performs a request with `put` http method.\n     */\n    Http.prototype.put = function (url, body, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, RequestMethod.Put, url)));\n    };\n    /**\n     * Performs a request with `delete` http method.\n     */\n    Http.prototype.delete = function (url, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Delete, url)));\n    };\n    /**\n     * Performs a request with `patch` http method.\n     */\n    Http.prototype.patch = function (url, body, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, RequestMethod.Patch, url)));\n    };\n    /**\n     * Performs a request with `head` http method.\n     */\n    Http.prototype.head = function (url, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Head, url)));\n    };\n    /**\n     * Performs a request with `options` http method.\n     */\n    Http.prototype.options = function (url, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Options, url)));\n    };\n    Http = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [ConnectionBackend, RequestOptions])\n    ], Http);\n    return Http;\n}());\n/**\n * @deprecated see https://angular.io/guide/http\n */\nvar Jsonp = /** @class */ (function (_super) {\n    __extends(Jsonp, _super);\n    function Jsonp(backend, defaultOptions) {\n        return _super.call(this, backend, defaultOptions) || this;\n    }\n    /**\n     * Performs any type of http request. First argument is required, and can either be a url or\n     * a {@link Request} instance. If the first argument is a url, an optional {@link RequestOptions}\n     * object can be provided as the 2nd argument. The options object will be merged with the values\n     * of {@link BaseRequestOptions} before performing the request.\n     *\n     * @security Regular XHR is the safest alternative to JSONP for most applications, and is\n     * supported by all current browsers. Because JSONP creates a `<script>` element with\n     * contents retrieved from a remote source, attacker-controlled data introduced by an untrusted\n     * source could expose your application to XSS risks. Data exposed by JSONP may also be\n     * readable by malicious third-party websites. In addition, JSONP introduces potential risk for\n     * future security issues (e.g. content sniffing).  For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     */\n    Jsonp.prototype.request = function (url, options) {\n        var responseObservable;\n        if (typeof url === 'string') {\n            url =\n                new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, url));\n        }\n        if (url instanceof Request) {\n            if (url.method !== RequestMethod.Get) {\n                throw new Error('JSONP requests must use GET request method.');\n            }\n            responseObservable = httpRequest(this._backend, url);\n        }\n        else {\n            throw new Error('First argument must be a url string or Request instance.');\n        }\n        return responseObservable;\n    };\n    Jsonp = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [ConnectionBackend, RequestOptions])\n    ], Jsonp);\n    return Jsonp;\n}(Http));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction _createDefaultCookieXSRFStrategy() {\n    return new CookieXSRFStrategy();\n}\nfunction httpFactory(xhrBackend, requestOptions) {\n    return new Http(xhrBackend, requestOptions);\n}\nfunction jsonpFactory(jsonpBackend, requestOptions) {\n    return new Jsonp(jsonpBackend, requestOptions);\n}\n/**\n * The module that includes http's providers\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar HttpModule = /** @class */ (function () {\n    function HttpModule() {\n    }\n    HttpModule = __decorate([\n        NgModule({\n            providers: [\n                // TODO(pascal): use factory type annotations once supported in DI\n                // issue: https://github.com/angular/angular/issues/3183\n                { provide: Http, useFactory: httpFactory, deps: [XHRBackend, RequestOptions] },\n                BrowserXhr,\n                { provide: RequestOptions, useClass: BaseRequestOptions },\n                { provide: ResponseOptions, useClass: BaseResponseOptions },\n                XHRBackend,\n                { provide: XSRFStrategy, useFactory: _createDefaultCookieXSRFStrategy },\n            ],\n        })\n    ], HttpModule);\n    return HttpModule;\n}());\n/**\n * The module that includes jsonp's providers\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar JsonpModule = /** @class */ (function () {\n    function JsonpModule() {\n    }\n    JsonpModule = __decorate([\n        NgModule({\n            providers: [\n                // TODO(pascal): use factory type annotations once supported in DI\n                // issue: https://github.com/angular/angular/issues/3183\n                { provide: Jsonp, useFactory: jsonpFactory, deps: [JSONPBackend, RequestOptions] },\n                BrowserJsonp,\n                { provide: RequestOptions, useClass: BaseRequestOptions },\n                { provide: ResponseOptions, useClass: BaseResponseOptions },\n                JSONPBackend,\n            ],\n        })\n    ], JsonpModule);\n    return JsonpModule;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @deprecated see https://angular.io/guide/http\n */\nvar VERSION = new Version('6.1.10');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BrowserJsonp as ɵangular_packages_http_http_e, Body as ɵangular_packages_http_http_f, _createDefaultCookieXSRFStrategy as ɵangular_packages_http_http_a, httpFactory as ɵangular_packages_http_http_b, jsonpFactory as ɵangular_packages_http_http_c, BrowserXhr, JSONPBackend, JSONPConnection, CookieXSRFStrategy, XHRBackend, XHRConnection, BaseRequestOptions, RequestOptions, BaseResponseOptions, ResponseOptions, ReadyState, RequestMethod, ResponseContentType, ResponseType, Headers, Http, Jsonp, HttpModule, JsonpModule, Connection, ConnectionBackend, XSRFStrategy, Request, Response, QueryEncoder, URLSearchParams, VERSION };\n//# sourceMappingURL=http.js.map\n"]}