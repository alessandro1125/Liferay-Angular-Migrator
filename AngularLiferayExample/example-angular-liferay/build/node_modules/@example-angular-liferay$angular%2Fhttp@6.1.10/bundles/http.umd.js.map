{"version":3,"sources":["http.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","http","core","rxjs","platformBrowser","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","metadataKey","metadataValue","metadata","__read","o","n","m","Symbol","iterator","call","ar","e","next","done","push","value","error","__spread","concat","BrowserXhr","build","XMLHttpRequest","Injectable","RequestMethod","ReadyState","ResponseType","ContentType","ResponseContentType","Headers","headers","_this","_headers","Map","_normalizedNames","forEach","values","name","append","keys","isArray","delete","fromResponseHeaderString","headersString","split","line","index","indexOf","name_1","slice","trim","set","getAll","lcName","toLowerCase","fn","get","has","from","join","mayBeSetNormalizedName","toJSON","serialized","v","apply","entries","Error","ResponseOptions","opts","body","status","statusText","type","url","merge","options","BaseResponseOptions","_super","Default","ConnectionBackend","Connection","XSRFStrategy","normalizeMethodName","method","toUpperCase","Get","Post","Put","Delete","Options","Head","Patch","isSuccess","getResponseURL","xhr","responseURL","test","getAllResponseHeaders","getResponseHeader","stringToArrayBuffer","input","view","Uint16Array","strLen","charCodeAt","buffer","paramParser","rawParams","map","params","param","eqIdx","_a","val","list","QueryEncoder","encodeKey","standardEncoding","encodeValue","encodeURIComponent","replace","URLSearchParams","queryEncoder","paramsMap","clone","appendAll","storedParam","setAll","searchParams","replaceAll","toString","paramsList","k","Body","json","_body","JSON","parse","ArrayBuffer","text","encodingHint","String","fromCharCode","Uint8Array","stringify","arrayBuffer","blob","Blob","Response","responseOptions","ok","_nextRequestId","JSONP_HOME","_jsonpConnections","_getJsonpConnections","w","window","BrowserJsonp","node","document","createElement","src","nextRequestID","requestCallback","id","exposeConnection","connection","connections","removeConnection","send","appendChild","cleanup","parentNode","removeChild","JSONP_ERR_NO_CALLBACK","JSONP_ERR_WRONG_METHOD","JSONPConnection","req","_dom","baseResponseOptions","_finished","TypeError","request","response","Observable","responseObserver","readyState","Loading","_id","callback","lastIndexOf","substring","script","_script","onLoad","event","Cancelled","Done","responseOptions_1","_responseData","complete","onError","message","addEventListener","removeEventListener","finished","data","JSONPBackend","_browserJSONP","_baseResponseOptions","createConnection","XSSI_PREFIX","XHRConnection","browserXHR","_xhr","open","withCredentials","responseText","err","setDetectedContentType","setRequestHeader","responseType","Json","Text","getBody","abort","contentType","NONE","FORM","TEXT","BLOB","CookieXSRFStrategy","_cookieName","_headerName","configureRequest","xsrfToken","ɵgetDOM","getCookie","XHRBackend","_browserXHR","_xsrfStrategy","RequestOptions","search","_mergeSearchParams","enumerable","configurable","_parseParams","objParams","item","_appendParam","BaseRequestOptions","Request","requestOptions","paramsArg","urlEncodeParams","prefix","detectContentType","FORM_DATA","ArrayBuffer$1","ARRAY_BUFFER","detectContentTypeFromBody","FormData","Blob$1","element","noop","httpRequest","backend","mergeOptions","defaultOpts","providedOpts","newOptions","Http","_backend","_defaultOptions","responseObservable","post","put","patch","head","Jsonp","defaultOptions","_createDefaultCookieXSRFStrategy","httpFactory","xhrBackend","jsonpFactory","jsonpBackend","HttpModule","NgModule","providers","provide","useFactory","deps","useClass","JsonpModule","VERSION","Version","ɵangular_packages_http_http_e","ɵangular_packages_http_http_f","ɵangular_packages_http_http_a","ɵangular_packages_http_http_b","ɵangular_packages_http_http_c"],"mappings":"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","file":"http.umd.js","sourcesContent":["/**\n * @license Angular v6.1.10\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('rxjs'), require('@angular/platform-browser')) :\n    typeof define === 'function' && define.amd ? define('@angular/http', ['exports', '@angular/core', 'rxjs', '@angular/platform-browser'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.http = {}),global.ng.core,global.rxjs,global.ng.platformBrowser));\n}(this, (function (exports,core,rxjs,platformBrowser) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A backend for http that uses the `XMLHttpRequest` browser API.\n     *\n     * Take care not to evaluate this in non-browser contexts.\n     *\n     * @deprecated see https://angular.io/guide/http\n     */\n    var BrowserXhr = /** @class */ (function () {\n        function BrowserXhr() {\n        }\n        BrowserXhr.prototype.build = function () { return (new XMLHttpRequest()); };\n        BrowserXhr = __decorate([\n            core.Injectable(),\n            __metadata(\"design:paramtypes\", [])\n        ], BrowserXhr);\n        return BrowserXhr;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (RequestMethod) {\n        RequestMethod[RequestMethod[\"Get\"] = 0] = \"Get\";\n        RequestMethod[RequestMethod[\"Post\"] = 1] = \"Post\";\n        RequestMethod[RequestMethod[\"Put\"] = 2] = \"Put\";\n        RequestMethod[RequestMethod[\"Delete\"] = 3] = \"Delete\";\n        RequestMethod[RequestMethod[\"Options\"] = 4] = \"Options\";\n        RequestMethod[RequestMethod[\"Head\"] = 5] = \"Head\";\n        RequestMethod[RequestMethod[\"Patch\"] = 6] = \"Patch\";\n    })(exports.RequestMethod || (exports.RequestMethod = {}));\n    (function (ReadyState) {\n        ReadyState[ReadyState[\"Unsent\"] = 0] = \"Unsent\";\n        ReadyState[ReadyState[\"Open\"] = 1] = \"Open\";\n        ReadyState[ReadyState[\"HeadersReceived\"] = 2] = \"HeadersReceived\";\n        ReadyState[ReadyState[\"Loading\"] = 3] = \"Loading\";\n        ReadyState[ReadyState[\"Done\"] = 4] = \"Done\";\n        ReadyState[ReadyState[\"Cancelled\"] = 5] = \"Cancelled\";\n    })(exports.ReadyState || (exports.ReadyState = {}));\n    (function (ResponseType) {\n        ResponseType[ResponseType[\"Basic\"] = 0] = \"Basic\";\n        ResponseType[ResponseType[\"Cors\"] = 1] = \"Cors\";\n        ResponseType[ResponseType[\"Default\"] = 2] = \"Default\";\n        ResponseType[ResponseType[\"Error\"] = 3] = \"Error\";\n        ResponseType[ResponseType[\"Opaque\"] = 4] = \"Opaque\";\n    })(exports.ResponseType || (exports.ResponseType = {}));\n    /**\n     * Supported content type to be automatically associated with a {@link Request}.\n     * @deprecated see https://angular.io/guide/http\n     */\n    var ContentType;\n    (function (ContentType) {\n        ContentType[ContentType[\"NONE\"] = 0] = \"NONE\";\n        ContentType[ContentType[\"JSON\"] = 1] = \"JSON\";\n        ContentType[ContentType[\"FORM\"] = 2] = \"FORM\";\n        ContentType[ContentType[\"FORM_DATA\"] = 3] = \"FORM_DATA\";\n        ContentType[ContentType[\"TEXT\"] = 4] = \"TEXT\";\n        ContentType[ContentType[\"BLOB\"] = 5] = \"BLOB\";\n        ContentType[ContentType[\"ARRAY_BUFFER\"] = 6] = \"ARRAY_BUFFER\";\n    })(ContentType || (ContentType = {}));\n    (function (ResponseContentType) {\n        ResponseContentType[ResponseContentType[\"Text\"] = 0] = \"Text\";\n        ResponseContentType[ResponseContentType[\"Json\"] = 1] = \"Json\";\n        ResponseContentType[ResponseContentType[\"ArrayBuffer\"] = 2] = \"ArrayBuffer\";\n        ResponseContentType[ResponseContentType[\"Blob\"] = 3] = \"Blob\";\n    })(exports.ResponseContentType || (exports.ResponseContentType = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Polyfill for [Headers](https://developer.mozilla.org/en-US/docs/Web/API/Headers/Headers), as\n     * specified in the [Fetch Spec](https://fetch.spec.whatwg.org/#headers-class).\n     *\n     * The only known difference between this `Headers` implementation and the spec is the\n     * lack of an `entries` method.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Headers} from '@angular/http';\n     *\n     * var firstHeaders = new Headers();\n     * firstHeaders.append('Content-Type', 'image/jpeg');\n     * console.log(firstHeaders.get('Content-Type')) //'image/jpeg'\n     *\n     * // Create headers from Plain Old JavaScript Object\n     * var secondHeaders = new Headers({\n     *   'X-My-Custom-Header': 'Angular'\n     * });\n     * console.log(secondHeaders.get('X-My-Custom-Header')); //'Angular'\n     *\n     * var thirdHeaders = new Headers(secondHeaders);\n     * console.log(thirdHeaders.get('X-My-Custom-Header')); //'Angular'\n     * ```\n     *\n     * @deprecated see https://angular.io/guide/http\n     */\n    var Headers = /** @class */ (function () {\n        // TODO(vicb): any -> string|string[]\n        function Headers(headers) {\n            var _this = this;\n            /** @internal header names are lower case */\n            this._headers = new Map();\n            /** @internal map lower case names to actual names */\n            this._normalizedNames = new Map();\n            if (!headers) {\n                return;\n            }\n            if (headers instanceof Headers) {\n                headers.forEach(function (values, name) {\n                    values.forEach(function (value) { return _this.append(name, value); });\n                });\n                return;\n            }\n            Object.keys(headers).forEach(function (name) {\n                var values = Array.isArray(headers[name]) ? headers[name] : [headers[name]];\n                _this.delete(name);\n                values.forEach(function (value) { return _this.append(name, value); });\n            });\n        }\n        /**\n         * Returns a new Headers instance from the given DOMString of Response Headers\n         */\n        Headers.fromResponseHeaderString = function (headersString) {\n            var headers = new Headers();\n            headersString.split('\\n').forEach(function (line) {\n                var index = line.indexOf(':');\n                if (index > 0) {\n                    var name_1 = line.slice(0, index);\n                    var value = line.slice(index + 1).trim();\n                    headers.set(name_1, value);\n                }\n            });\n            return headers;\n        };\n        /**\n         * Appends a header to existing list of header values for a given header name.\n         */\n        Headers.prototype.append = function (name, value) {\n            var values = this.getAll(name);\n            if (values === null) {\n                this.set(name, value);\n            }\n            else {\n                values.push(value);\n            }\n        };\n        /**\n         * Deletes all header values for the given name.\n         */\n        Headers.prototype.delete = function (name) {\n            var lcName = name.toLowerCase();\n            this._normalizedNames.delete(lcName);\n            this._headers.delete(lcName);\n        };\n        Headers.prototype.forEach = function (fn) {\n            var _this = this;\n            this._headers.forEach(function (values, lcName) { return fn(values, _this._normalizedNames.get(lcName), _this._headers); });\n        };\n        /**\n         * Returns first header that matches given name.\n         */\n        Headers.prototype.get = function (name) {\n            var values = this.getAll(name);\n            if (values === null) {\n                return null;\n            }\n            return values.length > 0 ? values[0] : null;\n        };\n        /**\n         * Checks for existence of header by given name.\n         */\n        Headers.prototype.has = function (name) { return this._headers.has(name.toLowerCase()); };\n        /**\n         * Returns the names of the headers\n         */\n        Headers.prototype.keys = function () { return Array.from(this._normalizedNames.values()); };\n        /**\n         * Sets or overrides header value for given name.\n         */\n        Headers.prototype.set = function (name, value) {\n            if (Array.isArray(value)) {\n                if (value.length) {\n                    this._headers.set(name.toLowerCase(), [value.join(',')]);\n                }\n            }\n            else {\n                this._headers.set(name.toLowerCase(), [value]);\n            }\n            this.mayBeSetNormalizedName(name);\n        };\n        /**\n         * Returns values of all headers.\n         */\n        Headers.prototype.values = function () { return Array.from(this._headers.values()); };\n        /**\n         * Returns string of all headers.\n         */\n        // TODO(vicb): returns {[name: string]: string[]}\n        Headers.prototype.toJSON = function () {\n            var _this = this;\n            var serialized = {};\n            this._headers.forEach(function (values, name) {\n                var split = [];\n                values.forEach(function (v) { return split.push.apply(split, __spread(v.split(','))); });\n                serialized[_this._normalizedNames.get(name)] = split;\n            });\n            return serialized;\n        };\n        /**\n         * Returns list of header values for a given name.\n         */\n        Headers.prototype.getAll = function (name) {\n            return this.has(name) ? this._headers.get(name.toLowerCase()) || null : null;\n        };\n        /**\n         * This method is not implemented.\n         */\n        Headers.prototype.entries = function () { throw new Error('\"entries\" method is not implemented on Headers class'); };\n        Headers.prototype.mayBeSetNormalizedName = function (name) {\n            var lcName = name.toLowerCase();\n            if (!this._normalizedNames.has(lcName)) {\n                this._normalizedNames.set(lcName, name);\n            }\n        };\n        return Headers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a response options object to be optionally provided when instantiating a\n     * {@link Response}.\n     *\n     * This class is based on the `ResponseInit` description in the [Fetch\n     * Spec](https://fetch.spec.whatwg.org/#responseinit).\n     *\n     * All values are null by default. Typical defaults can be found in the\n     * {@link BaseResponseOptions} class, which sub-classes `ResponseOptions`.\n     *\n     * This class may be used in tests to build {@link Response Responses} for\n     * mock responses (see {@link MockBackend}).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import {ResponseOptions, Response} from '@angular/http';\n     *\n     * var options = new ResponseOptions({\n     *   body: '{\"name\":\"Jeff\"}'\n     * });\n     * var res = new Response(options);\n     *\n     * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\n     * ```\n     *\n     * @deprecated see https://angular.io/guide/http\n     */\n    var ResponseOptions = /** @class */ (function () {\n        function ResponseOptions(opts) {\n            if (opts === void 0) { opts = {}; }\n            var body = opts.body, status = opts.status, headers = opts.headers, statusText = opts.statusText, type = opts.type, url = opts.url;\n            this.body = body != null ? body : null;\n            this.status = status != null ? status : null;\n            this.headers = headers != null ? headers : null;\n            this.statusText = statusText != null ? statusText : null;\n            this.type = type != null ? type : null;\n            this.url = url != null ? url : null;\n        }\n        /**\n         * Creates a copy of the `ResponseOptions` instance, using the optional input as values to\n         * override\n         * existing values. This method will not change the values of the instance on which it is being\n         * called.\n         *\n         * This may be useful when sharing a base `ResponseOptions` object inside tests,\n         * where certain properties may change from test to test.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * import {ResponseOptions, Response} from '@angular/http';\n         *\n         * var options = new ResponseOptions({\n         *   body: {name: 'Jeff'}\n         * });\n         * var res = new Response(options.merge({\n         *   url: 'https://google.com'\n         * }));\n         * console.log('options.url:', options.url); // null\n         * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\n         * console.log('res.url:', res.url); // https://google.com\n         * ```\n         */\n        ResponseOptions.prototype.merge = function (options) {\n            return new ResponseOptions({\n                body: options && options.body != null ? options.body : this.body,\n                status: options && options.status != null ? options.status : this.status,\n                headers: options && options.headers != null ? options.headers : this.headers,\n                statusText: options && options.statusText != null ? options.statusText : this.statusText,\n                type: options && options.type != null ? options.type : this.type,\n                url: options && options.url != null ? options.url : this.url,\n            });\n        };\n        return ResponseOptions;\n    }());\n    /**\n     * Subclass of {@link ResponseOptions}, with default values.\n     *\n     * Default values:\n     *  * status: 200\n     *  * headers: empty {@link Headers} object\n     *\n     * This class could be extended and bound to the {@link ResponseOptions} class\n     * when configuring an {@link Injector}, in order to override the default options\n     * used by {@link Http} to create {@link Response Responses}.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import {provide} from '@angular/core';\n     * import {bootstrap} from '@angular/platform-browser/browser';\n     * import {HTTP_PROVIDERS, Headers, Http, BaseResponseOptions, ResponseOptions} from\n     * '@angular/http';\n     * import {App} from './myapp';\n     *\n     * class MyOptions extends BaseResponseOptions {\n     *   headers:Headers = new Headers({network: 'github'});\n     * }\n     *\n     * bootstrap(App, [HTTP_PROVIDERS, {provide: ResponseOptions, useClass: MyOptions}]);\n     * ```\n     *\n     * The options could also be extended when manually creating a {@link Response}\n     * object.\n     *\n     * ### Example\n     *\n     * ```\n     * import {BaseResponseOptions, Response} from '@angular/http';\n     *\n     * var options = new BaseResponseOptions();\n     * var res = new Response(options.merge({\n     *   body: 'Angular',\n     *   headers: new Headers({framework: 'angular'})\n     * }));\n     * console.log('res.headers.get(\"framework\"):', res.headers.get('framework')); // angular\n     * console.log('res.text():', res.text()); // Angular;\n     * ```\n     *\n     * @deprecated see https://angular.io/guide/http\n     */\n    var BaseResponseOptions = /** @class */ (function (_super) {\n        __extends(BaseResponseOptions, _super);\n        function BaseResponseOptions() {\n            return _super.call(this, { status: 200, statusText: 'Ok', type: exports.ResponseType.Default, headers: new Headers() }) || this;\n        }\n        BaseResponseOptions = __decorate([\n            core.Injectable(),\n            __metadata(\"design:paramtypes\", [])\n        ], BaseResponseOptions);\n        return BaseResponseOptions;\n    }(ResponseOptions));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Abstract class from which real backends are derived.\n     *\n     * The primary purpose of a `ConnectionBackend` is to create new connections to fulfill a given\n     * {@link Request}.\n     *\n     * @deprecated see https://angular.io/guide/http\n     */\n    var ConnectionBackend = /** @class */ (function () {\n        function ConnectionBackend() {\n        }\n        return ConnectionBackend;\n    }());\n    /**\n     * Abstract class from which real connections are derived.\n     *\n     * @deprecated see https://angular.io/guide/http\n     */\n    var Connection = /** @class */ (function () {\n        function Connection() {\n        }\n        return Connection;\n    }());\n    /**\n     * An XSRFStrategy configures XSRF protection (e.g. via headers) on an HTTP request.\n     *\n     * @deprecated see https://angular.io/guide/http\n     */\n    var XSRFStrategy = /** @class */ (function () {\n        function XSRFStrategy() {\n        }\n        return XSRFStrategy;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeMethodName(method) {\n        if (typeof method !== 'string')\n            return method;\n        switch (method.toUpperCase()) {\n            case 'GET':\n                return exports.RequestMethod.Get;\n            case 'POST':\n                return exports.RequestMethod.Post;\n            case 'PUT':\n                return exports.RequestMethod.Put;\n            case 'DELETE':\n                return exports.RequestMethod.Delete;\n            case 'OPTIONS':\n                return exports.RequestMethod.Options;\n            case 'HEAD':\n                return exports.RequestMethod.Head;\n            case 'PATCH':\n                return exports.RequestMethod.Patch;\n        }\n        throw new Error(\"Invalid request method. The method \\\"\" + method + \"\\\" is not supported.\");\n    }\n    var isSuccess = function (status) { return (status >= 200 && status < 300); };\n    function getResponseURL(xhr) {\n        if ('responseURL' in xhr) {\n            return xhr.responseURL;\n        }\n        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n            return xhr.getResponseHeader('X-Request-URL');\n        }\n        return null;\n    }\n    function stringToArrayBuffer(input) {\n        var view = new Uint16Array(input.length);\n        for (var i = 0, strLen = input.length; i < strLen; i++) {\n            view[i] = input.charCodeAt(i);\n        }\n        return view.buffer;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function paramParser(rawParams) {\n        if (rawParams === void 0) { rawParams = ''; }\n        var map = new Map();\n        if (rawParams.length > 0) {\n            var params = rawParams.split('&');\n            params.forEach(function (param) {\n                var eqIdx = param.indexOf('=');\n                var _a = __read(eqIdx == -1 ? [param, ''] : [param.slice(0, eqIdx), param.slice(eqIdx + 1)], 2), key = _a[0], val = _a[1];\n                var list = map.get(key) || [];\n                list.push(val);\n                map.set(key, list);\n            });\n        }\n        return map;\n    }\n    /**\n     * @deprecated see https://angular.io/guide/http\n     **/\n    var QueryEncoder = /** @class */ (function () {\n        function QueryEncoder() {\n        }\n        QueryEncoder.prototype.encodeKey = function (key) { return standardEncoding(key); };\n        QueryEncoder.prototype.encodeValue = function (value) { return standardEncoding(value); };\n        return QueryEncoder;\n    }());\n    function standardEncoding(v) {\n        return encodeURIComponent(v)\n            .replace(/%40/gi, '@')\n            .replace(/%3A/gi, ':')\n            .replace(/%24/gi, '$')\n            .replace(/%2C/gi, ',')\n            .replace(/%3B/gi, ';')\n            .replace(/%2B/gi, '+')\n            .replace(/%3D/gi, '=')\n            .replace(/%3F/gi, '?')\n            .replace(/%2F/gi, '/');\n    }\n    /**\n     * Map-like representation of url search parameters, based on\n     * [URLSearchParams](https://url.spec.whatwg.org/#urlsearchparams) in the url living standard,\n     * with several extensions for merging URLSearchParams objects:\n     *   - setAll()\n     *   - appendAll()\n     *   - replaceAll()\n     *\n     * This class accepts an optional second parameter of ${@link QueryEncoder},\n     * which is used to serialize parameters before making a request. By default,\n     * `QueryEncoder` encodes keys and values of parameters using `encodeURIComponent`,\n     * and then un-encodes certain characters that are allowed to be part of the query\n     * according to IETF RFC 3986: https://tools.ietf.org/html/rfc3986.\n     *\n     * These are the characters that are not encoded: `! $ \\' ( ) * + , ; A 9 - . _ ~ ? /`\n     *\n     * If the set of allowed query characters is not acceptable for a particular backend,\n     * `QueryEncoder` can be subclassed and provided as the 2nd argument to URLSearchParams.\n     *\n     * ```\n     * import {URLSearchParams, QueryEncoder} from '@angular/http';\n     * class MyQueryEncoder extends QueryEncoder {\n     *   encodeKey(k: string): string {\n     *     return myEncodingFunction(k);\n     *   }\n     *\n     *   encodeValue(v: string): string {\n     *     return myEncodingFunction(v);\n     *   }\n     * }\n     *\n     * let params = new URLSearchParams('', new MyQueryEncoder());\n     * ```\n     * @deprecated see https://angular.io/guide/http\n     */\n    var URLSearchParams = /** @class */ (function () {\n        function URLSearchParams(rawParams, queryEncoder) {\n            if (rawParams === void 0) { rawParams = ''; }\n            if (queryEncoder === void 0) { queryEncoder = new QueryEncoder(); }\n            this.rawParams = rawParams;\n            this.queryEncoder = queryEncoder;\n            this.paramsMap = paramParser(rawParams);\n        }\n        URLSearchParams.prototype.clone = function () {\n            var clone = new URLSearchParams('', this.queryEncoder);\n            clone.appendAll(this);\n            return clone;\n        };\n        URLSearchParams.prototype.has = function (param) { return this.paramsMap.has(param); };\n        URLSearchParams.prototype.get = function (param) {\n            var storedParam = this.paramsMap.get(param);\n            return Array.isArray(storedParam) ? storedParam[0] : null;\n        };\n        URLSearchParams.prototype.getAll = function (param) { return this.paramsMap.get(param) || []; };\n        URLSearchParams.prototype.set = function (param, val) {\n            if (val === void 0 || val === null) {\n                this.delete(param);\n                return;\n            }\n            var list = this.paramsMap.get(param) || [];\n            list.length = 0;\n            list.push(val);\n            this.paramsMap.set(param, list);\n        };\n        // A merge operation\n        // For each name-values pair in `searchParams`, perform `set(name, values[0])`\n        //\n        // E.g: \"a=[1,2,3], c=[8]\" + \"a=[4,5,6], b=[7]\" = \"a=[4], c=[8], b=[7]\"\n        //\n        // TODO(@caitp): document this better\n        URLSearchParams.prototype.setAll = function (searchParams) {\n            var _this = this;\n            searchParams.paramsMap.forEach(function (value, param) {\n                var list = _this.paramsMap.get(param) || [];\n                list.length = 0;\n                list.push(value[0]);\n                _this.paramsMap.set(param, list);\n            });\n        };\n        URLSearchParams.prototype.append = function (param, val) {\n            if (val === void 0 || val === null)\n                return;\n            var list = this.paramsMap.get(param) || [];\n            list.push(val);\n            this.paramsMap.set(param, list);\n        };\n        // A merge operation\n        // For each name-values pair in `searchParams`, perform `append(name, value)`\n        // for each value in `values`.\n        //\n        // E.g: \"a=[1,2], c=[8]\" + \"a=[3,4], b=[7]\" = \"a=[1,2,3,4], c=[8], b=[7]\"\n        //\n        // TODO(@caitp): document this better\n        URLSearchParams.prototype.appendAll = function (searchParams) {\n            var _this = this;\n            searchParams.paramsMap.forEach(function (value, param) {\n                var list = _this.paramsMap.get(param) || [];\n                for (var i = 0; i < value.length; ++i) {\n                    list.push(value[i]);\n                }\n                _this.paramsMap.set(param, list);\n            });\n        };\n        // A merge operation\n        // For each name-values pair in `searchParams`, perform `delete(name)`,\n        // followed by `set(name, values)`\n        //\n        // E.g: \"a=[1,2,3], c=[8]\" + \"a=[4,5,6], b=[7]\" = \"a=[4,5,6], c=[8], b=[7]\"\n        //\n        // TODO(@caitp): document this better\n        URLSearchParams.prototype.replaceAll = function (searchParams) {\n            var _this = this;\n            searchParams.paramsMap.forEach(function (value, param) {\n                var list = _this.paramsMap.get(param) || [];\n                list.length = 0;\n                for (var i = 0; i < value.length; ++i) {\n                    list.push(value[i]);\n                }\n                _this.paramsMap.set(param, list);\n            });\n        };\n        URLSearchParams.prototype.toString = function () {\n            var _this = this;\n            var paramsList = [];\n            this.paramsMap.forEach(function (values, k) {\n                values.forEach(function (v) { return paramsList.push(_this.queryEncoder.encodeKey(k) + '=' + _this.queryEncoder.encodeValue(v)); });\n            });\n            return paramsList.join('&');\n        };\n        URLSearchParams.prototype.delete = function (param) { this.paramsMap.delete(param); };\n        return URLSearchParams;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * HTTP request body used by both {@link Request} and {@link Response}\n     * https://fetch.spec.whatwg.org/#body\n     */\n    var Body = /** @class */ (function () {\n        function Body() {\n        }\n        /**\n         * Attempts to return body as parsed `JSON` object, or raises an exception.\n         */\n        Body.prototype.json = function () {\n            if (typeof this._body === 'string') {\n                return JSON.parse(this._body);\n            }\n            if (this._body instanceof ArrayBuffer) {\n                return JSON.parse(this.text());\n            }\n            return this._body;\n        };\n        /**\n         * Returns the body as a string, presuming `toString()` can be called on the response body.\n         *\n         * When decoding an `ArrayBuffer`, the optional `encodingHint` parameter determines how the\n         * bytes in the buffer will be interpreted. Valid values are:\n         *\n         * - `legacy` - incorrectly interpret the bytes as UTF-16 (technically, UCS-2). Only characters\n         *   in the Basic Multilingual Plane are supported, surrogate pairs are not handled correctly.\n         *   In addition, the endianness of the 16-bit octet pairs in the `ArrayBuffer` is not taken\n         *   into consideration. This is the default behavior to avoid breaking apps, but should be\n         *   considered deprecated.\n         *\n         * - `iso-8859` - interpret the bytes as ISO-8859 (which can be used for ASCII encoded text).\n         */\n        Body.prototype.text = function (encodingHint) {\n            if (encodingHint === void 0) { encodingHint = 'legacy'; }\n            if (this._body instanceof URLSearchParams) {\n                return this._body.toString();\n            }\n            if (this._body instanceof ArrayBuffer) {\n                switch (encodingHint) {\n                    case 'legacy':\n                        return String.fromCharCode.apply(null, new Uint16Array(this._body));\n                    case 'iso-8859':\n                        return String.fromCharCode.apply(null, new Uint8Array(this._body));\n                    default:\n                        throw new Error(\"Invalid value for encodingHint: \" + encodingHint);\n                }\n            }\n            if (this._body == null) {\n                return '';\n            }\n            if (typeof this._body === 'object') {\n                return JSON.stringify(this._body, null, 2);\n            }\n            return this._body.toString();\n        };\n        /**\n         * Return the body as an ArrayBuffer\n         */\n        Body.prototype.arrayBuffer = function () {\n            if (this._body instanceof ArrayBuffer) {\n                return this._body;\n            }\n            return stringToArrayBuffer(this.text());\n        };\n        /**\n          * Returns the request's body as a Blob, assuming that body exists.\n          */\n        Body.prototype.blob = function () {\n            if (this._body instanceof Blob) {\n                return this._body;\n            }\n            if (this._body instanceof ArrayBuffer) {\n                return new Blob([this._body]);\n            }\n            throw new Error('The request body isn\\'t either a blob or an array buffer');\n        };\n        return Body;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates `Response` instances from provided values.\n     *\n     * Though this object isn't\n     * usually instantiated by end-users, it is the primary object interacted with when it comes time to\n     * add data to a view.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * http.request('my-friends.txt').subscribe(response => this.friends = response.text());\n     * ```\n     *\n     * The Response's interface is inspired by the Response constructor defined in the [Fetch\n     * Spec](https://fetch.spec.whatwg.org/#response-class), but is considered a static value whose body\n     * can be accessed many times. There are other differences in the implementation, but this is the\n     * most significant.\n     *\n     * @deprecated see https://angular.io/guide/http\n     */\n    var Response = /** @class */ (function (_super) {\n        __extends(Response, _super);\n        function Response(responseOptions) {\n            var _this = _super.call(this) || this;\n            _this._body = responseOptions.body;\n            _this.status = responseOptions.status;\n            _this.ok = (_this.status >= 200 && _this.status <= 299);\n            _this.statusText = responseOptions.statusText;\n            _this.headers = responseOptions.headers;\n            _this.type = responseOptions.type;\n            _this.url = responseOptions.url;\n            return _this;\n        }\n        Response.prototype.toString = function () {\n            return \"Response with status: \" + this.status + \" \" + this.statusText + \" for URL: \" + this.url;\n        };\n        return Response;\n    }(Body));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _nextRequestId = 0;\n    var JSONP_HOME = '__ng_jsonp__';\n    var _jsonpConnections = null;\n    function _getJsonpConnections() {\n        var w = typeof window == 'object' ? window : {};\n        if (_jsonpConnections === null) {\n            _jsonpConnections = w[JSONP_HOME] = {};\n        }\n        return _jsonpConnections;\n    }\n    // Make sure not to evaluate this in a non-browser environment!\n    var BrowserJsonp = /** @class */ (function () {\n        function BrowserJsonp() {\n        }\n        // Construct a <script> element with the specified URL\n        BrowserJsonp.prototype.build = function (url) {\n            var node = document.createElement('script');\n            node.src = url;\n            return node;\n        };\n        BrowserJsonp.prototype.nextRequestID = function () { return \"__req\" + _nextRequestId++; };\n        BrowserJsonp.prototype.requestCallback = function (id) { return JSONP_HOME + \".\" + id + \".finished\"; };\n        BrowserJsonp.prototype.exposeConnection = function (id, connection) {\n            var connections = _getJsonpConnections();\n            connections[id] = connection;\n        };\n        BrowserJsonp.prototype.removeConnection = function (id) {\n            var connections = _getJsonpConnections();\n            connections[id] = null;\n        };\n        // Attach the <script> element to the DOM\n        BrowserJsonp.prototype.send = function (node) { document.body.appendChild((node)); };\n        // Remove <script> element from the DOM\n        BrowserJsonp.prototype.cleanup = function (node) {\n            if (node.parentNode) {\n                node.parentNode.removeChild((node));\n            }\n        };\n        BrowserJsonp = __decorate([\n            core.Injectable()\n        ], BrowserJsonp);\n        return BrowserJsonp;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var JSONP_ERR_NO_CALLBACK = 'JSONP injected script did not invoke callback.';\n    var JSONP_ERR_WRONG_METHOD = 'JSONP requests must use GET request method.';\n    /**\n     * Base class for an in-flight JSONP request.\n     *\n     * @deprecated see https://angular.io/guide/http\n     */\n    var JSONPConnection = /** @class */ (function () {\n        /** @internal */\n        function JSONPConnection(req, _dom, baseResponseOptions) {\n            var _this = this;\n            this._dom = _dom;\n            this.baseResponseOptions = baseResponseOptions;\n            this._finished = false;\n            if (req.method !== exports.RequestMethod.Get) {\n                throw new TypeError(JSONP_ERR_WRONG_METHOD);\n            }\n            this.request = req;\n            this.response = new rxjs.Observable(function (responseObserver) {\n                _this.readyState = exports.ReadyState.Loading;\n                var id = _this._id = _dom.nextRequestID();\n                _dom.exposeConnection(id, _this);\n                // Workaround Dart\n                // url = url.replace(/=JSONP_CALLBACK(&|$)/, `generated method`);\n                var callback = _dom.requestCallback(_this._id);\n                var url = req.url;\n                if (url.indexOf('=JSONP_CALLBACK&') > -1) {\n                    url = url.replace('=JSONP_CALLBACK&', \"=\" + callback + \"&\");\n                }\n                else if (url.lastIndexOf('=JSONP_CALLBACK') === url.length - '=JSONP_CALLBACK'.length) {\n                    url = url.substring(0, url.length - '=JSONP_CALLBACK'.length) + (\"=\" + callback);\n                }\n                var script = _this._script = _dom.build(url);\n                var onLoad = function (event) {\n                    if (_this.readyState === exports.ReadyState.Cancelled)\n                        return;\n                    _this.readyState = exports.ReadyState.Done;\n                    _dom.cleanup(script);\n                    if (!_this._finished) {\n                        var responseOptions_1 = new ResponseOptions({ body: JSONP_ERR_NO_CALLBACK, type: exports.ResponseType.Error, url: url });\n                        if (baseResponseOptions) {\n                            responseOptions_1 = baseResponseOptions.merge(responseOptions_1);\n                        }\n                        responseObserver.error(new Response(responseOptions_1));\n                        return;\n                    }\n                    var responseOptions = new ResponseOptions({ body: _this._responseData, url: url });\n                    if (_this.baseResponseOptions) {\n                        responseOptions = _this.baseResponseOptions.merge(responseOptions);\n                    }\n                    responseObserver.next(new Response(responseOptions));\n                    responseObserver.complete();\n                };\n                var onError = function (error) {\n                    if (_this.readyState === exports.ReadyState.Cancelled)\n                        return;\n                    _this.readyState = exports.ReadyState.Done;\n                    _dom.cleanup(script);\n                    var responseOptions = new ResponseOptions({ body: error.message, type: exports.ResponseType.Error });\n                    if (baseResponseOptions) {\n                        responseOptions = baseResponseOptions.merge(responseOptions);\n                    }\n                    responseObserver.error(new Response(responseOptions));\n                };\n                script.addEventListener('load', onLoad);\n                script.addEventListener('error', onError);\n                _dom.send(script);\n                return function () {\n                    _this.readyState = exports.ReadyState.Cancelled;\n                    script.removeEventListener('load', onLoad);\n                    script.removeEventListener('error', onError);\n                    _this._dom.cleanup(script);\n                };\n            });\n        }\n        /**\n         * Callback called when the JSONP request completes, to notify the application\n         * of the new data.\n         */\n        JSONPConnection.prototype.finished = function (data) {\n            // Don't leak connections\n            this._finished = true;\n            this._dom.removeConnection(this._id);\n            if (this.readyState === exports.ReadyState.Cancelled)\n                return;\n            this._responseData = data;\n        };\n        return JSONPConnection;\n    }());\n    /**\n     * A {@link ConnectionBackend} that uses the JSONP strategy of making requests.\n     *\n     * @deprecated see https://angular.io/guide/http\n     */\n    var JSONPBackend = /** @class */ (function (_super) {\n        __extends(JSONPBackend, _super);\n        /** @internal */\n        function JSONPBackend(_browserJSONP, _baseResponseOptions) {\n            var _this = _super.call(this) || this;\n            _this._browserJSONP = _browserJSONP;\n            _this._baseResponseOptions = _baseResponseOptions;\n            return _this;\n        }\n        JSONPBackend.prototype.createConnection = function (request) {\n            return new JSONPConnection(request, this._browserJSONP, this._baseResponseOptions);\n        };\n        JSONPBackend = __decorate([\n            core.Injectable(),\n            __metadata(\"design:paramtypes\", [BrowserJsonp, ResponseOptions])\n        ], JSONPBackend);\n        return JSONPBackend;\n    }(ConnectionBackend));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var XSSI_PREFIX = /^\\)\\]\\}',?\\n/;\n    /**\n     * Creates connections using `XMLHttpRequest`. Given a fully-qualified\n     * request, an `XHRConnection` will immediately create an `XMLHttpRequest` object and send the\n     * request.\n     *\n     * This class would typically not be created or interacted with directly inside applications, though\n     * the {@link MockConnection} may be interacted with in tests.\n     *\n     * @deprecated see https://angular.io/guide/http\n     */\n    var XHRConnection = /** @class */ (function () {\n        function XHRConnection(req, browserXHR, baseResponseOptions) {\n            var _this = this;\n            this.request = req;\n            this.response = new rxjs.Observable(function (responseObserver) {\n                var _xhr = browserXHR.build();\n                _xhr.open(exports.RequestMethod[req.method].toUpperCase(), req.url);\n                if (req.withCredentials != null) {\n                    _xhr.withCredentials = req.withCredentials;\n                }\n                // load event handler\n                var onLoad = function () {\n                    // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\n                    var status = _xhr.status === 1223 ? 204 : _xhr.status;\n                    var body = null;\n                    // HTTP 204 means no content\n                    if (status !== 204) {\n                        // responseText is the old-school way of retrieving response (supported by IE8 & 9)\n                        // response/responseType properties were introduced in ResourceLoader Level2 spec\n                        // (supported by IE10)\n                        body = (typeof _xhr.response === 'undefined') ? _xhr.responseText : _xhr.response;\n                        // Implicitly strip a potential XSSI prefix.\n                        if (typeof body === 'string') {\n                            body = body.replace(XSSI_PREFIX, '');\n                        }\n                    }\n                    // fix status code when it is 0 (0 status is undocumented).\n                    // Occurs when accessing file resources or on Android 4.1 stock browser\n                    // while retrieving files from application cache.\n                    if (status === 0) {\n                        status = body ? 200 : 0;\n                    }\n                    var headers = Headers.fromResponseHeaderString(_xhr.getAllResponseHeaders());\n                    // IE 9 does not provide the way to get URL of response\n                    var url = getResponseURL(_xhr) || req.url;\n                    var statusText = _xhr.statusText || 'OK';\n                    var responseOptions = new ResponseOptions({ body: body, status: status, headers: headers, statusText: statusText, url: url });\n                    if (baseResponseOptions != null) {\n                        responseOptions = baseResponseOptions.merge(responseOptions);\n                    }\n                    var response = new Response(responseOptions);\n                    response.ok = isSuccess(status);\n                    if (response.ok) {\n                        responseObserver.next(response);\n                        // TODO(gdi2290): defer complete if array buffer until done\n                        responseObserver.complete();\n                        return;\n                    }\n                    responseObserver.error(response);\n                };\n                // error event handler\n                var onError = function (err) {\n                    var responseOptions = new ResponseOptions({\n                        body: err,\n                        type: exports.ResponseType.Error,\n                        status: _xhr.status,\n                        statusText: _xhr.statusText,\n                    });\n                    if (baseResponseOptions != null) {\n                        responseOptions = baseResponseOptions.merge(responseOptions);\n                    }\n                    responseObserver.error(new Response(responseOptions));\n                };\n                _this.setDetectedContentType(req, _xhr);\n                if (req.headers == null) {\n                    req.headers = new Headers();\n                }\n                if (!req.headers.has('Accept')) {\n                    req.headers.append('Accept', 'application/json, text/plain, */*');\n                }\n                req.headers.forEach(function (values, name) { return _xhr.setRequestHeader(name, values.join(',')); });\n                // Select the correct buffer type to store the response\n                if (req.responseType != null && _xhr.responseType != null) {\n                    switch (req.responseType) {\n                        case exports.ResponseContentType.ArrayBuffer:\n                            _xhr.responseType = 'arraybuffer';\n                            break;\n                        case exports.ResponseContentType.Json:\n                            _xhr.responseType = 'json';\n                            break;\n                        case exports.ResponseContentType.Text:\n                            _xhr.responseType = 'text';\n                            break;\n                        case exports.ResponseContentType.Blob:\n                            _xhr.responseType = 'blob';\n                            break;\n                        default:\n                            throw new Error('The selected responseType is not supported');\n                    }\n                }\n                _xhr.addEventListener('load', onLoad);\n                _xhr.addEventListener('error', onError);\n                _xhr.send(_this.request.getBody());\n                return function () {\n                    _xhr.removeEventListener('load', onLoad);\n                    _xhr.removeEventListener('error', onError);\n                    _xhr.abort();\n                };\n            });\n        }\n        XHRConnection.prototype.setDetectedContentType = function (req /** TODO Request */, _xhr /** XMLHttpRequest */) {\n            // Skip if a custom Content-Type header is provided\n            if (req.headers != null && req.headers.get('Content-Type') != null) {\n                return;\n            }\n            // Set the detected content type\n            switch (req.contentType) {\n                case ContentType.NONE:\n                    break;\n                case ContentType.JSON:\n                    _xhr.setRequestHeader('content-type', 'application/json');\n                    break;\n                case ContentType.FORM:\n                    _xhr.setRequestHeader('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n                    break;\n                case ContentType.TEXT:\n                    _xhr.setRequestHeader('content-type', 'text/plain');\n                    break;\n                case ContentType.BLOB:\n                    var blob = req.blob();\n                    if (blob.type) {\n                        _xhr.setRequestHeader('content-type', blob.type);\n                    }\n                    break;\n            }\n        };\n        return XHRConnection;\n    }());\n    /**\n     * `XSRFConfiguration` sets up Cross Site Request Forgery (XSRF) protection for the application\n     * using a cookie. See https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF)\n     * for more information on XSRF.\n     *\n     * Applications can configure custom cookie and header names by binding an instance of this class\n     * with different `cookieName` and `headerName` values. See the main HTTP documentation for more\n     * details.\n     *\n     * @deprecated see https://angular.io/guide/http\n     */\n    var CookieXSRFStrategy = /** @class */ (function () {\n        function CookieXSRFStrategy(_cookieName, _headerName) {\n            if (_cookieName === void 0) { _cookieName = 'XSRF-TOKEN'; }\n            if (_headerName === void 0) { _headerName = 'X-XSRF-TOKEN'; }\n            this._cookieName = _cookieName;\n            this._headerName = _headerName;\n        }\n        CookieXSRFStrategy.prototype.configureRequest = function (req) {\n            var xsrfToken = platformBrowser.ɵgetDOM().getCookie(this._cookieName);\n            if (xsrfToken) {\n                req.headers.set(this._headerName, xsrfToken);\n            }\n        };\n        return CookieXSRFStrategy;\n    }());\n    /**\n     * Creates {@link XHRConnection} instances.\n     *\n     * This class would typically not be used by end users, but could be\n     * overridden if a different backend implementation should be used,\n     * such as in a node backend.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Http, MyNodeBackend, HTTP_PROVIDERS, BaseRequestOptions} from '@angular/http';\n     * @Component({\n     *   viewProviders: [\n     *     HTTP_PROVIDERS,\n     *     {provide: Http, useFactory: (backend, options) => {\n     *       return new Http(backend, options);\n     *     }, deps: [MyNodeBackend, BaseRequestOptions]}]\n     * })\n     * class MyComponent {\n     *   constructor(http:Http) {\n     *     http.request('people.json').subscribe(res => this.people = res.json());\n     *   }\n     * }\n     * ```\n     * @deprecated see https://angular.io/guide/http\n     */\n    var XHRBackend = /** @class */ (function () {\n        function XHRBackend(_browserXHR, _baseResponseOptions, _xsrfStrategy) {\n            this._browserXHR = _browserXHR;\n            this._baseResponseOptions = _baseResponseOptions;\n            this._xsrfStrategy = _xsrfStrategy;\n        }\n        XHRBackend.prototype.createConnection = function (request) {\n            this._xsrfStrategy.configureRequest(request);\n            return new XHRConnection(request, this._browserXHR, this._baseResponseOptions);\n        };\n        XHRBackend = __decorate([\n            core.Injectable(),\n            __metadata(\"design:paramtypes\", [BrowserXhr, ResponseOptions,\n                XSRFStrategy])\n        ], XHRBackend);\n        return XHRBackend;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a request options object to be optionally provided when instantiating a\n     * {@link Request}.\n     *\n     * This class is based on the `RequestInit` description in the [Fetch\n     * Spec](https://fetch.spec.whatwg.org/#requestinit).\n     *\n     * All values are null by default. Typical defaults can be found in the {@link BaseRequestOptions}\n     * class, which sub-classes `RequestOptions`.\n     *\n     * ```typescript\n     * import {RequestOptions, Request, RequestMethod} from '@angular/http';\n     *\n     * const options = new RequestOptions({\n     *   method: RequestMethod.Post,\n     *   url: 'https://google.com'\n     * });\n     * const req = new Request(options);\n     * console.log('req.method:', RequestMethod[req.method]); // Post\n     * console.log('options.url:', options.url); // https://google.com\n     * ```\n     *\n     * @deprecated see https://angular.io/guide/http\n     */\n    var RequestOptions = /** @class */ (function () {\n        // TODO(Dzmitry): remove search when this.search is removed\n        function RequestOptions(opts) {\n            if (opts === void 0) { opts = {}; }\n            var method = opts.method, headers = opts.headers, body = opts.body, url = opts.url, search = opts.search, params = opts.params, withCredentials = opts.withCredentials, responseType = opts.responseType;\n            this.method = method != null ? normalizeMethodName(method) : null;\n            this.headers = headers != null ? headers : null;\n            this.body = body != null ? body : null;\n            this.url = url != null ? url : null;\n            this.params = this._mergeSearchParams(params || search);\n            this.withCredentials = withCredentials != null ? withCredentials : null;\n            this.responseType = responseType != null ? responseType : null;\n        }\n        Object.defineProperty(RequestOptions.prototype, \"search\", {\n            /**\n             * @deprecated from 4.0.0. Use params instead.\n             */\n            get: function () { return this.params; },\n            /**\n             * @deprecated from 4.0.0. Use params instead.\n             */\n            set: function (params) { this.params = params; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a copy of the `RequestOptions` instance, using the optional input as values to override\n         * existing values. This method will not change the values of the instance on which it is being\n         * called.\n         *\n         * Note that `headers` and `search` will override existing values completely if present in\n         * the `options` object. If these values should be merged, it should be done prior to calling\n         * `merge` on the `RequestOptions` instance.\n         *\n         * ```typescript\n         * import {RequestOptions, Request, RequestMethod} from '@angular/http';\n         *\n         * const options = new RequestOptions({\n         *   method: RequestMethod.Post\n         * });\n         * const req = new Request(options.merge({\n         *   url: 'https://google.com'\n         * }));\n         * console.log('req.method:', RequestMethod[req.method]); // Post\n         * console.log('options.url:', options.url); // null\n         * console.log('req.url:', req.url); // https://google.com\n         * ```\n         */\n        RequestOptions.prototype.merge = function (options) {\n            return new RequestOptions({\n                method: options && options.method != null ? options.method : this.method,\n                headers: options && options.headers != null ? options.headers : new Headers(this.headers),\n                body: options && options.body != null ? options.body : this.body,\n                url: options && options.url != null ? options.url : this.url,\n                params: options && this._mergeSearchParams(options.params || options.search),\n                withCredentials: options && options.withCredentials != null ? options.withCredentials :\n                    this.withCredentials,\n                responseType: options && options.responseType != null ? options.responseType :\n                    this.responseType\n            });\n        };\n        RequestOptions.prototype._mergeSearchParams = function (params) {\n            if (!params)\n                return this.params;\n            if (params instanceof URLSearchParams) {\n                return params.clone();\n            }\n            if (typeof params === 'string') {\n                return new URLSearchParams(params);\n            }\n            return this._parseParams(params);\n        };\n        RequestOptions.prototype._parseParams = function (objParams) {\n            var _this = this;\n            if (objParams === void 0) { objParams = {}; }\n            var params = new URLSearchParams();\n            Object.keys(objParams).forEach(function (key) {\n                var value = objParams[key];\n                if (Array.isArray(value)) {\n                    value.forEach(function (item) { return _this._appendParam(key, item, params); });\n                }\n                else {\n                    _this._appendParam(key, value, params);\n                }\n            });\n            return params;\n        };\n        RequestOptions.prototype._appendParam = function (key, value, params) {\n            if (typeof value !== 'string') {\n                value = JSON.stringify(value);\n            }\n            params.append(key, value);\n        };\n        return RequestOptions;\n    }());\n    /**\n     * Subclass of {@link RequestOptions}, with default values.\n     *\n     * Default values:\n     *  * method: {@link RequestMethod RequestMethod.Get}\n     *  * headers: empty {@link Headers} object\n     *\n     * This class could be extended and bound to the {@link RequestOptions} class\n     * when configuring an {@link Injector}, in order to override the default options\n     * used by {@link Http} to create and send {@link Request Requests}.\n     *\n     * ```typescript\n     * import {BaseRequestOptions, RequestOptions} from '@angular/http';\n     *\n     * class MyOptions extends BaseRequestOptions {\n     *   search: string = 'coreTeam=true';\n     * }\n     *\n     * {provide: RequestOptions, useClass: MyOptions};\n     * ```\n     *\n     * The options could also be extended when manually creating a {@link Request}\n     * object.\n     *\n     * ```\n     * import {BaseRequestOptions, Request, RequestMethod} from '@angular/http';\n     *\n     * const options = new BaseRequestOptions();\n     * const req = new Request(options.merge({\n     *   method: RequestMethod.Post,\n     *   url: 'https://google.com'\n     * }));\n     * console.log('req.method:', RequestMethod[req.method]); // Post\n     * console.log('options.url:', options.url); // null\n     * console.log('req.url:', req.url); // https://google.com\n     * ```\n     *\n     * @deprecated see https://angular.io/guide/http\n     */\n    var BaseRequestOptions = /** @class */ (function (_super) {\n        __extends(BaseRequestOptions, _super);\n        function BaseRequestOptions() {\n            return _super.call(this, { method: exports.RequestMethod.Get, headers: new Headers() }) || this;\n        }\n        BaseRequestOptions = __decorate([\n            core.Injectable(),\n            __metadata(\"design:paramtypes\", [])\n        ], BaseRequestOptions);\n        return BaseRequestOptions;\n    }(RequestOptions));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO(jeffbcross): properly implement body accessors\n    /**\n     * Creates `Request` instances from provided values.\n     *\n     * The Request's interface is inspired by the Request constructor defined in the [Fetch\n     * Spec](https://fetch.spec.whatwg.org/#request-class),\n     * but is considered a static value whose body can be accessed many times. There are other\n     * differences in the implementation, but this is the most significant.\n     *\n     * `Request` instances are typically created by higher-level classes, like {@link Http} and\n     * {@link Jsonp}, but it may occasionally be useful to explicitly create `Request` instances.\n     * One such example is when creating services that wrap higher-level services, like {@link Http},\n     * where it may be useful to generate a `Request` with arbitrary headers and search params.\n     *\n     * ```typescript\n     * import {Injectable, Injector} from '@angular/core';\n     * import {HTTP_PROVIDERS, Http, Request, RequestMethod} from '@angular/http';\n     *\n     * @Injectable()\n     * class AutoAuthenticator {\n     *   constructor(public http:Http) {}\n     *   request(url:string) {\n     *     return this.http.request(new Request({\n     *       method: RequestMethod.Get,\n     *       url: url,\n     *       search: 'password=123'\n     *     }));\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([HTTP_PROVIDERS, AutoAuthenticator]);\n     * var authenticator = injector.get(AutoAuthenticator);\n     * authenticator.request('people.json').subscribe(res => {\n     *   //URL should have included '?password=123'\n     *   console.log('people', res.json());\n     * });\n     * ```\n     *\n     * @deprecated see https://angular.io/guide/http\n     */\n    var Request = /** @class */ (function (_super) {\n        __extends(Request, _super);\n        function Request(requestOptions) {\n            var _this = _super.call(this) || this;\n            // TODO: assert that url is present\n            var url = requestOptions.url;\n            _this.url = requestOptions.url;\n            var paramsArg = requestOptions.params || requestOptions.search;\n            if (paramsArg) {\n                var params = void 0;\n                if (typeof paramsArg === 'object' && !(paramsArg instanceof URLSearchParams)) {\n                    params = urlEncodeParams(paramsArg).toString();\n                }\n                else {\n                    params = paramsArg.toString();\n                }\n                if (params.length > 0) {\n                    var prefix = '?';\n                    if (_this.url.indexOf('?') != -1) {\n                        prefix = (_this.url[_this.url.length - 1] == '&') ? '' : '&';\n                    }\n                    // TODO: just delete search-query-looking string in url?\n                    _this.url = url + prefix + params;\n                }\n            }\n            _this._body = requestOptions.body;\n            _this.method = normalizeMethodName(requestOptions.method);\n            // TODO(jeffbcross): implement behavior\n            // Defaults to 'omit', consistent with browser\n            _this.headers = new Headers(requestOptions.headers);\n            _this.contentType = _this.detectContentType();\n            _this.withCredentials = requestOptions.withCredentials;\n            _this.responseType = requestOptions.responseType;\n            return _this;\n        }\n        /**\n         * Returns the content type enum based on header options.\n         */\n        Request.prototype.detectContentType = function () {\n            switch (this.headers.get('content-type')) {\n                case 'application/json':\n                    return ContentType.JSON;\n                case 'application/x-www-form-urlencoded':\n                    return ContentType.FORM;\n                case 'multipart/form-data':\n                    return ContentType.FORM_DATA;\n                case 'text/plain':\n                case 'text/html':\n                    return ContentType.TEXT;\n                case 'application/octet-stream':\n                    return this._body instanceof ArrayBuffer$1 ? ContentType.ARRAY_BUFFER : ContentType.BLOB;\n                default:\n                    return this.detectContentTypeFromBody();\n            }\n        };\n        /**\n         * Returns the content type of request's body based on its type.\n         */\n        Request.prototype.detectContentTypeFromBody = function () {\n            if (this._body == null) {\n                return ContentType.NONE;\n            }\n            else if (this._body instanceof URLSearchParams) {\n                return ContentType.FORM;\n            }\n            else if (this._body instanceof FormData) {\n                return ContentType.FORM_DATA;\n            }\n            else if (this._body instanceof Blob$1) {\n                return ContentType.BLOB;\n            }\n            else if (this._body instanceof ArrayBuffer$1) {\n                return ContentType.ARRAY_BUFFER;\n            }\n            else if (this._body && typeof this._body === 'object') {\n                return ContentType.JSON;\n            }\n            else {\n                return ContentType.TEXT;\n            }\n        };\n        /**\n         * Returns the request's body according to its type. If body is undefined, return\n         * null.\n         */\n        Request.prototype.getBody = function () {\n            switch (this.contentType) {\n                case ContentType.JSON:\n                    return this.text();\n                case ContentType.FORM:\n                    return this.text();\n                case ContentType.FORM_DATA:\n                    return this._body;\n                case ContentType.TEXT:\n                    return this.text();\n                case ContentType.BLOB:\n                    return this.blob();\n                case ContentType.ARRAY_BUFFER:\n                    return this.arrayBuffer();\n                default:\n                    return null;\n            }\n        };\n        return Request;\n    }(Body));\n    function urlEncodeParams(params) {\n        var searchParams = new URLSearchParams();\n        Object.keys(params).forEach(function (key) {\n            var value = params[key];\n            if (value && Array.isArray(value)) {\n                value.forEach(function (element) { return searchParams.append(key, element.toString()); });\n            }\n            else {\n                searchParams.append(key, value.toString());\n            }\n        });\n        return searchParams;\n    }\n    var noop = function () { };\n    var w = typeof window == 'object' ? window : noop;\n    var FormData = w /** TODO #9100 */['FormData'] || noop;\n    var Blob$1 = w /** TODO #9100 */['Blob'] || noop;\n    var ArrayBuffer$1 = w /** TODO #9100 */['ArrayBuffer'] || noop;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function httpRequest(backend, request) {\n        return backend.createConnection(request).response;\n    }\n    function mergeOptions(defaultOpts, providedOpts, method, url) {\n        var newOptions = defaultOpts;\n        if (providedOpts) {\n            // Hack so Dart can used named parameters\n            return newOptions.merge(new RequestOptions({\n                method: providedOpts.method || method,\n                url: providedOpts.url || url,\n                search: providedOpts.search,\n                params: providedOpts.params,\n                headers: providedOpts.headers,\n                body: providedOpts.body,\n                withCredentials: providedOpts.withCredentials,\n                responseType: providedOpts.responseType\n            }));\n        }\n        return newOptions.merge(new RequestOptions({ method: method, url: url }));\n    }\n    /**\n     * Performs http requests using `XMLHttpRequest` as the default backend.\n     *\n     * `Http` is available as an injectable class, with methods to perform http requests. Calling\n     * `request` returns an `Observable` which will emit a single {@link Response} when a\n     * response is received.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import {Http, HTTP_PROVIDERS} from '@angular/http';\n     * import {map} from 'rxjs/operators';\n     *\n     * @Component({\n     *   selector: 'http-app',\n     *   viewProviders: [HTTP_PROVIDERS],\n     *   templateUrl: 'people.html'\n     * })\n     * class PeopleComponent {\n     *   constructor(http: Http) {\n     *     http.get('people.json')\n     *       // Call map on the response observable to get the parsed people object\n     *       .pipe(map(res => res.json()))\n     *       // Subscribe to the observable to get the parsed people object and attach it to the\n     *       // component\n     *       .subscribe(people => this.people = people);\n     *   }\n     * }\n     * ```\n     *\n     *\n     * ### Example\n     *\n     * ```\n     * http.get('people.json').subscribe((res:Response) => this.people = res.json());\n     * ```\n     *\n     * The default construct used to perform requests, `XMLHttpRequest`, is abstracted as a \"Backend\" (\n     * {@link XHRBackend} in this case), which could be mocked with dependency injection by replacing\n     * the {@link XHRBackend} provider, as in the following example:\n     *\n     * ### Example\n     *\n     * ```typescript\n     * import {BaseRequestOptions, Http} from '@angular/http';\n     * import {MockBackend} from '@angular/http/testing';\n     * var injector = Injector.resolveAndCreate([\n     *   BaseRequestOptions,\n     *   MockBackend,\n     *   {provide: Http, useFactory:\n     *       function(backend, defaultOptions) {\n     *         return new Http(backend, defaultOptions);\n     *       },\n     *       deps: [MockBackend, BaseRequestOptions]}\n     * ]);\n     * var http = injector.get(Http);\n     * http.get('request-from-mock-backend.json').subscribe((res:Response) => doSomething(res));\n     * ```\n     *\n     * @deprecated see https://angular.io/guide/http\n     */\n    var Http = /** @class */ (function () {\n        function Http(_backend, _defaultOptions) {\n            this._backend = _backend;\n            this._defaultOptions = _defaultOptions;\n        }\n        /**\n         * Performs any type of http request. First argument is required, and can either be a url or\n         * a {@link Request} instance. If the first argument is a url, an optional {@link RequestOptions}\n         * object can be provided as the 2nd argument. The options object will be merged with the values\n         * of {@link BaseRequestOptions} before performing the request.\n         */\n        Http.prototype.request = function (url, options) {\n            var responseObservable;\n            if (typeof url === 'string') {\n                responseObservable = httpRequest(this._backend, new Request(mergeOptions(this._defaultOptions, options, exports.RequestMethod.Get, url)));\n            }\n            else if (url instanceof Request) {\n                responseObservable = httpRequest(this._backend, url);\n            }\n            else {\n                throw new Error('First argument must be a url string or Request instance.');\n            }\n            return responseObservable;\n        };\n        /**\n         * Performs a request with `get` http method.\n         */\n        Http.prototype.get = function (url, options) {\n            return this.request(new Request(mergeOptions(this._defaultOptions, options, exports.RequestMethod.Get, url)));\n        };\n        /**\n         * Performs a request with `post` http method.\n         */\n        Http.prototype.post = function (url, body, options) {\n            return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, exports.RequestMethod.Post, url)));\n        };\n        /**\n         * Performs a request with `put` http method.\n         */\n        Http.prototype.put = function (url, body, options) {\n            return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, exports.RequestMethod.Put, url)));\n        };\n        /**\n         * Performs a request with `delete` http method.\n         */\n        Http.prototype.delete = function (url, options) {\n            return this.request(new Request(mergeOptions(this._defaultOptions, options, exports.RequestMethod.Delete, url)));\n        };\n        /**\n         * Performs a request with `patch` http method.\n         */\n        Http.prototype.patch = function (url, body, options) {\n            return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, exports.RequestMethod.Patch, url)));\n        };\n        /**\n         * Performs a request with `head` http method.\n         */\n        Http.prototype.head = function (url, options) {\n            return this.request(new Request(mergeOptions(this._defaultOptions, options, exports.RequestMethod.Head, url)));\n        };\n        /**\n         * Performs a request with `options` http method.\n         */\n        Http.prototype.options = function (url, options) {\n            return this.request(new Request(mergeOptions(this._defaultOptions, options, exports.RequestMethod.Options, url)));\n        };\n        Http = __decorate([\n            core.Injectable(),\n            __metadata(\"design:paramtypes\", [ConnectionBackend, RequestOptions])\n        ], Http);\n        return Http;\n    }());\n    /**\n     * @deprecated see https://angular.io/guide/http\n     */\n    var Jsonp = /** @class */ (function (_super) {\n        __extends(Jsonp, _super);\n        function Jsonp(backend, defaultOptions) {\n            return _super.call(this, backend, defaultOptions) || this;\n        }\n        /**\n         * Performs any type of http request. First argument is required, and can either be a url or\n         * a {@link Request} instance. If the first argument is a url, an optional {@link RequestOptions}\n         * object can be provided as the 2nd argument. The options object will be merged with the values\n         * of {@link BaseRequestOptions} before performing the request.\n         *\n         * @security Regular XHR is the safest alternative to JSONP for most applications, and is\n         * supported by all current browsers. Because JSONP creates a `<script>` element with\n         * contents retrieved from a remote source, attacker-controlled data introduced by an untrusted\n         * source could expose your application to XSS risks. Data exposed by JSONP may also be\n         * readable by malicious third-party websites. In addition, JSONP introduces potential risk for\n         * future security issues (e.g. content sniffing).  For more detail, see the\n         * [Security Guide](http://g.co/ng/security).\n         */\n        Jsonp.prototype.request = function (url, options) {\n            var responseObservable;\n            if (typeof url === 'string') {\n                url =\n                    new Request(mergeOptions(this._defaultOptions, options, exports.RequestMethod.Get, url));\n            }\n            if (url instanceof Request) {\n                if (url.method !== exports.RequestMethod.Get) {\n                    throw new Error('JSONP requests must use GET request method.');\n                }\n                responseObservable = httpRequest(this._backend, url);\n            }\n            else {\n                throw new Error('First argument must be a url string or Request instance.');\n            }\n            return responseObservable;\n        };\n        Jsonp = __decorate([\n            core.Injectable(),\n            __metadata(\"design:paramtypes\", [ConnectionBackend, RequestOptions])\n        ], Jsonp);\n        return Jsonp;\n    }(Http));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _createDefaultCookieXSRFStrategy() {\n        return new CookieXSRFStrategy();\n    }\n    function httpFactory(xhrBackend, requestOptions) {\n        return new Http(xhrBackend, requestOptions);\n    }\n    function jsonpFactory(jsonpBackend, requestOptions) {\n        return new Jsonp(jsonpBackend, requestOptions);\n    }\n    /**\n     * The module that includes http's providers\n     *\n     * @deprecated see https://angular.io/guide/http\n     */\n    var HttpModule = /** @class */ (function () {\n        function HttpModule() {\n        }\n        HttpModule = __decorate([\n            core.NgModule({\n                providers: [\n                    // TODO(pascal): use factory type annotations once supported in DI\n                    // issue: https://github.com/angular/angular/issues/3183\n                    { provide: Http, useFactory: httpFactory, deps: [XHRBackend, RequestOptions] },\n                    BrowserXhr,\n                    { provide: RequestOptions, useClass: BaseRequestOptions },\n                    { provide: ResponseOptions, useClass: BaseResponseOptions },\n                    XHRBackend,\n                    { provide: XSRFStrategy, useFactory: _createDefaultCookieXSRFStrategy },\n                ],\n            })\n        ], HttpModule);\n        return HttpModule;\n    }());\n    /**\n     * The module that includes jsonp's providers\n     *\n     * @deprecated see https://angular.io/guide/http\n     */\n    var JsonpModule = /** @class */ (function () {\n        function JsonpModule() {\n        }\n        JsonpModule = __decorate([\n            core.NgModule({\n                providers: [\n                    // TODO(pascal): use factory type annotations once supported in DI\n                    // issue: https://github.com/angular/angular/issues/3183\n                    { provide: Jsonp, useFactory: jsonpFactory, deps: [JSONPBackend, RequestOptions] },\n                    BrowserJsonp,\n                    { provide: RequestOptions, useClass: BaseRequestOptions },\n                    { provide: ResponseOptions, useClass: BaseResponseOptions },\n                    JSONPBackend,\n                ],\n            })\n        ], JsonpModule);\n        return JsonpModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated see https://angular.io/guide/http\n     */\n    var VERSION = new core.Version('6.1.10');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ɵangular_packages_http_http_e = BrowserJsonp;\n    exports.ɵangular_packages_http_http_f = Body;\n    exports.ɵangular_packages_http_http_a = _createDefaultCookieXSRFStrategy;\n    exports.ɵangular_packages_http_http_b = httpFactory;\n    exports.ɵangular_packages_http_http_c = jsonpFactory;\n    exports.BrowserXhr = BrowserXhr;\n    exports.JSONPBackend = JSONPBackend;\n    exports.JSONPConnection = JSONPConnection;\n    exports.CookieXSRFStrategy = CookieXSRFStrategy;\n    exports.XHRBackend = XHRBackend;\n    exports.XHRConnection = XHRConnection;\n    exports.BaseRequestOptions = BaseRequestOptions;\n    exports.RequestOptions = RequestOptions;\n    exports.BaseResponseOptions = BaseResponseOptions;\n    exports.ResponseOptions = ResponseOptions;\n    exports.Headers = Headers;\n    exports.Http = Http;\n    exports.Jsonp = Jsonp;\n    exports.HttpModule = HttpModule;\n    exports.JsonpModule = JsonpModule;\n    exports.Connection = Connection;\n    exports.ConnectionBackend = ConnectionBackend;\n    exports.XSRFStrategy = XSRFStrategy;\n    exports.Request = Request;\n    exports.Response = Response;\n    exports.QueryEncoder = QueryEncoder;\n    exports.URLSearchParams = URLSearchParams;\n    exports.VERSION = VERSION;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=http.umd.js.map\n"]}