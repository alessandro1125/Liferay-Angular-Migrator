{"version":3,"sources":["../../../../../../../packages/http/src/backends/jsonp_backend.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '@angular/core';\nimport {Observable, Observer} from 'rxjs';\n\nimport {ResponseOptions} from '../base_response_options';\nimport {ReadyState, RequestMethod, ResponseType} from '../enums';\nimport {Connection, ConnectionBackend} from '../interfaces';\nimport {Request} from '../static_request';\nimport {Response} from '../static_response';\n\nimport {BrowserJsonp} from './browser_jsonp';\n\nconst JSONP_ERR_NO_CALLBACK = 'JSONP injected script did not invoke callback.';\nconst JSONP_ERR_WRONG_METHOD = 'JSONP requests must use GET request method.';\n\n/**\n * Base class for an in-flight JSONP request.\n *\n * @deprecated see https://angular.io/guide/http\n */\nexport class JSONPConnection implements Connection {\n  // TODO(issue/24571): remove '!'.\n  private _id !: string;\n  // TODO(issue/24571): remove '!'.\n  private _script !: Element;\n  private _responseData: any;\n  private _finished: boolean = false;\n\n  /**\n   * The {@link ReadyState} of this request.\n   */\n  // TODO(issue/24571): remove '!'.\n  readyState !: ReadyState;\n\n  /**\n   * The outgoing HTTP request.\n   */\n  request: Request;\n\n  /**\n   * An observable that completes with the response, when the request is finished.\n   */\n  response: Observable<Response>;\n\n  /** @internal */\n  constructor(\n      req: Request, private _dom: BrowserJsonp, private baseResponseOptions?: ResponseOptions) {\n    if (req.method !== RequestMethod.Get) {\n      throw new TypeError(JSONP_ERR_WRONG_METHOD);\n    }\n    this.request = req;\n    this.response = new Observable<Response>((responseObserver: Observer<Response>) => {\n\n      this.readyState = ReadyState.Loading;\n      const id = this._id = _dom.nextRequestID();\n\n      _dom.exposeConnection(id, this);\n\n      // Workaround Dart\n      // url = url.replace(/=JSONP_CALLBACK(&|$)/, `generated method`);\n      const callback = _dom.requestCallback(this._id);\n      let url: string = req.url;\n      if (url.indexOf('=JSONP_CALLBACK&') > -1) {\n        url = url.replace('=JSONP_CALLBACK&', `=${callback}&`);\n      } else if (url.lastIndexOf('=JSONP_CALLBACK') === url.length - '=JSONP_CALLBACK'.length) {\n        url = url.substring(0, url.length - '=JSONP_CALLBACK'.length) + `=${callback}`;\n      }\n\n      const script = this._script = _dom.build(url);\n\n      const onLoad = (event: Event) => {\n        if (this.readyState === ReadyState.Cancelled) return;\n        this.readyState = ReadyState.Done;\n        _dom.cleanup(script);\n        if (!this._finished) {\n          let responseOptions =\n              new ResponseOptions({body: JSONP_ERR_NO_CALLBACK, type: ResponseType.Error, url});\n          if (baseResponseOptions) {\n            responseOptions = baseResponseOptions.merge(responseOptions);\n          }\n          responseObserver.error(new Response(responseOptions));\n          return;\n        }\n\n        let responseOptions = new ResponseOptions({body: this._responseData, url});\n        if (this.baseResponseOptions) {\n          responseOptions = this.baseResponseOptions.merge(responseOptions);\n        }\n\n        responseObserver.next(new Response(responseOptions));\n        responseObserver.complete();\n      };\n\n      const onError = (error: Error) => {\n        if (this.readyState === ReadyState.Cancelled) return;\n        this.readyState = ReadyState.Done;\n        _dom.cleanup(script);\n        let responseOptions = new ResponseOptions({body: error.message, type: ResponseType.Error});\n        if (baseResponseOptions) {\n          responseOptions = baseResponseOptions.merge(responseOptions);\n        }\n        responseObserver.error(new Response(responseOptions));\n      };\n\n      script.addEventListener('load', onLoad);\n      script.addEventListener('error', onError);\n\n      _dom.send(script);\n\n      return () => {\n        this.readyState = ReadyState.Cancelled;\n        script.removeEventListener('load', onLoad);\n        script.removeEventListener('error', onError);\n        this._dom.cleanup(script);\n      };\n    });\n  }\n\n  /**\n   * Callback called when the JSONP request completes, to notify the application\n   * of the new data.\n   */\n  finished(data?: any) {\n    // Don't leak connections\n    this._finished = true;\n    this._dom.removeConnection(this._id);\n    if (this.readyState === ReadyState.Cancelled) return;\n    this._responseData = data;\n  }\n}\n\n/**\n * A {@link ConnectionBackend} that uses the JSONP strategy of making requests.\n *\n * @deprecated see https://angular.io/guide/http\n */\n@Injectable()\nexport class JSONPBackend extends ConnectionBackend {\n  /** @internal */\n  constructor(private _browserJSONP: BrowserJsonp, private _baseResponseOptions: ResponseOptions) {\n    super();\n  }\n\n  createConnection(request: Request): JSONPConnection {\n    return new JSONPConnection(request, this._browserJSONP, this._baseResponseOptions);\n  }\n}\n"],"sourceRoot":""}