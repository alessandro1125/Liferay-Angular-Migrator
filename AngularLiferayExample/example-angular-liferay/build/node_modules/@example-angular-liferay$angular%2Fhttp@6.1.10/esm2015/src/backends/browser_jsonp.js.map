{"version":3,"sources":["../../../../../../../packages/http/src/backends/browser_jsonp.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAQA,WAAQ,UAAR,QAAyB,eAAzB;;AAEA,MAAI,iBAAiB,CAArB;;AACA,SAAA,MAAa,aAAa,cAA1B;;AACA,MAAI,oBAA+C,IAAnD;;;;AAEA,WAAA,oBAAA,GAAA;;AACE,UAAM,IAA0B,OAAO,MAAP,IAAiB,QAAjB,GAA4B,MAA5B,GAAqC,EAArE;AACA,QAAI,sBAAsB,IAA1B,EAAgC;AAC9B,0BAAoB,EAAE,UAAF,IAAgB,EAApC;AACD;AACD,WAAO,iBAAP;AACD;AAID,SAAM,MAAA,YAAA,CAAA;;;;;AAEJ,UAAM,GAAN,EAAiB;;AACf,YAAM,OAAO,SAAS,aAAT,CAAuB,QAAvB,CAAb;AACA,WAAK,GAAL,GAAW,GAAX;AACA,aAAO,IAAP;AACD;;;;AAED,oBAAa;AAAa,aAAO,QAAQ,gBAAgB,EAA/B;AAAoC;;;;;AAE9D,oBAAgB,EAAhB,EAA0B;AAAY,aAAO,GAAG,UAAU,IAAI,EAAE,WAA1B;AAAwC;;;;;;AAE9E,qBAAiB,EAAjB,EAA6B,UAA7B,EAA4C;;AAC1C,YAAM,cAAc,sBAApB;AACA,kBAAY,EAAZ,IAAkB,UAAlB;AACD;;;;;AAED,qBAAiB,EAAjB,EAA2B;;AACzB,YAAM,cAAc,sBAApB;AACA,kBAAY,EAAZ,IAAkB,IAAlB;AACD;;;;;AAGD,SAAK,IAAL,EAAc;AAAI,eAAS,IAAT,CAAc,WAAd,EAAyB,gBAAQ,IAAjC;AAA0C;;;;;AAG5D,YAAQ,IAAR,EAAiB;AACf,UAAI,KAAK,UAAT,EAAqB;AACnB,aAAK,UAAL,CAAgB,WAAhB,EAA2B,gBAAQ,IAAnC;AACD;AACF;AA9BG;qCADL,U","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '@angular/core';\n\nlet _nextRequestId = 0;\nexport const JSONP_HOME = '__ng_jsonp__';\nlet _jsonpConnections: {[key: string]: any}|null = null;\n\nfunction _getJsonpConnections(): {[key: string]: any} {\n  const w: {[key: string]: any} = typeof window == 'object' ? window : {};\n  if (_jsonpConnections === null) {\n    _jsonpConnections = w[JSONP_HOME] = {};\n  }\n  return _jsonpConnections;\n}\n\n// Make sure not to evaluate this in a non-browser environment!\n@Injectable()\nexport class BrowserJsonp {\n  // Construct a <script> element with the specified URL\n  build(url: string): any {\n    const node = document.createElement('script');\n    node.src = url;\n    return node;\n  }\n\n  nextRequestID(): string { return `__req${_nextRequestId++}`; }\n\n  requestCallback(id: string): string { return `${JSONP_HOME}.${id}.finished`; }\n\n  exposeConnection(id: string, connection: any) {\n    const connections = _getJsonpConnections();\n    connections[id] = connection;\n  }\n\n  removeConnection(id: string) {\n    const connections = _getJsonpConnections();\n    connections[id] = null;\n  }\n\n  // Attach the <script> element to the DOM\n  send(node: any) { document.body.appendChild(<Node>(node)); }\n\n  // Remove <script> element from the DOM\n  cleanup(node: any) {\n    if (node.parentNode) {\n      node.parentNode.removeChild(<Node>(node));\n    }\n  }\n}\n"],"sourceRoot":""}