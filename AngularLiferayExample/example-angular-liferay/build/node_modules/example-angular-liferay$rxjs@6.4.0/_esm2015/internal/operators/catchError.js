Liferay.Loader.define('example-angular-liferay$rxjs@6.4.0/_esm2015/internal/operators/catchError', ['module', 'exports', 'require'], function (module, exports, require) {
    var define = undefined;
    import { OuterSubscriber } from '../OuterSubscriber';
    import { InnerSubscriber } from '../InnerSubscriber';
    import { subscribeToResult } from '../util/subscribeToResult';
    export function catchError(selector) {
        return function catchErrorOperatorFunction(source) {
            const operator = new CatchOperator(selector);
            const caught = source.lift(operator);
            return operator.caught = caught;
        };
    }
    class CatchOperator {
        constructor(selector) {
            this.selector = selector;
        }
        call(subscriber, source) {
            return source.subscribe(new CatchSubscriber(subscriber, this.selector, this.caught));
        }
    }
    class CatchSubscriber extends OuterSubscriber {
        constructor(destination, selector, caught) {
            super(destination);
            this.selector = selector;
            this.caught = caught;
        }
        error(err) {
            if (!this.isStopped) {
                let result;
                try {
                    result = this.selector(err, this.caught);
                } catch (err2) {
                    super.error(err2);
                    return;
                }
                this._unsubscribeAndRecycle();
                const innerSubscriber = new InnerSubscriber(this, undefined, undefined);
                this.add(innerSubscriber);
                subscribeToResult(this, result, undefined, undefined, innerSubscriber);
            }
        }
    }
    //# sourceMappingURL=catchError.js.map
});
//# sourceMappingURL=catchError.js.map