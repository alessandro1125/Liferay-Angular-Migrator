Liferay.Loader.define('example-angular-liferay$rxjs@6.4.0/_esm5/internal/observable/fromIterable', ['module', 'exports', 'require'], function (module, exports, require) {
    var define = undefined;
    /** PURE_IMPORTS_START _Observable,_Subscription,_symbol_iterator,_util_subscribeToIterable PURE_IMPORTS_END */
    import { Observable } from '../Observable';
    import { Subscription } from '../Subscription';
    import { iterator as Symbol_iterator } from '../symbol/iterator';
    import { subscribeToIterable } from '../util/subscribeToIterable';
    export function fromIterable(input, scheduler) {
        if (!input) {
            throw new Error('Iterable cannot be null');
        }
        if (!scheduler) {
            return new Observable(subscribeToIterable(input));
        } else {
            return new Observable(function (subscriber) {
                var sub = new Subscription();
                var iterator;
                sub.add(function () {
                    if (iterator && typeof iterator.return === 'function') {
                        iterator.return();
                    }
                });
                sub.add(scheduler.schedule(function () {
                    iterator = input[Symbol_iterator]();
                    sub.add(scheduler.schedule(function () {
                        if (subscriber.closed) {
                            return;
                        }
                        var value;
                        var done;
                        try {
                            var result = iterator.next();
                            value = result.value;
                            done = result.done;
                        } catch (err) {
                            subscriber.error(err);
                            return;
                        }
                        if (done) {
                            subscriber.complete();
                        } else {
                            subscriber.next(value);
                            this.schedule();
                        }
                    }));
                }));
                return sub;
            });
        }
    }
    //# sourceMappingURL=fromIterable.js.map
});
//# sourceMappingURL=fromIterable.js.map