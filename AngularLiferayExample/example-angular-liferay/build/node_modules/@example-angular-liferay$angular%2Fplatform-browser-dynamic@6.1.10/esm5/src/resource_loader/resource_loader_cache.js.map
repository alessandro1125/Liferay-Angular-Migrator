{"version":3,"sources":["../../../../../../../../../../packages/platform-browser-dynamic/src/resource_loader/resource_loader_cache.ts"],"names":[],"mappings":";;;;;;;;;;AAQA,aAAQ,cAAR,QAA6B,mBAA7B;AACA,aAAQ,WAAW,MAAnB,QAAgC,eAAhC;AAEA;;;;;;;AAOA,QAAA,uBAAA,aAAA,UAAA,MAAA,EAAA;AAA0C,gBAAA,SAAA,CAAA,oBAAA,EAAA,MAAA;AAGxC,iBAAA,oBAAA,GAAA;AAAA,gBAAA,QACE,OAAA,IAAA,CAAA,IAAA,KAAO,IADT;AAEE,kBAAK,MAAL,GAAoB,OAAQ,cAA5B;AACA,gBAAI,MAAK,MAAL,IAAe,IAAnB,EAAyB;AACvB,sBAAM,IAAI,KAAJ,CAAU,uEAAV,CAAN;AACD;;AACF;AAED,6BAAA,SAAA,CAAA,GAAA,GAAA,UAAI,GAAJ,EAAe;AACb,gBAAI,KAAK,MAAL,CAAY,cAAZ,CAA2B,GAA3B,CAAJ,EAAqC;AACnC,uBAAO,QAAQ,OAAR,CAAgB,KAAK,MAAL,CAAY,GAAZ,CAAhB,CAAP;AACD,aAFD,MAEO;AACL,uBAAqB,QAAQ,MAAR,CACjB,4DAA4D,GAD3C,CAArB;AAED;AACF,SAPD;AAQF,eAAA,oBAAA;AAAC,KAnBD,CAA0C,cAA1C,CAAA","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ResourceLoader} from '@angular/compiler';\nimport {Éµglobal as global} from '@angular/core';\n\n/**\n * An implementation of ResourceLoader that uses a template cache to avoid doing an actual\n * ResourceLoader.\n *\n * The template cache needs to be built and loaded into window.$templateCache\n * via a separate mechanism.\n */\nexport class CachedResourceLoader extends ResourceLoader {\n  private _cache: {[url: string]: string};\n\n  constructor() {\n    super();\n    this._cache = (<any>global).$templateCache;\n    if (this._cache == null) {\n      throw new Error('CachedResourceLoader: Template cache was not found in $templateCache.');\n    }\n  }\n\n  get(url: string): Promise<string> {\n    if (this._cache.hasOwnProperty(url)) {\n      return Promise.resolve(this._cache[url]);\n    } else {\n      return <Promise<any>>Promise.reject(\n          'CachedResourceLoader: Did not find cached template for ' + url);\n    }\n  }\n}\n"],"sourceRoot":""}