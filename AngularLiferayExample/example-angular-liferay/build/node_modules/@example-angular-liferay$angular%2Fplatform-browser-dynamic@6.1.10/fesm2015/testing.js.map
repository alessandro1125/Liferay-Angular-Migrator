{"version":3,"sources":["testing.js"],"names":["Inject","Injectable","ɵstringify","Component","Directive","NgModule","Pipe","COMPILER_OPTIONS","CompilerFactory","Injector","createPlatformFactory","TestComponentRenderer","ɵTestingCompilerFactory","DOCUMENT","ɵgetDOM","CompileReflector","DirectiveResolver","ERROR_COMPONENT_TYPE","NgModuleResolver","PipeResolver","MockDirectiveResolver","MockNgModuleResolver","MockPipeResolver","ɵplatformCoreDynamic","ɵINTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS","BrowserTestingModule","DOMTestComponentRenderer","constructor","_doc","insertRootElement","rootElId","rootEl","firstChild","content","createTemplate","oldRoots","querySelectorAll","i","length","remove","appendChild","body","decorators","type","ctorParameters","undefined","args","_nextReferenceId","MetadataOverrider","_references","Map","overrideMetadata","metadataClass","oldMetadata","override","props","_valueProps","forEach","prop","set","add","Error","setMetadata","removeMetadata","addMetadata","metadata","references","removeObjects","Set","removeValue","Array","value","_propHashKey","propValue","filter","has","addValue","concat","propName","replacer","key","_serializeReference","JSON","stringify","ref","id","get","obj","Object","keys","startsWith","push","proto","getPrototypeOf","protoProp","desc","getOwnPropertyDescriptor","COMPILER_PROVIDERS","provide","deps","useExisting","TestingCompilerFactoryImpl","_injector","_compilerFactory","createTestingCompiler","options","compiler","createCompiler","TestingCompilerImpl","injector","_compiler","_directiveResolver","_pipeResolver","_moduleResolver","_overrider","compileModuleSync","moduleType","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","getComponentFactory","component","checkOverrideAllowed","hasAotSummary","overrideModule","ngModule","resolve","setNgModule","clearCacheFor","overrideDirective","directive","setDirective","overrideComponent","overridePipe","pipe","setPipe","loadAotSummaries","summaries","clearCache","getComponentFromError","error","getModuleId","platformCoreDynamicTesting","useValue","providers","multi","useClass","platformBrowserDynamicTesting","BrowserDynamicTestingModule","exports","ɵangular_packages_platform_browser_dynamic_testing_testing_a","ɵangular_packages_platform_browser_dynamic_testing_testing_b","ɵDOMTestComponentRenderer","ɵplatformCoreDynamicTesting"],"mappings":"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","file":"testing.js","sourcesContent":["/**\n * @license Angular v6.1.10\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\nimport { Inject, Injectable, ɵstringify, Component, Directive, NgModule, Pipe, COMPILER_OPTIONS, CompilerFactory, Injector, createPlatformFactory } from '@angular/core';\nimport { TestComponentRenderer, ɵTestingCompilerFactory } from '@angular/core/testing';\nimport { DOCUMENT, ɵgetDOM } from '@angular/platform-browser';\nimport { CompileReflector, DirectiveResolver, ERROR_COMPONENT_TYPE, NgModuleResolver, PipeResolver } from '@angular/compiler';\nimport { MockDirectiveResolver, MockNgModuleResolver, MockPipeResolver } from '@angular/compiler/testing';\nimport { ɵplatformCoreDynamic, ɵINTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS } from '@angular/platform-browser-dynamic';\nimport { BrowserTestingModule } from '@angular/platform-browser/testing';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * A DOM based implementation of the TestComponentRenderer.\n */\nclass DOMTestComponentRenderer extends TestComponentRenderer {\n    /**\n     * @param {?} _doc\n     */\n    constructor(_doc /** TODO #9100 */) {\n        super();\n        this._doc = _doc;\n    }\n    /**\n     * @param {?} rootElId\n     * @return {?}\n     */\n    insertRootElement(rootElId) {\n        /** @type {?} */\n        const rootEl = /** @type {?} */ (ɵgetDOM().firstChild(ɵgetDOM().content(ɵgetDOM().createTemplate(`<div id=\"${rootElId}\"></div>`))));\n        /** @type {?} */\n        const oldRoots = ɵgetDOM().querySelectorAll(this._doc, '[id^=root]');\n        for (let i = 0; i < oldRoots.length; i++) {\n            ɵgetDOM().remove(oldRoots[i]);\n        }\n        ɵgetDOM().appendChild(this._doc.body, rootEl);\n    }\n}\nDOMTestComponentRenderer.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nDOMTestComponentRenderer.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet _nextReferenceId = 0;\nclass MetadataOverrider {\n    constructor() {\n        this._references = new Map();\n    }\n    /**\n     * Creates a new instance for the given metadata class\n     * based on an old instance and overrides.\n     * @template C, T\n     * @param {?} metadataClass\n     * @param {?} oldMetadata\n     * @param {?} override\n     * @return {?}\n     */\n    overrideMetadata(metadataClass, oldMetadata, override) {\n        /** @type {?} */\n        const props = {};\n        if (oldMetadata) {\n            _valueProps(oldMetadata).forEach((prop) => props[prop] = (/** @type {?} */ (oldMetadata))[prop]);\n        }\n        if (override.set) {\n            if (override.remove || override.add) {\n                throw new Error(`Cannot set and add/remove ${ɵstringify(metadataClass)} at the same time!`);\n            }\n            setMetadata(props, override.set);\n        }\n        if (override.remove) {\n            removeMetadata(props, override.remove, this._references);\n        }\n        if (override.add) {\n            addMetadata(props, override.add);\n        }\n        return new metadataClass(/** @type {?} */ (props));\n    }\n}\n/**\n * @param {?} metadata\n * @param {?} remove\n * @param {?} references\n * @return {?}\n */\nfunction removeMetadata(metadata, remove, references) {\n    /** @type {?} */\n    const removeObjects = new Set();\n    for (const prop in remove) {\n        /** @type {?} */\n        const removeValue = remove[prop];\n        if (removeValue instanceof Array) {\n            removeValue.forEach((value) => { removeObjects.add(_propHashKey(prop, value, references)); });\n        }\n        else {\n            removeObjects.add(_propHashKey(prop, removeValue, references));\n        }\n    }\n    for (const prop in metadata) {\n        /** @type {?} */\n        const propValue = metadata[prop];\n        if (propValue instanceof Array) {\n            metadata[prop] = propValue.filter((value) => !removeObjects.has(_propHashKey(prop, value, references)));\n        }\n        else {\n            if (removeObjects.has(_propHashKey(prop, propValue, references))) {\n                metadata[prop] = undefined;\n            }\n        }\n    }\n}\n/**\n * @param {?} metadata\n * @param {?} add\n * @return {?}\n */\nfunction addMetadata(metadata, add) {\n    for (const prop in add) {\n        /** @type {?} */\n        const addValue = add[prop];\n        /** @type {?} */\n        const propValue = metadata[prop];\n        if (propValue != null && propValue instanceof Array) {\n            metadata[prop] = propValue.concat(addValue);\n        }\n        else {\n            metadata[prop] = addValue;\n        }\n    }\n}\n/**\n * @param {?} metadata\n * @param {?} set\n * @return {?}\n */\nfunction setMetadata(metadata, set) {\n    for (const prop in set) {\n        metadata[prop] = set[prop];\n    }\n}\n/**\n * @param {?} propName\n * @param {?} propValue\n * @param {?} references\n * @return {?}\n */\nfunction _propHashKey(propName, propValue, references) {\n    /** @type {?} */\n    const replacer = (key, value) => {\n        if (typeof value === 'function') {\n            value = _serializeReference(value, references);\n        }\n        return value;\n    };\n    return `${propName}:${JSON.stringify(propValue, replacer)}`;\n}\n/**\n * @param {?} ref\n * @param {?} references\n * @return {?}\n */\nfunction _serializeReference(ref, references) {\n    /** @type {?} */\n    let id = references.get(ref);\n    if (!id) {\n        id = `${ɵstringify(ref)}${_nextReferenceId++}`;\n        references.set(ref, id);\n    }\n    return id;\n}\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction _valueProps(obj) {\n    /** @type {?} */\n    const props = [];\n    // regular public props\n    Object.keys(obj).forEach((prop) => {\n        if (!prop.startsWith('_')) {\n            props.push(prop);\n        }\n    });\n    /** @type {?} */\n    let proto = obj;\n    while (proto = Object.getPrototypeOf(proto)) {\n        Object.keys(proto).forEach((protoProp) => {\n            /** @type {?} */\n            const desc = Object.getOwnPropertyDescriptor(proto, protoProp);\n            if (!protoProp.startsWith('_') && desc && 'get' in desc) {\n                props.push(protoProp);\n            }\n        });\n    }\n    return props;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst COMPILER_PROVIDERS = [\n    { provide: MockPipeResolver, deps: [CompileReflector] },\n    { provide: PipeResolver, useExisting: MockPipeResolver },\n    { provide: MockDirectiveResolver, deps: [CompileReflector] },\n    { provide: DirectiveResolver, useExisting: MockDirectiveResolver },\n    { provide: MockNgModuleResolver, deps: [CompileReflector] },\n    { provide: NgModuleResolver, useExisting: MockNgModuleResolver },\n];\nclass TestingCompilerFactoryImpl {\n    /**\n     * @param {?} _injector\n     * @param {?} _compilerFactory\n     */\n    constructor(_injector, _compilerFactory) {\n        this._injector = _injector;\n        this._compilerFactory = _compilerFactory;\n    }\n    /**\n     * @param {?} options\n     * @return {?}\n     */\n    createTestingCompiler(options) {\n        /** @type {?} */\n        const compiler = /** @type {?} */ (this._compilerFactory.createCompiler(options));\n        return new TestingCompilerImpl(compiler, compiler.injector.get(MockDirectiveResolver), compiler.injector.get(MockPipeResolver), compiler.injector.get(MockNgModuleResolver));\n    }\n}\nclass TestingCompilerImpl {\n    /**\n     * @param {?} _compiler\n     * @param {?} _directiveResolver\n     * @param {?} _pipeResolver\n     * @param {?} _moduleResolver\n     */\n    constructor(_compiler, _directiveResolver, _pipeResolver, _moduleResolver) {\n        this._compiler = _compiler;\n        this._directiveResolver = _directiveResolver;\n        this._pipeResolver = _pipeResolver;\n        this._moduleResolver = _moduleResolver;\n        this._overrider = new MetadataOverrider();\n    }\n    /**\n     * @return {?}\n     */\n    get injector() { return this._compiler.injector; }\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    compileModuleSync(moduleType) {\n        return this._compiler.compileModuleSync(moduleType);\n    }\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    compileModuleAsync(moduleType) {\n        return this._compiler.compileModuleAsync(moduleType);\n    }\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    compileModuleAndAllComponentsSync(moduleType) {\n        return this._compiler.compileModuleAndAllComponentsSync(moduleType);\n    }\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    compileModuleAndAllComponentsAsync(moduleType) {\n        return this._compiler.compileModuleAndAllComponentsAsync(moduleType);\n    }\n    /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    getComponentFactory(component) {\n        return this._compiler.getComponentFactory(component);\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    checkOverrideAllowed(type) {\n        if (this._compiler.hasAotSummary(type)) {\n            throw new Error(`${ɵstringify(type)} was AOT compiled, so its metadata cannot be changed.`);\n        }\n    }\n    /**\n     * @param {?} ngModule\n     * @param {?} override\n     * @return {?}\n     */\n    overrideModule(ngModule, override) {\n        this.checkOverrideAllowed(ngModule);\n        /** @type {?} */\n        const oldMetadata = this._moduleResolver.resolve(ngModule, false);\n        this._moduleResolver.setNgModule(ngModule, this._overrider.overrideMetadata(NgModule, oldMetadata, override));\n        this.clearCacheFor(ngModule);\n    }\n    /**\n     * @param {?} directive\n     * @param {?} override\n     * @return {?}\n     */\n    overrideDirective(directive, override) {\n        this.checkOverrideAllowed(directive);\n        /** @type {?} */\n        const oldMetadata = this._directiveResolver.resolve(directive, false);\n        this._directiveResolver.setDirective(directive, this._overrider.overrideMetadata(Directive, /** @type {?} */ ((oldMetadata)), override));\n        this.clearCacheFor(directive);\n    }\n    /**\n     * @param {?} component\n     * @param {?} override\n     * @return {?}\n     */\n    overrideComponent(component, override) {\n        this.checkOverrideAllowed(component);\n        /** @type {?} */\n        const oldMetadata = this._directiveResolver.resolve(component, false);\n        this._directiveResolver.setDirective(component, this._overrider.overrideMetadata(Component, /** @type {?} */ ((oldMetadata)), override));\n        this.clearCacheFor(component);\n    }\n    /**\n     * @param {?} pipe\n     * @param {?} override\n     * @return {?}\n     */\n    overridePipe(pipe, override) {\n        this.checkOverrideAllowed(pipe);\n        /** @type {?} */\n        const oldMetadata = this._pipeResolver.resolve(pipe, false);\n        this._pipeResolver.setPipe(pipe, this._overrider.overrideMetadata(Pipe, oldMetadata, override));\n        this.clearCacheFor(pipe);\n    }\n    /**\n     * @param {?} summaries\n     * @return {?}\n     */\n    loadAotSummaries(summaries) { this._compiler.loadAotSummaries(summaries); }\n    /**\n     * @return {?}\n     */\n    clearCache() { this._compiler.clearCache(); }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    clearCacheFor(type) { this._compiler.clearCacheFor(type); }\n    /**\n     * @param {?} error\n     * @return {?}\n     */\n    getComponentFromError(error) { return (/** @type {?} */ (error))[ERROR_COMPONENT_TYPE] || null; }\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    getModuleId(moduleType) {\n        return this._moduleResolver.resolve(moduleType, true).id;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Platform for dynamic tests\n *\n * \\@experimental\n  @type {?} */\nconst platformCoreDynamicTesting = createPlatformFactory(ɵplatformCoreDynamic, 'coreDynamicTesting', [\n    { provide: COMPILER_OPTIONS, useValue: { providers: COMPILER_PROVIDERS }, multi: true }, {\n        provide: ɵTestingCompilerFactory,\n        useClass: TestingCompilerFactoryImpl,\n        deps: [Injector, CompilerFactory]\n    }\n]);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst platformBrowserDynamicTesting = createPlatformFactory(platformCoreDynamicTesting, 'browserDynamicTesting', ɵINTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS);\n/**\n * NgModule for testing.\n *\n *\n */\nclass BrowserDynamicTestingModule {\n}\nBrowserDynamicTestingModule.decorators = [\n    { type: NgModule, args: [{\n                exports: [BrowserTestingModule],\n                providers: [\n                    { provide: TestComponentRenderer, useClass: DOMTestComponentRenderer },\n                ]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { COMPILER_PROVIDERS as ɵangular_packages_platform_browser_dynamic_testing_testing_a, TestingCompilerFactoryImpl as ɵangular_packages_platform_browser_dynamic_testing_testing_b, platformBrowserDynamicTesting, BrowserDynamicTestingModule, DOMTestComponentRenderer as ɵDOMTestComponentRenderer, platformCoreDynamicTesting as ɵplatformCoreDynamicTesting };\n//# sourceMappingURL=testing.js.map\n"]}