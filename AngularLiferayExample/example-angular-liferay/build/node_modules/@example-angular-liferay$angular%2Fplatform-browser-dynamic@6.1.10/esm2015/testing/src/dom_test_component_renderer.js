Liferay.Loader.define('@example-angular-liferay$angular/platform-browser-dynamic@6.1.10/esm2015/testing/src/dom_test_component_renderer', ['module', 'exports', 'require'], function (module, exports, require) {
    var define = undefined;
    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
     */
    /**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */
    import { Inject, Injectable } from '@angular/core';
    import { TestComponentRenderer } from '@angular/core/testing';
    import { DOCUMENT, ÉµgetDOM as getDOM } from '@angular/platform-browser';
    /**
     * A DOM based implementation of the TestComponentRenderer.
     */
    export class DOMTestComponentRenderer extends TestComponentRenderer {
        /**
         * @param {?} _doc
         */
        constructor(_doc /** TODO #9100 */) {
            super();
            this._doc = _doc;
        }
        /**
         * @param {?} rootElId
         * @return {?}
         */
        insertRootElement(rootElId) {
            /** @type {?} */
            const rootEl = /** @type {?} */getDOM().firstChild(getDOM().content(getDOM().createTemplate(`<div id="${rootElId}"></div>`)));
            /** @type {?} */
            const oldRoots = getDOM().querySelectorAll(this._doc, '[id^=root]');
            for (let i = 0; i < oldRoots.length; i++) {
                getDOM().remove(oldRoots[i]);
            }
            getDOM().appendChild(this._doc.body, rootEl);
        }
    }
    DOMTestComponentRenderer.decorators = [{ type: Injectable }];
    /** @nocollapse */
    DOMTestComponentRenderer.ctorParameters = () => [{ type: undefined, decorators: [{ type: Inject, args: [DOCUMENT] }] }];
    if (false) {
        /** @type {?} */
        DOMTestComponentRenderer.prototype._doc;
    }
});
//# sourceMappingURL=dom_test_component_renderer.js.map