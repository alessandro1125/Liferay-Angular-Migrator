{"version":3,"sources":["../../../../../../../packages/platform-browser-dynamic/src/resource_loader/resource_loader_impl.ts"],"names":[],"mappings":";;;;;;AAOA,aAAQ,cAAR,QAA6B,mBAA7B;AACA,aAAQ,UAAR,QAAyB,eAAzB;AAIA,WAAM,MAAA,kBAAA,SAAkC,cAAlC,CAAgD;;;;;AACpD,YAAI,GAAJ,EAAe;;AACb,gBAAI,OAAJ;;AACA,gBAAI,MAAJ;;AACA,kBAAM,UAAU,IAAI,OAAJ,CAAoB,CAAC,GAAD,EAAM,GAAN,KAAa;AAC/C,0BAAU,GAAV;AACA,yBAAS,GAAT;AACD,aAHe,CAAhB;;AAIA,kBAAM,MAAM,IAAI,cAAJ,EAAZ;AACA,gBAAI,IAAJ,CAAS,KAAT,EAAgB,GAAhB,EAAqB,IAArB;AACA,gBAAI,YAAJ,GAAmB,MAAnB;AAEA,gBAAI,MAAJ,GAAa,YAAA;;AAIX,sBAAM,WAAW,IAAI,QAAJ,IAAgB,IAAI,YAArC;;AAGA,oBAAI,SAAS,IAAI,MAAJ,KAAe,IAAf,GAAsB,GAAtB,GAA4B,IAAI,MAA7C;;;;AAKA,oBAAI,WAAW,CAAf,EAAkB;AAChB,6BAAS,WAAW,GAAX,GAAiB,CAA1B;AACD;AAED,oBAAI,OAAO,MAAP,IAAiB,UAAU,GAA/B,EAAoC;AAClC,4BAAQ,QAAR;AACD,iBAFD,MAEO;AACL,2BAAO,kBAAkB,GAAG,EAA5B;AACD;AACF,aArBD;AAuBA,gBAAI,OAAJ,GAAc,YAAA;AAAa,uBAAO,kBAAkB,GAAG,EAA5B;AAAkC,aAA7D;AAEA,gBAAI,IAAJ;AACA,mBAAO,OAAP;AACD;AAvCmD;6CADrD,U","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ResourceLoader} from '@angular/compiler';\nimport {Injectable} from '@angular/core';\n\n\n@Injectable()\nexport class ResourceLoaderImpl extends ResourceLoader {\n  get(url: string): Promise<string> {\n    let resolve: (result: any) => void;\n    let reject: (error: any) => void;\n    const promise = new Promise<string>((res, rej) => {\n      resolve = res;\n      reject = rej;\n    });\n    const xhr = new XMLHttpRequest();\n    xhr.open('GET', url, true);\n    xhr.responseType = 'text';\n\n    xhr.onload = function() {\n      // responseText is the old-school way of retrieving response (supported by IE8 & 9)\n      // response/responseType properties were introduced in ResourceLoader Level2 spec (supported\n      // by IE10)\n      const response = xhr.response || xhr.responseText;\n\n      // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\n      let status = xhr.status === 1223 ? 204 : xhr.status;\n\n      // fix status code when it is 0 (0 status is undocumented).\n      // Occurs when accessing file resources or on Android 4.1 stock browser\n      // while retrieving files from application cache.\n      if (status === 0) {\n        status = response ? 200 : 0;\n      }\n\n      if (200 <= status && status <= 300) {\n        resolve(response);\n      } else {\n        reject(`Failed to load ${url}`);\n      }\n    };\n\n    xhr.onerror = function() { reject(`Failed to load ${url}`); };\n\n    xhr.send();\n    return promise;\n  }\n}\n"],"sourceRoot":""}