{"version":3,"sources":["router.js"],"names":["Component","ɵisObservable","ɵisPromise","NgModuleRef","InjectionToken","NgModuleFactory","NgZone","isDevMode","ɵConsole","Attribute","Directive","ElementRef","HostBinding","HostListener","Input","Renderer2","ChangeDetectorRef","ContentChildren","ComponentFactoryResolver","EventEmitter","Output","ViewContainerRef","Compiler","Injectable","Injector","NgModuleFactoryLoader","ANALYZE_FOR_ENTRY_COMPONENTS","APP_BOOTSTRAP_LISTENER","APP_INITIALIZER","ApplicationRef","Inject","NgModule","NgProbeToken","Optional","SkipSelf","SystemJsNgModuleLoader","Version","from","of","EmptyError","Observable","BehaviorSubject","Subject","concatAll","every","last","map","mergeAll","catchError","first","mergeMap","concatMap","reduce","filter","LocationStrategy","APP_BASE_HREF","HashLocationStrategy","LOCATION_INITIALIZED","Location","PathLocationStrategy","PlatformLocation","ViewportScroller","ɵgetDOM","RouterEvent","constructor","id","url","NavigationStart","navigationTrigger","restoredState","toString","NavigationEnd","urlAfterRedirects","NavigationCancel","reason","NavigationError","error","RoutesRecognized","state","GuardsCheckStart","GuardsCheckEnd","shouldActivate","ResolveStart","ResolveEnd","RouteConfigLoadStart","route","path","RouteConfigLoadEnd","ChildActivationStart","snapshot","routeConfig","ChildActivationEnd","ActivationStart","ActivationEnd","Scroll","routerEvent","position","anchor","pos","EmptyOutletComponent","decorators","type","args","template","PRIMARY_OUTLET","ParamsAsMap","params","has","name","hasOwnProperty","get","v","Array","isArray","getAll","keys","Object","convertToParamMap","NAVIGATION_CANCELING_ERROR","navigationCancelingError","message","Error","isNavigationCancelingError","defaultUrlMatcher","segments","segmentGroup","parts","split","length","pathMatch","hasChildren","posParams","index","part","segment","isParameter","startsWith","substring","consumed","slice","LoadedRouterConfig","routes","module","validateConfig","config","parentPath","i","fullPath","getFullPath","validateNode","component","children","loadChildren","outlet","redirectTo","matcher","charAt","exp","currentRoute","standardizeConfig","r","c","assign","shallowEqualArrays","a","b","shallowEqual","k1","k2","key","flatten","arr","prototype","concat","apply","last$1","forEach","map$$1","callback","prop","waitForMap","obj","fn","waitHead","waitTail","res","k","mapped","pipe","push","andObservables","observables","result","wrapIntoObservable","value","Promise","resolve","createEmptyUrlTree","UrlTree","UrlSegmentGroup","containsTree","container","containee","exact","equalQueryParams","queryParams","equalSegmentGroups","root","containsQueryParams","containsSegmentGroup","equalPath","numberOfChildren","containsSegmentGroupHelper","containeePaths","current","next","fragment","queryParamMap","_queryParamMap","DEFAULT_SERIALIZER","serialize","parent","serializePaths","UrlSegment","parameters","parameterMap","_parameterMap","serializePath","equalSegments","as","bs","mapChildrenIntoArray","child","childOutlet","UrlSerializer","DefaultUrlSerializer","parse","p","UrlParser","parseRootSegment","parseQueryParams","parseFragment","tree","serializeSegment","query","serializeQueryParams","encodeUriFragment","join","primary","encodeUriString","s","encodeURIComponent","replace","encodeUriQuery","encodeURI","encodeUriSegment","decode","decodeURIComponent","decodeQuery","serializeMatrixParams","strParams","SEGMENT_RE","matchSegments","str","match","QUERY_PARAM_RE","matchQueryParams","QUERY_PARAM_VALUE_RE","matchUrlQueryParamValue","remaining","consumeOptional","peekStartsWith","parseChildren","parseQueryParam","parseSegment","capture","parseParens","parseMatrixParams","parseParam","valueMatch","decodedKey","decodedVal","currentVal","allowPrimary","outletName","undefined","indexOf","substr","NoMatch","AbsoluteRedirect","urlTree","noMatch","obs","absoluteRedirect","newTree","namedOutletsRedirect","canLoadFails","applyRedirects","moduleInjector","configLoader","urlSerializer","ApplyRedirects","allowRedirects","ngModule","expanded$","expandSegmentGroup","urlTrees$","rootSegmentGroup","createUrlTree","e","noMatchError","mapped$","rootCandidate","expandChildren","expandSegment","expandSegmentAgainstRoute","_","noLeftoversInUrl","paths","getOutlet","matchSegmentAgainstRoute","expandSegmentAgainstRouteUsingRedirect","expandWildCardWithParamsAgainstRouteUsingRedirect","expandRegularSegmentAgainstRouteUsingRedirect","applyRedirectCommands","lineralizeSegments","newSegments","group","matched","consumedSegments","lastChild","positionalParamSegments","rawSegmentGroup","load","injector","cfg","_loadedConfig","rawSlicedSegments","childConfig$","getChildConfig","routerConfig","childModule","childConfig","slicedSegments","cs","runCanLoadGuard","shouldLoad","applyRedirectCreatreUrlTree","newRoot","createSegmentGroup","createQueryParams","redirectToParams","actualParams","copySourceValue","sourceName","updatedSegments","createSegments","redirectToSegments","actualSegments","findPosParam","findOrReturn","redirectToUrlSegment","idx","splice","canLoad","injectionToken","guard","containsEmptyPathRedirectsWithNamedOutlets","createChildrenForEmptySegments","mergeTrivialChildren","containsEmptyPathRedirects","addEmptySegmentsToChildrenIfNeeded","isEmptyPathRedirect","primarySegmentGroup","some","Tree","_root","t","pathFromRoot","n","findNode","firstChild","siblings","findPath","cc","node","unshift","TreeNode","nodeChildrenAsMap","RouterState","setRouterState","createEmptyState","rootComponent","createEmptyStateSnapshot","emptyUrl","emptyParams","emptyData","emptyQueryParams","activated","ActivatedRoute","ActivatedRouteSnapshot","RouterStateSnapshot","data","futureSnapshot","_futureSnapshot","_routerState","paramMap","_paramMap","inheritedParamsDataResolve","paramsInheritanceStrategy","inheritingStartingFrom","flattenInherited","curr","_resolvedData","urlSegment","lastPathIndex","_urlSegment","_lastPathIndex","_resolve","serializeNode","advanceActivatedRoute","currentSnapshot","nextSnapshot","equalParamsAndUrlSegments","equalUrlParams","parentsMismatch","createRouterState","routeReuseStrategy","prevState","createNode","shouldReuseRoute","createOrReuseChildren","detachedRouteHandle","retrieve","setFutureSnapshotsOfActivatedRoutes","createActivatedRoute","commands","nav","computeNavigation","toRoot","startingPosition","findStartingPosition","processChildren","updateSegmentGroupChildren","updateSegmentGroup","isMatrixParams","command","outlets","segmentPath","oldSegmentGroup","newSegmentGroup","qp","replaceSegment","oldSegment","newSegment","Navigation","isAbsolute","numberOfDoubleDots","cmdWithOutlet","find","cmd","cmdIdx","urlPart","partIndex","Position","modifier","createPositionApplyingDoubleDots","g","ci","dd","getPath","getOutlets","startIndex","m","prefixedWith","slicedCommands","commandIndex","pathIndex","createNewSegmentGroup","currentCommandIndex","currentPathIndex","compare","createNewSegmentChildren","stringify","CanActivate","CanDeactivate","PreActivation","future","forwardEvent","canActivateChecks","canDeactivateChecks","initialize","parentContexts","futureRoot","currRoot","setupChildRouteGuards","checkGuards","isDeactivating","isActivating","canDeactivate$","runCanDeactivateChecks","canDeactivate","runCanActivateChecks","resolveData","check","runResolve","__","futureNode","currNode","contexts","futurePath","prevChildren","setupRouteGuards","deactivateRouteAndItsChildren","getContext","context","shouldRunGuardsAndResolvers","runGuardsAndResolvers","mode","childName","isActivated","runCanDeactivate","fireChildActivationStart","fireActivationStart","runCanActivateChild","runCanActivate","canActivate","getToken","observable","canActivateChildGuards","reverse","extractCanActivateChild","d","guards","canActivateChild","resolveNode","resolvedData","getResolver","runningResolvers$","resolver","token","closestLoadedConfig","NoMatch$1","recognize","rootComponentType","relativeLinkResolution","Recognizer","split$1","processSegmentGroup","freeze","rootNode","routeState","inheritParamsAndData","routeNode","processSegment","checkOutletNameUniqueness","sortActivatedRouteSnapshots","processSegmentAgainstRoute","rawSegment","getData","getSourceSegmentGroup","getPathIndexShift","getResolve","match$1","nodes","sort","localeCompare","names","routeWithSameOutletName","_sourceSegment","_segmentIndexShift","containsEmptyPathMatchesWithNamedOutlets","createChildrenForEmptyPaths","containsEmptyPathMatches","addEmptyPathsToChildrenIfNeeded","emptyPathMatch","getOutlet$1","primarySegment","RouteReuseStrategy","DefaultRouteReuseStrategy","shouldDetach","store","detachedTree","shouldAttach","ROUTES","RouterConfigLoader","loader","compiler","onLoadStartListener","onLoadEndListener","parentInjector","moduleFactory$","loadModuleFactory","factory","create","compileModuleAsync","UrlHandlingStrategy","DefaultUrlHandlingStrategy","shouldProcessUrl","extract","merge","newUrlPart","wholeUrl","defaultErrorHandler","defaultMalformedUriErrorHandler","defaultRouterHook","runExtras","Router","rootContexts","location","navigations","navigationId","isNgZoneEnabled","events","errorHandler","malformedUriErrorHandler","navigated","lastSuccessfulId","hooks","beforePreactivation","afterPreactivation","urlHandlingStrategy","onSameUrlNavigation","urlUpdateStrategy","onLoadStart","triggerEvent","onLoadEnd","console","ngZone","resetConfig","currentUrlTree","rawUrlTree","routerState","processNavigations","resetRootComponentType","initialNavigation","setUpLocationChangeListener","navigateByUrl","replaceUrl","locationSubscription","subscribe","change","parseUrl","source","setTimeout","scheduleNavigation","serializeUrl","event","ngOnDestroy","dispose","unsubscribe","navigationExtras","relativeTo","preserveQueryParams","queryParamsHandling","preserveFragment","warn","f","q","removeEmptyProps","extras","skipLocationChange","isInAngularZone","mergedTree","navigate","validateCommands","isActive","executeScheduledNavigation","promise","catch","rawUrl","lastNavigation","reject","rej","urlTransition","setBrowserUrl","then","runNavigate","precreatedState","resolvePromise","rejectPromise","urlAndSnapshot$","redirectsApplied$","appliedUrl","beforePreactivationDone$","appliedUrlTree","preActivation","preactivationSetup$","evt","preactivationCheckGuards$","preactivationResolveData$","preactivationDone$","routerState$","activateRoutes","storedState","storedUrl","navigationIsSuccessful","ActivateRoutes","activate","resetUrlToCurrentUrlTree","resetStateAndUrl","ee","isCurrentPathEqualTo","replaceState","go","futureState","currState","deactivateChildRoutes","activateChildRoutes","futureChild","childOutletName","deactivateRoutes","parentContext","detachAndStoreRouteSubtree","deactivateRouteAndOutlet","componentRef","detach","onOutletDeactivated","deactivate","getOrCreateContext","stored","onOutletReAttached","attachRef","attach","advanceActivatedRouteNodeAndItsChildren","parentLoadedConfig","cmpFactoryResolver","componentFactoryResolver","activateWith","RouterLink","router","tabIndex","renderer","el","setAttribute","nativeElement","routerLink","preserve","onClick","attrBoolValue","selector","ctorParameters","String","propDecorators","RouterLinkWithHref","locationStrategy","subscription","updateTargetUrlAndHref","ngOnChanges","changes","button","ctrlKey","metaKey","shiftKey","target","href","prepareExternalUrl","RouterLinkActive","element","cdr","classes","routerLinkActiveOptions","update","ngAfterContentInit","links","linksWithHrefs","routerLinkActive","hasActiveLinks","addClass","removeClass","isLinkActive","link","exportAs","descendants","OutletContext","ChildrenOutletContexts","Map","onChildOutletCreated","set","onChildOutletDestroyed","RouterOutlet","changeDetector","_activatedRoute","activateEvents","deactivateEvents","ngOnInit","instance","activatedRoute","activatedRouteData","cmp","ref","insert","hostView","destroy","emit","resolveComponentFactory","childContexts","OutletInjector","createComponent","markForCheck","notFoundValue","PreloadingStrategy","PreloadAllModules","preload","NoPreloading","RouterPreloader","moduleLoader","preloadingStrategy","onStartLoad","onEndLoad","setUpPreloading","processRoutes","preloadConfig","loaded$","RouterScroller","viewportScroller","options","lastId","lastSource","restoredId","scrollPositionRestoration","anchorScrolling","init","setHistoryScrollRestoration","routerEventsSubscription","createScrollEvents","scrollEventsSubscription","consumeScrollEvents","getScrollPosition","scheduleScrollEvent","scrollToPosition","scrollToAnchor","ROUTER_DIRECTIVES","ROUTER_CONFIGURATION","ROUTER_FORROOT_GUARD","ROUTER_PROVIDERS","provide","useClass","useFactory","setupRouter","deps","rootRoute","useValue","enableTracing","routerNgProbeToken","RouterModule","forRoot","providers","provideRoutes","provideForRootGuard","provideLocationStrategy","createRouterScroller","useExisting","multi","provideRouterInitializer","forChild","declarations","exports","entryComponents","scrollOffset","setOffset","platformLocationStrategy","baseHref","useHash","opts","dom","logGroup","log","logGroupEnd","RouterInitializer","initNavigation","resultOfPreactivationDone","appInitializer","isLegacyDisabled","isLegacyEnabled","bootstrapListener","bootstrappedComponentRef","preloader","routerScroller","components","componentTypes","complete","getAppInitializer","bind","getBootstrapListener","ROUTER_INITIALIZER","VERSION","ɵangular_packages_router_router_a","ɵangular_packages_router_router_h","ɵangular_packages_router_router_c","ɵangular_packages_router_router_i","ɵangular_packages_router_router_j","ɵangular_packages_router_router_e","ɵangular_packages_router_router_d","ɵangular_packages_router_router_k","ɵangular_packages_router_router_g","ɵangular_packages_router_router_b","ɵangular_packages_router_router_f","ɵangular_packages_router_router_n","ɵangular_packages_router_router_l","ɵangular_packages_router_router_m","ɵEmptyOutletComponent","ɵROUTER_PROVIDERS","ɵflatten"],"mappings":"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","file":"router.js","sourcesContent":["/**\n * @license Angular v6.1.10\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\nimport { Component, ɵisObservable, ɵisPromise, NgModuleRef, InjectionToken, NgModuleFactory, NgZone, isDevMode, ɵConsole, Attribute, Directive, ElementRef, HostBinding, HostListener, Input, Renderer2, ChangeDetectorRef, ContentChildren, ComponentFactoryResolver, EventEmitter, Output, ViewContainerRef, Compiler, Injectable, Injector, NgModuleFactoryLoader, ANALYZE_FOR_ENTRY_COMPONENTS, APP_BOOTSTRAP_LISTENER, APP_INITIALIZER, ApplicationRef, Inject, NgModule, NgProbeToken, Optional, SkipSelf, SystemJsNgModuleLoader, Version } from '@angular/core';\nimport { from, of, EmptyError, Observable, BehaviorSubject, Subject } from 'rxjs';\nimport { concatAll, every, last, map, mergeAll, catchError, first, mergeMap, concatMap, reduce, filter } from 'rxjs/operators';\nimport { LocationStrategy, APP_BASE_HREF, HashLocationStrategy, LOCATION_INITIALIZED, Location, PathLocationStrategy, PlatformLocation, ViewportScroller } from '@angular/common';\nimport { ɵgetDOM } from '@angular/platform-browser';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * \\@description\n *\n * Base for events the Router goes through, as opposed to events tied to a specific\n * Route. `RouterEvent`s will only be fired one time for any given navigation.\n *\n * Example:\n *\n * ```\n * class MyService {\n *   constructor(public router: Router, logger: Logger) {\n *     router.events.filter(e => e instanceof RouterEvent).subscribe(e => {\n *       logger.log(e.id, e.url);\n *     });\n *   }\n * }\n * ```\n *\n * \\@experimental\n */\nclass RouterEvent {\n    /**\n     * @param {?} id\n     * @param {?} url\n     */\n    constructor(id, url) {\n        this.id = id;\n        this.url = url;\n    }\n}\n/**\n * \\@description\n *\n * Represents an event triggered when a navigation starts.\n *\n *\n */\nclass NavigationStart extends RouterEvent {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?=} navigationTrigger\n     * @param {?=} restoredState\n     */\n    constructor(/** @docsNotRequired */\n    /** @docsNotRequired */\n    id, /** @docsNotRequired */\n    /** @docsNotRequired */\n    url, /** @docsNotRequired */\n    /** @docsNotRequired */\n    navigationTrigger = 'imperative', /** @docsNotRequired */\n    /** @docsNotRequired */\n    restoredState = null) {\n        super(id, url);\n        this.navigationTrigger = navigationTrigger;\n        this.restoredState = restoredState;\n    }\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    toString() { return `NavigationStart(id: ${this.id}, url: '${this.url}')`; }\n}\n/**\n * \\@description\n *\n * Represents an event triggered when a navigation ends successfully.\n *\n *\n */\nclass NavigationEnd extends RouterEvent {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} urlAfterRedirects\n     */\n    constructor(/** @docsNotRequired */\n    /** @docsNotRequired */\n    id, /** @docsNotRequired */\n    /** @docsNotRequired */\n    url, urlAfterRedirects) {\n        super(id, url);\n        this.urlAfterRedirects = urlAfterRedirects;\n    }\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    toString() {\n        return `NavigationEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}')`;\n    }\n}\n/**\n * \\@description\n *\n * Represents an event triggered when a navigation is canceled.\n *\n *\n */\nclass NavigationCancel extends RouterEvent {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} reason\n     */\n    constructor(/** @docsNotRequired */\n    /** @docsNotRequired */\n    id, /** @docsNotRequired */\n    /** @docsNotRequired */\n    url, reason) {\n        super(id, url);\n        this.reason = reason;\n    }\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    toString() { return `NavigationCancel(id: ${this.id}, url: '${this.url}')`; }\n}\n/**\n * \\@description\n *\n * Represents an event triggered when a navigation fails due to an unexpected error.\n *\n *\n */\nclass NavigationError extends RouterEvent {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} error\n     */\n    constructor(/** @docsNotRequired */\n    /** @docsNotRequired */\n    id, /** @docsNotRequired */\n    /** @docsNotRequired */\n    url, error) {\n        super(id, url);\n        this.error = error;\n    }\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    toString() {\n        return `NavigationError(id: ${this.id}, url: '${this.url}', error: ${this.error})`;\n    }\n}\n/**\n * \\@description\n *\n * Represents an event triggered when routes are recognized.\n *\n *\n */\nclass RoutesRecognized extends RouterEvent {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} urlAfterRedirects\n     * @param {?} state\n     */\n    constructor(/** @docsNotRequired */\n    /** @docsNotRequired */\n    id, /** @docsNotRequired */\n    /** @docsNotRequired */\n    url, urlAfterRedirects, state) {\n        super(id, url);\n        this.urlAfterRedirects = urlAfterRedirects;\n        this.state = state;\n    }\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    toString() {\n        return `RoutesRecognized(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;\n    }\n}\n/**\n * \\@description\n *\n * Represents the start of the Guard phase of routing.\n *\n * \\@experimental\n */\nclass GuardsCheckStart extends RouterEvent {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} urlAfterRedirects\n     * @param {?} state\n     */\n    constructor(/** @docsNotRequired */\n    /** @docsNotRequired */\n    id, /** @docsNotRequired */\n    /** @docsNotRequired */\n    url, urlAfterRedirects, state) {\n        super(id, url);\n        this.urlAfterRedirects = urlAfterRedirects;\n        this.state = state;\n    }\n    /**\n     * @return {?}\n     */\n    toString() {\n        return `GuardsCheckStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;\n    }\n}\n/**\n * \\@description\n *\n * Represents the end of the Guard phase of routing.\n *\n * \\@experimental\n */\nclass GuardsCheckEnd extends RouterEvent {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} urlAfterRedirects\n     * @param {?} state\n     * @param {?} shouldActivate\n     */\n    constructor(/** @docsNotRequired */\n    /** @docsNotRequired */\n    id, /** @docsNotRequired */\n    /** @docsNotRequired */\n    url, urlAfterRedirects, state, shouldActivate) {\n        super(id, url);\n        this.urlAfterRedirects = urlAfterRedirects;\n        this.state = state;\n        this.shouldActivate = shouldActivate;\n    }\n    /**\n     * @return {?}\n     */\n    toString() {\n        return `GuardsCheckEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state}, shouldActivate: ${this.shouldActivate})`;\n    }\n}\n/**\n * \\@description\n *\n * Represents the start of the Resolve phase of routing. The timing of this\n * event may change, thus it's experimental. In the current iteration it will run\n * in the \"resolve\" phase whether there's things to resolve or not. In the future this\n * behavior may change to only run when there are things to be resolved.\n *\n * \\@experimental\n */\nclass ResolveStart extends RouterEvent {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} urlAfterRedirects\n     * @param {?} state\n     */\n    constructor(/** @docsNotRequired */\n    /** @docsNotRequired */\n    id, /** @docsNotRequired */\n    /** @docsNotRequired */\n    url, urlAfterRedirects, state) {\n        super(id, url);\n        this.urlAfterRedirects = urlAfterRedirects;\n        this.state = state;\n    }\n    /**\n     * @return {?}\n     */\n    toString() {\n        return `ResolveStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;\n    }\n}\n/**\n * \\@description\n *\n * Represents the end of the Resolve phase of routing. See note on\n * `ResolveStart` for use of this experimental API.\n *\n * \\@experimental\n */\nclass ResolveEnd extends RouterEvent {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} urlAfterRedirects\n     * @param {?} state\n     */\n    constructor(/** @docsNotRequired */\n    /** @docsNotRequired */\n    id, /** @docsNotRequired */\n    /** @docsNotRequired */\n    url, urlAfterRedirects, state) {\n        super(id, url);\n        this.urlAfterRedirects = urlAfterRedirects;\n        this.state = state;\n    }\n    /**\n     * @return {?}\n     */\n    toString() {\n        return `ResolveEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;\n    }\n}\n/**\n * \\@description\n *\n * Represents an event triggered before lazy loading a route config.\n *\n * \\@experimental\n */\nclass RouteConfigLoadStart {\n    /**\n     * @param {?} route\n     */\n    constructor(route) {\n        this.route = route;\n    }\n    /**\n     * @return {?}\n     */\n    toString() { return `RouteConfigLoadStart(path: ${this.route.path})`; }\n}\n/**\n * \\@description\n *\n * Represents an event triggered when a route has been lazy loaded.\n *\n * \\@experimental\n */\nclass RouteConfigLoadEnd {\n    /**\n     * @param {?} route\n     */\n    constructor(route) {\n        this.route = route;\n    }\n    /**\n     * @return {?}\n     */\n    toString() { return `RouteConfigLoadEnd(path: ${this.route.path})`; }\n}\n/**\n * \\@description\n *\n * Represents the start of end of the Resolve phase of routing. See note on\n * `ChildActivationEnd` for use of this experimental API.\n *\n * \\@experimental\n */\nclass ChildActivationStart {\n    /**\n     * @param {?} snapshot\n     */\n    constructor(snapshot) {\n        this.snapshot = snapshot;\n    }\n    /**\n     * @return {?}\n     */\n    toString() {\n        /** @type {?} */\n        const path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n        return `ChildActivationStart(path: '${path}')`;\n    }\n}\n/**\n * \\@description\n *\n * Represents the start of end of the Resolve phase of routing. See note on\n * `ChildActivationStart` for use of this experimental API.\n *\n * \\@experimental\n */\nclass ChildActivationEnd {\n    /**\n     * @param {?} snapshot\n     */\n    constructor(snapshot) {\n        this.snapshot = snapshot;\n    }\n    /**\n     * @return {?}\n     */\n    toString() {\n        /** @type {?} */\n        const path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n        return `ChildActivationEnd(path: '${path}')`;\n    }\n}\n/**\n * \\@description\n *\n * Represents the start of end of the Resolve phase of routing. See note on\n * `ActivationEnd` for use of this experimental API.\n *\n * \\@experimental\n */\nclass ActivationStart {\n    /**\n     * @param {?} snapshot\n     */\n    constructor(snapshot) {\n        this.snapshot = snapshot;\n    }\n    /**\n     * @return {?}\n     */\n    toString() {\n        /** @type {?} */\n        const path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n        return `ActivationStart(path: '${path}')`;\n    }\n}\n/**\n * \\@description\n *\n * Represents the start of end of the Resolve phase of routing. See note on\n * `ActivationStart` for use of this experimental API.\n *\n * \\@experimental\n */\nclass ActivationEnd {\n    /**\n     * @param {?} snapshot\n     */\n    constructor(snapshot) {\n        this.snapshot = snapshot;\n    }\n    /**\n     * @return {?}\n     */\n    toString() {\n        /** @type {?} */\n        const path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n        return `ActivationEnd(path: '${path}')`;\n    }\n}\n/**\n * \\@description\n *\n * Represents a scrolling event.\n */\nclass Scroll {\n    /**\n     * @param {?} routerEvent\n     * @param {?} position\n     * @param {?} anchor\n     */\n    constructor(/** @docsNotRequired */\n    routerEvent, /** @docsNotRequired */\n    position, /** @docsNotRequired */\n    anchor) {\n        this.routerEvent = routerEvent;\n        this.position = position;\n        this.anchor = anchor;\n    }\n    /**\n     * @return {?}\n     */\n    toString() {\n        /** @type {?} */\n        const pos = this.position ? `${this.position[0]}, ${this.position[1]}` : null;\n        return `Scroll(anchor: '${this.anchor}', position: '${pos}')`;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * This component is used internally within the router to be a placeholder when an empty\n * router-outlet is needed. For example, with a config such as:\n *\n * `{path: 'parent', outlet: 'nav', children: [...]}`\n *\n * In order to render, there needs to be a component on this config, which will default\n * to this `EmptyOutletComponent`.\n */\nclass EmptyOutletComponent {\n}\nEmptyOutletComponent.decorators = [\n    { type: Component, args: [{ template: `<router-outlet></router-outlet>` }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** *\n * \\@description\n *\n * Name of the primary outlet.\n *\n *\n  @type {?} */\nconst PRIMARY_OUTLET = 'primary';\nclass ParamsAsMap {\n    /**\n     * @param {?} params\n     */\n    constructor(params) { this.params = params || {}; }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    has(name) { return this.params.hasOwnProperty(name); }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    get(name) {\n        if (this.has(name)) {\n            /** @type {?} */\n            const v = this.params[name];\n            return Array.isArray(v) ? v[0] : v;\n        }\n        return null;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    getAll(name) {\n        if (this.has(name)) {\n            /** @type {?} */\n            const v = this.params[name];\n            return Array.isArray(v) ? v : [v];\n        }\n        return [];\n    }\n    /**\n     * @return {?}\n     */\n    get keys() { return Object.keys(this.params); }\n}\n/**\n * Convert a `Params` instance to a `ParamMap`.\n *\n *\n * @param {?} params\n * @return {?}\n */\nfunction convertToParamMap(params) {\n    return new ParamsAsMap(params);\n}\n/** @type {?} */\nconst NAVIGATION_CANCELING_ERROR = 'ngNavigationCancelingError';\n/**\n * @param {?} message\n * @return {?}\n */\nfunction navigationCancelingError(message) {\n    /** @type {?} */\n    const error = Error('NavigationCancelingError: ' + message);\n    (/** @type {?} */ (error))[NAVIGATION_CANCELING_ERROR] = true;\n    return error;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction isNavigationCancelingError(error) {\n    return error && (/** @type {?} */ (error))[NAVIGATION_CANCELING_ERROR];\n}\n/**\n * @param {?} segments\n * @param {?} segmentGroup\n * @param {?} route\n * @return {?}\n */\nfunction defaultUrlMatcher(segments, segmentGroup, route) {\n    /** @type {?} */\n    const parts = /** @type {?} */ ((route.path)).split('/');\n    if (parts.length > segments.length) {\n        // The actual URL is shorter than the config, no match\n        return null;\n    }\n    if (route.pathMatch === 'full' &&\n        (segmentGroup.hasChildren() || parts.length < segments.length)) {\n        // The config is longer than the actual URL but we are looking for a full match, return null\n        return null;\n    }\n    /** @type {?} */\n    const posParams = {};\n    // Check each config part against the actual URL\n    for (let index = 0; index < parts.length; index++) {\n        /** @type {?} */\n        const part = parts[index];\n        /** @type {?} */\n        const segment = segments[index];\n        /** @type {?} */\n        const isParameter = part.startsWith(':');\n        if (isParameter) {\n            posParams[part.substring(1)] = segment;\n        }\n        else if (part !== segment.path) {\n            // The actual URL part does not match the config, no match\n            return null;\n        }\n    }\n    return { consumed: segments.slice(0, parts.length), posParams };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass LoadedRouterConfig {\n    /**\n     * @param {?} routes\n     * @param {?} module\n     */\n    constructor(routes, module) {\n        this.routes = routes;\n        this.module = module;\n    }\n}\n/**\n * @param {?} config\n * @param {?=} parentPath\n * @return {?}\n */\nfunction validateConfig(config, parentPath = '') {\n    // forEach doesn't iterate undefined values\n    for (let i = 0; i < config.length; i++) {\n        /** @type {?} */\n        const route = config[i];\n        /** @type {?} */\n        const fullPath = getFullPath(parentPath, route);\n        validateNode(route, fullPath);\n    }\n}\n/**\n * @param {?} route\n * @param {?} fullPath\n * @return {?}\n */\nfunction validateNode(route, fullPath) {\n    if (!route) {\n        throw new Error(`\n      Invalid configuration of route '${fullPath}': Encountered undefined route.\n      The reason might be an extra comma.\n\n      Example:\n      const routes: Routes = [\n        { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\n        { path: 'dashboard',  component: DashboardComponent },, << two commas\n        { path: 'detail/:id', component: HeroDetailComponent }\n      ];\n    `);\n    }\n    if (Array.isArray(route)) {\n        throw new Error(`Invalid configuration of route '${fullPath}': Array cannot be specified`);\n    }\n    if (!route.component && !route.children && !route.loadChildren &&\n        (route.outlet && route.outlet !== PRIMARY_OUTLET)) {\n        throw new Error(`Invalid configuration of route '${fullPath}': a componentless route without children or loadChildren cannot have a named outlet set`);\n    }\n    if (route.redirectTo && route.children) {\n        throw new Error(`Invalid configuration of route '${fullPath}': redirectTo and children cannot be used together`);\n    }\n    if (route.redirectTo && route.loadChildren) {\n        throw new Error(`Invalid configuration of route '${fullPath}': redirectTo and loadChildren cannot be used together`);\n    }\n    if (route.children && route.loadChildren) {\n        throw new Error(`Invalid configuration of route '${fullPath}': children and loadChildren cannot be used together`);\n    }\n    if (route.redirectTo && route.component) {\n        throw new Error(`Invalid configuration of route '${fullPath}': redirectTo and component cannot be used together`);\n    }\n    if (route.path && route.matcher) {\n        throw new Error(`Invalid configuration of route '${fullPath}': path and matcher cannot be used together`);\n    }\n    if (route.redirectTo === void 0 && !route.component && !route.children && !route.loadChildren) {\n        throw new Error(`Invalid configuration of route '${fullPath}'. One of the following must be provided: component, redirectTo, children or loadChildren`);\n    }\n    if (route.path === void 0 && route.matcher === void 0) {\n        throw new Error(`Invalid configuration of route '${fullPath}': routes must have either a path or a matcher specified`);\n    }\n    if (typeof route.path === 'string' && route.path.charAt(0) === '/') {\n        throw new Error(`Invalid configuration of route '${fullPath}': path cannot start with a slash`);\n    }\n    if (route.path === '' && route.redirectTo !== void 0 && route.pathMatch === void 0) {\n        /** @type {?} */\n        const exp = `The default value of 'pathMatch' is 'prefix', but often the intent is to use 'full'.`;\n        throw new Error(`Invalid configuration of route '{path: \"${fullPath}\", redirectTo: \"${route.redirectTo}\"}': please provide 'pathMatch'. ${exp}`);\n    }\n    if (route.pathMatch !== void 0 && route.pathMatch !== 'full' && route.pathMatch !== 'prefix') {\n        throw new Error(`Invalid configuration of route '${fullPath}': pathMatch can only be set to 'prefix' or 'full'`);\n    }\n    if (route.children) {\n        validateConfig(route.children, fullPath);\n    }\n}\n/**\n * @param {?} parentPath\n * @param {?} currentRoute\n * @return {?}\n */\nfunction getFullPath(parentPath, currentRoute) {\n    if (!currentRoute) {\n        return parentPath;\n    }\n    if (!parentPath && !currentRoute.path) {\n        return '';\n    }\n    else if (parentPath && !currentRoute.path) {\n        return `${parentPath}/`;\n    }\n    else if (!parentPath && currentRoute.path) {\n        return currentRoute.path;\n    }\n    else {\n        return `${parentPath}/${currentRoute.path}`;\n    }\n}\n/**\n * Makes a copy of the config and adds any default required properties.\n * @param {?} r\n * @return {?}\n */\nfunction standardizeConfig(r) {\n    /** @type {?} */\n    const children = r.children && r.children.map(standardizeConfig);\n    /** @type {?} */\n    const c = children ? Object.assign({}, r, { children }) : Object.assign({}, r);\n    if (!c.component && (children || c.loadChildren) && (c.outlet && c.outlet !== PRIMARY_OUTLET)) {\n        c.component = EmptyOutletComponent;\n    }\n    return c;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction shallowEqualArrays(a, b) {\n    if (a.length !== b.length)\n        return false;\n    for (let i = 0; i < a.length; ++i) {\n        if (!shallowEqual(a[i], b[i]))\n            return false;\n    }\n    return true;\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction shallowEqual(a, b) {\n    /** @type {?} */\n    const k1 = Object.keys(a);\n    /** @type {?} */\n    const k2 = Object.keys(b);\n    if (k1.length != k2.length) {\n        return false;\n    }\n    /** @type {?} */\n    let key;\n    for (let i = 0; i < k1.length; i++) {\n        key = k1[i];\n        if (a[key] !== b[key]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Flattens single-level nested arrays.\n * @template T\n * @param {?} arr\n * @return {?}\n */\nfunction flatten(arr) {\n    return Array.prototype.concat.apply([], arr);\n}\n/**\n * Return the last element of an array.\n * @template T\n * @param {?} a\n * @return {?}\n */\nfunction last$1(a) {\n    return a.length > 0 ? a[a.length - 1] : null;\n}\n/**\n * @template K, V\n * @param {?} map\n * @param {?} callback\n * @return {?}\n */\nfunction forEach(map$$1, callback) {\n    for (const prop in map$$1) {\n        if (map$$1.hasOwnProperty(prop)) {\n            callback(map$$1[prop], prop);\n        }\n    }\n}\n/**\n * @template A, B\n * @param {?} obj\n * @param {?} fn\n * @return {?}\n */\nfunction waitForMap(obj, fn) {\n    if (Object.keys(obj).length === 0) {\n        return of({});\n    }\n    /** @type {?} */\n    const waitHead = [];\n    /** @type {?} */\n    const waitTail = [];\n    /** @type {?} */\n    const res = {};\n    forEach(obj, (a, k) => {\n        /** @type {?} */\n        const mapped = fn(k, a).pipe(map((r) => res[k] = r));\n        if (k === PRIMARY_OUTLET) {\n            waitHead.push(mapped);\n        }\n        else {\n            waitTail.push(mapped);\n        }\n    });\n    // Closure compiler has problem with using spread operator here. So just using Array.concat.\n    return of.apply(null, waitHead.concat(waitTail)).pipe(concatAll(), last(), map(() => res));\n}\n/**\n * ANDs Observables by merging all input observables, reducing to an Observable verifying all\n * input Observables return `true`.\n * @param {?} observables\n * @return {?}\n */\nfunction andObservables(observables) {\n    return observables.pipe(mergeAll(), every((result) => result === true));\n}\n/**\n * @template T\n * @param {?} value\n * @return {?}\n */\nfunction wrapIntoObservable(value) {\n    if (ɵisObservable(value)) {\n        return value;\n    }\n    if (ɵisPromise(value)) {\n        // Use `Promise.resolve()` to wrap promise-like instances.\n        // Required ie when a Resolver returns a AngularJS `$q` promise to correctly trigger the\n        // change detection.\n        return from(Promise.resolve(value));\n    }\n    return of(/** @type {?} */ (value));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @return {?}\n */\nfunction createEmptyUrlTree() {\n    return new UrlTree(new UrlSegmentGroup([], {}), {}, null);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @param {?} exact\n * @return {?}\n */\nfunction containsTree(container, containee, exact) {\n    if (exact) {\n        return equalQueryParams(container.queryParams, containee.queryParams) &&\n            equalSegmentGroups(container.root, containee.root);\n    }\n    return containsQueryParams(container.queryParams, containee.queryParams) &&\n        containsSegmentGroup(container.root, containee.root);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @return {?}\n */\nfunction equalQueryParams(container, containee) {\n    // TODO: This does not handle array params correctly.\n    return shallowEqual(container, containee);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @return {?}\n */\nfunction equalSegmentGroups(container, containee) {\n    if (!equalPath(container.segments, containee.segments))\n        return false;\n    if (container.numberOfChildren !== containee.numberOfChildren)\n        return false;\n    for (const c in containee.children) {\n        if (!container.children[c])\n            return false;\n        if (!equalSegmentGroups(container.children[c], containee.children[c]))\n            return false;\n    }\n    return true;\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @return {?}\n */\nfunction containsQueryParams(container, containee) {\n    // TODO: This does not handle array params correctly.\n    return Object.keys(containee).length <= Object.keys(container).length &&\n        Object.keys(containee).every(key => containee[key] === container[key]);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @return {?}\n */\nfunction containsSegmentGroup(container, containee) {\n    return containsSegmentGroupHelper(container, containee, containee.segments);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @param {?} containeePaths\n * @return {?}\n */\nfunction containsSegmentGroupHelper(container, containee, containeePaths) {\n    if (container.segments.length > containeePaths.length) {\n        /** @type {?} */\n        const current = container.segments.slice(0, containeePaths.length);\n        if (!equalPath(current, containeePaths))\n            return false;\n        if (containee.hasChildren())\n            return false;\n        return true;\n    }\n    else if (container.segments.length === containeePaths.length) {\n        if (!equalPath(container.segments, containeePaths))\n            return false;\n        for (const c in containee.children) {\n            if (!container.children[c])\n                return false;\n            if (!containsSegmentGroup(container.children[c], containee.children[c]))\n                return false;\n        }\n        return true;\n    }\n    else {\n        /** @type {?} */\n        const current = containeePaths.slice(0, container.segments.length);\n        /** @type {?} */\n        const next = containeePaths.slice(container.segments.length);\n        if (!equalPath(container.segments, current))\n            return false;\n        if (!container.children[PRIMARY_OUTLET])\n            return false;\n        return containsSegmentGroupHelper(container.children[PRIMARY_OUTLET], containee, next);\n    }\n}\n/**\n * \\@description\n *\n * Represents the parsed URL.\n *\n * Since a router state is a tree, and the URL is nothing but a serialized state, the URL is a\n * serialized tree.\n * UrlTree is a data structure that provides a lot of affordances in dealing with URLs\n *\n * \\@usageNotes\n * ### Example\n *\n * ```\n * \\@Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const tree: UrlTree =\n *       router.parseUrl('/team/33/(user/victor//support:help)?debug=true#fragment');\n *     const f = tree.fragment; // return 'fragment'\n *     const q = tree.queryParams; // returns {debug: 'true'}\n *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n *     const s: UrlSegment[] = g.segments; // returns 2 segments 'team' and '33'\n *     g.children[PRIMARY_OUTLET].segments; // returns 2 segments 'user' and 'victor'\n *     g.children['support'].segments; // return 1 segment 'help'\n *   }\n * }\n * ```\n *\n *\n */\nclass UrlTree {\n    /**\n     * \\@internal\n     * @param {?} root\n     * @param {?} queryParams\n     * @param {?} fragment\n     */\n    constructor(root, queryParams, fragment) {\n        this.root = root;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n    }\n    /**\n     * @return {?}\n     */\n    get queryParamMap() {\n        if (!this._queryParamMap) {\n            this._queryParamMap = convertToParamMap(this.queryParams);\n        }\n        return this._queryParamMap;\n    }\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    toString() { return DEFAULT_SERIALIZER.serialize(this); }\n}\n/**\n * \\@description\n *\n * Represents the parsed URL segment group.\n *\n * See `UrlTree` for more information.\n *\n *\n */\nclass UrlSegmentGroup {\n    /**\n     * @param {?} segments\n     * @param {?} children\n     */\n    constructor(segments, children) {\n        this.segments = segments;\n        this.children = children;\n        /**\n         * The parent node in the url tree\n         */\n        this.parent = null;\n        forEach(children, (v, k) => v.parent = this);\n    }\n    /**\n     * Whether the segment has child segments\n     * @return {?}\n     */\n    hasChildren() { return this.numberOfChildren > 0; }\n    /**\n     * Number of child segments\n     * @return {?}\n     */\n    get numberOfChildren() { return Object.keys(this.children).length; }\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    toString() { return serializePaths(this); }\n}\n/**\n * \\@description\n *\n * Represents a single URL segment.\n *\n * A UrlSegment is a part of a URL between the two slashes. It contains a path and the matrix\n * parameters associated with the segment.\n *\n * \\@usageNotes\n *  ### Example\n *\n * ```\n * \\@Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const tree: UrlTree = router.parseUrl('/team;id=33');\n *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n *     const s: UrlSegment[] = g.segments;\n *     s[0].path; // returns 'team'\n *     s[0].parameters; // returns {id: 33}\n *   }\n * }\n * ```\n *\n *\n */\nclass UrlSegment {\n    /**\n     * @param {?} path\n     * @param {?} parameters\n     */\n    constructor(path, parameters) {\n        this.path = path;\n        this.parameters = parameters;\n    }\n    /**\n     * @return {?}\n     */\n    get parameterMap() {\n        if (!this._parameterMap) {\n            this._parameterMap = convertToParamMap(this.parameters);\n        }\n        return this._parameterMap;\n    }\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    toString() { return serializePath(this); }\n}\n/**\n * @param {?} as\n * @param {?} bs\n * @return {?}\n */\nfunction equalSegments(as, bs) {\n    return equalPath(as, bs) && as.every((a, i) => shallowEqual(a.parameters, bs[i].parameters));\n}\n/**\n * @param {?} as\n * @param {?} bs\n * @return {?}\n */\nfunction equalPath(as, bs) {\n    if (as.length !== bs.length)\n        return false;\n    return as.every((a, i) => a.path === bs[i].path);\n}\n/**\n * @template T\n * @param {?} segment\n * @param {?} fn\n * @return {?}\n */\nfunction mapChildrenIntoArray(segment, fn) {\n    /** @type {?} */\n    let res = [];\n    forEach(segment.children, (child, childOutlet) => {\n        if (childOutlet === PRIMARY_OUTLET) {\n            res = res.concat(fn(child, childOutlet));\n        }\n    });\n    forEach(segment.children, (child, childOutlet) => {\n        if (childOutlet !== PRIMARY_OUTLET) {\n            res = res.concat(fn(child, childOutlet));\n        }\n    });\n    return res;\n}\n/**\n * \\@description\n *\n * Serializes and deserializes a URL string into a URL tree.\n *\n * The url serialization strategy is customizable. You can\n * make all URLs case insensitive by providing a custom UrlSerializer.\n *\n * See `DefaultUrlSerializer` for an example of a URL serializer.\n *\n *\n * @abstract\n */\nclass UrlSerializer {\n}\n/**\n * \\@description\n *\n * A default implementation of the `UrlSerializer`.\n *\n * Example URLs:\n *\n * ```\n * /inbox/33(popup:compose)\n * /inbox/33;open=true/messages/44\n * ```\n *\n * DefaultUrlSerializer uses parentheses to serialize secondary segments (e.g., popup:compose), the\n * colon syntax to specify the outlet, and the ';parameter=value' syntax (e.g., open=true) to\n * specify route specific parameters.\n *\n *\n */\nclass DefaultUrlSerializer {\n    /**\n     * Parses a url into a `UrlTree`\n     * @param {?} url\n     * @return {?}\n     */\n    parse(url) {\n        /** @type {?} */\n        const p = new UrlParser(url);\n        return new UrlTree(p.parseRootSegment(), p.parseQueryParams(), p.parseFragment());\n    }\n    /**\n     * Converts a `UrlTree` into a url\n     * @param {?} tree\n     * @return {?}\n     */\n    serialize(tree) {\n        /** @type {?} */\n        const segment = `/${serializeSegment(tree.root, true)}`;\n        /** @type {?} */\n        const query = serializeQueryParams(tree.queryParams);\n        /** @type {?} */\n        const fragment = typeof tree.fragment === `string` ? `#${encodeUriFragment((/** @type {?} */ ((tree.fragment))))}` : '';\n        return `${segment}${query}${fragment}`;\n    }\n}\n/** @type {?} */\nconst DEFAULT_SERIALIZER = new DefaultUrlSerializer();\n/**\n * @param {?} segment\n * @return {?}\n */\nfunction serializePaths(segment) {\n    return segment.segments.map(p => serializePath(p)).join('/');\n}\n/**\n * @param {?} segment\n * @param {?} root\n * @return {?}\n */\nfunction serializeSegment(segment, root) {\n    if (!segment.hasChildren()) {\n        return serializePaths(segment);\n    }\n    if (root) {\n        /** @type {?} */\n        const primary = segment.children[PRIMARY_OUTLET] ?\n            serializeSegment(segment.children[PRIMARY_OUTLET], false) :\n            '';\n        /** @type {?} */\n        const children = [];\n        forEach(segment.children, (v, k) => {\n            if (k !== PRIMARY_OUTLET) {\n                children.push(`${k}:${serializeSegment(v, false)}`);\n            }\n        });\n        return children.length > 0 ? `${primary}(${children.join('//')})` : primary;\n    }\n    else {\n        /** @type {?} */\n        const children = mapChildrenIntoArray(segment, (v, k) => {\n            if (k === PRIMARY_OUTLET) {\n                return [serializeSegment(segment.children[PRIMARY_OUTLET], false)];\n            }\n            return [`${k}:${serializeSegment(v, false)}`];\n        });\n        return `${serializePaths(segment)}/(${children.join('//')})`;\n    }\n}\n/**\n * Encodes a URI string with the default encoding. This function will only ever be called from\n * `encodeUriQuery` or `encodeUriSegment` as it's the base set of encodings to be used. We need\n * a custom encoding because encodeURIComponent is too aggressive and encodes stuff that doesn't\n * have to be encoded per https://url.spec.whatwg.org.\n * @param {?} s\n * @return {?}\n */\nfunction encodeUriString(s) {\n    return encodeURIComponent(s)\n        .replace(/%40/g, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/g, '$')\n        .replace(/%2C/gi, ',');\n}\n/**\n * This function should be used to encode both keys and values in a query string key/value. In\n * the following URL, you need to call encodeUriQuery on \"k\" and \"v\":\n *\n * http://www.site.org/html;mk=mv?k=v#f\n * @param {?} s\n * @return {?}\n */\nfunction encodeUriQuery(s) {\n    return encodeUriString(s).replace(/%3B/gi, ';');\n}\n/**\n * This function should be used to encode a URL fragment. In the following URL, you need to call\n * encodeUriFragment on \"f\":\n *\n * http://www.site.org/html;mk=mv?k=v#f\n * @param {?} s\n * @return {?}\n */\nfunction encodeUriFragment(s) {\n    return encodeURI(s);\n}\n/**\n * This function should be run on any URI segment as well as the key and value in a key/value\n * pair for matrix params. In the following URL, you need to call encodeUriSegment on \"html\",\n * \"mk\", and \"mv\":\n *\n * http://www.site.org/html;mk=mv?k=v#f\n * @param {?} s\n * @return {?}\n */\nfunction encodeUriSegment(s) {\n    return encodeUriString(s).replace(/\\(/g, '%28').replace(/\\)/g, '%29').replace(/%26/gi, '&');\n}\n/**\n * @param {?} s\n * @return {?}\n */\nfunction decode(s) {\n    return decodeURIComponent(s);\n}\n/**\n * @param {?} s\n * @return {?}\n */\nfunction decodeQuery(s) {\n    return decode(s.replace(/\\+/g, '%20'));\n}\n/**\n * @param {?} path\n * @return {?}\n */\nfunction serializePath(path) {\n    return `${encodeUriSegment(path.path)}${serializeMatrixParams(path.parameters)}`;\n}\n/**\n * @param {?} params\n * @return {?}\n */\nfunction serializeMatrixParams(params) {\n    return Object.keys(params)\n        .map(key => `;${encodeUriSegment(key)}=${encodeUriSegment(params[key])}`)\n        .join('');\n}\n/**\n * @param {?} params\n * @return {?}\n */\nfunction serializeQueryParams(params) {\n    /** @type {?} */\n    const strParams = Object.keys(params).map((name) => {\n        /** @type {?} */\n        const value = params[name];\n        return Array.isArray(value) ?\n            value.map(v => `${encodeUriQuery(name)}=${encodeUriQuery(v)}`).join('&') :\n            `${encodeUriQuery(name)}=${encodeUriQuery(value)}`;\n    });\n    return strParams.length ? `?${strParams.join(\"&\")}` : '';\n}\n/** @type {?} */\nconst SEGMENT_RE = /^[^\\/()?;=#]+/;\n/**\n * @param {?} str\n * @return {?}\n */\nfunction matchSegments(str) {\n    /** @type {?} */\n    const match = str.match(SEGMENT_RE);\n    return match ? match[0] : '';\n}\n/** @type {?} */\nconst QUERY_PARAM_RE = /^[^=?&#]+/;\n/**\n * @param {?} str\n * @return {?}\n */\nfunction matchQueryParams(str) {\n    /** @type {?} */\n    const match = str.match(QUERY_PARAM_RE);\n    return match ? match[0] : '';\n}\n/** @type {?} */\nconst QUERY_PARAM_VALUE_RE = /^[^?&#]+/;\n/**\n * @param {?} str\n * @return {?}\n */\nfunction matchUrlQueryParamValue(str) {\n    /** @type {?} */\n    const match = str.match(QUERY_PARAM_VALUE_RE);\n    return match ? match[0] : '';\n}\nclass UrlParser {\n    /**\n     * @param {?} url\n     */\n    constructor(url) {\n        this.url = url;\n        this.remaining = url;\n    }\n    /**\n     * @return {?}\n     */\n    parseRootSegment() {\n        this.consumeOptional('/');\n        if (this.remaining === '' || this.peekStartsWith('?') || this.peekStartsWith('#')) {\n            return new UrlSegmentGroup([], {});\n        }\n        // The root segment group never has segments\n        return new UrlSegmentGroup([], this.parseChildren());\n    }\n    /**\n     * @return {?}\n     */\n    parseQueryParams() {\n        /** @type {?} */\n        const params = {};\n        if (this.consumeOptional('?')) {\n            do {\n                this.parseQueryParam(params);\n            } while (this.consumeOptional('&'));\n        }\n        return params;\n    }\n    /**\n     * @return {?}\n     */\n    parseFragment() {\n        return this.consumeOptional('#') ? decodeURIComponent(this.remaining) : null;\n    }\n    /**\n     * @return {?}\n     */\n    parseChildren() {\n        if (this.remaining === '') {\n            return {};\n        }\n        this.consumeOptional('/');\n        /** @type {?} */\n        const segments = [];\n        if (!this.peekStartsWith('(')) {\n            segments.push(this.parseSegment());\n        }\n        while (this.peekStartsWith('/') && !this.peekStartsWith('//') && !this.peekStartsWith('/(')) {\n            this.capture('/');\n            segments.push(this.parseSegment());\n        }\n        /** @type {?} */\n        let children = {};\n        if (this.peekStartsWith('/(')) {\n            this.capture('/');\n            children = this.parseParens(true);\n        }\n        /** @type {?} */\n        let res = {};\n        if (this.peekStartsWith('(')) {\n            res = this.parseParens(false);\n        }\n        if (segments.length > 0 || Object.keys(children).length > 0) {\n            res[PRIMARY_OUTLET] = new UrlSegmentGroup(segments, children);\n        }\n        return res;\n    }\n    /**\n     * @return {?}\n     */\n    parseSegment() {\n        /** @type {?} */\n        const path = matchSegments(this.remaining);\n        if (path === '' && this.peekStartsWith(';')) {\n            throw new Error(`Empty path url segment cannot have parameters: '${this.remaining}'.`);\n        }\n        this.capture(path);\n        return new UrlSegment(decode(path), this.parseMatrixParams());\n    }\n    /**\n     * @return {?}\n     */\n    parseMatrixParams() {\n        /** @type {?} */\n        const params = {};\n        while (this.consumeOptional(';')) {\n            this.parseParam(params);\n        }\n        return params;\n    }\n    /**\n     * @param {?} params\n     * @return {?}\n     */\n    parseParam(params) {\n        /** @type {?} */\n        const key = matchSegments(this.remaining);\n        if (!key) {\n            return;\n        }\n        this.capture(key);\n        /** @type {?} */\n        let value = '';\n        if (this.consumeOptional('=')) {\n            /** @type {?} */\n            const valueMatch = matchSegments(this.remaining);\n            if (valueMatch) {\n                value = valueMatch;\n                this.capture(value);\n            }\n        }\n        params[decode(key)] = decode(value);\n    }\n    /**\n     * @param {?} params\n     * @return {?}\n     */\n    parseQueryParam(params) {\n        /** @type {?} */\n        const key = matchQueryParams(this.remaining);\n        if (!key) {\n            return;\n        }\n        this.capture(key);\n        /** @type {?} */\n        let value = '';\n        if (this.consumeOptional('=')) {\n            /** @type {?} */\n            const valueMatch = matchUrlQueryParamValue(this.remaining);\n            if (valueMatch) {\n                value = valueMatch;\n                this.capture(value);\n            }\n        }\n        /** @type {?} */\n        const decodedKey = decodeQuery(key);\n        /** @type {?} */\n        const decodedVal = decodeQuery(value);\n        if (params.hasOwnProperty(decodedKey)) {\n            /** @type {?} */\n            let currentVal = params[decodedKey];\n            if (!Array.isArray(currentVal)) {\n                currentVal = [currentVal];\n                params[decodedKey] = currentVal;\n            }\n            currentVal.push(decodedVal);\n        }\n        else {\n            // Create a new value\n            params[decodedKey] = decodedVal;\n        }\n    }\n    /**\n     * @param {?} allowPrimary\n     * @return {?}\n     */\n    parseParens(allowPrimary) {\n        /** @type {?} */\n        const segments = {};\n        this.capture('(');\n        while (!this.consumeOptional(')') && this.remaining.length > 0) {\n            /** @type {?} */\n            const path = matchSegments(this.remaining);\n            /** @type {?} */\n            const next = this.remaining[path.length];\n            // if is is not one of these characters, then the segment was unescaped\n            // or the group was not closed\n            if (next !== '/' && next !== ')' && next !== ';') {\n                throw new Error(`Cannot parse url '${this.url}'`);\n            }\n            /** @type {?} */\n            let outletName = /** @type {?} */ ((undefined));\n            if (path.indexOf(':') > -1) {\n                outletName = path.substr(0, path.indexOf(':'));\n                this.capture(outletName);\n                this.capture(':');\n            }\n            else if (allowPrimary) {\n                outletName = PRIMARY_OUTLET;\n            }\n            /** @type {?} */\n            const children = this.parseChildren();\n            segments[outletName] = Object.keys(children).length === 1 ? children[PRIMARY_OUTLET] :\n                new UrlSegmentGroup([], children);\n            this.consumeOptional('//');\n        }\n        return segments;\n    }\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    peekStartsWith(str) { return this.remaining.startsWith(str); }\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    consumeOptional(str) {\n        if (this.peekStartsWith(str)) {\n            this.remaining = this.remaining.substring(str.length);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    capture(str) {\n        if (!this.consumeOptional(str)) {\n            throw new Error(`Expected \"${str}\".`);\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass NoMatch {\n    /**\n     * @param {?=} segmentGroup\n     */\n    constructor(segmentGroup) { this.segmentGroup = segmentGroup || null; }\n}\nclass AbsoluteRedirect {\n    /**\n     * @param {?} urlTree\n     */\n    constructor(urlTree) {\n        this.urlTree = urlTree;\n    }\n}\n/**\n * @param {?} segmentGroup\n * @return {?}\n */\nfunction noMatch(segmentGroup) {\n    return new Observable((obs) => obs.error(new NoMatch(segmentGroup)));\n}\n/**\n * @param {?} newTree\n * @return {?}\n */\nfunction absoluteRedirect(newTree) {\n    return new Observable((obs) => obs.error(new AbsoluteRedirect(newTree)));\n}\n/**\n * @param {?} redirectTo\n * @return {?}\n */\nfunction namedOutletsRedirect(redirectTo) {\n    return new Observable((obs) => obs.error(new Error(`Only absolute redirects can have named outlets. redirectTo: '${redirectTo}'`)));\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction canLoadFails(route) {\n    return new Observable((obs) => obs.error(navigationCancelingError(`Cannot load children because the guard of the route \"path: '${route.path}'\" returned false`)));\n}\n/**\n * Returns the `UrlTree` with the redirection applied.\n *\n * Lazy modules are loaded along the way.\n * @param {?} moduleInjector\n * @param {?} configLoader\n * @param {?} urlSerializer\n * @param {?} urlTree\n * @param {?} config\n * @return {?}\n */\nfunction applyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config) {\n    return new ApplyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config).apply();\n}\nclass ApplyRedirects {\n    /**\n     * @param {?} moduleInjector\n     * @param {?} configLoader\n     * @param {?} urlSerializer\n     * @param {?} urlTree\n     * @param {?} config\n     */\n    constructor(moduleInjector, configLoader, urlSerializer, urlTree, config) {\n        this.configLoader = configLoader;\n        this.urlSerializer = urlSerializer;\n        this.urlTree = urlTree;\n        this.config = config;\n        this.allowRedirects = true;\n        this.ngModule = moduleInjector.get(NgModuleRef);\n    }\n    /**\n     * @return {?}\n     */\n    apply() {\n        /** @type {?} */\n        const expanded$ = this.expandSegmentGroup(this.ngModule, this.config, this.urlTree.root, PRIMARY_OUTLET);\n        /** @type {?} */\n        const urlTrees$ = expanded$.pipe(map((rootSegmentGroup) => this.createUrlTree(rootSegmentGroup, this.urlTree.queryParams, /** @type {?} */ ((this.urlTree.fragment)))));\n        return urlTrees$.pipe(catchError((e) => {\n            if (e instanceof AbsoluteRedirect) {\n                // after an absolute redirect we do not apply any more redirects!\n                this.allowRedirects = false;\n                // we need to run matching, so we can fetch all lazy-loaded modules\n                return this.match(e.urlTree);\n            }\n            if (e instanceof NoMatch) {\n                throw this.noMatchError(e);\n            }\n            throw e;\n        }));\n    }\n    /**\n     * @param {?} tree\n     * @return {?}\n     */\n    match(tree) {\n        /** @type {?} */\n        const expanded$ = this.expandSegmentGroup(this.ngModule, this.config, tree.root, PRIMARY_OUTLET);\n        /** @type {?} */\n        const mapped$ = expanded$.pipe(map((rootSegmentGroup) => this.createUrlTree(rootSegmentGroup, tree.queryParams, /** @type {?} */ ((tree.fragment)))));\n        return mapped$.pipe(catchError((e) => {\n            if (e instanceof NoMatch) {\n                throw this.noMatchError(e);\n            }\n            throw e;\n        }));\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    noMatchError(e) {\n        return new Error(`Cannot match any routes. URL Segment: '${e.segmentGroup}'`);\n    }\n    /**\n     * @param {?} rootCandidate\n     * @param {?} queryParams\n     * @param {?} fragment\n     * @return {?}\n     */\n    createUrlTree(rootCandidate, queryParams, fragment) {\n        /** @type {?} */\n        const root = rootCandidate.segments.length > 0 ?\n            new UrlSegmentGroup([], { [PRIMARY_OUTLET]: rootCandidate }) :\n            rootCandidate;\n        return new UrlTree(root, queryParams, fragment);\n    }\n    /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @param {?} segmentGroup\n     * @param {?} outlet\n     * @return {?}\n     */\n    expandSegmentGroup(ngModule, routes, segmentGroup, outlet) {\n        if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n            return this.expandChildren(ngModule, routes, segmentGroup)\n                .pipe(map((children) => new UrlSegmentGroup([], children)));\n        }\n        return this.expandSegment(ngModule, segmentGroup, routes, segmentGroup.segments, outlet, true);\n    }\n    /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @param {?} segmentGroup\n     * @return {?}\n     */\n    expandChildren(ngModule, routes, segmentGroup) {\n        return waitForMap(segmentGroup.children, (childOutlet, child) => this.expandSegmentGroup(ngModule, routes, child, childOutlet));\n    }\n    /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} segments\n     * @param {?} outlet\n     * @param {?} allowRedirects\n     * @return {?}\n     */\n    expandSegment(ngModule, segmentGroup, routes, segments, outlet, allowRedirects) {\n        return of(...routes).pipe(map((r) => {\n            /** @type {?} */\n            const expanded$ = this.expandSegmentAgainstRoute(ngModule, segmentGroup, routes, r, segments, outlet, allowRedirects);\n            return expanded$.pipe(catchError((e) => {\n                if (e instanceof NoMatch) {\n                    // TODO(i): this return type doesn't match the declared Observable<UrlSegmentGroup> -\n                    // talk to Jason\n                    return /** @type {?} */ (of(null));\n                }\n                throw e;\n            }));\n        }), concatAll(), first((s) => !!s), catchError((e, _) => {\n            if (e instanceof EmptyError || e.name === 'EmptyError') {\n                if (this.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n                    return of(new UrlSegmentGroup([], {}));\n                }\n                throw new NoMatch(segmentGroup);\n            }\n            throw e;\n        }));\n    }\n    /**\n     * @param {?} segmentGroup\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    noLeftoversInUrl(segmentGroup, segments, outlet) {\n        return segments.length === 0 && !segmentGroup.children[outlet];\n    }\n    /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} paths\n     * @param {?} outlet\n     * @param {?} allowRedirects\n     * @return {?}\n     */\n    expandSegmentAgainstRoute(ngModule, segmentGroup, routes, route, paths, outlet, allowRedirects) {\n        if (getOutlet(route) !== outlet) {\n            return noMatch(segmentGroup);\n        }\n        if (route.redirectTo === undefined) {\n            return this.matchSegmentAgainstRoute(ngModule, segmentGroup, route, paths);\n        }\n        if (allowRedirects && this.allowRedirects) {\n            return this.expandSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, paths, outlet);\n        }\n        return noMatch(segmentGroup);\n    }\n    /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    expandSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, segments, outlet) {\n        if (route.path === '**') {\n            return this.expandWildCardWithParamsAgainstRouteUsingRedirect(ngModule, routes, route, outlet);\n        }\n        return this.expandRegularSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, segments, outlet);\n    }\n    /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} outlet\n     * @return {?}\n     */\n    expandWildCardWithParamsAgainstRouteUsingRedirect(ngModule, routes, route, outlet) {\n        /** @type {?} */\n        const newTree = this.applyRedirectCommands([], /** @type {?} */ ((route.redirectTo)), {});\n        if (/** @type {?} */ ((route.redirectTo)).startsWith('/')) {\n            return absoluteRedirect(newTree);\n        }\n        return this.lineralizeSegments(route, newTree).pipe(mergeMap((newSegments) => {\n            /** @type {?} */\n            const group = new UrlSegmentGroup(newSegments, {});\n            return this.expandSegment(ngModule, group, routes, newSegments, outlet, false);\n        }));\n    }\n    /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    expandRegularSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, segments, outlet) {\n        const { matched, consumedSegments, lastChild, positionalParamSegments } = match(segmentGroup, route, segments);\n        if (!matched)\n            return noMatch(segmentGroup);\n        /** @type {?} */\n        const newTree = this.applyRedirectCommands(consumedSegments, /** @type {?} */ ((route.redirectTo)), /** @type {?} */ (positionalParamSegments));\n        if (/** @type {?} */ ((route.redirectTo)).startsWith('/')) {\n            return absoluteRedirect(newTree);\n        }\n        return this.lineralizeSegments(route, newTree).pipe(mergeMap((newSegments) => {\n            return this.expandSegment(ngModule, segmentGroup, routes, newSegments.concat(segments.slice(lastChild)), outlet, false);\n        }));\n    }\n    /**\n     * @param {?} ngModule\n     * @param {?} rawSegmentGroup\n     * @param {?} route\n     * @param {?} segments\n     * @return {?}\n     */\n    matchSegmentAgainstRoute(ngModule, rawSegmentGroup, route, segments) {\n        if (route.path === '**') {\n            if (route.loadChildren) {\n                return this.configLoader.load(ngModule.injector, route)\n                    .pipe(map((cfg) => {\n                    route._loadedConfig = cfg;\n                    return new UrlSegmentGroup(segments, {});\n                }));\n            }\n            return of(new UrlSegmentGroup(segments, {}));\n        }\n        const { matched, consumedSegments, lastChild } = match(rawSegmentGroup, route, segments);\n        if (!matched)\n            return noMatch(rawSegmentGroup);\n        /** @type {?} */\n        const rawSlicedSegments = segments.slice(lastChild);\n        /** @type {?} */\n        const childConfig$ = this.getChildConfig(ngModule, route);\n        return childConfig$.pipe(mergeMap((routerConfig) => {\n            /** @type {?} */\n            const childModule = routerConfig.module;\n            /** @type {?} */\n            const childConfig = routerConfig.routes;\n            const { segmentGroup, slicedSegments } = split(rawSegmentGroup, consumedSegments, rawSlicedSegments, childConfig);\n            if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n                /** @type {?} */\n                const expanded$ = this.expandChildren(childModule, childConfig, segmentGroup);\n                return expanded$.pipe(map((children) => new UrlSegmentGroup(consumedSegments, children)));\n            }\n            if (childConfig.length === 0 && slicedSegments.length === 0) {\n                return of(new UrlSegmentGroup(consumedSegments, {}));\n            }\n            /** @type {?} */\n            const expanded$ = this.expandSegment(childModule, segmentGroup, childConfig, slicedSegments, PRIMARY_OUTLET, true);\n            return expanded$.pipe(map((cs) => new UrlSegmentGroup(consumedSegments.concat(cs.segments), cs.children)));\n        }));\n    }\n    /**\n     * @param {?} ngModule\n     * @param {?} route\n     * @return {?}\n     */\n    getChildConfig(ngModule, route) {\n        if (route.children) {\n            // The children belong to the same module\n            return of(new LoadedRouterConfig(route.children, ngModule));\n        }\n        if (route.loadChildren) {\n            // lazy children belong to the loaded module\n            if (route._loadedConfig !== undefined) {\n                return of(route._loadedConfig);\n            }\n            return runCanLoadGuard(ngModule.injector, route).pipe(mergeMap((shouldLoad) => {\n                if (shouldLoad) {\n                    return this.configLoader.load(ngModule.injector, route)\n                        .pipe(map((cfg) => {\n                        route._loadedConfig = cfg;\n                        return cfg;\n                    }));\n                }\n                return canLoadFails(route);\n            }));\n        }\n        return of(new LoadedRouterConfig([], ngModule));\n    }\n    /**\n     * @param {?} route\n     * @param {?} urlTree\n     * @return {?}\n     */\n    lineralizeSegments(route, urlTree) {\n        /** @type {?} */\n        let res = [];\n        /** @type {?} */\n        let c = urlTree.root;\n        while (true) {\n            res = res.concat(c.segments);\n            if (c.numberOfChildren === 0) {\n                return of(res);\n            }\n            if (c.numberOfChildren > 1 || !c.children[PRIMARY_OUTLET]) {\n                return namedOutletsRedirect(/** @type {?} */ ((route.redirectTo)));\n            }\n            c = c.children[PRIMARY_OUTLET];\n        }\n    }\n    /**\n     * @param {?} segments\n     * @param {?} redirectTo\n     * @param {?} posParams\n     * @return {?}\n     */\n    applyRedirectCommands(segments, redirectTo, posParams) {\n        return this.applyRedirectCreatreUrlTree(redirectTo, this.urlSerializer.parse(redirectTo), segments, posParams);\n    }\n    /**\n     * @param {?} redirectTo\n     * @param {?} urlTree\n     * @param {?} segments\n     * @param {?} posParams\n     * @return {?}\n     */\n    applyRedirectCreatreUrlTree(redirectTo, urlTree, segments, posParams) {\n        /** @type {?} */\n        const newRoot = this.createSegmentGroup(redirectTo, urlTree.root, segments, posParams);\n        return new UrlTree(newRoot, this.createQueryParams(urlTree.queryParams, this.urlTree.queryParams), urlTree.fragment);\n    }\n    /**\n     * @param {?} redirectToParams\n     * @param {?} actualParams\n     * @return {?}\n     */\n    createQueryParams(redirectToParams, actualParams) {\n        /** @type {?} */\n        const res = {};\n        forEach(redirectToParams, (v, k) => {\n            /** @type {?} */\n            const copySourceValue = typeof v === 'string' && v.startsWith(':');\n            if (copySourceValue) {\n                /** @type {?} */\n                const sourceName = v.substring(1);\n                res[k] = actualParams[sourceName];\n            }\n            else {\n                res[k] = v;\n            }\n        });\n        return res;\n    }\n    /**\n     * @param {?} redirectTo\n     * @param {?} group\n     * @param {?} segments\n     * @param {?} posParams\n     * @return {?}\n     */\n    createSegmentGroup(redirectTo, group, segments, posParams) {\n        /** @type {?} */\n        const updatedSegments = this.createSegments(redirectTo, group.segments, segments, posParams);\n        /** @type {?} */\n        let children = {};\n        forEach(group.children, (child, name) => {\n            children[name] = this.createSegmentGroup(redirectTo, child, segments, posParams);\n        });\n        return new UrlSegmentGroup(updatedSegments, children);\n    }\n    /**\n     * @param {?} redirectTo\n     * @param {?} redirectToSegments\n     * @param {?} actualSegments\n     * @param {?} posParams\n     * @return {?}\n     */\n    createSegments(redirectTo, redirectToSegments, actualSegments, posParams) {\n        return redirectToSegments.map(s => s.path.startsWith(':') ? this.findPosParam(redirectTo, s, posParams) :\n            this.findOrReturn(s, actualSegments));\n    }\n    /**\n     * @param {?} redirectTo\n     * @param {?} redirectToUrlSegment\n     * @param {?} posParams\n     * @return {?}\n     */\n    findPosParam(redirectTo, redirectToUrlSegment, posParams) {\n        /** @type {?} */\n        const pos = posParams[redirectToUrlSegment.path.substring(1)];\n        if (!pos)\n            throw new Error(`Cannot redirect to '${redirectTo}'. Cannot find '${redirectToUrlSegment.path}'.`);\n        return pos;\n    }\n    /**\n     * @param {?} redirectToUrlSegment\n     * @param {?} actualSegments\n     * @return {?}\n     */\n    findOrReturn(redirectToUrlSegment, actualSegments) {\n        /** @type {?} */\n        let idx = 0;\n        for (const s of actualSegments) {\n            if (s.path === redirectToUrlSegment.path) {\n                actualSegments.splice(idx);\n                return s;\n            }\n            idx++;\n        }\n        return redirectToUrlSegment;\n    }\n}\n/**\n * @param {?} moduleInjector\n * @param {?} route\n * @return {?}\n */\nfunction runCanLoadGuard(moduleInjector, route) {\n    /** @type {?} */\n    const canLoad = route.canLoad;\n    if (!canLoad || canLoad.length === 0)\n        return of(true);\n    /** @type {?} */\n    const obs = from(canLoad).pipe(map((injectionToken) => {\n        /** @type {?} */\n        const guard = moduleInjector.get(injectionToken);\n        return wrapIntoObservable(guard.canLoad ? guard.canLoad(route) : guard(route));\n    }));\n    return andObservables(obs);\n}\n/**\n * @param {?} segmentGroup\n * @param {?} route\n * @param {?} segments\n * @return {?}\n */\nfunction match(segmentGroup, route, segments) {\n    if (route.path === '') {\n        if ((route.pathMatch === 'full') && (segmentGroup.hasChildren() || segments.length > 0)) {\n            return { matched: false, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };\n        }\n        return { matched: true, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };\n    }\n    /** @type {?} */\n    const matcher = route.matcher || defaultUrlMatcher;\n    /** @type {?} */\n    const res = matcher(segments, segmentGroup, route);\n    if (!res) {\n        return {\n            matched: false,\n            consumedSegments: /** @type {?} */ ([]),\n            lastChild: 0,\n            positionalParamSegments: {},\n        };\n    }\n    return {\n        matched: true,\n        consumedSegments: /** @type {?} */ ((res.consumed)),\n        lastChild: /** @type {?} */ ((res.consumed.length)),\n        positionalParamSegments: /** @type {?} */ ((res.posParams)),\n    };\n}\n/**\n * @param {?} segmentGroup\n * @param {?} consumedSegments\n * @param {?} slicedSegments\n * @param {?} config\n * @return {?}\n */\nfunction split(segmentGroup, consumedSegments, slicedSegments, config) {\n    if (slicedSegments.length > 0 &&\n        containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n        /** @type {?} */\n        const s = new UrlSegmentGroup(consumedSegments, createChildrenForEmptySegments(config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n        return { segmentGroup: mergeTrivialChildren(s), slicedSegments: [] };\n    }\n    if (slicedSegments.length === 0 &&\n        containsEmptyPathRedirects(segmentGroup, slicedSegments, config)) {\n        /** @type {?} */\n        const s = new UrlSegmentGroup(segmentGroup.segments, addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, config, segmentGroup.children));\n        return { segmentGroup: mergeTrivialChildren(s), slicedSegments };\n    }\n    return { segmentGroup, slicedSegments };\n}\n/**\n * @param {?} s\n * @return {?}\n */\nfunction mergeTrivialChildren(s) {\n    if (s.numberOfChildren === 1 && s.children[PRIMARY_OUTLET]) {\n        /** @type {?} */\n        const c = s.children[PRIMARY_OUTLET];\n        return new UrlSegmentGroup(s.segments.concat(c.segments), c.children);\n    }\n    return s;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} routes\n * @param {?} children\n * @return {?}\n */\nfunction addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, routes, children) {\n    /** @type {?} */\n    const res = {};\n    for (const r of routes) {\n        if (isEmptyPathRedirect(segmentGroup, slicedSegments, r) && !children[getOutlet(r)]) {\n            res[getOutlet(r)] = new UrlSegmentGroup([], {});\n        }\n    }\n    return Object.assign({}, children, res);\n}\n/**\n * @param {?} routes\n * @param {?} primarySegmentGroup\n * @return {?}\n */\nfunction createChildrenForEmptySegments(routes, primarySegmentGroup) {\n    /** @type {?} */\n    const res = {};\n    res[PRIMARY_OUTLET] = primarySegmentGroup;\n    for (const r of routes) {\n        if (r.path === '' && getOutlet(r) !== PRIMARY_OUTLET) {\n            res[getOutlet(r)] = new UrlSegmentGroup([], {});\n        }\n    }\n    return res;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} segments\n * @param {?} routes\n * @return {?}\n */\nfunction containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, segments, routes) {\n    return routes.some(r => isEmptyPathRedirect(segmentGroup, segments, r) && getOutlet(r) !== PRIMARY_OUTLET);\n}\n/**\n * @param {?} segmentGroup\n * @param {?} segments\n * @param {?} routes\n * @return {?}\n */\nfunction containsEmptyPathRedirects(segmentGroup, segments, routes) {\n    return routes.some(r => isEmptyPathRedirect(segmentGroup, segments, r));\n}\n/**\n * @param {?} segmentGroup\n * @param {?} segments\n * @param {?} r\n * @return {?}\n */\nfunction isEmptyPathRedirect(segmentGroup, segments, r) {\n    if ((segmentGroup.hasChildren() || segments.length > 0) && r.pathMatch === 'full') {\n        return false;\n    }\n    return r.path === '' && r.redirectTo !== undefined;\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getOutlet(route) {\n    return route.outlet || PRIMARY_OUTLET;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @template T\n */\nclass Tree {\n    /**\n     * @param {?} root\n     */\n    constructor(root) { this._root = root; }\n    /**\n     * @return {?}\n     */\n    get root() { return this._root.value; }\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    parent(t) {\n        /** @type {?} */\n        const p = this.pathFromRoot(t);\n        return p.length > 1 ? p[p.length - 2] : null;\n    }\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    children(t) {\n        /** @type {?} */\n        const n = findNode(t, this._root);\n        return n ? n.children.map(t => t.value) : [];\n    }\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    firstChild(t) {\n        /** @type {?} */\n        const n = findNode(t, this._root);\n        return n && n.children.length > 0 ? n.children[0].value : null;\n    }\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    siblings(t) {\n        /** @type {?} */\n        const p = findPath(t, this._root);\n        if (p.length < 2)\n            return [];\n        /** @type {?} */\n        const c = p[p.length - 2].children.map(c => c.value);\n        return c.filter(cc => cc !== t);\n    }\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    pathFromRoot(t) { return findPath(t, this._root).map(s => s.value); }\n}\n/**\n * @template T\n * @param {?} value\n * @param {?} node\n * @return {?}\n */\nfunction findNode(value, node) {\n    if (value === node.value)\n        return node;\n    for (const child of node.children) {\n        /** @type {?} */\n        const node = findNode(value, child);\n        if (node)\n            return node;\n    }\n    return null;\n}\n/**\n * @template T\n * @param {?} value\n * @param {?} node\n * @return {?}\n */\nfunction findPath(value, node) {\n    if (value === node.value)\n        return [node];\n    for (const child of node.children) {\n        /** @type {?} */\n        const path = findPath(value, child);\n        if (path.length) {\n            path.unshift(node);\n            return path;\n        }\n    }\n    return [];\n}\n/**\n * @template T\n */\nclass TreeNode {\n    /**\n     * @param {?} value\n     * @param {?} children\n     */\n    constructor(value, children) {\n        this.value = value;\n        this.children = children;\n    }\n    /**\n     * @return {?}\n     */\n    toString() { return `TreeNode(${this.value})`; }\n}\n/**\n * @template T\n * @param {?} node\n * @return {?}\n */\nfunction nodeChildrenAsMap(node) {\n    /** @type {?} */\n    const map$$1 = {};\n    if (node) {\n        node.children.forEach(child => map$$1[child.value.outlet] = child);\n    }\n    return map$$1;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * \\@description\n *\n * Represents the state of the router.\n *\n * RouterState is a tree of activated routes. Every node in this tree knows about the \"consumed\" URL\n * segments, the extracted parameters, and the resolved data.\n *\n * \\@usageNotes\n * ### Example\n *\n * ```\n * \\@Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const state: RouterState = router.routerState;\n *     const root: ActivatedRoute = state.root;\n *     const child = root.firstChild;\n *     const id: Observable<string> = child.params.map(p => p.id);\n *     //...\n *   }\n * }\n * ```\n *\n * See `ActivatedRoute` for more information.\n *\n *\n */\nclass RouterState extends Tree {\n    /**\n     * \\@internal\n     * @param {?} root\n     * @param {?} snapshot\n     */\n    constructor(root, snapshot) {\n        super(root);\n        this.snapshot = snapshot;\n        setRouterState(/** @type {?} */ (this), root);\n    }\n    /**\n     * @return {?}\n     */\n    toString() { return this.snapshot.toString(); }\n}\n/**\n * @param {?} urlTree\n * @param {?} rootComponent\n * @return {?}\n */\nfunction createEmptyState(urlTree, rootComponent) {\n    /** @type {?} */\n    const snapshot = createEmptyStateSnapshot(urlTree, rootComponent);\n    /** @type {?} */\n    const emptyUrl = new BehaviorSubject([new UrlSegment('', {})]);\n    /** @type {?} */\n    const emptyParams = new BehaviorSubject({});\n    /** @type {?} */\n    const emptyData = new BehaviorSubject({});\n    /** @type {?} */\n    const emptyQueryParams = new BehaviorSubject({});\n    /** @type {?} */\n    const fragment = new BehaviorSubject('');\n    /** @type {?} */\n    const activated = new ActivatedRoute(emptyUrl, emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, snapshot.root);\n    activated.snapshot = snapshot.root;\n    return new RouterState(new TreeNode(activated, []), snapshot);\n}\n/**\n * @param {?} urlTree\n * @param {?} rootComponent\n * @return {?}\n */\nfunction createEmptyStateSnapshot(urlTree, rootComponent) {\n    /** @type {?} */\n    const emptyParams = {};\n    /** @type {?} */\n    const emptyData = {};\n    /** @type {?} */\n    const emptyQueryParams = {};\n    /** @type {?} */\n    const fragment = '';\n    /** @type {?} */\n    const activated = new ActivatedRouteSnapshot([], emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, null, urlTree.root, -1, {});\n    return new RouterStateSnapshot('', new TreeNode(activated, []));\n}\n/**\n * \\@description\n *\n * Contains the information about a route associated with a component loaded in an\n * outlet.  An `ActivatedRoute` can also be used to traverse the router state tree.\n *\n * ```\n * \\@Component({...})\n * class MyComponent {\n *   constructor(route: ActivatedRoute) {\n *     const id: Observable<string> = route.params.map(p => p.id);\n *     const url: Observable<string> = route.url.map(segments => segments.join(''));\n *     // route.data includes both `data` and `resolve`\n *     const user = route.data.map(d => d.user);\n *   }\n * }\n * ```\n *\n *\n */\nclass ActivatedRoute {\n    /**\n     * \\@internal\n     * @param {?} url\n     * @param {?} params\n     * @param {?} queryParams\n     * @param {?} fragment\n     * @param {?} data\n     * @param {?} outlet\n     * @param {?} component\n     * @param {?} futureSnapshot\n     */\n    constructor(url, params, queryParams, fragment, data, outlet, component, futureSnapshot) {\n        this.url = url;\n        this.params = params;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n        this.data = data;\n        this.outlet = outlet;\n        this.component = component;\n        this._futureSnapshot = futureSnapshot;\n    }\n    /**\n     * The configuration used to match this route\n     * @return {?}\n     */\n    get routeConfig() { return this._futureSnapshot.routeConfig; }\n    /**\n     * The root of the router state\n     * @return {?}\n     */\n    get root() { return this._routerState.root; }\n    /**\n     * The parent of this route in the router state tree\n     * @return {?}\n     */\n    get parent() { return this._routerState.parent(this); }\n    /**\n     * The first child of this route in the router state tree\n     * @return {?}\n     */\n    get firstChild() { return this._routerState.firstChild(this); }\n    /**\n     * The children of this route in the router state tree\n     * @return {?}\n     */\n    get children() { return this._routerState.children(this); }\n    /**\n     * The path from the root of the router state tree to this route\n     * @return {?}\n     */\n    get pathFromRoot() { return this._routerState.pathFromRoot(this); }\n    /**\n     * @return {?}\n     */\n    get paramMap() {\n        if (!this._paramMap) {\n            this._paramMap = this.params.pipe(map((p) => convertToParamMap(p)));\n        }\n        return this._paramMap;\n    }\n    /**\n     * @return {?}\n     */\n    get queryParamMap() {\n        if (!this._queryParamMap) {\n            this._queryParamMap =\n                this.queryParams.pipe(map((p) => convertToParamMap(p)));\n        }\n        return this._queryParamMap;\n    }\n    /**\n     * @return {?}\n     */\n    toString() {\n        return this.snapshot ? this.snapshot.toString() : `Future(${this._futureSnapshot})`;\n    }\n}\n/**\n * Returns the inherited params, data, and resolve for a given route.\n * By default, this only inherits values up to the nearest path-less or component-less route.\n * \\@internal\n * @param {?} route\n * @param {?=} paramsInheritanceStrategy\n * @return {?}\n */\nfunction inheritedParamsDataResolve(route, paramsInheritanceStrategy = 'emptyOnly') {\n    /** @type {?} */\n    const pathFromRoot = route.pathFromRoot;\n    /** @type {?} */\n    let inheritingStartingFrom = 0;\n    if (paramsInheritanceStrategy !== 'always') {\n        inheritingStartingFrom = pathFromRoot.length - 1;\n        while (inheritingStartingFrom >= 1) {\n            /** @type {?} */\n            const current = pathFromRoot[inheritingStartingFrom];\n            /** @type {?} */\n            const parent = pathFromRoot[inheritingStartingFrom - 1];\n            // current route is an empty path => inherits its parent's params and data\n            if (current.routeConfig && current.routeConfig.path === '') {\n                inheritingStartingFrom--;\n                // parent is componentless => current route should inherit its params and data\n            }\n            else if (!parent.component) {\n                inheritingStartingFrom--;\n            }\n            else {\n                break;\n            }\n        }\n    }\n    return flattenInherited(pathFromRoot.slice(inheritingStartingFrom));\n}\n/**\n * \\@internal\n * @param {?} pathFromRoot\n * @return {?}\n */\nfunction flattenInherited(pathFromRoot) {\n    return pathFromRoot.reduce((res, curr) => {\n        /** @type {?} */\n        const params = Object.assign({}, res.params, curr.params);\n        /** @type {?} */\n        const data = Object.assign({}, res.data, curr.data);\n        /** @type {?} */\n        const resolve = Object.assign({}, res.resolve, curr._resolvedData);\n        return { params, data, resolve };\n    }, /** @type {?} */ ({ params: {}, data: {}, resolve: {} }));\n}\n/**\n * \\@description\n *\n * Contains the information about a route associated with a component loaded in an\n * outlet at a particular moment in time. ActivatedRouteSnapshot can also be used to\n * traverse the router state tree.\n *\n * ```\n * \\@Component({templateUrl:'./my-component.html'})\n * class MyComponent {\n *   constructor(route: ActivatedRoute) {\n *     const id: string = route.snapshot.params.id;\n *     const url: string = route.snapshot.url.join('');\n *     const user = route.snapshot.data.user;\n *   }\n * }\n * ```\n *\n *\n */\nclass ActivatedRouteSnapshot {\n    /**\n     * \\@internal\n     * @param {?} url\n     * @param {?} params\n     * @param {?} queryParams\n     * @param {?} fragment\n     * @param {?} data\n     * @param {?} outlet\n     * @param {?} component\n     * @param {?} routeConfig\n     * @param {?} urlSegment\n     * @param {?} lastPathIndex\n     * @param {?} resolve\n     */\n    constructor(url, params, queryParams, fragment, data, outlet, component, routeConfig, urlSegment, lastPathIndex, resolve) {\n        this.url = url;\n        this.params = params;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n        this.data = data;\n        this.outlet = outlet;\n        this.component = component;\n        this.routeConfig = routeConfig;\n        this._urlSegment = urlSegment;\n        this._lastPathIndex = lastPathIndex;\n        this._resolve = resolve;\n    }\n    /**\n     * The root of the router state\n     * @return {?}\n     */\n    get root() { return this._routerState.root; }\n    /**\n     * The parent of this route in the router state tree\n     * @return {?}\n     */\n    get parent() { return this._routerState.parent(this); }\n    /**\n     * The first child of this route in the router state tree\n     * @return {?}\n     */\n    get firstChild() { return this._routerState.firstChild(this); }\n    /**\n     * The children of this route in the router state tree\n     * @return {?}\n     */\n    get children() { return this._routerState.children(this); }\n    /**\n     * The path from the root of the router state tree to this route\n     * @return {?}\n     */\n    get pathFromRoot() { return this._routerState.pathFromRoot(this); }\n    /**\n     * @return {?}\n     */\n    get paramMap() {\n        if (!this._paramMap) {\n            this._paramMap = convertToParamMap(this.params);\n        }\n        return this._paramMap;\n    }\n    /**\n     * @return {?}\n     */\n    get queryParamMap() {\n        if (!this._queryParamMap) {\n            this._queryParamMap = convertToParamMap(this.queryParams);\n        }\n        return this._queryParamMap;\n    }\n    /**\n     * @return {?}\n     */\n    toString() {\n        /** @type {?} */\n        const url = this.url.map(segment => segment.toString()).join('/');\n        /** @type {?} */\n        const matched = this.routeConfig ? this.routeConfig.path : '';\n        return `Route(url:'${url}', path:'${matched}')`;\n    }\n}\n/**\n * \\@description\n *\n * Represents the state of the router at a moment in time.\n *\n * This is a tree of activated route snapshots. Every node in this tree knows about\n * the \"consumed\" URL segments, the extracted parameters, and the resolved data.\n *\n * \\@usageNotes\n * ### Example\n *\n * ```\n * \\@Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const state: RouterState = router.routerState;\n *     const snapshot: RouterStateSnapshot = state.snapshot;\n *     const root: ActivatedRouteSnapshot = snapshot.root;\n *     const child = root.firstChild;\n *     const id: Observable<string> = child.params.map(p => p.id);\n *     //...\n *   }\n * }\n * ```\n *\n *\n */\nclass RouterStateSnapshot extends Tree {\n    /**\n     * \\@internal\n     * @param {?} url\n     * @param {?} root\n     */\n    constructor(url, root) {\n        super(root);\n        this.url = url;\n        setRouterState(/** @type {?} */ (this), root);\n    }\n    /**\n     * @return {?}\n     */\n    toString() { return serializeNode(this._root); }\n}\n/**\n * @template U, T\n * @param {?} state\n * @param {?} node\n * @return {?}\n */\nfunction setRouterState(state, node) {\n    node.value._routerState = state;\n    node.children.forEach(c => setRouterState(state, c));\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction serializeNode(node) {\n    /** @type {?} */\n    const c = node.children.length > 0 ? ` { ${node.children.map(serializeNode).join(', ')} } ` : '';\n    return `${node.value}${c}`;\n}\n/**\n * The expectation is that the activate route is created with the right set of parameters.\n * So we push new values into the observables only when they are not the initial values.\n * And we detect that by checking if the snapshot field is set.\n * @param {?} route\n * @return {?}\n */\nfunction advanceActivatedRoute(route) {\n    if (route.snapshot) {\n        /** @type {?} */\n        const currentSnapshot = route.snapshot;\n        /** @type {?} */\n        const nextSnapshot = route._futureSnapshot;\n        route.snapshot = nextSnapshot;\n        if (!shallowEqual(currentSnapshot.queryParams, nextSnapshot.queryParams)) {\n            (/** @type {?} */ (route.queryParams)).next(nextSnapshot.queryParams);\n        }\n        if (currentSnapshot.fragment !== nextSnapshot.fragment) {\n            (/** @type {?} */ (route.fragment)).next(nextSnapshot.fragment);\n        }\n        if (!shallowEqual(currentSnapshot.params, nextSnapshot.params)) {\n            (/** @type {?} */ (route.params)).next(nextSnapshot.params);\n        }\n        if (!shallowEqualArrays(currentSnapshot.url, nextSnapshot.url)) {\n            (/** @type {?} */ (route.url)).next(nextSnapshot.url);\n        }\n        if (!shallowEqual(currentSnapshot.data, nextSnapshot.data)) {\n            (/** @type {?} */ (route.data)).next(nextSnapshot.data);\n        }\n    }\n    else {\n        route.snapshot = route._futureSnapshot;\n        // this is for resolved data\n        (/** @type {?} */ (route.data)).next(route._futureSnapshot.data);\n    }\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction equalParamsAndUrlSegments(a, b) {\n    /** @type {?} */\n    const equalUrlParams = shallowEqual(a.params, b.params) && equalSegments(a.url, b.url);\n    /** @type {?} */\n    const parentsMismatch = !a.parent !== !b.parent;\n    return equalUrlParams && !parentsMismatch &&\n        (!a.parent || equalParamsAndUrlSegments(a.parent, /** @type {?} */ ((b.parent))));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @param {?} routeReuseStrategy\n * @param {?} curr\n * @param {?} prevState\n * @return {?}\n */\nfunction createRouterState(routeReuseStrategy, curr, prevState) {\n    /** @type {?} */\n    const root = createNode(routeReuseStrategy, curr._root, prevState ? prevState._root : undefined);\n    return new RouterState(root, curr);\n}\n/**\n * @param {?} routeReuseStrategy\n * @param {?} curr\n * @param {?=} prevState\n * @return {?}\n */\nfunction createNode(routeReuseStrategy, curr, prevState) {\n    // reuse an activated route that is currently displayed on the screen\n    if (prevState && routeReuseStrategy.shouldReuseRoute(curr.value, prevState.value.snapshot)) {\n        /** @type {?} */\n        const value = prevState.value;\n        value._futureSnapshot = curr.value;\n        /** @type {?} */\n        const children = createOrReuseChildren(routeReuseStrategy, curr, prevState);\n        return new TreeNode(value, children);\n        // retrieve an activated route that is used to be displayed, but is not currently displayed\n    }\n    else {\n        /** @type {?} */\n        const detachedRouteHandle = /** @type {?} */ (routeReuseStrategy.retrieve(curr.value));\n        if (detachedRouteHandle) {\n            /** @type {?} */\n            const tree = detachedRouteHandle.route;\n            setFutureSnapshotsOfActivatedRoutes(curr, tree);\n            return tree;\n        }\n        else {\n            /** @type {?} */\n            const value = createActivatedRoute(curr.value);\n            /** @type {?} */\n            const children = curr.children.map(c => createNode(routeReuseStrategy, c));\n            return new TreeNode(value, children);\n        }\n    }\n}\n/**\n * @param {?} curr\n * @param {?} result\n * @return {?}\n */\nfunction setFutureSnapshotsOfActivatedRoutes(curr, result) {\n    if (curr.value.routeConfig !== result.value.routeConfig) {\n        throw new Error('Cannot reattach ActivatedRouteSnapshot created from a different route');\n    }\n    if (curr.children.length !== result.children.length) {\n        throw new Error('Cannot reattach ActivatedRouteSnapshot with a different number of children');\n    }\n    result.value._futureSnapshot = curr.value;\n    for (let i = 0; i < curr.children.length; ++i) {\n        setFutureSnapshotsOfActivatedRoutes(curr.children[i], result.children[i]);\n    }\n}\n/**\n * @param {?} routeReuseStrategy\n * @param {?} curr\n * @param {?} prevState\n * @return {?}\n */\nfunction createOrReuseChildren(routeReuseStrategy, curr, prevState) {\n    return curr.children.map(child => {\n        for (const p of prevState.children) {\n            if (routeReuseStrategy.shouldReuseRoute(p.value.snapshot, child.value)) {\n                return createNode(routeReuseStrategy, child, p);\n            }\n        }\n        return createNode(routeReuseStrategy, child);\n    });\n}\n/**\n * @param {?} c\n * @return {?}\n */\nfunction createActivatedRoute(c) {\n    return new ActivatedRoute(new BehaviorSubject(c.url), new BehaviorSubject(c.params), new BehaviorSubject(c.queryParams), new BehaviorSubject(c.fragment), new BehaviorSubject(c.data), c.outlet, c.component, c);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @param {?} route\n * @param {?} urlTree\n * @param {?} commands\n * @param {?} queryParams\n * @param {?} fragment\n * @return {?}\n */\nfunction createUrlTree(route, urlTree, commands, queryParams, fragment) {\n    if (commands.length === 0) {\n        return tree(urlTree.root, urlTree.root, urlTree, queryParams, fragment);\n    }\n    /** @type {?} */\n    const nav = computeNavigation(commands);\n    if (nav.toRoot()) {\n        return tree(urlTree.root, new UrlSegmentGroup([], {}), urlTree, queryParams, fragment);\n    }\n    /** @type {?} */\n    const startingPosition = findStartingPosition(nav, urlTree, route);\n    /** @type {?} */\n    const segmentGroup = startingPosition.processChildren ?\n        updateSegmentGroupChildren(startingPosition.segmentGroup, startingPosition.index, nav.commands) :\n        updateSegmentGroup(startingPosition.segmentGroup, startingPosition.index, nav.commands);\n    return tree(startingPosition.segmentGroup, segmentGroup, urlTree, queryParams, fragment);\n}\n/**\n * @param {?} command\n * @return {?}\n */\nfunction isMatrixParams(command) {\n    return typeof command === 'object' && command != null && !command.outlets && !command.segmentPath;\n}\n/**\n * @param {?} oldSegmentGroup\n * @param {?} newSegmentGroup\n * @param {?} urlTree\n * @param {?} queryParams\n * @param {?} fragment\n * @return {?}\n */\nfunction tree(oldSegmentGroup, newSegmentGroup, urlTree, queryParams, fragment) {\n    /** @type {?} */\n    let qp = {};\n    if (queryParams) {\n        forEach(queryParams, (value, name) => {\n            qp[name] = Array.isArray(value) ? value.map((v) => `${v}`) : `${value}`;\n        });\n    }\n    if (urlTree.root === oldSegmentGroup) {\n        return new UrlTree(newSegmentGroup, qp, fragment);\n    }\n    return new UrlTree(replaceSegment(urlTree.root, oldSegmentGroup, newSegmentGroup), qp, fragment);\n}\n/**\n * @param {?} current\n * @param {?} oldSegment\n * @param {?} newSegment\n * @return {?}\n */\nfunction replaceSegment(current, oldSegment, newSegment) {\n    /** @type {?} */\n    const children = {};\n    forEach(current.children, (c, outletName) => {\n        if (c === oldSegment) {\n            children[outletName] = newSegment;\n        }\n        else {\n            children[outletName] = replaceSegment(c, oldSegment, newSegment);\n        }\n    });\n    return new UrlSegmentGroup(current.segments, children);\n}\nclass Navigation {\n    /**\n     * @param {?} isAbsolute\n     * @param {?} numberOfDoubleDots\n     * @param {?} commands\n     */\n    constructor(isAbsolute, numberOfDoubleDots, commands) {\n        this.isAbsolute = isAbsolute;\n        this.numberOfDoubleDots = numberOfDoubleDots;\n        this.commands = commands;\n        if (isAbsolute && commands.length > 0 && isMatrixParams(commands[0])) {\n            throw new Error('Root segment cannot have matrix parameters');\n        }\n        /** @type {?} */\n        const cmdWithOutlet = commands.find(c => typeof c === 'object' && c != null && c.outlets);\n        if (cmdWithOutlet && cmdWithOutlet !== last$1(commands)) {\n            throw new Error('{outlets:{}} has to be the last command');\n        }\n    }\n    /**\n     * @return {?}\n     */\n    toRoot() {\n        return this.isAbsolute && this.commands.length === 1 && this.commands[0] == '/';\n    }\n}\n/**\n * Transforms commands to a normalized `Navigation`\n * @param {?} commands\n * @return {?}\n */\nfunction computeNavigation(commands) {\n    if ((typeof commands[0] === 'string') && commands.length === 1 && commands[0] === '/') {\n        return new Navigation(true, 0, commands);\n    }\n    /** @type {?} */\n    let numberOfDoubleDots = 0;\n    /** @type {?} */\n    let isAbsolute = false;\n    /** @type {?} */\n    const res = commands.reduce((res, cmd, cmdIdx) => {\n        if (typeof cmd === 'object' && cmd != null) {\n            if (cmd.outlets) {\n                /** @type {?} */\n                const outlets = {};\n                forEach(cmd.outlets, (commands, name) => {\n                    outlets[name] = typeof commands === 'string' ? commands.split('/') : commands;\n                });\n                return [...res, { outlets }];\n            }\n            if (cmd.segmentPath) {\n                return [...res, cmd.segmentPath];\n            }\n        }\n        if (!(typeof cmd === 'string')) {\n            return [...res, cmd];\n        }\n        if (cmdIdx === 0) {\n            cmd.split('/').forEach((urlPart, partIndex) => {\n                if (partIndex == 0 && urlPart === '.') ;\n                else if (partIndex == 0 && urlPart === '') { //  '/a'\n                    //  '/a'\n                    isAbsolute = true;\n                }\n                else if (urlPart === '..') { //  '../a'\n                    //  '../a'\n                    numberOfDoubleDots++;\n                }\n                else if (urlPart != '') {\n                    res.push(urlPart);\n                }\n            });\n            return res;\n        }\n        return [...res, cmd];\n    }, []);\n    return new Navigation(isAbsolute, numberOfDoubleDots, res);\n}\nclass Position {\n    /**\n     * @param {?} segmentGroup\n     * @param {?} processChildren\n     * @param {?} index\n     */\n    constructor(segmentGroup, processChildren, index) {\n        this.segmentGroup = segmentGroup;\n        this.processChildren = processChildren;\n        this.index = index;\n    }\n}\n/**\n * @param {?} nav\n * @param {?} tree\n * @param {?} route\n * @return {?}\n */\nfunction findStartingPosition(nav, tree, route) {\n    if (nav.isAbsolute) {\n        return new Position(tree.root, true, 0);\n    }\n    if (route.snapshot._lastPathIndex === -1) {\n        return new Position(route.snapshot._urlSegment, true, 0);\n    }\n    /** @type {?} */\n    const modifier = isMatrixParams(nav.commands[0]) ? 0 : 1;\n    /** @type {?} */\n    const index = route.snapshot._lastPathIndex + modifier;\n    return createPositionApplyingDoubleDots(route.snapshot._urlSegment, index, nav.numberOfDoubleDots);\n}\n/**\n * @param {?} group\n * @param {?} index\n * @param {?} numberOfDoubleDots\n * @return {?}\n */\nfunction createPositionApplyingDoubleDots(group, index, numberOfDoubleDots) {\n    /** @type {?} */\n    let g = group;\n    /** @type {?} */\n    let ci = index;\n    /** @type {?} */\n    let dd = numberOfDoubleDots;\n    while (dd > ci) {\n        dd -= ci;\n        g = /** @type {?} */ ((g.parent));\n        if (!g) {\n            throw new Error('Invalid number of \\'../\\'');\n        }\n        ci = g.segments.length;\n    }\n    return new Position(g, false, ci - dd);\n}\n/**\n * @param {?} command\n * @return {?}\n */\nfunction getPath(command) {\n    if (typeof command === 'object' && command != null && command.outlets) {\n        return command.outlets[PRIMARY_OUTLET];\n    }\n    return `${command}`;\n}\n/**\n * @param {?} commands\n * @return {?}\n */\nfunction getOutlets(commands) {\n    if (!(typeof commands[0] === 'object'))\n        return { [PRIMARY_OUTLET]: commands };\n    if (commands[0].outlets === undefined)\n        return { [PRIMARY_OUTLET]: commands };\n    return commands[0].outlets;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} startIndex\n * @param {?} commands\n * @return {?}\n */\nfunction updateSegmentGroup(segmentGroup, startIndex, commands) {\n    if (!segmentGroup) {\n        segmentGroup = new UrlSegmentGroup([], {});\n    }\n    if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n        return updateSegmentGroupChildren(segmentGroup, startIndex, commands);\n    }\n    /** @type {?} */\n    const m = prefixedWith(segmentGroup, startIndex, commands);\n    /** @type {?} */\n    const slicedCommands = commands.slice(m.commandIndex);\n    if (m.match && m.pathIndex < segmentGroup.segments.length) {\n        /** @type {?} */\n        const g = new UrlSegmentGroup(segmentGroup.segments.slice(0, m.pathIndex), {});\n        g.children[PRIMARY_OUTLET] =\n            new UrlSegmentGroup(segmentGroup.segments.slice(m.pathIndex), segmentGroup.children);\n        return updateSegmentGroupChildren(g, 0, slicedCommands);\n    }\n    else if (m.match && slicedCommands.length === 0) {\n        return new UrlSegmentGroup(segmentGroup.segments, {});\n    }\n    else if (m.match && !segmentGroup.hasChildren()) {\n        return createNewSegmentGroup(segmentGroup, startIndex, commands);\n    }\n    else if (m.match) {\n        return updateSegmentGroupChildren(segmentGroup, 0, slicedCommands);\n    }\n    else {\n        return createNewSegmentGroup(segmentGroup, startIndex, commands);\n    }\n}\n/**\n * @param {?} segmentGroup\n * @param {?} startIndex\n * @param {?} commands\n * @return {?}\n */\nfunction updateSegmentGroupChildren(segmentGroup, startIndex, commands) {\n    if (commands.length === 0) {\n        return new UrlSegmentGroup(segmentGroup.segments, {});\n    }\n    else {\n        /** @type {?} */\n        const outlets = getOutlets(commands);\n        /** @type {?} */\n        const children = {};\n        forEach(outlets, (commands, outlet) => {\n            if (commands !== null) {\n                children[outlet] = updateSegmentGroup(segmentGroup.children[outlet], startIndex, commands);\n            }\n        });\n        forEach(segmentGroup.children, (child, childOutlet) => {\n            if (outlets[childOutlet] === undefined) {\n                children[childOutlet] = child;\n            }\n        });\n        return new UrlSegmentGroup(segmentGroup.segments, children);\n    }\n}\n/**\n * @param {?} segmentGroup\n * @param {?} startIndex\n * @param {?} commands\n * @return {?}\n */\nfunction prefixedWith(segmentGroup, startIndex, commands) {\n    /** @type {?} */\n    let currentCommandIndex = 0;\n    /** @type {?} */\n    let currentPathIndex = startIndex;\n    /** @type {?} */\n    const noMatch = { match: false, pathIndex: 0, commandIndex: 0 };\n    while (currentPathIndex < segmentGroup.segments.length) {\n        if (currentCommandIndex >= commands.length)\n            return noMatch;\n        /** @type {?} */\n        const path = segmentGroup.segments[currentPathIndex];\n        /** @type {?} */\n        const curr = getPath(commands[currentCommandIndex]);\n        /** @type {?} */\n        const next = currentCommandIndex < commands.length - 1 ? commands[currentCommandIndex + 1] : null;\n        if (currentPathIndex > 0 && curr === undefined)\n            break;\n        if (curr && next && (typeof next === 'object') && next.outlets === undefined) {\n            if (!compare(curr, next, path))\n                return noMatch;\n            currentCommandIndex += 2;\n        }\n        else {\n            if (!compare(curr, {}, path))\n                return noMatch;\n            currentCommandIndex++;\n        }\n        currentPathIndex++;\n    }\n    return { match: true, pathIndex: currentPathIndex, commandIndex: currentCommandIndex };\n}\n/**\n * @param {?} segmentGroup\n * @param {?} startIndex\n * @param {?} commands\n * @return {?}\n */\nfunction createNewSegmentGroup(segmentGroup, startIndex, commands) {\n    /** @type {?} */\n    const paths = segmentGroup.segments.slice(0, startIndex);\n    /** @type {?} */\n    let i = 0;\n    while (i < commands.length) {\n        if (typeof commands[i] === 'object' && commands[i].outlets !== undefined) {\n            /** @type {?} */\n            const children = createNewSegmentChildren(commands[i].outlets);\n            return new UrlSegmentGroup(paths, children);\n        }\n        // if we start with an object literal, we need to reuse the path part from the segment\n        if (i === 0 && isMatrixParams(commands[0])) {\n            /** @type {?} */\n            const p = segmentGroup.segments[startIndex];\n            paths.push(new UrlSegment(p.path, commands[0]));\n            i++;\n            continue;\n        }\n        /** @type {?} */\n        const curr = getPath(commands[i]);\n        /** @type {?} */\n        const next = (i < commands.length - 1) ? commands[i + 1] : null;\n        if (curr && next && isMatrixParams(next)) {\n            paths.push(new UrlSegment(curr, stringify(next)));\n            i += 2;\n        }\n        else {\n            paths.push(new UrlSegment(curr, {}));\n            i++;\n        }\n    }\n    return new UrlSegmentGroup(paths, {});\n}\n/**\n * @param {?} outlets\n * @return {?}\n */\nfunction createNewSegmentChildren(outlets) {\n    /** @type {?} */\n    const children = {};\n    forEach(outlets, (commands, outlet) => {\n        if (commands !== null) {\n            children[outlet] = createNewSegmentGroup(new UrlSegmentGroup([], {}), 0, commands);\n        }\n    });\n    return children;\n}\n/**\n * @param {?} params\n * @return {?}\n */\nfunction stringify(params) {\n    /** @type {?} */\n    const res = {};\n    forEach(params, (v, k) => res[k] = `${v}`);\n    return res;\n}\n/**\n * @param {?} path\n * @param {?} params\n * @param {?} segment\n * @return {?}\n */\nfunction compare(path, params, segment) {\n    return path == segment.path && shallowEqual(params, segment.parameters);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass CanActivate {\n    /**\n     * @param {?} path\n     */\n    constructor(path) {\n        this.path = path;\n        this.route = this.path[this.path.length - 1];\n    }\n}\nclass CanDeactivate {\n    /**\n     * @param {?} component\n     * @param {?} route\n     */\n    constructor(component, route) {\n        this.component = component;\n        this.route = route;\n    }\n}\n/**\n * This class bundles the actions involved in preactivation of a route.\n */\nclass PreActivation {\n    /**\n     * @param {?} future\n     * @param {?} curr\n     * @param {?} moduleInjector\n     * @param {?=} forwardEvent\n     */\n    constructor(future, curr, moduleInjector, forwardEvent) {\n        this.future = future;\n        this.curr = curr;\n        this.moduleInjector = moduleInjector;\n        this.forwardEvent = forwardEvent;\n        this.canActivateChecks = [];\n        this.canDeactivateChecks = [];\n    }\n    /**\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    initialize(parentContexts) {\n        /** @type {?} */\n        const futureRoot = this.future._root;\n        /** @type {?} */\n        const currRoot = this.curr ? this.curr._root : null;\n        this.setupChildRouteGuards(futureRoot, currRoot, parentContexts, [futureRoot.value]);\n    }\n    /**\n     * @return {?}\n     */\n    checkGuards() {\n        if (!this.isDeactivating() && !this.isActivating()) {\n            return of(true);\n        }\n        /** @type {?} */\n        const canDeactivate$ = this.runCanDeactivateChecks();\n        return canDeactivate$.pipe(mergeMap((canDeactivate) => canDeactivate ? this.runCanActivateChecks() : of(false)));\n    }\n    /**\n     * @param {?} paramsInheritanceStrategy\n     * @return {?}\n     */\n    resolveData(paramsInheritanceStrategy) {\n        if (!this.isActivating())\n            return of(null);\n        return from(this.canActivateChecks)\n            .pipe(concatMap((check) => this.runResolve(check.route, paramsInheritanceStrategy)), reduce((_, __) => _));\n    }\n    /**\n     * @return {?}\n     */\n    isDeactivating() { return this.canDeactivateChecks.length !== 0; }\n    /**\n     * @return {?}\n     */\n    isActivating() { return this.canActivateChecks.length !== 0; }\n    /**\n     * Iterates over child routes and calls recursive `setupRouteGuards` to get `this` instance in\n     * proper state to run `checkGuards()` method.\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} contexts\n     * @param {?} futurePath\n     * @return {?}\n     */\n    setupChildRouteGuards(futureNode, currNode, contexts, futurePath) {\n        /** @type {?} */\n        const prevChildren = nodeChildrenAsMap(currNode);\n        // Process the children of the future route\n        futureNode.children.forEach(c => {\n            this.setupRouteGuards(c, prevChildren[c.value.outlet], contexts, futurePath.concat([c.value]));\n            delete prevChildren[c.value.outlet];\n        });\n        // Process any children left from the current route (not active for the future route)\n        forEach(prevChildren, (v, k) => this.deactivateRouteAndItsChildren(v, /** @type {?} */ ((contexts)).getContext(k)));\n    }\n    /**\n     * Iterates over child routes and calls recursive `setupRouteGuards` to get `this` instance in\n     * proper state to run `checkGuards()` method.\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} parentContexts\n     * @param {?} futurePath\n     * @return {?}\n     */\n    setupRouteGuards(futureNode, currNode, parentContexts, futurePath) {\n        /** @type {?} */\n        const future = futureNode.value;\n        /** @type {?} */\n        const curr = currNode ? currNode.value : null;\n        /** @type {?} */\n        const context = parentContexts ? parentContexts.getContext(futureNode.value.outlet) : null;\n        // reusing the node\n        if (curr && future.routeConfig === curr.routeConfig) {\n            /** @type {?} */\n            const shouldRunGuardsAndResolvers = this.shouldRunGuardsAndResolvers(curr, future, /** @type {?} */ ((future.routeConfig)).runGuardsAndResolvers);\n            if (shouldRunGuardsAndResolvers) {\n                this.canActivateChecks.push(new CanActivate(futurePath));\n            }\n            else {\n                // we need to set the data\n                future.data = curr.data;\n                future._resolvedData = curr._resolvedData;\n            }\n            // If we have a component, we need to go through an outlet.\n            if (future.component) {\n                this.setupChildRouteGuards(futureNode, currNode, context ? context.children : null, futurePath);\n                // if we have a componentless route, we recurse but keep the same outlet map.\n            }\n            else {\n                this.setupChildRouteGuards(futureNode, currNode, parentContexts, futurePath);\n            }\n            if (shouldRunGuardsAndResolvers) {\n                /** @type {?} */\n                const outlet = /** @type {?} */ ((/** @type {?} */ ((context)).outlet));\n                this.canDeactivateChecks.push(new CanDeactivate(outlet.component, curr));\n            }\n        }\n        else {\n            if (curr) {\n                this.deactivateRouteAndItsChildren(currNode, context);\n            }\n            this.canActivateChecks.push(new CanActivate(futurePath));\n            // If we have a component, we need to go through an outlet.\n            if (future.component) {\n                this.setupChildRouteGuards(futureNode, null, context ? context.children : null, futurePath);\n                // if we have a componentless route, we recurse but keep the same outlet map.\n            }\n            else {\n                this.setupChildRouteGuards(futureNode, null, parentContexts, futurePath);\n            }\n        }\n    }\n    /**\n     * @param {?} curr\n     * @param {?} future\n     * @param {?} mode\n     * @return {?}\n     */\n    shouldRunGuardsAndResolvers(curr, future, mode) {\n        switch (mode) {\n            case 'always':\n                return true;\n            case 'paramsOrQueryParamsChange':\n                return !equalParamsAndUrlSegments(curr, future) ||\n                    !shallowEqual(curr.queryParams, future.queryParams);\n            case 'paramsChange':\n            default:\n                return !equalParamsAndUrlSegments(curr, future);\n        }\n    }\n    /**\n     * @param {?} route\n     * @param {?} context\n     * @return {?}\n     */\n    deactivateRouteAndItsChildren(route, context) {\n        /** @type {?} */\n        const children = nodeChildrenAsMap(route);\n        /** @type {?} */\n        const r = route.value;\n        forEach(children, (node, childName) => {\n            if (!r.component) {\n                this.deactivateRouteAndItsChildren(node, context);\n            }\n            else if (context) {\n                this.deactivateRouteAndItsChildren(node, context.children.getContext(childName));\n            }\n            else {\n                this.deactivateRouteAndItsChildren(node, null);\n            }\n        });\n        if (!r.component) {\n            this.canDeactivateChecks.push(new CanDeactivate(null, r));\n        }\n        else if (context && context.outlet && context.outlet.isActivated) {\n            this.canDeactivateChecks.push(new CanDeactivate(context.outlet.component, r));\n        }\n        else {\n            this.canDeactivateChecks.push(new CanDeactivate(null, r));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    runCanDeactivateChecks() {\n        return from(this.canDeactivateChecks)\n            .pipe(mergeMap((check) => this.runCanDeactivate(check.component, check.route)), every((result) => result === true));\n    }\n    /**\n     * @return {?}\n     */\n    runCanActivateChecks() {\n        return from(this.canActivateChecks)\n            .pipe(concatMap((check) => andObservables(from([\n            this.fireChildActivationStart(check.route.parent),\n            this.fireActivationStart(check.route), this.runCanActivateChild(check.path),\n            this.runCanActivate(check.route)\n        ]))), every((result) => result === true));\n        // this.fireChildActivationStart(check.path),\n    }\n    /**\n     * This should fire off `ActivationStart` events for each route being activated at this\n     * level.\n     * In other words, if you're activating `a` and `b` below, `path` will contain the\n     * `ActivatedRouteSnapshot`s for both and we will fire `ActivationStart` for both. Always\n     * return\n     * `true` so checks continue to run.\n     * @param {?} snapshot\n     * @return {?}\n     */\n    fireActivationStart(snapshot) {\n        if (snapshot !== null && this.forwardEvent) {\n            this.forwardEvent(new ActivationStart(snapshot));\n        }\n        return of(true);\n    }\n    /**\n     * This should fire off `ChildActivationStart` events for each route being activated at this\n     * level.\n     * In other words, if you're activating `a` and `b` below, `path` will contain the\n     * `ActivatedRouteSnapshot`s for both and we will fire `ChildActivationStart` for both. Always\n     * return\n     * `true` so checks continue to run.\n     * @param {?} snapshot\n     * @return {?}\n     */\n    fireChildActivationStart(snapshot) {\n        if (snapshot !== null && this.forwardEvent) {\n            this.forwardEvent(new ChildActivationStart(snapshot));\n        }\n        return of(true);\n    }\n    /**\n     * @param {?} future\n     * @return {?}\n     */\n    runCanActivate(future) {\n        /** @type {?} */\n        const canActivate = future.routeConfig ? future.routeConfig.canActivate : null;\n        if (!canActivate || canActivate.length === 0)\n            return of(true);\n        /** @type {?} */\n        const obs = from(canActivate).pipe(map((c) => {\n            /** @type {?} */\n            const guard = this.getToken(c, future);\n            /** @type {?} */\n            let observable;\n            if (guard.canActivate) {\n                observable = wrapIntoObservable(guard.canActivate(future, this.future));\n            }\n            else {\n                observable = wrapIntoObservable(guard(future, this.future));\n            }\n            return observable.pipe(first());\n        }));\n        return andObservables(obs);\n    }\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    runCanActivateChild(path) {\n        /** @type {?} */\n        const future = path[path.length - 1];\n        /** @type {?} */\n        const canActivateChildGuards = path.slice(0, path.length - 1)\n            .reverse()\n            .map(p => this.extractCanActivateChild(p))\n            .filter(_ => _ !== null);\n        return andObservables(from(canActivateChildGuards).pipe(map((d) => {\n            /** @type {?} */\n            const obs = from(d.guards).pipe(map((c) => {\n                /** @type {?} */\n                const guard = this.getToken(c, d.node);\n                /** @type {?} */\n                let observable;\n                if (guard.canActivateChild) {\n                    observable = wrapIntoObservable(guard.canActivateChild(future, this.future));\n                }\n                else {\n                    observable = wrapIntoObservable(guard(future, this.future));\n                }\n                return observable.pipe(first());\n            }));\n            return andObservables(obs);\n        })));\n    }\n    /**\n     * @param {?} p\n     * @return {?}\n     */\n    extractCanActivateChild(p) {\n        /** @type {?} */\n        const canActivateChild = p.routeConfig ? p.routeConfig.canActivateChild : null;\n        if (!canActivateChild || canActivateChild.length === 0)\n            return null;\n        return { node: p, guards: canActivateChild };\n    }\n    /**\n     * @param {?} component\n     * @param {?} curr\n     * @return {?}\n     */\n    runCanDeactivate(component, curr) {\n        /** @type {?} */\n        const canDeactivate = curr && curr.routeConfig ? curr.routeConfig.canDeactivate : null;\n        if (!canDeactivate || canDeactivate.length === 0)\n            return of(true);\n        /** @type {?} */\n        const canDeactivate$ = from(canDeactivate).pipe(mergeMap((c) => {\n            /** @type {?} */\n            const guard = this.getToken(c, curr);\n            /** @type {?} */\n            let observable;\n            if (guard.canDeactivate) {\n                observable =\n                    wrapIntoObservable(guard.canDeactivate(component, curr, this.curr, this.future));\n            }\n            else {\n                observable = wrapIntoObservable(guard(component, curr, this.curr, this.future));\n            }\n            return observable.pipe(first());\n        }));\n        return canDeactivate$.pipe(every((result) => result === true));\n    }\n    /**\n     * @param {?} future\n     * @param {?} paramsInheritanceStrategy\n     * @return {?}\n     */\n    runResolve(future, paramsInheritanceStrategy) {\n        /** @type {?} */\n        const resolve = future._resolve;\n        return this.resolveNode(resolve, future).pipe(map((resolvedData) => {\n            future._resolvedData = resolvedData;\n            future.data = Object.assign({}, future.data, inheritedParamsDataResolve(future, paramsInheritanceStrategy).resolve);\n            return null;\n        }));\n    }\n    /**\n     * @param {?} resolve\n     * @param {?} future\n     * @return {?}\n     */\n    resolveNode(resolve, future) {\n        /** @type {?} */\n        const keys = Object.keys(resolve);\n        if (keys.length === 0) {\n            return of({});\n        }\n        if (keys.length === 1) {\n            /** @type {?} */\n            const key = keys[0];\n            return this.getResolver(resolve[key], future).pipe(map((value) => {\n                return { [key]: value };\n            }));\n        }\n        /** @type {?} */\n        const data = {};\n        /** @type {?} */\n        const runningResolvers$ = from(keys).pipe(mergeMap((key) => {\n            return this.getResolver(resolve[key], future).pipe(map((value) => {\n                data[key] = value;\n                return value;\n            }));\n        }));\n        return runningResolvers$.pipe(last(), map(() => data));\n    }\n    /**\n     * @param {?} injectionToken\n     * @param {?} future\n     * @return {?}\n     */\n    getResolver(injectionToken, future) {\n        /** @type {?} */\n        const resolver = this.getToken(injectionToken, future);\n        return resolver.resolve ? wrapIntoObservable(resolver.resolve(future, this.future)) :\n            wrapIntoObservable(resolver(future, this.future));\n    }\n    /**\n     * @param {?} token\n     * @param {?} snapshot\n     * @return {?}\n     */\n    getToken(token, snapshot) {\n        /** @type {?} */\n        const config = closestLoadedConfig(snapshot);\n        /** @type {?} */\n        const injector = config ? config.module.injector : this.moduleInjector;\n        return injector.get(token);\n    }\n}\n/**\n * @param {?} snapshot\n * @return {?}\n */\nfunction closestLoadedConfig(snapshot) {\n    if (!snapshot)\n        return null;\n    for (let s = snapshot.parent; s; s = s.parent) {\n        /** @type {?} */\n        const route = s.routeConfig;\n        if (route && route._loadedConfig)\n            return route._loadedConfig;\n    }\n    return null;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass NoMatch$1 {\n}\n/**\n * @param {?} rootComponentType\n * @param {?} config\n * @param {?} urlTree\n * @param {?} url\n * @param {?=} paramsInheritanceStrategy\n * @param {?=} relativeLinkResolution\n * @return {?}\n */\nfunction recognize(rootComponentType, config, urlTree, url, paramsInheritanceStrategy = 'emptyOnly', relativeLinkResolution = 'legacy') {\n    return new Recognizer(rootComponentType, config, urlTree, url, paramsInheritanceStrategy, relativeLinkResolution)\n        .recognize();\n}\nclass Recognizer {\n    /**\n     * @param {?} rootComponentType\n     * @param {?} config\n     * @param {?} urlTree\n     * @param {?} url\n     * @param {?} paramsInheritanceStrategy\n     * @param {?} relativeLinkResolution\n     */\n    constructor(rootComponentType, config, urlTree, url, paramsInheritanceStrategy, relativeLinkResolution) {\n        this.rootComponentType = rootComponentType;\n        this.config = config;\n        this.urlTree = urlTree;\n        this.url = url;\n        this.paramsInheritanceStrategy = paramsInheritanceStrategy;\n        this.relativeLinkResolution = relativeLinkResolution;\n    }\n    /**\n     * @return {?}\n     */\n    recognize() {\n        try {\n            /** @type {?} */\n            const rootSegmentGroup = split$1(this.urlTree.root, [], [], this.config, this.relativeLinkResolution).segmentGroup;\n            /** @type {?} */\n            const children = this.processSegmentGroup(this.config, rootSegmentGroup, PRIMARY_OUTLET);\n            /** @type {?} */\n            const root = new ActivatedRouteSnapshot([], Object.freeze({}), Object.freeze(Object.assign({}, this.urlTree.queryParams)), /** @type {?} */ ((this.urlTree.fragment)), {}, PRIMARY_OUTLET, this.rootComponentType, null, this.urlTree.root, -1, {});\n            /** @type {?} */\n            const rootNode = new TreeNode(root, children);\n            /** @type {?} */\n            const routeState = new RouterStateSnapshot(this.url, rootNode);\n            this.inheritParamsAndData(routeState._root);\n            return of(routeState);\n        }\n        catch (e) {\n            return new Observable((obs) => obs.error(e));\n        }\n    }\n    /**\n     * @param {?} routeNode\n     * @return {?}\n     */\n    inheritParamsAndData(routeNode) {\n        /** @type {?} */\n        const route = routeNode.value;\n        /** @type {?} */\n        const i = inheritedParamsDataResolve(route, this.paramsInheritanceStrategy);\n        route.params = Object.freeze(i.params);\n        route.data = Object.freeze(i.data);\n        routeNode.children.forEach(n => this.inheritParamsAndData(n));\n    }\n    /**\n     * @param {?} config\n     * @param {?} segmentGroup\n     * @param {?} outlet\n     * @return {?}\n     */\n    processSegmentGroup(config, segmentGroup, outlet) {\n        if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n            return this.processChildren(config, segmentGroup);\n        }\n        return this.processSegment(config, segmentGroup, segmentGroup.segments, outlet);\n    }\n    /**\n     * @param {?} config\n     * @param {?} segmentGroup\n     * @return {?}\n     */\n    processChildren(config, segmentGroup) {\n        /** @type {?} */\n        const children = mapChildrenIntoArray(segmentGroup, (child, childOutlet) => this.processSegmentGroup(config, child, childOutlet));\n        checkOutletNameUniqueness(children);\n        sortActivatedRouteSnapshots(children);\n        return children;\n    }\n    /**\n     * @param {?} config\n     * @param {?} segmentGroup\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    processSegment(config, segmentGroup, segments, outlet) {\n        for (const r of config) {\n            try {\n                return this.processSegmentAgainstRoute(r, segmentGroup, segments, outlet);\n            }\n            catch (e) {\n                if (!(e instanceof NoMatch$1))\n                    throw e;\n            }\n        }\n        if (this.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n            return [];\n        }\n        throw new NoMatch$1();\n    }\n    /**\n     * @param {?} segmentGroup\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    noLeftoversInUrl(segmentGroup, segments, outlet) {\n        return segments.length === 0 && !segmentGroup.children[outlet];\n    }\n    /**\n     * @param {?} route\n     * @param {?} rawSegment\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    processSegmentAgainstRoute(route, rawSegment, segments, outlet) {\n        if (route.redirectTo)\n            throw new NoMatch$1();\n        if ((route.outlet || PRIMARY_OUTLET) !== outlet)\n            throw new NoMatch$1();\n        /** @type {?} */\n        let snapshot;\n        /** @type {?} */\n        let consumedSegments = [];\n        /** @type {?} */\n        let rawSlicedSegments = [];\n        if (route.path === '**') {\n            /** @type {?} */\n            const params = segments.length > 0 ? /** @type {?} */ ((last$1(segments))).parameters : {};\n            snapshot = new ActivatedRouteSnapshot(segments, params, Object.freeze(Object.assign({}, this.urlTree.queryParams)), /** @type {?} */ ((this.urlTree.fragment)), getData(route), outlet, /** @type {?} */ ((route.component)), route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + segments.length, getResolve(route));\n        }\n        else {\n            /** @type {?} */\n            const result = match$1(rawSegment, route, segments);\n            consumedSegments = result.consumedSegments;\n            rawSlicedSegments = segments.slice(result.lastChild);\n            snapshot = new ActivatedRouteSnapshot(consumedSegments, result.parameters, Object.freeze(Object.assign({}, this.urlTree.queryParams)), /** @type {?} */ ((this.urlTree.fragment)), getData(route), outlet, /** @type {?} */ ((route.component)), route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + consumedSegments.length, getResolve(route));\n        }\n        /** @type {?} */\n        const childConfig = getChildConfig(route);\n        const { segmentGroup, slicedSegments } = split$1(rawSegment, consumedSegments, rawSlicedSegments, childConfig, this.relativeLinkResolution);\n        if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n            /** @type {?} */\n            const children = this.processChildren(childConfig, segmentGroup);\n            return [new TreeNode(snapshot, children)];\n        }\n        if (childConfig.length === 0 && slicedSegments.length === 0) {\n            return [new TreeNode(snapshot, [])];\n        }\n        /** @type {?} */\n        const children = this.processSegment(childConfig, segmentGroup, slicedSegments, PRIMARY_OUTLET);\n        return [new TreeNode(snapshot, children)];\n    }\n}\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction sortActivatedRouteSnapshots(nodes) {\n    nodes.sort((a, b) => {\n        if (a.value.outlet === PRIMARY_OUTLET)\n            return -1;\n        if (b.value.outlet === PRIMARY_OUTLET)\n            return 1;\n        return a.value.outlet.localeCompare(b.value.outlet);\n    });\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getChildConfig(route) {\n    if (route.children) {\n        return route.children;\n    }\n    if (route.loadChildren) {\n        return /** @type {?} */ ((route._loadedConfig)).routes;\n    }\n    return [];\n}\n/**\n * @param {?} segmentGroup\n * @param {?} route\n * @param {?} segments\n * @return {?}\n */\nfunction match$1(segmentGroup, route, segments) {\n    if (route.path === '') {\n        if (route.pathMatch === 'full' && (segmentGroup.hasChildren() || segments.length > 0)) {\n            throw new NoMatch$1();\n        }\n        return { consumedSegments: [], lastChild: 0, parameters: {} };\n    }\n    /** @type {?} */\n    const matcher = route.matcher || defaultUrlMatcher;\n    /** @type {?} */\n    const res = matcher(segments, segmentGroup, route);\n    if (!res)\n        throw new NoMatch$1();\n    /** @type {?} */\n    const posParams = {};\n    forEach(/** @type {?} */ ((res.posParams)), (v, k) => { posParams[k] = v.path; });\n    /** @type {?} */\n    const parameters = res.consumed.length > 0 ? Object.assign({}, posParams, res.consumed[res.consumed.length - 1].parameters) :\n        posParams;\n    return { consumedSegments: res.consumed, lastChild: res.consumed.length, parameters };\n}\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction checkOutletNameUniqueness(nodes) {\n    /** @type {?} */\n    const names = {};\n    nodes.forEach(n => {\n        /** @type {?} */\n        const routeWithSameOutletName = names[n.value.outlet];\n        if (routeWithSameOutletName) {\n            /** @type {?} */\n            const p = routeWithSameOutletName.url.map(s => s.toString()).join('/');\n            /** @type {?} */\n            const c = n.value.url.map(s => s.toString()).join('/');\n            throw new Error(`Two segments cannot have the same outlet name: '${p}' and '${c}'.`);\n        }\n        names[n.value.outlet] = n.value;\n    });\n}\n/**\n * @param {?} segmentGroup\n * @return {?}\n */\nfunction getSourceSegmentGroup(segmentGroup) {\n    /** @type {?} */\n    let s = segmentGroup;\n    while (s._sourceSegment) {\n        s = s._sourceSegment;\n    }\n    return s;\n}\n/**\n * @param {?} segmentGroup\n * @return {?}\n */\nfunction getPathIndexShift(segmentGroup) {\n    /** @type {?} */\n    let s = segmentGroup;\n    /** @type {?} */\n    let res = (s._segmentIndexShift ? s._segmentIndexShift : 0);\n    while (s._sourceSegment) {\n        s = s._sourceSegment;\n        res += (s._segmentIndexShift ? s._segmentIndexShift : 0);\n    }\n    return res - 1;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} consumedSegments\n * @param {?} slicedSegments\n * @param {?} config\n * @param {?} relativeLinkResolution\n * @return {?}\n */\nfunction split$1(segmentGroup, consumedSegments, slicedSegments, config, relativeLinkResolution) {\n    if (slicedSegments.length > 0 &&\n        containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n        /** @type {?} */\n        const s = new UrlSegmentGroup(consumedSegments, createChildrenForEmptyPaths(segmentGroup, consumedSegments, config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n        s._sourceSegment = segmentGroup;\n        s._segmentIndexShift = consumedSegments.length;\n        return { segmentGroup: s, slicedSegments: [] };\n    }\n    if (slicedSegments.length === 0 &&\n        containsEmptyPathMatches(segmentGroup, slicedSegments, config)) {\n        /** @type {?} */\n        const s = new UrlSegmentGroup(segmentGroup.segments, addEmptyPathsToChildrenIfNeeded(segmentGroup, consumedSegments, slicedSegments, config, segmentGroup.children, relativeLinkResolution));\n        s._sourceSegment = segmentGroup;\n        s._segmentIndexShift = consumedSegments.length;\n        return { segmentGroup: s, slicedSegments };\n    }\n    /** @type {?} */\n    const s = new UrlSegmentGroup(segmentGroup.segments, segmentGroup.children);\n    s._sourceSegment = segmentGroup;\n    s._segmentIndexShift = consumedSegments.length;\n    return { segmentGroup: s, slicedSegments };\n}\n/**\n * @param {?} segmentGroup\n * @param {?} consumedSegments\n * @param {?} slicedSegments\n * @param {?} routes\n * @param {?} children\n * @param {?} relativeLinkResolution\n * @return {?}\n */\nfunction addEmptyPathsToChildrenIfNeeded(segmentGroup, consumedSegments, slicedSegments, routes, children, relativeLinkResolution) {\n    /** @type {?} */\n    const res = {};\n    for (const r of routes) {\n        if (emptyPathMatch(segmentGroup, slicedSegments, r) && !children[getOutlet$1(r)]) {\n            /** @type {?} */\n            const s = new UrlSegmentGroup([], {});\n            s._sourceSegment = segmentGroup;\n            if (relativeLinkResolution === 'legacy') {\n                s._segmentIndexShift = segmentGroup.segments.length;\n            }\n            else {\n                s._segmentIndexShift = consumedSegments.length;\n            }\n            res[getOutlet$1(r)] = s;\n        }\n    }\n    return Object.assign({}, children, res);\n}\n/**\n * @param {?} segmentGroup\n * @param {?} consumedSegments\n * @param {?} routes\n * @param {?} primarySegment\n * @return {?}\n */\nfunction createChildrenForEmptyPaths(segmentGroup, consumedSegments, routes, primarySegment) {\n    /** @type {?} */\n    const res = {};\n    res[PRIMARY_OUTLET] = primarySegment;\n    primarySegment._sourceSegment = segmentGroup;\n    primarySegment._segmentIndexShift = consumedSegments.length;\n    for (const r of routes) {\n        if (r.path === '' && getOutlet$1(r) !== PRIMARY_OUTLET) {\n            /** @type {?} */\n            const s = new UrlSegmentGroup([], {});\n            s._sourceSegment = segmentGroup;\n            s._segmentIndexShift = consumedSegments.length;\n            res[getOutlet$1(r)] = s;\n        }\n    }\n    return res;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} routes\n * @return {?}\n */\nfunction containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, routes) {\n    return routes.some(r => emptyPathMatch(segmentGroup, slicedSegments, r) && getOutlet$1(r) !== PRIMARY_OUTLET);\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} routes\n * @return {?}\n */\nfunction containsEmptyPathMatches(segmentGroup, slicedSegments, routes) {\n    return routes.some(r => emptyPathMatch(segmentGroup, slicedSegments, r));\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} r\n * @return {?}\n */\nfunction emptyPathMatch(segmentGroup, slicedSegments, r) {\n    if ((segmentGroup.hasChildren() || slicedSegments.length > 0) && r.pathMatch === 'full') {\n        return false;\n    }\n    return r.path === '' && r.redirectTo === undefined;\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getOutlet$1(route) {\n    return route.outlet || PRIMARY_OUTLET;\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getData(route) {\n    return route.data || {};\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getResolve(route) {\n    return route.resolve || {};\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * \\@description\n *\n * Provides a way to customize when activated routes get reused.\n *\n * \\@experimental\n * @abstract\n */\nclass RouteReuseStrategy {\n}\n/**\n * Does not detach any subtrees. Reuses routes as long as their route config is the same.\n */\nclass DefaultRouteReuseStrategy {\n    /**\n     * @param {?} route\n     * @return {?}\n     */\n    shouldDetach(route) { return false; }\n    /**\n     * @param {?} route\n     * @param {?} detachedTree\n     * @return {?}\n     */\n    store(route, detachedTree) { }\n    /**\n     * @param {?} route\n     * @return {?}\n     */\n    shouldAttach(route) { return false; }\n    /**\n     * @param {?} route\n     * @return {?}\n     */\n    retrieve(route) { return null; }\n    /**\n     * @param {?} future\n     * @param {?} curr\n     * @return {?}\n     */\n    shouldReuseRoute(future, curr) {\n        return future.routeConfig === curr.routeConfig;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * \\@docsNotRequired\n * \\@experimental\n  @type {?} */\nconst ROUTES = new InjectionToken('ROUTES');\nclass RouterConfigLoader {\n    /**\n     * @param {?} loader\n     * @param {?} compiler\n     * @param {?=} onLoadStartListener\n     * @param {?=} onLoadEndListener\n     */\n    constructor(loader, compiler, onLoadStartListener, onLoadEndListener) {\n        this.loader = loader;\n        this.compiler = compiler;\n        this.onLoadStartListener = onLoadStartListener;\n        this.onLoadEndListener = onLoadEndListener;\n    }\n    /**\n     * @param {?} parentInjector\n     * @param {?} route\n     * @return {?}\n     */\n    load(parentInjector, route) {\n        if (this.onLoadStartListener) {\n            this.onLoadStartListener(route);\n        }\n        /** @type {?} */\n        const moduleFactory$ = this.loadModuleFactory(/** @type {?} */ ((route.loadChildren)));\n        return moduleFactory$.pipe(map((factory) => {\n            if (this.onLoadEndListener) {\n                this.onLoadEndListener(route);\n            }\n            /** @type {?} */\n            const module = factory.create(parentInjector);\n            return new LoadedRouterConfig(flatten(module.injector.get(ROUTES)).map(standardizeConfig), module);\n        }));\n    }\n    /**\n     * @param {?} loadChildren\n     * @return {?}\n     */\n    loadModuleFactory(loadChildren) {\n        if (typeof loadChildren === 'string') {\n            return from(this.loader.load(loadChildren));\n        }\n        else {\n            return wrapIntoObservable(loadChildren()).pipe(mergeMap((t) => {\n                if (t instanceof NgModuleFactory) {\n                    return of(t);\n                }\n                else {\n                    return from(this.compiler.compileModuleAsync(t));\n                }\n            }));\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@description\n *\n * Provides a way to migrate AngularJS applications to Angular.\n *\n * \\@experimental\n * @abstract\n */\nclass UrlHandlingStrategy {\n}\n/**\n * \\@experimental\n */\nclass DefaultUrlHandlingStrategy {\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    shouldProcessUrl(url) { return true; }\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    extract(url) { return url; }\n    /**\n     * @param {?} newUrlPart\n     * @param {?} wholeUrl\n     * @return {?}\n     */\n    merge(newUrlPart, wholeUrl) { return newUrlPart; }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @param {?} error\n * @return {?}\n */\nfunction defaultErrorHandler(error) {\n    throw error;\n}\n/**\n * @param {?} error\n * @param {?} urlSerializer\n * @param {?} url\n * @return {?}\n */\nfunction defaultMalformedUriErrorHandler(error, urlSerializer, url) {\n    return urlSerializer.parse('/');\n}\n/**\n * \\@internal\n * @param {?} snapshot\n * @param {?} runExtras\n * @return {?}\n */\nfunction defaultRouterHook(snapshot, runExtras) {\n    return /** @type {?} */ (of(null));\n}\n/**\n * \\@description\n *\n * Provides the navigation and url manipulation capabilities.\n *\n * See `Routes` for more details and examples.\n *\n * \\@ngModule RouterModule\n *\n *\n */\nclass Router {\n    /**\n     * Creates the router service.\n     * @param {?} rootComponentType\n     * @param {?} urlSerializer\n     * @param {?} rootContexts\n     * @param {?} location\n     * @param {?} injector\n     * @param {?} loader\n     * @param {?} compiler\n     * @param {?} config\n     */\n    constructor(rootComponentType, urlSerializer, rootContexts, location, injector, loader, compiler, config) {\n        this.rootComponentType = rootComponentType;\n        this.urlSerializer = urlSerializer;\n        this.rootContexts = rootContexts;\n        this.location = location;\n        this.config = config;\n        this.navigations = new BehaviorSubject(/** @type {?} */ ((null)));\n        this.navigationId = 0;\n        this.isNgZoneEnabled = false;\n        this.events = new Subject();\n        /**\n         * Error handler that is invoked when a navigation errors.\n         *\n         * See `ErrorHandler` for more information.\n         */\n        this.errorHandler = defaultErrorHandler;\n        /**\n         * Malformed uri error handler is invoked when `Router.parseUrl(url)` throws an\n         * error due to containing an invalid character. The most common case would be a `%` sign\n         * that's not encoded and is not part of a percent encoded sequence.\n         */\n        this.malformedUriErrorHandler = defaultMalformedUriErrorHandler;\n        /**\n         * Indicates if at least one navigation happened.\n         */\n        this.navigated = false;\n        this.lastSuccessfulId = -1;\n        /**\n         * Used by RouterModule. This allows us to\n         * pause the navigation either before preactivation or after it.\n         * \\@internal\n         */\n        this.hooks = {\n            beforePreactivation: defaultRouterHook,\n            afterPreactivation: defaultRouterHook\n        };\n        /**\n         * Extracts and merges URLs. Used for AngularJS to Angular migrations.\n         */\n        this.urlHandlingStrategy = new DefaultUrlHandlingStrategy();\n        this.routeReuseStrategy = new DefaultRouteReuseStrategy();\n        /**\n         * Define what the router should do if it receives a navigation request to the current URL.\n         * By default, the router will ignore this navigation. However, this prevents features such\n         * as a \"refresh\" button. Use this option to configure the behavior when navigating to the\n         * current URL. Default is 'ignore'.\n         */\n        this.onSameUrlNavigation = 'ignore';\n        /**\n         * Defines how the router merges params, data and resolved data from parent to child\n         * routes. Available options are:\n         *\n         * - `'emptyOnly'`, the default, only inherits parent params for path-less or component-less\n         *   routes.\n         * - `'always'`, enables unconditional inheritance of parent params.\n         */\n        this.paramsInheritanceStrategy = 'emptyOnly';\n        /**\n         * Defines when the router updates the browser URL. The default behavior is to update after\n         * successful navigation. However, some applications may prefer a mode where the URL gets\n         * updated at the beginning of navigation. The most common use case would be updating the\n         * URL early so if navigation fails, you can show an error message with the URL that failed.\n         * Available options are:\n         *\n         * - `'deferred'`, the default, updates the browser URL after navigation has finished.\n         * - `'eager'`, updates browser URL at the beginning of navigation.\n         */\n        this.urlUpdateStrategy = 'deferred';\n        /**\n         * See {\\@link RouterModule} for more information.\n         */\n        this.relativeLinkResolution = 'legacy';\n        /** @type {?} */\n        const onLoadStart = (r) => this.triggerEvent(new RouteConfigLoadStart(r));\n        /** @type {?} */\n        const onLoadEnd = (r) => this.triggerEvent(new RouteConfigLoadEnd(r));\n        this.ngModule = injector.get(NgModuleRef);\n        this.console = injector.get(ɵConsole);\n        /** @type {?} */\n        const ngZone = injector.get(NgZone);\n        this.isNgZoneEnabled = ngZone instanceof NgZone;\n        this.resetConfig(config);\n        this.currentUrlTree = createEmptyUrlTree();\n        this.rawUrlTree = this.currentUrlTree;\n        this.configLoader = new RouterConfigLoader(loader, compiler, onLoadStart, onLoadEnd);\n        this.routerState = createEmptyState(this.currentUrlTree, this.rootComponentType);\n        this.processNavigations();\n    }\n    /**\n     * \\@internal\n     * TODO: this should be removed once the constructor of the router made internal\n     * @param {?} rootComponentType\n     * @return {?}\n     */\n    resetRootComponentType(rootComponentType) {\n        this.rootComponentType = rootComponentType;\n        // TODO: vsavkin router 4.0 should make the root component set to null\n        // this will simplify the lifecycle of the router.\n        this.routerState.root.component = this.rootComponentType;\n    }\n    /**\n     * Sets up the location change listener and performs the initial navigation.\n     * @return {?}\n     */\n    initialNavigation() {\n        this.setUpLocationChangeListener();\n        if (this.navigationId === 0) {\n            this.navigateByUrl(this.location.path(true), { replaceUrl: true });\n        }\n    }\n    /**\n     * Sets up the location change listener.\n     * @return {?}\n     */\n    setUpLocationChangeListener() {\n        // Don't need to use Zone.wrap any more, because zone.js\n        // already patch onPopState, so location change callback will\n        // run into ngZone\n        if (!this.locationSubscription) {\n            this.locationSubscription = /** @type {?} */ (this.location.subscribe((change) => {\n                /** @type {?} */\n                let rawUrlTree = this.parseUrl(change['url']);\n                /** @type {?} */\n                const source = change['type'] === 'popstate' ? 'popstate' : 'hashchange';\n                /** @type {?} */\n                const state = change.state && change.state.navigationId ?\n                    { navigationId: change.state.navigationId } :\n                    null;\n                setTimeout(() => { this.scheduleNavigation(rawUrlTree, source, state, { replaceUrl: true }); }, 0);\n            }));\n        }\n    }\n    /**\n     * The current url\n     * @return {?}\n     */\n    get url() { return this.serializeUrl(this.currentUrlTree); }\n    /**\n     * \\@internal\n     * @param {?} event\n     * @return {?}\n     */\n    triggerEvent(event) { (/** @type {?} */ (this.events)).next(event); }\n    /**\n     * Resets the configuration used for navigation and generating links.\n     *\n     * \\@usageNotes\n     *\n     * ### Example\n     *\n     * ```\n     * router.resetConfig([\n     *  { path: 'team/:id', component: TeamCmp, children: [\n     *    { path: 'simple', component: SimpleCmp },\n     *    { path: 'user/:name', component: UserCmp }\n     *  ]}\n     * ]);\n     * ```\n     * @param {?} config\n     * @return {?}\n     */\n    resetConfig(config) {\n        validateConfig(config);\n        this.config = config.map(standardizeConfig);\n        this.navigated = false;\n        this.lastSuccessfulId = -1;\n    }\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    ngOnDestroy() { this.dispose(); }\n    /**\n     * Disposes of the router\n     * @return {?}\n     */\n    dispose() {\n        if (this.locationSubscription) {\n            this.locationSubscription.unsubscribe();\n            this.locationSubscription = /** @type {?} */ ((null));\n        }\n    }\n    /**\n     * Applies an array of commands to the current url tree and creates a new url tree.\n     *\n     * When given an activate route, applies the given commands starting from the route.\n     * When not given a route, applies the given command starting from the root.\n     *\n     * \\@usageNotes\n     *\n     * ### Example\n     *\n     * ```\n     * // create /team/33/user/11\n     * router.createUrlTree(['/team', 33, 'user', 11]);\n     *\n     * // create /team/33;expand=true/user/11\n     * router.createUrlTree(['/team', 33, {expand: true}, 'user', 11]);\n     *\n     * // you can collapse static segments like this (this works only with the first passed-in value):\n     * router.createUrlTree(['/team/33/user', userId]);\n     *\n     * // If the first segment can contain slashes, and you do not want the router to split it, you\n     * // can do the following:\n     *\n     * router.createUrlTree([{segmentPath: '/one/two'}]);\n     *\n     * // create /team/33/(user/11//right:chat)\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: 'chat'}}]);\n     *\n     * // remove the right secondary node\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: null}}]);\n     *\n     * // assuming the current url is `/team/33/user/11` and the route points to `user/11`\n     *\n     * // navigate to /team/33/user/11/details\n     * router.createUrlTree(['details'], {relativeTo: route});\n     *\n     * // navigate to /team/33/user/22\n     * router.createUrlTree(['../22'], {relativeTo: route});\n     *\n     * // navigate to /team/44/user/22\n     * router.createUrlTree(['../../team/44/user/22'], {relativeTo: route});\n     * ```\n     * @param {?} commands\n     * @param {?=} navigationExtras\n     * @return {?}\n     */\n    createUrlTree(commands, navigationExtras = {}) {\n        const { relativeTo, queryParams, fragment, preserveQueryParams, queryParamsHandling, preserveFragment } = navigationExtras;\n        if (isDevMode() && preserveQueryParams && /** @type {?} */ (console) && /** @type {?} */ (console.warn)) {\n            console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n        }\n        /** @type {?} */\n        const a = relativeTo || this.routerState.root;\n        /** @type {?} */\n        const f = preserveFragment ? this.currentUrlTree.fragment : fragment;\n        /** @type {?} */\n        let q = null;\n        if (queryParamsHandling) {\n            switch (queryParamsHandling) {\n                case 'merge':\n                    q = Object.assign({}, this.currentUrlTree.queryParams, queryParams);\n                    break;\n                case 'preserve':\n                    q = this.currentUrlTree.queryParams;\n                    break;\n                default:\n                    q = queryParams || null;\n            }\n        }\n        else {\n            q = preserveQueryParams ? this.currentUrlTree.queryParams : queryParams || null;\n        }\n        if (q !== null) {\n            q = this.removeEmptyProps(q);\n        }\n        return createUrlTree(a, this.currentUrlTree, commands, /** @type {?} */ ((q)), /** @type {?} */ ((f)));\n    }\n    /**\n     * Navigate based on the provided url. This navigation is always absolute.\n     *\n     * Returns a promise that:\n     * - resolves to 'true' when navigation succeeds,\n     * - resolves to 'false' when navigation fails,\n     * - is rejected when an error happens.\n     *\n     * \\@usageNotes\n     *\n     * ### Example\n     *\n     * ```\n     * router.navigateByUrl(\"/team/33/user/11\");\n     *\n     * // Navigate without updating the URL\n     * router.navigateByUrl(\"/team/33/user/11\", { skipLocationChange: true });\n     * ```\n     *\n     * Since `navigateByUrl()` takes an absolute URL as the first parameter,\n     * it will not apply any delta to the current URL and ignores any properties\n     * in the second parameter (the `NavigationExtras`) that would change the\n     * provided URL.\n     * @param {?} url\n     * @param {?=} extras\n     * @return {?}\n     */\n    navigateByUrl(url, extras = { skipLocationChange: false }) {\n        if (isDevMode() && this.isNgZoneEnabled && !NgZone.isInAngularZone()) {\n            this.console.warn(`Navigation triggered outside Angular zone, did you forget to call 'ngZone.run()'?`);\n        }\n        /** @type {?} */\n        const urlTree = url instanceof UrlTree ? url : this.parseUrl(url);\n        /** @type {?} */\n        const mergedTree = this.urlHandlingStrategy.merge(urlTree, this.rawUrlTree);\n        return this.scheduleNavigation(mergedTree, 'imperative', null, extras);\n    }\n    /**\n     * Navigate based on the provided array of commands and a starting point.\n     * If no starting route is provided, the navigation is absolute.\n     *\n     * Returns a promise that:\n     * - resolves to 'true' when navigation succeeds,\n     * - resolves to 'false' when navigation fails,\n     * - is rejected when an error happens.\n     *\n     * \\@usageNotes\n     *\n     * ### Example\n     *\n     * ```\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route});\n     *\n     * // Navigate without updating the URL\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route, skipLocationChange: true});\n     * ```\n     *\n     * The first parameter of `navigate()` is a delta to be applied to the current URL\n     * or the one provided in the `relativeTo` property of the second parameter (the\n     * `NavigationExtras`).\n     * @param {?} commands\n     * @param {?=} extras\n     * @return {?}\n     */\n    navigate(commands, extras = { skipLocationChange: false }) {\n        validateCommands(commands);\n        return this.navigateByUrl(this.createUrlTree(commands, extras), extras);\n    }\n    /**\n     * Serializes a `UrlTree` into a string\n     * @param {?} url\n     * @return {?}\n     */\n    serializeUrl(url) { return this.urlSerializer.serialize(url); }\n    /**\n     * Parses a string into a `UrlTree`\n     * @param {?} url\n     * @return {?}\n     */\n    parseUrl(url) {\n        /** @type {?} */\n        let urlTree;\n        try {\n            urlTree = this.urlSerializer.parse(url);\n        }\n        catch (e) {\n            urlTree = this.malformedUriErrorHandler(e, this.urlSerializer, url);\n        }\n        return urlTree;\n    }\n    /**\n     * Returns whether the url is activated\n     * @param {?} url\n     * @param {?} exact\n     * @return {?}\n     */\n    isActive(url, exact) {\n        if (url instanceof UrlTree) {\n            return containsTree(this.currentUrlTree, url, exact);\n        }\n        /** @type {?} */\n        const urlTree = this.parseUrl(url);\n        return containsTree(this.currentUrlTree, urlTree, exact);\n    }\n    /**\n     * @param {?} params\n     * @return {?}\n     */\n    removeEmptyProps(params) {\n        return Object.keys(params).reduce((result, key) => {\n            /** @type {?} */\n            const value = params[key];\n            if (value !== null && value !== undefined) {\n                result[key] = value;\n            }\n            return result;\n        }, {});\n    }\n    /**\n     * @return {?}\n     */\n    processNavigations() {\n        this.navigations\n            .pipe(concatMap((nav) => {\n            if (nav) {\n                this.executeScheduledNavigation(nav);\n                // a failed navigation should not stop the router from processing\n                // further navigations => the catch\n                return nav.promise.catch(() => { });\n            }\n            else {\n                return /** @type {?} */ (of(null));\n            }\n        }))\n            .subscribe(() => { });\n    }\n    /**\n     * @param {?} rawUrl\n     * @param {?} source\n     * @param {?} state\n     * @param {?} extras\n     * @return {?}\n     */\n    scheduleNavigation(rawUrl, source, state, extras) {\n        /** @type {?} */\n        const lastNavigation = this.navigations.value;\n        // If the user triggers a navigation imperatively (e.g., by using navigateByUrl),\n        // and that navigation results in 'replaceState' that leads to the same URL,\n        // we should skip those.\n        if (lastNavigation && source !== 'imperative' && lastNavigation.source === 'imperative' &&\n            lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n            return Promise.resolve(true); // return value is not used\n        }\n        // Because of a bug in IE and Edge, the location class fires two events (popstate and\n        // hashchange) every single time. The second one should be ignored. Otherwise, the URL will\n        // flicker. Handles the case when a popstate was emitted first.\n        if (lastNavigation && source == 'hashchange' && lastNavigation.source === 'popstate' &&\n            lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n            return Promise.resolve(true); // return value is not used\n        }\n        // Because of a bug in IE and Edge, the location class fires two events (popstate and\n        // hashchange) every single time. The second one should be ignored. Otherwise, the URL will\n        // flicker. Handles the case when a hashchange was emitted first.\n        if (lastNavigation && source == 'popstate' && lastNavigation.source === 'hashchange' &&\n            lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n            return Promise.resolve(true); // return value is not used\n        }\n        /** @type {?} */\n        let resolve = null;\n        /** @type {?} */\n        let reject = null;\n        /** @type {?} */\n        const promise = new Promise((res, rej) => {\n            resolve = res;\n            reject = rej;\n        });\n        /** @type {?} */\n        const id = ++this.navigationId;\n        this.navigations.next({ id, source, state, rawUrl, extras, resolve, reject, promise });\n        // Make sure that the error is propagated even though `processNavigations` catch\n        // handler does not rethrow\n        return promise.catch((e) => Promise.reject(e));\n    }\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    executeScheduledNavigation({ id, rawUrl, extras, resolve, reject, source, state }) {\n        /** @type {?} */\n        const url = this.urlHandlingStrategy.extract(rawUrl);\n        /** @type {?} */\n        const urlTransition = !this.navigated || url.toString() !== this.currentUrlTree.toString();\n        if ((this.onSameUrlNavigation === 'reload' ? true : urlTransition) &&\n            this.urlHandlingStrategy.shouldProcessUrl(rawUrl)) {\n            if (this.urlUpdateStrategy === 'eager' && !extras.skipLocationChange) {\n                this.setBrowserUrl(rawUrl, !!extras.replaceUrl, id);\n            }\n            (/** @type {?} */ (this.events))\n                .next(new NavigationStart(id, this.serializeUrl(url), source, state));\n            Promise.resolve()\n                .then((_) => this.runNavigate(url, rawUrl, !!extras.skipLocationChange, !!extras.replaceUrl, id, null))\n                .then(resolve, reject);\n            // we cannot process the current URL, but we could process the previous one =>\n            // we need to do some cleanup\n        }\n        else if (urlTransition && this.rawUrlTree &&\n            this.urlHandlingStrategy.shouldProcessUrl(this.rawUrlTree)) {\n            (/** @type {?} */ (this.events))\n                .next(new NavigationStart(id, this.serializeUrl(url), source, state));\n            Promise.resolve()\n                .then((_) => this.runNavigate(url, rawUrl, false, false, id, createEmptyState(url, this.rootComponentType).snapshot))\n                .then(resolve, reject);\n        }\n        else {\n            this.rawUrlTree = rawUrl;\n            resolve(null);\n        }\n    }\n    /**\n     * @param {?} url\n     * @param {?} rawUrl\n     * @param {?} skipLocationChange\n     * @param {?} replaceUrl\n     * @param {?} id\n     * @param {?} precreatedState\n     * @return {?}\n     */\n    runNavigate(url, rawUrl, skipLocationChange, replaceUrl, id, precreatedState) {\n        if (id !== this.navigationId) {\n            (/** @type {?} */ (this.events))\n                .next(new NavigationCancel(id, this.serializeUrl(url), `Navigation ID ${id} is not equal to the current navigation id ${this.navigationId}`));\n            return Promise.resolve(false);\n        }\n        return new Promise((resolvePromise, rejectPromise) => {\n            /** @type {?} */\n            let urlAndSnapshot$;\n            if (!precreatedState) {\n                /** @type {?} */\n                const moduleInjector = this.ngModule.injector;\n                /** @type {?} */\n                const redirectsApplied$ = applyRedirects(moduleInjector, this.configLoader, this.urlSerializer, url, this.config);\n                urlAndSnapshot$ = redirectsApplied$.pipe(mergeMap((appliedUrl) => {\n                    return recognize(this.rootComponentType, this.config, appliedUrl, this.serializeUrl(appliedUrl), this.paramsInheritanceStrategy, this.relativeLinkResolution)\n                        .pipe(map((snapshot) => {\n                        (/** @type {?} */ (this.events))\n                            .next(new RoutesRecognized(id, this.serializeUrl(url), this.serializeUrl(appliedUrl), snapshot));\n                        return { appliedUrl, snapshot };\n                    }));\n                }));\n            }\n            else {\n                urlAndSnapshot$ = of({ appliedUrl: url, snapshot: precreatedState });\n            }\n            /** @type {?} */\n            const beforePreactivationDone$ = urlAndSnapshot$.pipe(mergeMap((p) => {\n                if (typeof p === 'boolean')\n                    return of(p);\n                return this.hooks\n                    .beforePreactivation(p.snapshot, {\n                    navigationId: id,\n                    appliedUrlTree: url,\n                    rawUrlTree: rawUrl, skipLocationChange, replaceUrl,\n                })\n                    .pipe(map(() => p));\n            }));\n            /** @type {?} */\n            let preActivation;\n            /** @type {?} */\n            const preactivationSetup$ = beforePreactivationDone$.pipe(map((p) => {\n                if (typeof p === 'boolean')\n                    return p;\n                const { appliedUrl, snapshot } = p;\n                /** @type {?} */\n                const moduleInjector = this.ngModule.injector;\n                preActivation = new PreActivation(snapshot, this.routerState.snapshot, moduleInjector, (evt) => this.triggerEvent(evt));\n                preActivation.initialize(this.rootContexts);\n                return { appliedUrl, snapshot };\n            }));\n            /** @type {?} */\n            const preactivationCheckGuards$ = preactivationSetup$.pipe(mergeMap((p) => {\n                if (typeof p === 'boolean' || this.navigationId !== id)\n                    return of(false);\n                const { appliedUrl, snapshot } = p;\n                this.triggerEvent(new GuardsCheckStart(id, this.serializeUrl(url), this.serializeUrl(appliedUrl), snapshot));\n                return preActivation.checkGuards().pipe(map((shouldActivate) => {\n                    this.triggerEvent(new GuardsCheckEnd(id, this.serializeUrl(url), this.serializeUrl(appliedUrl), snapshot, shouldActivate));\n                    return { appliedUrl: appliedUrl, snapshot: snapshot, shouldActivate: shouldActivate };\n                }));\n            }));\n            /** @type {?} */\n            const preactivationResolveData$ = preactivationCheckGuards$.pipe(mergeMap((p) => {\n                if (typeof p === 'boolean' || this.navigationId !== id)\n                    return of(false);\n                if (p.shouldActivate && preActivation.isActivating()) {\n                    this.triggerEvent(new ResolveStart(id, this.serializeUrl(url), this.serializeUrl(p.appliedUrl), p.snapshot));\n                    return preActivation.resolveData(this.paramsInheritanceStrategy).pipe(map(() => {\n                        this.triggerEvent(new ResolveEnd(id, this.serializeUrl(url), this.serializeUrl(p.appliedUrl), p.snapshot));\n                        return p;\n                    }));\n                }\n                else {\n                    return of(p);\n                }\n            }));\n            /** @type {?} */\n            const preactivationDone$ = preactivationResolveData$.pipe(mergeMap((p) => {\n                if (typeof p === 'boolean' || this.navigationId !== id)\n                    return of(false);\n                return this.hooks\n                    .afterPreactivation(p.snapshot, {\n                    navigationId: id,\n                    appliedUrlTree: url,\n                    rawUrlTree: rawUrl, skipLocationChange, replaceUrl,\n                })\n                    .pipe(map(() => p));\n            }));\n            /** @type {?} */\n            const routerState$ = preactivationDone$.pipe(map((p) => {\n                if (typeof p === 'boolean' || this.navigationId !== id)\n                    return false;\n                const { appliedUrl, snapshot, shouldActivate } = p;\n                if (shouldActivate) {\n                    /** @type {?} */\n                    const state = createRouterState(this.routeReuseStrategy, snapshot, this.routerState);\n                    return { appliedUrl, state, shouldActivate };\n                }\n                else {\n                    return { appliedUrl, state: null, shouldActivate };\n                }\n            }));\n            this.activateRoutes(routerState$, this.routerState, this.currentUrlTree, id, url, rawUrl, skipLocationChange, replaceUrl, resolvePromise, rejectPromise);\n        });\n    }\n    /**\n     * Performs the logic of activating routes. This is a synchronous process by default. While this\n     * is a private method, it could be overridden to make activation asynchronous.\n     * @param {?} state\n     * @param {?} storedState\n     * @param {?} storedUrl\n     * @param {?} id\n     * @param {?} url\n     * @param {?} rawUrl\n     * @param {?} skipLocationChange\n     * @param {?} replaceUrl\n     * @param {?} resolvePromise\n     * @param {?} rejectPromise\n     * @return {?}\n     */\n    activateRoutes(state, storedState, storedUrl, id, url, rawUrl, skipLocationChange, replaceUrl, resolvePromise, rejectPromise) {\n        /** @type {?} */\n        let navigationIsSuccessful;\n        state\n            .forEach((p) => {\n            if (typeof p === 'boolean' || !p.shouldActivate || id !== this.navigationId || !p.state) {\n                navigationIsSuccessful = false;\n                return;\n            }\n            const { appliedUrl, state } = p;\n            this.currentUrlTree = appliedUrl;\n            this.rawUrlTree = this.urlHandlingStrategy.merge(this.currentUrlTree, rawUrl);\n            (/** @type {?} */ (this)).routerState = state;\n            if (this.urlUpdateStrategy === 'deferred' && !skipLocationChange) {\n                this.setBrowserUrl(this.rawUrlTree, replaceUrl, id);\n            }\n            new ActivateRoutes(this.routeReuseStrategy, state, storedState, (evt) => this.triggerEvent(evt))\n                .activate(this.rootContexts);\n            navigationIsSuccessful = true;\n        })\n            .then(() => {\n            if (navigationIsSuccessful) {\n                this.navigated = true;\n                this.lastSuccessfulId = id;\n                (/** @type {?} */ (this.events))\n                    .next(new NavigationEnd(id, this.serializeUrl(url), this.serializeUrl(this.currentUrlTree)));\n                resolvePromise(true);\n            }\n            else {\n                this.resetUrlToCurrentUrlTree();\n                (/** @type {?} */ (this.events))\n                    .next(new NavigationCancel(id, this.serializeUrl(url), ''));\n                resolvePromise(false);\n            }\n        }, (e) => {\n            if (isNavigationCancelingError(e)) {\n                this.navigated = true;\n                this.resetStateAndUrl(storedState, storedUrl, rawUrl);\n                (/** @type {?} */ (this.events))\n                    .next(new NavigationCancel(id, this.serializeUrl(url), e.message));\n                resolvePromise(false);\n            }\n            else {\n                this.resetStateAndUrl(storedState, storedUrl, rawUrl);\n                (/** @type {?} */ (this.events))\n                    .next(new NavigationError(id, this.serializeUrl(url), e));\n                try {\n                    resolvePromise(this.errorHandler(e));\n                }\n                catch (ee) {\n                    rejectPromise(ee);\n                }\n            }\n        });\n    }\n    /**\n     * @param {?} url\n     * @param {?} replaceUrl\n     * @param {?} id\n     * @return {?}\n     */\n    setBrowserUrl(url, replaceUrl, id) {\n        /** @type {?} */\n        const path = this.urlSerializer.serialize(url);\n        if (this.location.isCurrentPathEqualTo(path) || replaceUrl) {\n            this.location.replaceState(path, '', { navigationId: id });\n        }\n        else {\n            this.location.go(path, '', { navigationId: id });\n        }\n    }\n    /**\n     * @param {?} storedState\n     * @param {?} storedUrl\n     * @param {?} rawUrl\n     * @return {?}\n     */\n    resetStateAndUrl(storedState, storedUrl, rawUrl) {\n        (/** @type {?} */ (this)).routerState = storedState;\n        this.currentUrlTree = storedUrl;\n        this.rawUrlTree = this.urlHandlingStrategy.merge(this.currentUrlTree, rawUrl);\n        this.resetUrlToCurrentUrlTree();\n    }\n    /**\n     * @return {?}\n     */\n    resetUrlToCurrentUrlTree() {\n        this.location.replaceState(this.urlSerializer.serialize(this.rawUrlTree), '', { navigationId: this.lastSuccessfulId });\n    }\n}\nclass ActivateRoutes {\n    /**\n     * @param {?} routeReuseStrategy\n     * @param {?} futureState\n     * @param {?} currState\n     * @param {?} forwardEvent\n     */\n    constructor(routeReuseStrategy, futureState, currState, forwardEvent) {\n        this.routeReuseStrategy = routeReuseStrategy;\n        this.futureState = futureState;\n        this.currState = currState;\n        this.forwardEvent = forwardEvent;\n    }\n    /**\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    activate(parentContexts) {\n        /** @type {?} */\n        const futureRoot = this.futureState._root;\n        /** @type {?} */\n        const currRoot = this.currState ? this.currState._root : null;\n        this.deactivateChildRoutes(futureRoot, currRoot, parentContexts);\n        advanceActivatedRoute(this.futureState.root);\n        this.activateChildRoutes(futureRoot, currRoot, parentContexts);\n    }\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} contexts\n     * @return {?}\n     */\n    deactivateChildRoutes(futureNode, currNode, contexts) {\n        /** @type {?} */\n        const children = nodeChildrenAsMap(currNode);\n        // Recurse on the routes active in the future state to de-activate deeper children\n        futureNode.children.forEach(futureChild => {\n            /** @type {?} */\n            const childOutletName = futureChild.value.outlet;\n            this.deactivateRoutes(futureChild, children[childOutletName], contexts);\n            delete children[childOutletName];\n        });\n        // De-activate the routes that will not be re-used\n        forEach(children, (v, childName) => {\n            this.deactivateRouteAndItsChildren(v, contexts);\n        });\n    }\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} parentContext\n     * @return {?}\n     */\n    deactivateRoutes(futureNode, currNode, parentContext) {\n        /** @type {?} */\n        const future = futureNode.value;\n        /** @type {?} */\n        const curr = currNode ? currNode.value : null;\n        if (future === curr) {\n            // Reusing the node, check to see if the children need to be de-activated\n            if (future.component) {\n                /** @type {?} */\n                const context = parentContext.getContext(future.outlet);\n                if (context) {\n                    this.deactivateChildRoutes(futureNode, currNode, context.children);\n                }\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.deactivateChildRoutes(futureNode, currNode, parentContext);\n            }\n        }\n        else {\n            if (curr) {\n                // Deactivate the current route which will not be re-used\n                this.deactivateRouteAndItsChildren(currNode, parentContext);\n            }\n        }\n    }\n    /**\n     * @param {?} route\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    deactivateRouteAndItsChildren(route, parentContexts) {\n        if (this.routeReuseStrategy.shouldDetach(route.value.snapshot)) {\n            this.detachAndStoreRouteSubtree(route, parentContexts);\n        }\n        else {\n            this.deactivateRouteAndOutlet(route, parentContexts);\n        }\n    }\n    /**\n     * @param {?} route\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    detachAndStoreRouteSubtree(route, parentContexts) {\n        /** @type {?} */\n        const context = parentContexts.getContext(route.value.outlet);\n        if (context && context.outlet) {\n            /** @type {?} */\n            const componentRef = context.outlet.detach();\n            /** @type {?} */\n            const contexts = context.children.onOutletDeactivated();\n            this.routeReuseStrategy.store(route.value.snapshot, { componentRef, route, contexts });\n        }\n    }\n    /**\n     * @param {?} route\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    deactivateRouteAndOutlet(route, parentContexts) {\n        /** @type {?} */\n        const context = parentContexts.getContext(route.value.outlet);\n        if (context) {\n            /** @type {?} */\n            const children = nodeChildrenAsMap(route);\n            /** @type {?} */\n            const contexts = route.value.component ? context.children : parentContexts;\n            forEach(children, (v, k) => this.deactivateRouteAndItsChildren(v, contexts));\n            if (context.outlet) {\n                // Destroy the component\n                context.outlet.deactivate();\n                // Destroy the contexts for all the outlets that were in the component\n                context.children.onOutletDeactivated();\n            }\n        }\n    }\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} contexts\n     * @return {?}\n     */\n    activateChildRoutes(futureNode, currNode, contexts) {\n        /** @type {?} */\n        const children = nodeChildrenAsMap(currNode);\n        futureNode.children.forEach(c => {\n            this.activateRoutes(c, children[c.value.outlet], contexts);\n            this.forwardEvent(new ActivationEnd(c.value.snapshot));\n        });\n        if (futureNode.children.length) {\n            this.forwardEvent(new ChildActivationEnd(futureNode.value.snapshot));\n        }\n    }\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    activateRoutes(futureNode, currNode, parentContexts) {\n        /** @type {?} */\n        const future = futureNode.value;\n        /** @type {?} */\n        const curr = currNode ? currNode.value : null;\n        advanceActivatedRoute(future);\n        // reusing the node\n        if (future === curr) {\n            if (future.component) {\n                /** @type {?} */\n                const context = parentContexts.getOrCreateContext(future.outlet);\n                this.activateChildRoutes(futureNode, currNode, context.children);\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.activateChildRoutes(futureNode, currNode, parentContexts);\n            }\n        }\n        else {\n            if (future.component) {\n                /** @type {?} */\n                const context = parentContexts.getOrCreateContext(future.outlet);\n                if (this.routeReuseStrategy.shouldAttach(future.snapshot)) {\n                    /** @type {?} */\n                    const stored = (/** @type {?} */ (this.routeReuseStrategy.retrieve(future.snapshot)));\n                    this.routeReuseStrategy.store(future.snapshot, null);\n                    context.children.onOutletReAttached(stored.contexts);\n                    context.attachRef = stored.componentRef;\n                    context.route = stored.route.value;\n                    if (context.outlet) {\n                        // Attach right away when the outlet has already been instantiated\n                        // Otherwise attach from `RouterOutlet.ngOnInit` when it is instantiated\n                        context.outlet.attach(stored.componentRef, stored.route.value);\n                    }\n                    advanceActivatedRouteNodeAndItsChildren(stored.route);\n                }\n                else {\n                    /** @type {?} */\n                    const config = parentLoadedConfig(future.snapshot);\n                    /** @type {?} */\n                    const cmpFactoryResolver = config ? config.module.componentFactoryResolver : null;\n                    context.attachRef = null;\n                    context.route = future;\n                    context.resolver = cmpFactoryResolver;\n                    if (context.outlet) {\n                        // Activate the outlet when it has already been instantiated\n                        // Otherwise it will get activated from its `ngOnInit` when instantiated\n                        context.outlet.activateWith(future, cmpFactoryResolver);\n                    }\n                    this.activateChildRoutes(futureNode, null, context.children);\n                }\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.activateChildRoutes(futureNode, null, parentContexts);\n            }\n        }\n    }\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction advanceActivatedRouteNodeAndItsChildren(node) {\n    advanceActivatedRoute(node.value);\n    node.children.forEach(advanceActivatedRouteNodeAndItsChildren);\n}\n/**\n * @param {?} snapshot\n * @return {?}\n */\nfunction parentLoadedConfig(snapshot) {\n    for (let s = snapshot.parent; s; s = s.parent) {\n        /** @type {?} */\n        const route = s.routeConfig;\n        if (route && route._loadedConfig)\n            return route._loadedConfig;\n        if (route && route.component)\n            return null;\n    }\n    return null;\n}\n/**\n * @param {?} commands\n * @return {?}\n */\nfunction validateCommands(commands) {\n    for (let i = 0; i < commands.length; i++) {\n        /** @type {?} */\n        const cmd = commands[i];\n        if (cmd == null) {\n            throw new Error(`The requested path contains ${cmd} segment at index ${i}`);\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * \\@description\n *\n * Lets you link to specific routes in your app.\n *\n * Consider the following route configuration:\n * `[{ path: 'user/:name', component: UserCmp }]`.\n * When linking to this `user/:name` route, you use the `RouterLink` directive.\n *\n * If the link is static, you can use the directive as follows:\n * `<a routerLink=\"/user/bob\">link to user component</a>`\n *\n * If you use dynamic values to generate the link, you can pass an array of path\n * segments, followed by the params for each segment.\n *\n * For instance `['/team', teamId, 'user', userName, {details: true}]`\n * means that we want to generate a link to `/team/11/user/bob;details=true`.\n *\n * Multiple static segments can be merged into one\n * (e.g., `['/team/11/user', userName, {details: true}]`).\n *\n * The first segment name can be prepended with `/`, `./`, or `../`:\n * * If the first segment begins with `/`, the router will look up the route from the root of the\n *   app.\n * * If the first segment begins with `./`, or doesn't begin with a slash, the router will\n *   instead look in the children of the current activated route.\n * * And if the first segment begins with `../`, the router will go up one level.\n *\n * You can set query params and fragment as follows:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" fragment=\"education\">\n *   link to user component\n * </a>\n * ```\n * RouterLink will use these to generate this link: `/user/bob#education?debug=true`.\n *\n * (Deprecated in v4.0.0 use `queryParamsHandling` instead) You can also tell the\n * directive to preserve the current query params and fragment:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" preserveQueryParams preserveFragment>\n *   link to user component\n * </a>\n * ```\n *\n * You can tell the directive to how to handle queryParams, available options are:\n *  - `'merge'`: merge the queryParams into the current queryParams\n *  - `'preserve'`: preserve the current queryParams\n *  - default/`''`: use the queryParams only\n *\n * Same options for {\\@link NavigationExtras#queryParamsHandling\n * NavigationExtras#queryParamsHandling}.\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" queryParamsHandling=\"merge\">\n *   link to user component\n * </a>\n * ```\n *\n * The router link directive always treats the provided input as a delta to the current url.\n *\n * For instance, if the current url is `/user/(box//aux:team)`.\n *\n * Then the following link `<a [routerLink]=\"['/user/jim']\">Jim</a>` will generate the link\n * `/user/(jim//aux:team)`.\n *\n * See {\\@link Router#createUrlTree createUrlTree} for more information.\n *\n * \\@ngModule RouterModule\n *\n *\n */\nclass RouterLink {\n    /**\n     * @param {?} router\n     * @param {?} route\n     * @param {?} tabIndex\n     * @param {?} renderer\n     * @param {?} el\n     */\n    constructor(router, route, tabIndex, renderer, el) {\n        this.router = router;\n        this.route = route;\n        this.commands = [];\n        if (tabIndex == null) {\n            renderer.setAttribute(el.nativeElement, 'tabindex', '0');\n        }\n    }\n    /**\n     * @param {?} commands\n     * @return {?}\n     */\n    set routerLink(commands) {\n        if (commands != null) {\n            this.commands = Array.isArray(commands) ? commands : [commands];\n        }\n        else {\n            this.commands = [];\n        }\n    }\n    /**\n     * @deprecated 4.0.0 use `queryParamsHandling` instead.\n     * @param {?} value\n     * @return {?}\n     */\n    set preserveQueryParams(value) {\n        if (isDevMode() && /** @type {?} */ (console) && /** @type {?} */ (console.warn)) {\n            console.warn('preserveQueryParams is deprecated!, use queryParamsHandling instead.');\n        }\n        this.preserve = value;\n    }\n    /**\n     * @return {?}\n     */\n    onClick() {\n        /** @type {?} */\n        const extras = {\n            skipLocationChange: attrBoolValue(this.skipLocationChange),\n            replaceUrl: attrBoolValue(this.replaceUrl),\n        };\n        this.router.navigateByUrl(this.urlTree, extras);\n        return true;\n    }\n    /**\n     * @return {?}\n     */\n    get urlTree() {\n        return this.router.createUrlTree(this.commands, {\n            relativeTo: this.route,\n            queryParams: this.queryParams,\n            fragment: this.fragment,\n            preserveQueryParams: attrBoolValue(this.preserve),\n            queryParamsHandling: this.queryParamsHandling,\n            preserveFragment: attrBoolValue(this.preserveFragment),\n        });\n    }\n}\nRouterLink.decorators = [\n    { type: Directive, args: [{ selector: ':not(a)[routerLink]' },] }\n];\n/** @nocollapse */\nRouterLink.ctorParameters = () => [\n    { type: Router },\n    { type: ActivatedRoute },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: Renderer2 },\n    { type: ElementRef }\n];\nRouterLink.propDecorators = {\n    queryParams: [{ type: Input }],\n    fragment: [{ type: Input }],\n    queryParamsHandling: [{ type: Input }],\n    preserveFragment: [{ type: Input }],\n    skipLocationChange: [{ type: Input }],\n    replaceUrl: [{ type: Input }],\n    routerLink: [{ type: Input }],\n    preserveQueryParams: [{ type: Input }],\n    onClick: [{ type: HostListener, args: ['click',] }]\n};\n/**\n * \\@description\n *\n * Lets you link to specific routes in your app.\n *\n * See `RouterLink` for more information.\n *\n * \\@ngModule RouterModule\n *\n *\n */\nclass RouterLinkWithHref {\n    /**\n     * @param {?} router\n     * @param {?} route\n     * @param {?} locationStrategy\n     */\n    constructor(router, route, locationStrategy) {\n        this.router = router;\n        this.route = route;\n        this.locationStrategy = locationStrategy;\n        this.commands = [];\n        this.subscription = router.events.subscribe((s) => {\n            if (s instanceof NavigationEnd) {\n                this.updateTargetUrlAndHref();\n            }\n        });\n    }\n    /**\n     * @param {?} commands\n     * @return {?}\n     */\n    set routerLink(commands) {\n        if (commands != null) {\n            this.commands = Array.isArray(commands) ? commands : [commands];\n        }\n        else {\n            this.commands = [];\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set preserveQueryParams(value) {\n        if (isDevMode() && /** @type {?} */ (console) && /** @type {?} */ (console.warn)) {\n            console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n        }\n        this.preserve = value;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) { this.updateTargetUrlAndHref(); }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() { this.subscription.unsubscribe(); }\n    /**\n     * @param {?} button\n     * @param {?} ctrlKey\n     * @param {?} metaKey\n     * @param {?} shiftKey\n     * @return {?}\n     */\n    onClick(button, ctrlKey, metaKey, shiftKey) {\n        if (button !== 0 || ctrlKey || metaKey || shiftKey) {\n            return true;\n        }\n        if (typeof this.target === 'string' && this.target != '_self') {\n            return true;\n        }\n        /** @type {?} */\n        const extras = {\n            skipLocationChange: attrBoolValue(this.skipLocationChange),\n            replaceUrl: attrBoolValue(this.replaceUrl),\n        };\n        this.router.navigateByUrl(this.urlTree, extras);\n        return false;\n    }\n    /**\n     * @return {?}\n     */\n    updateTargetUrlAndHref() {\n        this.href = this.locationStrategy.prepareExternalUrl(this.router.serializeUrl(this.urlTree));\n    }\n    /**\n     * @return {?}\n     */\n    get urlTree() {\n        return this.router.createUrlTree(this.commands, {\n            relativeTo: this.route,\n            queryParams: this.queryParams,\n            fragment: this.fragment,\n            preserveQueryParams: attrBoolValue(this.preserve),\n            queryParamsHandling: this.queryParamsHandling,\n            preserveFragment: attrBoolValue(this.preserveFragment),\n        });\n    }\n}\nRouterLinkWithHref.decorators = [\n    { type: Directive, args: [{ selector: 'a[routerLink]' },] }\n];\n/** @nocollapse */\nRouterLinkWithHref.ctorParameters = () => [\n    { type: Router },\n    { type: ActivatedRoute },\n    { type: LocationStrategy }\n];\nRouterLinkWithHref.propDecorators = {\n    target: [{ type: HostBinding, args: ['attr.target',] }, { type: Input }],\n    queryParams: [{ type: Input }],\n    fragment: [{ type: Input }],\n    queryParamsHandling: [{ type: Input }],\n    preserveFragment: [{ type: Input }],\n    skipLocationChange: [{ type: Input }],\n    replaceUrl: [{ type: Input }],\n    href: [{ type: HostBinding }],\n    routerLink: [{ type: Input }],\n    preserveQueryParams: [{ type: Input }],\n    onClick: [{ type: HostListener, args: ['click', ['$event.button', '$event.ctrlKey', '$event.metaKey', '$event.shiftKey'],] }]\n};\n/**\n * @param {?} s\n * @return {?}\n */\nfunction attrBoolValue(s) {\n    return s === '' || !!s;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n *\n * \\@description\n *\n * Lets you add a CSS class to an element when the link's route becomes active.\n *\n * This directive lets you add a CSS class to an element when the link's route\n * becomes active.\n *\n * Consider the following example:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\">Bob</a>\n * ```\n *\n * When the url is either '/user' or '/user/bob', the active-link class will\n * be added to the `a` tag. If the url changes, the class will be removed.\n *\n * You can set more than one class, as follows:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"class1 class2\">Bob</a>\n * <a routerLink=\"/user/bob\" [routerLinkActive]=\"['class1', 'class2']\">Bob</a>\n * ```\n *\n * You can configure RouterLinkActive by passing `exact: true`. This will add the classes\n * only when the url matches the link exactly.\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact:\n * true}\">Bob</a>\n * ```\n *\n * You can assign the RouterLinkActive instance to a template variable and directly check\n * the `isActive` status.\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive #rla=\"routerLinkActive\">\n *   Bob {{ rla.isActive ? '(already open)' : ''}}\n * </a>\n * ```\n *\n * Finally, you can apply the RouterLinkActive directive to an ancestor of a RouterLink.\n *\n * ```\n * <div routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact: true}\">\n *   <a routerLink=\"/user/jim\">Jim</a>\n *   <a routerLink=\"/user/bob\">Bob</a>\n * </div>\n * ```\n *\n * This will set the active-link class on the div tag if the url is either '/user/jim' or\n * '/user/bob'.\n *\n * \\@ngModule RouterModule\n *\n *\n */\nclass RouterLinkActive {\n    /**\n     * @param {?} router\n     * @param {?} element\n     * @param {?} renderer\n     * @param {?} cdr\n     */\n    constructor(router, element, renderer, cdr) {\n        this.router = router;\n        this.element = element;\n        this.renderer = renderer;\n        this.cdr = cdr;\n        this.classes = [];\n        this.isActive = false;\n        this.routerLinkActiveOptions = { exact: false };\n        this.subscription = router.events.subscribe((s) => {\n            if (s instanceof NavigationEnd) {\n                this.update();\n            }\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this.links.changes.subscribe(_ => this.update());\n        this.linksWithHrefs.changes.subscribe(_ => this.update());\n        this.update();\n    }\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    set routerLinkActive(data) {\n        /** @type {?} */\n        const classes = Array.isArray(data) ? data : data.split(' ');\n        this.classes = classes.filter(c => !!c);\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) { this.update(); }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() { this.subscription.unsubscribe(); }\n    /**\n     * @return {?}\n     */\n    update() {\n        if (!this.links || !this.linksWithHrefs || !this.router.navigated)\n            return;\n        Promise.resolve().then(() => {\n            /** @type {?} */\n            const hasActiveLinks = this.hasActiveLinks();\n            if (this.isActive !== hasActiveLinks) {\n                (/** @type {?} */ (this)).isActive = hasActiveLinks;\n                this.classes.forEach((c) => {\n                    if (hasActiveLinks) {\n                        this.renderer.addClass(this.element.nativeElement, c);\n                    }\n                    else {\n                        this.renderer.removeClass(this.element.nativeElement, c);\n                    }\n                });\n            }\n        });\n    }\n    /**\n     * @param {?} router\n     * @return {?}\n     */\n    isLinkActive(router) {\n        return (link) => router.isActive(link.urlTree, this.routerLinkActiveOptions.exact);\n    }\n    /**\n     * @return {?}\n     */\n    hasActiveLinks() {\n        return this.links.some(this.isLinkActive(this.router)) ||\n            this.linksWithHrefs.some(this.isLinkActive(this.router));\n    }\n}\nRouterLinkActive.decorators = [\n    { type: Directive, args: [{\n                selector: '[routerLinkActive]',\n                exportAs: 'routerLinkActive',\n            },] }\n];\n/** @nocollapse */\nRouterLinkActive.ctorParameters = () => [\n    { type: Router },\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: ChangeDetectorRef }\n];\nRouterLinkActive.propDecorators = {\n    links: [{ type: ContentChildren, args: [RouterLink, { descendants: true },] }],\n    linksWithHrefs: [{ type: ContentChildren, args: [RouterLinkWithHref, { descendants: true },] }],\n    routerLinkActiveOptions: [{ type: Input }],\n    routerLinkActive: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Store contextual information about a `RouterOutlet`\n *\n *\n */\nclass OutletContext {\n    constructor() {\n        this.outlet = null;\n        this.route = null;\n        this.resolver = null;\n        this.children = new ChildrenOutletContexts();\n        this.attachRef = null;\n    }\n}\n/**\n * Store contextual information about the children (= nested) `RouterOutlet`\n *\n *\n */\nclass ChildrenOutletContexts {\n    constructor() {\n        this.contexts = new Map();\n    }\n    /**\n     * Called when a `RouterOutlet` directive is instantiated\n     * @param {?} childName\n     * @param {?} outlet\n     * @return {?}\n     */\n    onChildOutletCreated(childName, outlet) {\n        /** @type {?} */\n        const context = this.getOrCreateContext(childName);\n        context.outlet = outlet;\n        this.contexts.set(childName, context);\n    }\n    /**\n     * Called when a `RouterOutlet` directive is destroyed.\n     * We need to keep the context as the outlet could be destroyed inside a NgIf and might be\n     * re-created later.\n     * @param {?} childName\n     * @return {?}\n     */\n    onChildOutletDestroyed(childName) {\n        /** @type {?} */\n        const context = this.getContext(childName);\n        if (context) {\n            context.outlet = null;\n        }\n    }\n    /**\n     * Called when the corresponding route is deactivated during navigation.\n     * Because the component get destroyed, all children outlet are destroyed.\n     * @return {?}\n     */\n    onOutletDeactivated() {\n        /** @type {?} */\n        const contexts = this.contexts;\n        this.contexts = new Map();\n        return contexts;\n    }\n    /**\n     * @param {?} contexts\n     * @return {?}\n     */\n    onOutletReAttached(contexts) { this.contexts = contexts; }\n    /**\n     * @param {?} childName\n     * @return {?}\n     */\n    getOrCreateContext(childName) {\n        /** @type {?} */\n        let context = this.getContext(childName);\n        if (!context) {\n            context = new OutletContext();\n            this.contexts.set(childName, context);\n        }\n        return context;\n    }\n    /**\n     * @param {?} childName\n     * @return {?}\n     */\n    getContext(childName) { return this.contexts.get(childName) || null; }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * \\@description\n *\n * Acts as a placeholder that Angular dynamically fills based on the current router state.\n *\n * ```\n * <router-outlet></router-outlet>\n * <router-outlet name='left'></router-outlet>\n * <router-outlet name='right'></router-outlet>\n * ```\n *\n * A router outlet will emit an activate event any time a new component is being instantiated,\n * and a deactivate event when it is being destroyed.\n *\n * ```\n * <router-outlet\n *   (activate)='onActivate($event)'\n *   (deactivate)='onDeactivate($event)'></router-outlet>\n * ```\n * \\@ngModule RouterModule\n *\n *\n */\nclass RouterOutlet {\n    /**\n     * @param {?} parentContexts\n     * @param {?} location\n     * @param {?} resolver\n     * @param {?} name\n     * @param {?} changeDetector\n     */\n    constructor(parentContexts, location, resolver, name, changeDetector) {\n        this.parentContexts = parentContexts;\n        this.location = location;\n        this.resolver = resolver;\n        this.changeDetector = changeDetector;\n        this.activated = null;\n        this._activatedRoute = null;\n        this.activateEvents = new EventEmitter();\n        this.deactivateEvents = new EventEmitter();\n        this.name = name || PRIMARY_OUTLET;\n        parentContexts.onChildOutletCreated(this.name, this);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() { this.parentContexts.onChildOutletDestroyed(this.name); }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (!this.activated) {\n            /** @type {?} */\n            const context = this.parentContexts.getContext(this.name);\n            if (context && context.route) {\n                if (context.attachRef) {\n                    // `attachRef` is populated when there is an existing component to mount\n                    this.attach(context.attachRef, context.route);\n                }\n                else {\n                    // otherwise the component defined in the configuration is created\n                    this.activateWith(context.route, context.resolver || null);\n                }\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get isActivated() { return !!this.activated; }\n    /**\n     * @return {?}\n     */\n    get component() {\n        if (!this.activated)\n            throw new Error('Outlet is not activated');\n        return this.activated.instance;\n    }\n    /**\n     * @return {?}\n     */\n    get activatedRoute() {\n        if (!this.activated)\n            throw new Error('Outlet is not activated');\n        return /** @type {?} */ (this._activatedRoute);\n    }\n    /**\n     * @return {?}\n     */\n    get activatedRouteData() {\n        if (this._activatedRoute) {\n            return this._activatedRoute.snapshot.data;\n        }\n        return {};\n    }\n    /**\n     * Called when the `RouteReuseStrategy` instructs to detach the subtree\n     * @return {?}\n     */\n    detach() {\n        if (!this.activated)\n            throw new Error('Outlet is not activated');\n        this.location.detach();\n        /** @type {?} */\n        const cmp = this.activated;\n        this.activated = null;\n        this._activatedRoute = null;\n        return cmp;\n    }\n    /**\n     * Called when the `RouteReuseStrategy` instructs to re-attach a previously detached subtree\n     * @param {?} ref\n     * @param {?} activatedRoute\n     * @return {?}\n     */\n    attach(ref, activatedRoute) {\n        this.activated = ref;\n        this._activatedRoute = activatedRoute;\n        this.location.insert(ref.hostView);\n    }\n    /**\n     * @return {?}\n     */\n    deactivate() {\n        if (this.activated) {\n            /** @type {?} */\n            const c = this.component;\n            this.activated.destroy();\n            this.activated = null;\n            this._activatedRoute = null;\n            this.deactivateEvents.emit(c);\n        }\n    }\n    /**\n     * @param {?} activatedRoute\n     * @param {?} resolver\n     * @return {?}\n     */\n    activateWith(activatedRoute, resolver) {\n        if (this.isActivated) {\n            throw new Error('Cannot activate an already activated outlet');\n        }\n        this._activatedRoute = activatedRoute;\n        /** @type {?} */\n        const snapshot = activatedRoute._futureSnapshot;\n        /** @type {?} */\n        const component = /** @type {?} */ (/** @type {?} */ ((snapshot.routeConfig)).component);\n        resolver = resolver || this.resolver;\n        /** @type {?} */\n        const factory = resolver.resolveComponentFactory(component);\n        /** @type {?} */\n        const childContexts = this.parentContexts.getOrCreateContext(this.name).children;\n        /** @type {?} */\n        const injector = new OutletInjector(activatedRoute, childContexts, this.location.injector);\n        this.activated = this.location.createComponent(factory, this.location.length, injector);\n        // Calling `markForCheck` to make sure we will run the change detection when the\n        // `RouterOutlet` is inside a `ChangeDetectionStrategy.OnPush` component.\n        this.changeDetector.markForCheck();\n        this.activateEvents.emit(this.activated.instance);\n    }\n}\nRouterOutlet.decorators = [\n    { type: Directive, args: [{ selector: 'router-outlet', exportAs: 'outlet' },] }\n];\n/** @nocollapse */\nRouterOutlet.ctorParameters = () => [\n    { type: ChildrenOutletContexts },\n    { type: ViewContainerRef },\n    { type: ComponentFactoryResolver },\n    { type: String, decorators: [{ type: Attribute, args: ['name',] }] },\n    { type: ChangeDetectorRef }\n];\nRouterOutlet.propDecorators = {\n    activateEvents: [{ type: Output, args: ['activate',] }],\n    deactivateEvents: [{ type: Output, args: ['deactivate',] }]\n};\nclass OutletInjector {\n    /**\n     * @param {?} route\n     * @param {?} childContexts\n     * @param {?} parent\n     */\n    constructor(route, childContexts, parent) {\n        this.route = route;\n        this.childContexts = childContexts;\n        this.parent = parent;\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    get(token, notFoundValue) {\n        if (token === ActivatedRoute) {\n            return this.route;\n        }\n        if (token === ChildrenOutletContexts) {\n            return this.childContexts;\n        }\n        return this.parent.get(token, notFoundValue);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * \\@description\n *\n * Provides a preloading strategy.\n *\n * \\@experimental\n * @abstract\n */\nclass PreloadingStrategy {\n}\n/**\n * \\@description\n *\n * Provides a preloading strategy that preloads all modules as quickly as possible.\n *\n * ```\n * RouteModule.forRoot(ROUTES, {preloadingStrategy: PreloadAllModules})\n * ```\n *\n * \\@experimental\n */\nclass PreloadAllModules {\n    /**\n     * @param {?} route\n     * @param {?} fn\n     * @return {?}\n     */\n    preload(route, fn) {\n        return fn().pipe(catchError(() => of(null)));\n    }\n}\n/**\n * \\@description\n *\n * Provides a preloading strategy that does not preload any modules.\n *\n * This strategy is enabled by default.\n *\n * \\@experimental\n */\nclass NoPreloading {\n    /**\n     * @param {?} route\n     * @param {?} fn\n     * @return {?}\n     */\n    preload(route, fn) { return of(null); }\n}\n/**\n * The preloader optimistically loads all router configurations to\n * make navigations into lazily-loaded sections of the application faster.\n *\n * The preloader runs in the background. When the router bootstraps, the preloader\n * starts listening to all navigation events. After every such event, the preloader\n * will check if any configurations can be loaded lazily.\n *\n * If a route is protected by `canLoad` guards, the preloaded will not load it.\n *\n *\n */\nclass RouterPreloader {\n    /**\n     * @param {?} router\n     * @param {?} moduleLoader\n     * @param {?} compiler\n     * @param {?} injector\n     * @param {?} preloadingStrategy\n     */\n    constructor(router, moduleLoader, compiler, injector, preloadingStrategy) {\n        this.router = router;\n        this.injector = injector;\n        this.preloadingStrategy = preloadingStrategy;\n        /** @type {?} */\n        const onStartLoad = (r) => router.triggerEvent(new RouteConfigLoadStart(r));\n        /** @type {?} */\n        const onEndLoad = (r) => router.triggerEvent(new RouteConfigLoadEnd(r));\n        this.loader = new RouterConfigLoader(moduleLoader, compiler, onStartLoad, onEndLoad);\n    }\n    /**\n     * @return {?}\n     */\n    setUpPreloading() {\n        this.subscription =\n            this.router.events\n                .pipe(filter((e) => e instanceof NavigationEnd), concatMap(() => this.preload()))\n                .subscribe(() => { });\n    }\n    /**\n     * @return {?}\n     */\n    preload() {\n        /** @type {?} */\n        const ngModule = this.injector.get(NgModuleRef);\n        return this.processRoutes(ngModule, this.router.config);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() { this.subscription.unsubscribe(); }\n    /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @return {?}\n     */\n    processRoutes(ngModule, routes) {\n        /** @type {?} */\n        const res = [];\n        for (const route of routes) {\n            // we already have the config loaded, just recurse\n            if (route.loadChildren && !route.canLoad && route._loadedConfig) {\n                /** @type {?} */\n                const childConfig = route._loadedConfig;\n                res.push(this.processRoutes(childConfig.module, childConfig.routes));\n                // no config loaded, fetch the config\n            }\n            else if (route.loadChildren && !route.canLoad) {\n                res.push(this.preloadConfig(ngModule, route));\n                // recurse into children\n            }\n            else if (route.children) {\n                res.push(this.processRoutes(ngModule, route.children));\n            }\n        }\n        return from(res).pipe(mergeAll(), map((_) => void 0));\n    }\n    /**\n     * @param {?} ngModule\n     * @param {?} route\n     * @return {?}\n     */\n    preloadConfig(ngModule, route) {\n        return this.preloadingStrategy.preload(route, () => {\n            /** @type {?} */\n            const loaded$ = this.loader.load(ngModule.injector, route);\n            return loaded$.pipe(mergeMap((config) => {\n                route._loadedConfig = config;\n                return this.processRoutes(config.module, config.routes);\n            }));\n        });\n    }\n}\nRouterPreloader.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nRouterPreloader.ctorParameters = () => [\n    { type: Router },\n    { type: NgModuleFactoryLoader },\n    { type: Compiler },\n    { type: Injector },\n    { type: PreloadingStrategy }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass RouterScroller {\n    /**\n     * @param {?} router\n     * @param {?} viewportScroller\n     * @param {?=} options\n     */\n    constructor(router, viewportScroller, options = {}) {\n        this.router = router;\n        this.viewportScroller = viewportScroller;\n        this.options = options;\n        this.lastId = 0;\n        this.lastSource = 'imperative';\n        this.restoredId = 0;\n        this.store = {};\n        // Default both options to 'disabled'\n        options.scrollPositionRestoration = options.scrollPositionRestoration || 'disabled';\n        options.anchorScrolling = options.anchorScrolling || 'disabled';\n    }\n    /**\n     * @return {?}\n     */\n    init() {\n        // we want to disable the automatic scrolling because having two places\n        // responsible for scrolling results race conditions, especially given\n        // that browser don't implement this behavior consistently\n        if (this.options.scrollPositionRestoration !== 'disabled') {\n            this.viewportScroller.setHistoryScrollRestoration('manual');\n        }\n        this.routerEventsSubscription = this.createScrollEvents();\n        this.scrollEventsSubscription = this.consumeScrollEvents();\n    }\n    /**\n     * @return {?}\n     */\n    createScrollEvents() {\n        return this.router.events.subscribe(e => {\n            if (e instanceof NavigationStart) {\n                // store the scroll position of the current stable navigations.\n                this.store[this.lastId] = this.viewportScroller.getScrollPosition();\n                this.lastSource = e.navigationTrigger;\n                this.restoredId = e.restoredState ? e.restoredState.navigationId : 0;\n            }\n            else if (e instanceof NavigationEnd) {\n                this.lastId = e.id;\n                this.scheduleScrollEvent(e, this.router.parseUrl(e.urlAfterRedirects).fragment);\n            }\n        });\n    }\n    /**\n     * @return {?}\n     */\n    consumeScrollEvents() {\n        return this.router.events.subscribe(e => {\n            if (!(e instanceof Scroll))\n                return;\n            // a popstate event. The pop state event will always ignore anchor scrolling.\n            if (e.position) {\n                if (this.options.scrollPositionRestoration === 'top') {\n                    this.viewportScroller.scrollToPosition([0, 0]);\n                }\n                else if (this.options.scrollPositionRestoration === 'enabled') {\n                    this.viewportScroller.scrollToPosition(e.position);\n                }\n                // imperative navigation \"forward\"\n            }\n            else {\n                if (e.anchor && this.options.anchorScrolling === 'enabled') {\n                    this.viewportScroller.scrollToAnchor(e.anchor);\n                }\n                else if (this.options.scrollPositionRestoration !== 'disabled') {\n                    this.viewportScroller.scrollToPosition([0, 0]);\n                }\n            }\n        });\n    }\n    /**\n     * @param {?} routerEvent\n     * @param {?} anchor\n     * @return {?}\n     */\n    scheduleScrollEvent(routerEvent, anchor) {\n        this.router.triggerEvent(new Scroll(routerEvent, this.lastSource === 'popstate' ? this.store[this.restoredId] : null, anchor));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.routerEventsSubscription) {\n            this.routerEventsSubscription.unsubscribe();\n        }\n        if (this.scrollEventsSubscription) {\n            this.scrollEventsSubscription.unsubscribe();\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * \\@description\n *\n * Contains a list of directives\n *\n *\n  @type {?} */\nconst ROUTER_DIRECTIVES = [RouterOutlet, RouterLink, RouterLinkWithHref, RouterLinkActive, EmptyOutletComponent];\n/** *\n * \\@description\n *\n * Is used in DI to configure the router.\n *\n *\n  @type {?} */\nconst ROUTER_CONFIGURATION = new InjectionToken('ROUTER_CONFIGURATION');\n/** *\n * \\@docsNotRequired\n  @type {?} */\nconst ROUTER_FORROOT_GUARD = new InjectionToken('ROUTER_FORROOT_GUARD');\n/** @type {?} */\nconst ROUTER_PROVIDERS = [\n    Location,\n    { provide: UrlSerializer, useClass: DefaultUrlSerializer },\n    {\n        provide: Router,\n        useFactory: setupRouter,\n        deps: [\n            ApplicationRef, UrlSerializer, ChildrenOutletContexts, Location, Injector,\n            NgModuleFactoryLoader, Compiler, ROUTES, ROUTER_CONFIGURATION,\n            [UrlHandlingStrategy, new Optional()], [RouteReuseStrategy, new Optional()]\n        ]\n    },\n    ChildrenOutletContexts,\n    { provide: ActivatedRoute, useFactory: rootRoute, deps: [Router] },\n    { provide: NgModuleFactoryLoader, useClass: SystemJsNgModuleLoader },\n    RouterPreloader,\n    NoPreloading,\n    PreloadAllModules,\n    { provide: ROUTER_CONFIGURATION, useValue: { enableTracing: false } },\n];\n/**\n * @return {?}\n */\nfunction routerNgProbeToken() {\n    return new NgProbeToken('Router', Router);\n}\n/**\n * \\@usageNotes\n *\n * RouterModule can be imported multiple times: once per lazily-loaded bundle.\n * Since the router deals with a global shared resource--location, we cannot have\n * more than one router service active.\n *\n * That is why there are two ways to create the module: `RouterModule.forRoot` and\n * `RouterModule.forChild`.\n *\n * * `forRoot` creates a module that contains all the directives, the given routes, and the router\n *   service itself.\n * * `forChild` creates a module that contains all the directives and the given routes, but does not\n *   include the router service.\n *\n * When registered at the root, the module should be used as follows\n *\n * ```\n * \\@NgModule({\n *   imports: [RouterModule.forRoot(ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n *\n * For submodules and lazy loaded submodules the module should be used as follows:\n *\n * ```\n * \\@NgModule({\n *   imports: [RouterModule.forChild(ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n *\n * \\@description\n *\n * Adds router directives and providers.\n *\n * Managing state transitions is one of the hardest parts of building applications. This is\n * especially true on the web, where you also need to ensure that the state is reflected in the URL.\n * In addition, we often want to split applications into multiple bundles and load them on demand.\n * Doing this transparently is not trivial.\n *\n * The Angular router solves these problems. Using the router, you can declaratively specify\n * application states, manage state transitions while taking care of the URL, and load bundles on\n * demand.\n *\n * [Read this developer guide](https://angular.io/docs/ts/latest/guide/router.html) to get an\n * overview of how the router should be used.\n *\n *\n */\nclass RouterModule {\n    /**\n     * @param {?} guard\n     * @param {?} router\n     */\n    constructor(guard, router) { }\n    /**\n     * Creates a module with all the router providers and directives. It also optionally sets up an\n     * application listener to perform an initial navigation.\n     *\n     * Options (see `ExtraOptions`):\n     * * `enableTracing` makes the router log all its internal events to the console.\n     * * `useHash` enables the location strategy that uses the URL fragment instead of the history\n     * API.\n     * * `initialNavigation` disables the initial navigation.\n     * * `errorHandler` provides a custom error handler.\n     * * `preloadingStrategy` configures a preloading strategy (see `PreloadAllModules`).\n     * * `onSameUrlNavigation` configures how the router handles navigation to the current URL. See\n     * `ExtraOptions` for more details.\n     * * `paramsInheritanceStrategy` defines how the router merges params, data and resolved data\n     * from parent to child routes.\n     * @param {?} routes\n     * @param {?=} config\n     * @return {?}\n     */\n    static forRoot(routes, config) {\n        return {\n            ngModule: RouterModule,\n            providers: [\n                ROUTER_PROVIDERS,\n                provideRoutes(routes),\n                {\n                    provide: ROUTER_FORROOT_GUARD,\n                    useFactory: provideForRootGuard,\n                    deps: [[Router, new Optional(), new SkipSelf()]]\n                },\n                { provide: ROUTER_CONFIGURATION, useValue: config ? config : {} },\n                {\n                    provide: LocationStrategy,\n                    useFactory: provideLocationStrategy,\n                    deps: [\n                        PlatformLocation, [new Inject(APP_BASE_HREF), new Optional()], ROUTER_CONFIGURATION\n                    ]\n                },\n                {\n                    provide: RouterScroller,\n                    useFactory: createRouterScroller,\n                    deps: [Router, ViewportScroller, ROUTER_CONFIGURATION]\n                },\n                {\n                    provide: PreloadingStrategy,\n                    useExisting: config && config.preloadingStrategy ? config.preloadingStrategy :\n                        NoPreloading\n                },\n                { provide: NgProbeToken, multi: true, useFactory: routerNgProbeToken },\n                provideRouterInitializer(),\n            ],\n        };\n    }\n    /**\n     * Creates a module with all the router directives and a provider registering routes.\n     * @param {?} routes\n     * @return {?}\n     */\n    static forChild(routes) {\n        return { ngModule: RouterModule, providers: [provideRoutes(routes)] };\n    }\n}\nRouterModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: ROUTER_DIRECTIVES,\n                exports: ROUTER_DIRECTIVES,\n                entryComponents: [EmptyOutletComponent]\n            },] }\n];\n/** @nocollapse */\nRouterModule.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [ROUTER_FORROOT_GUARD,] }] },\n    { type: Router, decorators: [{ type: Optional }] }\n];\n/**\n * @param {?} router\n * @param {?} viewportScroller\n * @param {?} config\n * @return {?}\n */\nfunction createRouterScroller(router, viewportScroller, config) {\n    if (config.scrollOffset) {\n        viewportScroller.setOffset(config.scrollOffset);\n    }\n    return new RouterScroller(router, viewportScroller, config);\n}\n/**\n * @param {?} platformLocationStrategy\n * @param {?} baseHref\n * @param {?=} options\n * @return {?}\n */\nfunction provideLocationStrategy(platformLocationStrategy, baseHref, options = {}) {\n    return options.useHash ? new HashLocationStrategy(platformLocationStrategy, baseHref) :\n        new PathLocationStrategy(platformLocationStrategy, baseHref);\n}\n/**\n * @param {?} router\n * @return {?}\n */\nfunction provideForRootGuard(router) {\n    if (router) {\n        throw new Error(`RouterModule.forRoot() called twice. Lazy loaded modules should use RouterModule.forChild() instead.`);\n    }\n    return 'guarded';\n}\n/**\n * \\@description\n *\n * Registers routes.\n *\n * \\@usageNotes\n * ### Example\n *\n * ```\n * \\@NgModule({\n *   imports: [RouterModule.forChild(ROUTES)],\n *   providers: [provideRoutes(EXTRA_ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n *\n *\n * @param {?} routes\n * @return {?}\n */\nfunction provideRoutes(routes) {\n    return [\n        { provide: ANALYZE_FOR_ENTRY_COMPONENTS, multi: true, useValue: routes },\n        { provide: ROUTES, multi: true, useValue: routes },\n    ];\n}\n/**\n * @param {?} ref\n * @param {?} urlSerializer\n * @param {?} contexts\n * @param {?} location\n * @param {?} injector\n * @param {?} loader\n * @param {?} compiler\n * @param {?} config\n * @param {?=} opts\n * @param {?=} urlHandlingStrategy\n * @param {?=} routeReuseStrategy\n * @return {?}\n */\nfunction setupRouter(ref, urlSerializer, contexts, location, injector, loader, compiler, config, opts = {}, urlHandlingStrategy, routeReuseStrategy) {\n    /** @type {?} */\n    const router = new Router(null, urlSerializer, contexts, location, injector, loader, compiler, flatten(config));\n    if (urlHandlingStrategy) {\n        router.urlHandlingStrategy = urlHandlingStrategy;\n    }\n    if (routeReuseStrategy) {\n        router.routeReuseStrategy = routeReuseStrategy;\n    }\n    if (opts.errorHandler) {\n        router.errorHandler = opts.errorHandler;\n    }\n    if (opts.malformedUriErrorHandler) {\n        router.malformedUriErrorHandler = opts.malformedUriErrorHandler;\n    }\n    if (opts.enableTracing) {\n        /** @type {?} */\n        const dom = ɵgetDOM();\n        router.events.subscribe((e) => {\n            dom.logGroup(`Router Event: ${((/** @type {?} */ (e.constructor))).name}`);\n            dom.log(e.toString());\n            dom.log(e);\n            dom.logGroupEnd();\n        });\n    }\n    if (opts.onSameUrlNavigation) {\n        router.onSameUrlNavigation = opts.onSameUrlNavigation;\n    }\n    if (opts.paramsInheritanceStrategy) {\n        router.paramsInheritanceStrategy = opts.paramsInheritanceStrategy;\n    }\n    if (opts.urlUpdateStrategy) {\n        router.urlUpdateStrategy = opts.urlUpdateStrategy;\n    }\n    if (opts.relativeLinkResolution) {\n        router.relativeLinkResolution = opts.relativeLinkResolution;\n    }\n    return router;\n}\n/**\n * @param {?} router\n * @return {?}\n */\nfunction rootRoute(router) {\n    return router.routerState.root;\n}\n/**\n * To initialize the router properly we need to do in two steps:\n *\n * We need to start the navigation in a APP_INITIALIZER to block the bootstrap if\n * a resolver or a guards executes asynchronously. Second, we need to actually run\n * activation in a BOOTSTRAP_LISTENER. We utilize the afterPreactivation\n * hook provided by the router to do that.\n *\n * The router navigation starts, reaches the point when preactivation is done, and then\n * pauses. It waits for the hook to be resolved. We then resolve it only in a bootstrap listener.\n */\nclass RouterInitializer {\n    /**\n     * @param {?} injector\n     */\n    constructor(injector) {\n        this.injector = injector;\n        this.initNavigation = false;\n        this.resultOfPreactivationDone = new Subject();\n    }\n    /**\n     * @return {?}\n     */\n    appInitializer() {\n        /** @type {?} */\n        const p = this.injector.get(LOCATION_INITIALIZED, Promise.resolve(null));\n        return p.then(() => {\n            /** @type {?} */\n            let resolve = /** @type {?} */ ((null));\n            /** @type {?} */\n            const res = new Promise(r => resolve = r);\n            /** @type {?} */\n            const router = this.injector.get(Router);\n            /** @type {?} */\n            const opts = this.injector.get(ROUTER_CONFIGURATION);\n            if (this.isLegacyDisabled(opts) || this.isLegacyEnabled(opts)) {\n                resolve(true);\n            }\n            else if (opts.initialNavigation === 'disabled') {\n                router.setUpLocationChangeListener();\n                resolve(true);\n            }\n            else if (opts.initialNavigation === 'enabled') {\n                router.hooks.afterPreactivation = () => {\n                    // only the initial navigation should be delayed\n                    if (!this.initNavigation) {\n                        this.initNavigation = true;\n                        resolve(true);\n                        return this.resultOfPreactivationDone;\n                        // subsequent navigations should not be delayed\n                    }\n                    else {\n                        return /** @type {?} */ (of(null));\n                    }\n                };\n                router.initialNavigation();\n            }\n            else {\n                throw new Error(`Invalid initialNavigation options: '${opts.initialNavigation}'`);\n            }\n            return res;\n        });\n    }\n    /**\n     * @param {?} bootstrappedComponentRef\n     * @return {?}\n     */\n    bootstrapListener(bootstrappedComponentRef) {\n        /** @type {?} */\n        const opts = this.injector.get(ROUTER_CONFIGURATION);\n        /** @type {?} */\n        const preloader = this.injector.get(RouterPreloader);\n        /** @type {?} */\n        const routerScroller = this.injector.get(RouterScroller);\n        /** @type {?} */\n        const router = this.injector.get(Router);\n        /** @type {?} */\n        const ref = this.injector.get(ApplicationRef);\n        if (bootstrappedComponentRef !== ref.components[0]) {\n            return;\n        }\n        if (this.isLegacyEnabled(opts)) {\n            router.initialNavigation();\n        }\n        else if (this.isLegacyDisabled(opts)) {\n            router.setUpLocationChangeListener();\n        }\n        preloader.setUpPreloading();\n        routerScroller.init();\n        router.resetRootComponentType(ref.componentTypes[0]);\n        this.resultOfPreactivationDone.next(/** @type {?} */ ((null)));\n        this.resultOfPreactivationDone.complete();\n    }\n    /**\n     * @param {?} opts\n     * @return {?}\n     */\n    isLegacyEnabled(opts) {\n        return opts.initialNavigation === 'legacy_enabled' || opts.initialNavigation === true ||\n            opts.initialNavigation === undefined;\n    }\n    /**\n     * @param {?} opts\n     * @return {?}\n     */\n    isLegacyDisabled(opts) {\n        return opts.initialNavigation === 'legacy_disabled' || opts.initialNavigation === false;\n    }\n}\nRouterInitializer.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nRouterInitializer.ctorParameters = () => [\n    { type: Injector }\n];\n/**\n * @param {?} r\n * @return {?}\n */\nfunction getAppInitializer(r) {\n    return r.appInitializer.bind(r);\n}\n/**\n * @param {?} r\n * @return {?}\n */\nfunction getBootstrapListener(r) {\n    return r.bootstrapListener.bind(r);\n}\n/** *\n * A token for the router initializer that will be called after the app is bootstrapped.\n *\n * \\@experimental\n  @type {?} */\nconst ROUTER_INITIALIZER = new InjectionToken('Router Initializer');\n/**\n * @return {?}\n */\nfunction provideRouterInitializer() {\n    return [\n        RouterInitializer,\n        {\n            provide: APP_INITIALIZER,\n            multi: true,\n            useFactory: getAppInitializer,\n            deps: [RouterInitializer]\n        },\n        { provide: ROUTER_INITIALIZER, useFactory: getBootstrapListener, deps: [RouterInitializer] },\n        { provide: APP_BOOTSTRAP_LISTENER, multi: true, useExisting: ROUTER_INITIALIZER },\n    ];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst VERSION = new Version('6.1.10');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ROUTER_FORROOT_GUARD as ɵangular_packages_router_router_a, RouterInitializer as ɵangular_packages_router_router_h, createRouterScroller as ɵangular_packages_router_router_c, getAppInitializer as ɵangular_packages_router_router_i, getBootstrapListener as ɵangular_packages_router_router_j, provideForRootGuard as ɵangular_packages_router_router_e, provideLocationStrategy as ɵangular_packages_router_router_d, provideRouterInitializer as ɵangular_packages_router_router_k, rootRoute as ɵangular_packages_router_router_g, routerNgProbeToken as ɵangular_packages_router_router_b, setupRouter as ɵangular_packages_router_router_f, RouterScroller as ɵangular_packages_router_router_n, Tree as ɵangular_packages_router_router_l, TreeNode as ɵangular_packages_router_router_m, RouterLink, RouterLinkWithHref, RouterLinkActive, RouterOutlet, ActivationEnd, ActivationStart, ChildActivationEnd, ChildActivationStart, GuardsCheckEnd, GuardsCheckStart, NavigationCancel, NavigationEnd, NavigationError, NavigationStart, ResolveEnd, ResolveStart, RouteConfigLoadEnd, RouteConfigLoadStart, RouterEvent, RoutesRecognized, Scroll, RouteReuseStrategy, Router, ROUTES, ROUTER_CONFIGURATION, ROUTER_INITIALIZER, RouterModule, provideRoutes, ChildrenOutletContexts, OutletContext, NoPreloading, PreloadAllModules, PreloadingStrategy, RouterPreloader, ActivatedRoute, ActivatedRouteSnapshot, RouterState, RouterStateSnapshot, PRIMARY_OUTLET, convertToParamMap, UrlHandlingStrategy, DefaultUrlSerializer, UrlSegment, UrlSegmentGroup, UrlSerializer, UrlTree, VERSION, EmptyOutletComponent as ɵEmptyOutletComponent, ROUTER_PROVIDERS as ɵROUTER_PROVIDERS, flatten as ɵflatten };\n//# sourceMappingURL=router.js.map\n"]}