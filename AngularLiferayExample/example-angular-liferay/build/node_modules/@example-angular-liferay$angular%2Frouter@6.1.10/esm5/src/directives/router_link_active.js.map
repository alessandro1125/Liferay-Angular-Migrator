{"version":3,"sources":["../../../../../../../../../../packages/router/src/directives/router_link_active.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AfterContentInit, ChangeDetectorRef, ContentChildren, Directive, ElementRef, Input, OnChanges, OnDestroy, QueryList, Renderer2, SimpleChanges} from '@angular/core';\nimport {Subscription} from 'rxjs';\n\nimport {NavigationEnd, RouterEvent} from '../events';\nimport {Router} from '../router';\n\nimport {RouterLink, RouterLinkWithHref} from './router_link';\n\n\n/**\n *\n * @description\n *\n * Lets you add a CSS class to an element when the link's route becomes active.\n *\n * This directive lets you add a CSS class to an element when the link's route\n * becomes active.\n *\n * Consider the following example:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\">Bob</a>\n * ```\n *\n * When the url is either '/user' or '/user/bob', the active-link class will\n * be added to the `a` tag. If the url changes, the class will be removed.\n *\n * You can set more than one class, as follows:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"class1 class2\">Bob</a>\n * <a routerLink=\"/user/bob\" [routerLinkActive]=\"['class1', 'class2']\">Bob</a>\n * ```\n *\n * You can configure RouterLinkActive by passing `exact: true`. This will add the classes\n * only when the url matches the link exactly.\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact:\n * true}\">Bob</a>\n * ```\n *\n * You can assign the RouterLinkActive instance to a template variable and directly check\n * the `isActive` status.\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive #rla=\"routerLinkActive\">\n *   Bob {{ rla.isActive ? '(already open)' : ''}}\n * </a>\n * ```\n *\n * Finally, you can apply the RouterLinkActive directive to an ancestor of a RouterLink.\n *\n * ```\n * <div routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact: true}\">\n *   <a routerLink=\"/user/jim\">Jim</a>\n *   <a routerLink=\"/user/bob\">Bob</a>\n * </div>\n * ```\n *\n * This will set the active-link class on the div tag if the url is either '/user/jim' or\n * '/user/bob'.\n *\n * @ngModule RouterModule\n *\n *\n */\n@Directive({\n  selector: '[routerLinkActive]',\n  exportAs: 'routerLinkActive',\n})\nexport class RouterLinkActive implements OnChanges,\n    OnDestroy, AfterContentInit {\n  // TODO(issue/24571): remove '!'.\n  @ContentChildren(RouterLink, {descendants: true})\n  links !: QueryList<RouterLink>;\n  // TODO(issue/24571): remove '!'.\n  @ContentChildren(RouterLinkWithHref, {descendants: true})\n  linksWithHrefs !: QueryList<RouterLinkWithHref>;\n\n  private classes: string[] = [];\n  private subscription: Subscription;\n  public readonly isActive: boolean = false;\n\n  @Input() routerLinkActiveOptions: {exact: boolean} = {exact: false};\n\n  constructor(\n      private router: Router, private element: ElementRef, private renderer: Renderer2,\n      private cdr: ChangeDetectorRef) {\n    this.subscription = router.events.subscribe((s: RouterEvent) => {\n      if (s instanceof NavigationEnd) {\n        this.update();\n      }\n    });\n  }\n\n\n  ngAfterContentInit(): void {\n    this.links.changes.subscribe(_ => this.update());\n    this.linksWithHrefs.changes.subscribe(_ => this.update());\n    this.update();\n  }\n\n  @Input()\n  set routerLinkActive(data: string[]|string) {\n    const classes = Array.isArray(data) ? data : data.split(' ');\n    this.classes = classes.filter(c => !!c);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void { this.update(); }\n  ngOnDestroy(): void { this.subscription.unsubscribe(); }\n\n  private update(): void {\n    if (!this.links || !this.linksWithHrefs || !this.router.navigated) return;\n    Promise.resolve().then(() => {\n      const hasActiveLinks = this.hasActiveLinks();\n      if (this.isActive !== hasActiveLinks) {\n        (this as any).isActive = hasActiveLinks;\n        this.classes.forEach((c) => {\n          if (hasActiveLinks) {\n            this.renderer.addClass(this.element.nativeElement, c);\n          } else {\n            this.renderer.removeClass(this.element.nativeElement, c);\n          }\n        });\n      }\n    });\n  }\n\n  private isLinkActive(router: Router): (link: (RouterLink|RouterLinkWithHref)) => boolean {\n    return (link: RouterLink | RouterLinkWithHref) =>\n               router.isActive(link.urlTree, this.routerLinkActiveOptions.exact);\n  }\n\n  private hasActiveLinks(): boolean {\n    return this.links.some(this.isLinkActive(this.router)) ||\n        this.linksWithHrefs.some(this.isLinkActive(this.router));\n  }\n}\n"],"sourceRoot":""}