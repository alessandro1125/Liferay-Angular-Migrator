{"version":3,"sources":["testing.js"],"names":["__values","__decorate","__metadata","Location","LocationStrategy","MockLocationStrategy","SpyLocation","Compiler","Injectable","Injector","NgModule","NgModuleFactoryLoader","Optional","ChildrenOutletContexts","NoPreloading","PreloadingStrategy","ROUTER_CONFIGURATION","ROUTES","Router","RouterModule","UrlHandlingStrategy","UrlSerializer","provideRoutes","ɵROUTER_PROVIDERS","ɵflatten","SpyNgModuleFactoryLoader","compiler","_stubbedModules","Object","defineProperty","prototype","get","set","modules","e_1","_a","res","_b","keys","_c","next","done","t","value","compileModuleAsync","e_1_1","error","return","call","enumerable","configurable","load","path","Promise","reject","Error","isUrlHandlingStrategy","opts","setupTestingRouter","urlSerializer","contexts","location","loader","injector","routes","urlHandlingStrategy","router","malformedUriErrorHandler","paramsInheritanceStrategy","RouterTestingModule","RouterTestingModule_1","withRoutes","config","ngModule","providers","provide","useValue","exports","useClass","useFactory","deps","useExisting"],"mappings":"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","file":"testing.js","sourcesContent":["/**\n * @license Angular v6.1.10\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\nimport { __values, __decorate, __metadata } from 'tslib';\nimport { Location, LocationStrategy } from '@angular/common';\nimport { MockLocationStrategy, SpyLocation } from '@angular/common/testing';\nimport { Compiler, Injectable, Injector, NgModule, NgModuleFactoryLoader, Optional } from '@angular/core';\nimport { ChildrenOutletContexts, NoPreloading, PreloadingStrategy, ROUTER_CONFIGURATION, ROUTES, Router, RouterModule, UrlHandlingStrategy, UrlSerializer, provideRoutes, ɵROUTER_PROVIDERS, ɵflatten } from '@angular/router';\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Allows to simulate the loading of ng modules in tests.\n *\n * ```\n * const loader = TestBed.get(NgModuleFactoryLoader);\n *\n * @Component({template: 'lazy-loaded'})\n * class LazyLoadedComponent {}\n * @NgModule({\n *   declarations: [LazyLoadedComponent],\n *   imports: [RouterModule.forChild([{path: 'loaded', component: LazyLoadedComponent}])]\n * })\n *\n * class LoadedModule {}\n *\n * // sets up stubbedModules\n * loader.stubbedModules = {lazyModule: LoadedModule};\n *\n * router.resetConfig([\n *   {path: 'lazy', loadChildren: 'lazyModule'},\n * ]);\n *\n * router.navigateByUrl('/lazy/loaded');\n * ```\n *\n *\n */\nvar SpyNgModuleFactoryLoader = /** @class */ (function () {\n    function SpyNgModuleFactoryLoader(compiler) {\n        this.compiler = compiler;\n        /**\n         * @docsNotRequired\n         */\n        this._stubbedModules = {};\n    }\n    Object.defineProperty(SpyNgModuleFactoryLoader.prototype, \"stubbedModules\", {\n        /**\n         * @docsNotRequired\n         */\n        get: function () { return this._stubbedModules; },\n        /**\n         * @docsNotRequired\n         */\n        set: function (modules) {\n            var e_1, _a;\n            var res = {};\n            try {\n                for (var _b = __values(Object.keys(modules)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var t = _c.value;\n                    res[t] = this.compiler.compileModuleAsync(modules[t]);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            this._stubbedModules = res;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SpyNgModuleFactoryLoader.prototype.load = function (path) {\n        if (this._stubbedModules[path]) {\n            return this._stubbedModules[path];\n        }\n        else {\n            return Promise.reject(new Error(\"Cannot find module \" + path));\n        }\n    };\n    SpyNgModuleFactoryLoader = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [Compiler])\n    ], SpyNgModuleFactoryLoader);\n    return SpyNgModuleFactoryLoader;\n}());\nfunction isUrlHandlingStrategy(opts) {\n    // This property check is needed because UrlHandlingStrategy is an interface and doesn't exist at\n    // runtime.\n    return 'shouldProcessUrl' in opts;\n}\n/**\n * Router setup factory function used for testing.\n *\n *\n */\nfunction setupTestingRouter(urlSerializer, contexts, location, loader, compiler, injector, routes, opts, urlHandlingStrategy) {\n    var router = new Router(null, urlSerializer, contexts, location, injector, loader, compiler, ɵflatten(routes));\n    if (opts) {\n        // Handle deprecated argument ordering.\n        if (isUrlHandlingStrategy(opts)) {\n            router.urlHandlingStrategy = opts;\n        }\n        else {\n            // Handle ExtraOptions\n            if (opts.malformedUriErrorHandler) {\n                router.malformedUriErrorHandler = opts.malformedUriErrorHandler;\n            }\n            if (opts.paramsInheritanceStrategy) {\n                router.paramsInheritanceStrategy = opts.paramsInheritanceStrategy;\n            }\n        }\n    }\n    if (urlHandlingStrategy) {\n        router.urlHandlingStrategy = urlHandlingStrategy;\n    }\n    return router;\n}\n/**\n * @description\n *\n * Sets up the router to be used for testing.\n *\n * The modules sets up the router to be used for testing.\n * It provides spy implementations of `Location`, `LocationStrategy`, and {@link\n * NgModuleFactoryLoader}.\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * beforeEach(() => {\n *   TestBed.configureTestModule({\n *     imports: [\n *       RouterTestingModule.withRoutes(\n *         [{path: '', component: BlankCmp}, {path: 'simple', component: SimpleCmp}]\n *       )\n *     ]\n *   });\n * });\n * ```\n *\n *\n */\nvar RouterTestingModule = /** @class */ (function () {\n    function RouterTestingModule() {\n    }\n    RouterTestingModule_1 = RouterTestingModule;\n    RouterTestingModule.withRoutes = function (routes, config) {\n        return {\n            ngModule: RouterTestingModule_1,\n            providers: [\n                provideRoutes(routes),\n                { provide: ROUTER_CONFIGURATION, useValue: config ? config : {} },\n            ]\n        };\n    };\n    var RouterTestingModule_1;\n    RouterTestingModule = RouterTestingModule_1 = __decorate([\n        NgModule({\n            exports: [RouterModule],\n            providers: [\n                ɵROUTER_PROVIDERS, { provide: Location, useClass: SpyLocation },\n                { provide: LocationStrategy, useClass: MockLocationStrategy },\n                { provide: NgModuleFactoryLoader, useClass: SpyNgModuleFactoryLoader }, {\n                    provide: Router,\n                    useFactory: setupTestingRouter,\n                    deps: [\n                        UrlSerializer, ChildrenOutletContexts, Location, NgModuleFactoryLoader, Compiler, Injector,\n                        ROUTES, ROUTER_CONFIGURATION, [UrlHandlingStrategy, new Optional()]\n                    ]\n                },\n                { provide: PreloadingStrategy, useExisting: NoPreloading }, provideRoutes([])\n            ]\n        })\n    ], RouterTestingModule);\n    return RouterTestingModule;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { SpyNgModuleFactoryLoader, setupTestingRouter, RouterTestingModule };\n//# sourceMappingURL=testing.js.map\n"]}