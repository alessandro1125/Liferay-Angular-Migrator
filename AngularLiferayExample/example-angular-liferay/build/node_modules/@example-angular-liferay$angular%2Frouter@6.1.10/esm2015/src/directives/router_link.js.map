{"version":3,"sources":["../../../../../../../packages/router/src/directives/router_link.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {LocationStrategy} from '@angular/common';\nimport {Attribute, Directive, ElementRef, HostBinding, HostListener, Input, OnChanges, OnDestroy, Renderer2, isDevMode} from '@angular/core';\nimport {Subscription} from 'rxjs';\n\nimport {QueryParamsHandling} from '../config';\nimport {NavigationEnd, RouterEvent} from '../events';\nimport {Router} from '../router';\nimport {ActivatedRoute} from '../router_state';\nimport {UrlTree} from '../url_tree';\n\n\n/**\n * @description\n *\n * Lets you link to specific routes in your app.\n *\n * Consider the following route configuration:\n * `[{ path: 'user/:name', component: UserCmp }]`.\n * When linking to this `user/:name` route, you use the `RouterLink` directive.\n *\n * If the link is static, you can use the directive as follows:\n * `<a routerLink=\"/user/bob\">link to user component</a>`\n *\n * If you use dynamic values to generate the link, you can pass an array of path\n * segments, followed by the params for each segment.\n *\n * For instance `['/team', teamId, 'user', userName, {details: true}]`\n * means that we want to generate a link to `/team/11/user/bob;details=true`.\n *\n * Multiple static segments can be merged into one\n * (e.g., `['/team/11/user', userName, {details: true}]`).\n *\n * The first segment name can be prepended with `/`, `./`, or `../`:\n * * If the first segment begins with `/`, the router will look up the route from the root of the\n *   app.\n * * If the first segment begins with `./`, or doesn't begin with a slash, the router will\n *   instead look in the children of the current activated route.\n * * And if the first segment begins with `../`, the router will go up one level.\n *\n * You can set query params and fragment as follows:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" fragment=\"education\">\n *   link to user component\n * </a>\n * ```\n * RouterLink will use these to generate this link: `/user/bob#education?debug=true`.\n *\n * (Deprecated in v4.0.0 use `queryParamsHandling` instead) You can also tell the\n * directive to preserve the current query params and fragment:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" preserveQueryParams preserveFragment>\n *   link to user component\n * </a>\n * ```\n *\n * You can tell the directive to how to handle queryParams, available options are:\n *  - `'merge'`: merge the queryParams into the current queryParams\n *  - `'preserve'`: preserve the current queryParams\n *  - default/`''`: use the queryParams only\n *\n * Same options for {@link NavigationExtras#queryParamsHandling\n * NavigationExtras#queryParamsHandling}.\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" queryParamsHandling=\"merge\">\n *   link to user component\n * </a>\n * ```\n *\n * The router link directive always treats the provided input as a delta to the current url.\n *\n * For instance, if the current url is `/user/(box//aux:team)`.\n *\n * Then the following link `<a [routerLink]=\"['/user/jim']\">Jim</a>` will generate the link\n * `/user/(jim//aux:team)`.\n *\n * See {@link Router#createUrlTree createUrlTree} for more information.\n *\n * @ngModule RouterModule\n *\n *\n */\n@Directive({selector: ':not(a)[routerLink]'})\nexport class RouterLink {\n  // TODO(issue/24571): remove '!'.\n  @Input() queryParams !: {[k: string]: any};\n  // TODO(issue/24571): remove '!'.\n  @Input() fragment !: string;\n  // TODO(issue/24571): remove '!'.\n  @Input() queryParamsHandling !: QueryParamsHandling;\n  // TODO(issue/24571): remove '!'.\n  @Input() preserveFragment !: boolean;\n  // TODO(issue/24571): remove '!'.\n  @Input() skipLocationChange !: boolean;\n  // TODO(issue/24571): remove '!'.\n  @Input() replaceUrl !: boolean;\n  private commands: any[] = [];\n  // TODO(issue/24571): remove '!'.\n  private preserve !: boolean;\n\n  constructor(\n      private router: Router, private route: ActivatedRoute,\n      @Attribute('tabindex') tabIndex: string, renderer: Renderer2, el: ElementRef) {\n    if (tabIndex == null) {\n      renderer.setAttribute(el.nativeElement, 'tabindex', '0');\n    }\n  }\n\n  @Input()\n  set routerLink(commands: any[]|string) {\n    if (commands != null) {\n      this.commands = Array.isArray(commands) ? commands : [commands];\n    } else {\n      this.commands = [];\n    }\n  }\n\n  /**\n   * @deprecated 4.0.0 use `queryParamsHandling` instead.\n   */\n  @Input()\n  set preserveQueryParams(value: boolean) {\n    if (isDevMode() && <any>console && <any>console.warn) {\n      console.warn('preserveQueryParams is deprecated!, use queryParamsHandling instead.');\n    }\n    this.preserve = value;\n  }\n\n  @HostListener('click')\n  onClick(): boolean {\n    const extras = {\n      skipLocationChange: attrBoolValue(this.skipLocationChange),\n      replaceUrl: attrBoolValue(this.replaceUrl),\n    };\n    this.router.navigateByUrl(this.urlTree, extras);\n    return true;\n  }\n\n  get urlTree(): UrlTree {\n    return this.router.createUrlTree(this.commands, {\n      relativeTo: this.route,\n      queryParams: this.queryParams,\n      fragment: this.fragment,\n      preserveQueryParams: attrBoolValue(this.preserve),\n      queryParamsHandling: this.queryParamsHandling,\n      preserveFragment: attrBoolValue(this.preserveFragment),\n    });\n  }\n}\n\n/**\n * @description\n *\n * Lets you link to specific routes in your app.\n *\n * See `RouterLink` for more information.\n *\n * @ngModule RouterModule\n *\n *\n */\n@Directive({selector: 'a[routerLink]'})\nexport class RouterLinkWithHref implements OnChanges, OnDestroy {\n  // TODO(issue/24571): remove '!'.\n  @HostBinding('attr.target') @Input() target !: string;\n  // TODO(issue/24571): remove '!'.\n  @Input() queryParams !: {[k: string]: any};\n  // TODO(issue/24571): remove '!'.\n  @Input() fragment !: string;\n  // TODO(issue/24571): remove '!'.\n  @Input() queryParamsHandling !: QueryParamsHandling;\n  // TODO(issue/24571): remove '!'.\n  @Input() preserveFragment !: boolean;\n  // TODO(issue/24571): remove '!'.\n  @Input() skipLocationChange !: boolean;\n  // TODO(issue/24571): remove '!'.\n  @Input() replaceUrl !: boolean;\n  private commands: any[] = [];\n  private subscription: Subscription;\n  // TODO(issue/24571): remove '!'.\n  private preserve !: boolean;\n\n  // the url displayed on the anchor element.\n  // TODO(issue/24571): remove '!'.\n  @HostBinding() href !: string;\n\n  constructor(\n      private router: Router, private route: ActivatedRoute,\n      private locationStrategy: LocationStrategy) {\n    this.subscription = router.events.subscribe((s: RouterEvent) => {\n      if (s instanceof NavigationEnd) {\n        this.updateTargetUrlAndHref();\n      }\n    });\n  }\n\n  @Input()\n  set routerLink(commands: any[]|string) {\n    if (commands != null) {\n      this.commands = Array.isArray(commands) ? commands : [commands];\n    } else {\n      this.commands = [];\n    }\n  }\n\n  @Input()\n  set preserveQueryParams(value: boolean) {\n    if (isDevMode() && <any>console && <any>console.warn) {\n      console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n    }\n    this.preserve = value;\n  }\n\n  ngOnChanges(changes: {}): any { this.updateTargetUrlAndHref(); }\n  ngOnDestroy(): any { this.subscription.unsubscribe(); }\n\n  @HostListener('click', ['$event.button', '$event.ctrlKey', '$event.metaKey', '$event.shiftKey'])\n  onClick(button: number, ctrlKey: boolean, metaKey: boolean, shiftKey: boolean): boolean {\n    if (button !== 0 || ctrlKey || metaKey || shiftKey) {\n      return true;\n    }\n\n    if (typeof this.target === 'string' && this.target != '_self') {\n      return true;\n    }\n\n    const extras = {\n      skipLocationChange: attrBoolValue(this.skipLocationChange),\n      replaceUrl: attrBoolValue(this.replaceUrl),\n    };\n    this.router.navigateByUrl(this.urlTree, extras);\n    return false;\n  }\n\n  private updateTargetUrlAndHref(): void {\n    this.href = this.locationStrategy.prepareExternalUrl(this.router.serializeUrl(this.urlTree));\n  }\n\n  get urlTree(): UrlTree {\n    return this.router.createUrlTree(this.commands, {\n      relativeTo: this.route,\n      queryParams: this.queryParams,\n      fragment: this.fragment,\n      preserveQueryParams: attrBoolValue(this.preserve),\n      queryParamsHandling: this.queryParamsHandling,\n      preserveFragment: attrBoolValue(this.preserveFragment),\n    });\n  }\n}\n\nfunction attrBoolValue(s: any): boolean {\n  return s === '' || !!s;\n}\n"],"sourceRoot":""}