Liferay.Loader.define('@example-angular-liferay$angular/animations@6.1.10/esm5/browser/src/render/animation_driver', ['module', 'exports', 'require'], function (module, exports, require) {
    var define = undefined;
    import * as tslib_1 from "tslib";
    /**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */
    import { NoopAnimationPlayer } from '@angular/animations';
    import { Injectable } from '@angular/core';
    import { containsElement, invokeQuery, matchesElement, validateStyleProperty } from './shared';
    /**
     * @experimental
     */
    var NoopAnimationDriver = /** @class */function () {
        function NoopAnimationDriver() {}
        NoopAnimationDriver.prototype.validateStyleProperty = function (prop) {
            return validateStyleProperty(prop);
        };
        NoopAnimationDriver.prototype.matchesElement = function (element, selector) {
            return matchesElement(element, selector);
        };
        NoopAnimationDriver.prototype.containsElement = function (elm1, elm2) {
            return containsElement(elm1, elm2);
        };
        NoopAnimationDriver.prototype.query = function (element, selector, multi) {
            return invokeQuery(element, selector, multi);
        };
        NoopAnimationDriver.prototype.computeStyle = function (element, prop, defaultValue) {
            return defaultValue || '';
        };
        NoopAnimationDriver.prototype.animate = function (element, keyframes, duration, delay, easing, previousPlayers, scrubberAccessRequested) {
            if (previousPlayers === void 0) {
                previousPlayers = [];
            }
            return new NoopAnimationPlayer(duration, delay);
        };
        NoopAnimationDriver = tslib_1.__decorate([Injectable()], NoopAnimationDriver);
        return NoopAnimationDriver;
    }();
    export { NoopAnimationDriver };
    /**
     * @experimental
     */
    var AnimationDriver = /** @class */function () {
        function AnimationDriver() {}
        AnimationDriver.NOOP = new NoopAnimationDriver();
        return AnimationDriver;
    }();
    export { AnimationDriver };
});
//# sourceMappingURL=animation_driver.js.map