{"version":3,"sources":["../../../../../../../../../../../../packages/animations/browser/src/dsl/animation_transition_factory.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {AnimationOptions, ɵStyleData} from '@angular/animations';\n\nimport {AnimationDriver} from '../render/animation_driver';\nimport {getOrSetAsInMap} from '../render/shared';\nimport {copyObj, interpolateParams, iteratorToArray, mergeAnimationOptions} from '../util';\n\nimport {StyleAst, TransitionAst} from './animation_ast';\nimport {buildAnimationTimelines} from './animation_timeline_builder';\nimport {TransitionMatcherFn} from './animation_transition_expr';\nimport {AnimationTransitionInstruction, createTransitionInstruction} from './animation_transition_instruction';\nimport {ElementInstructionMap} from './element_instruction_map';\n\nconst EMPTY_OBJECT = {};\n\nexport class AnimationTransitionFactory {\n  constructor(\n      private _triggerName: string, public ast: TransitionAst,\n      private _stateStyles: {[stateName: string]: AnimationStateStyles}) {}\n\n  match(currentState: any, nextState: any, element: any, params: {[key: string]: any}): boolean {\n    return oneOrMoreTransitionsMatch(this.ast.matchers, currentState, nextState, element, params);\n  }\n\n  buildStyles(stateName: string, params: {[key: string]: any}, errors: any[]) {\n    const backupStateStyler = this._stateStyles['*'];\n    const stateStyler = this._stateStyles[stateName];\n    const backupStyles = backupStateStyler ? backupStateStyler.buildStyles(params, errors) : {};\n    return stateStyler ? stateStyler.buildStyles(params, errors) : backupStyles;\n  }\n\n  build(\n      driver: AnimationDriver, element: any, currentState: any, nextState: any,\n      enterClassName: string, leaveClassName: string, currentOptions?: AnimationOptions,\n      nextOptions?: AnimationOptions, subInstructions?: ElementInstructionMap,\n      skipAstBuild?: boolean): AnimationTransitionInstruction {\n    const errors: any[] = [];\n\n    const transitionAnimationParams = this.ast.options && this.ast.options.params || EMPTY_OBJECT;\n    const currentAnimationParams = currentOptions && currentOptions.params || EMPTY_OBJECT;\n    const currentStateStyles = this.buildStyles(currentState, currentAnimationParams, errors);\n    const nextAnimationParams = nextOptions && nextOptions.params || EMPTY_OBJECT;\n    const nextStateStyles = this.buildStyles(nextState, nextAnimationParams, errors);\n\n    const queriedElements = new Set<any>();\n    const preStyleMap = new Map<any, {[prop: string]: boolean}>();\n    const postStyleMap = new Map<any, {[prop: string]: boolean}>();\n    const isRemoval = nextState === 'void';\n\n    const animationOptions = {params: {...transitionAnimationParams, ...nextAnimationParams}};\n\n    const timelines = skipAstBuild ? [] : buildAnimationTimelines(\n                                              driver, element, this.ast.animation, enterClassName,\n                                              leaveClassName, currentStateStyles, nextStateStyles,\n                                              animationOptions, subInstructions, errors);\n\n    let totalTime = 0;\n    timelines.forEach(tl => { totalTime = Math.max(tl.duration + tl.delay, totalTime); });\n\n    if (errors.length) {\n      return createTransitionInstruction(\n          element, this._triggerName, currentState, nextState, isRemoval, currentStateStyles,\n          nextStateStyles, [], [], preStyleMap, postStyleMap, totalTime, errors);\n    }\n\n    timelines.forEach(tl => {\n      const elm = tl.element;\n      const preProps = getOrSetAsInMap(preStyleMap, elm, {});\n      tl.preStyleProps.forEach(prop => preProps[prop] = true);\n\n      const postProps = getOrSetAsInMap(postStyleMap, elm, {});\n      tl.postStyleProps.forEach(prop => postProps[prop] = true);\n\n      if (elm !== element) {\n        queriedElements.add(elm);\n      }\n    });\n\n    const queriedElementsList = iteratorToArray(queriedElements.values());\n    return createTransitionInstruction(\n        element, this._triggerName, currentState, nextState, isRemoval, currentStateStyles,\n        nextStateStyles, timelines, queriedElementsList, preStyleMap, postStyleMap, totalTime);\n  }\n}\n\nfunction oneOrMoreTransitionsMatch(\n    matchFns: TransitionMatcherFn[], currentState: any, nextState: any, element: any,\n    params: {[key: string]: any}): boolean {\n  return matchFns.some(fn => fn(currentState, nextState, element, params));\n}\n\nexport class AnimationStateStyles {\n  constructor(private styles: StyleAst, private defaultParams: {[key: string]: any}) {}\n\n  buildStyles(params: {[key: string]: any}, errors: string[]): ɵStyleData {\n    const finalStyles: ɵStyleData = {};\n    const combinedParams = copyObj(this.defaultParams);\n    Object.keys(params).forEach(key => {\n      const value = params[key];\n      if (value != null) {\n        combinedParams[key] = value;\n      }\n    });\n    this.styles.styles.forEach(value => {\n      if (typeof value !== 'string') {\n        const styleObj = value as any;\n        Object.keys(styleObj).forEach(prop => {\n          let val = styleObj[prop];\n          if (val.length > 1) {\n            val = interpolateParams(val, combinedParams, errors);\n          }\n          finalStyles[prop] = val;\n        });\n      }\n    });\n    return finalStyles;\n  }\n}\n"],"sourceRoot":""}