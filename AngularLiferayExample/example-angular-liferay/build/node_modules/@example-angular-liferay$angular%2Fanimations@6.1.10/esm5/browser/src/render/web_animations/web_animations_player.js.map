{"version":3,"sources":["../../../../../../../../../../../../../packages/animations/browser/src/render/web_animations/web_animations_player.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {AnimationPlayer} from '@angular/animations';\n\nimport {allowPreviousPlayerStylesMerge, balancePreviousStylesIntoKeyframes, computeStyle, copyStyles} from '../../util';\n\nimport {DOMAnimation} from './dom_animation';\n\nexport class WebAnimationsPlayer implements AnimationPlayer {\n  private _onDoneFns: Function[] = [];\n  private _onStartFns: Function[] = [];\n  private _onDestroyFns: Function[] = [];\n  private _duration: number;\n  private _delay: number;\n  private _initialized = false;\n  private _finished = false;\n  private _started = false;\n  private _destroyed = false;\n  // TODO(issue/24571): remove '!'.\n  private _finalKeyframe !: {[key: string]: string | number};\n\n  // TODO(issue/24571): remove '!'.\n  public readonly domPlayer !: DOMAnimation;\n  public time = 0;\n\n  public parentPlayer: AnimationPlayer|null = null;\n  public currentSnapshot: {[styleName: string]: string | number} = {};\n\n  constructor(\n      public element: any, public keyframes: {[key: string]: string | number}[],\n      public options: {[key: string]: string | number}) {\n    this._duration = <number>options['duration'];\n    this._delay = <number>options['delay'] || 0;\n    this.time = this._duration + this._delay;\n  }\n\n  private _onFinish() {\n    if (!this._finished) {\n      this._finished = true;\n      this._onDoneFns.forEach(fn => fn());\n      this._onDoneFns = [];\n    }\n  }\n\n  init(): void {\n    this._buildPlayer();\n    this._preparePlayerBeforeStart();\n  }\n\n  private _buildPlayer(): void {\n    if (this._initialized) return;\n    this._initialized = true;\n\n    const keyframes = this.keyframes;\n    (this as{domPlayer: DOMAnimation}).domPlayer =\n        this._triggerWebAnimation(this.element, keyframes, this.options);\n    this._finalKeyframe = keyframes.length ? keyframes[keyframes.length - 1] : {};\n    this.domPlayer.addEventListener('finish', () => this._onFinish());\n  }\n\n  private _preparePlayerBeforeStart() {\n    // this is required so that the player doesn't start to animate right away\n    if (this._delay) {\n      this._resetDomPlayerState();\n    } else {\n      this.domPlayer.pause();\n    }\n  }\n\n  /** @internal */\n  _triggerWebAnimation(element: any, keyframes: any[], options: any): DOMAnimation {\n    // jscompiler doesn't seem to know animate is a native property because it's not fully\n    // supported yet across common browsers (we polyfill it for Edge/Safari) [CL #143630929]\n    return element['animate'](keyframes, options) as DOMAnimation;\n  }\n\n  onStart(fn: () => void): void { this._onStartFns.push(fn); }\n\n  onDone(fn: () => void): void { this._onDoneFns.push(fn); }\n\n  onDestroy(fn: () => void): void { this._onDestroyFns.push(fn); }\n\n  play(): void {\n    this._buildPlayer();\n    if (!this.hasStarted()) {\n      this._onStartFns.forEach(fn => fn());\n      this._onStartFns = [];\n      this._started = true;\n    }\n    this.domPlayer.play();\n  }\n\n  pause(): void {\n    this.init();\n    this.domPlayer.pause();\n  }\n\n  finish(): void {\n    this.init();\n    this._onFinish();\n    this.domPlayer.finish();\n  }\n\n  reset(): void {\n    this._resetDomPlayerState();\n    this._destroyed = false;\n    this._finished = false;\n    this._started = false;\n  }\n\n  private _resetDomPlayerState() {\n    if (this.domPlayer) {\n      this.domPlayer.cancel();\n    }\n  }\n\n  restart(): void {\n    this.reset();\n    this.play();\n  }\n\n  hasStarted(): boolean { return this._started; }\n\n  destroy(): void {\n    if (!this._destroyed) {\n      this._destroyed = true;\n      this._resetDomPlayerState();\n      this._onFinish();\n      this._onDestroyFns.forEach(fn => fn());\n      this._onDestroyFns = [];\n    }\n  }\n\n  setPosition(p: number): void { this.domPlayer.currentTime = p * this.time; }\n\n  getPosition(): number { return this.domPlayer.currentTime / this.time; }\n\n  get totalTime(): number { return this._delay + this._duration; }\n\n  beforeDestroy() {\n    const styles: {[key: string]: string | number} = {};\n    if (this.hasStarted()) {\n      Object.keys(this._finalKeyframe).forEach(prop => {\n        if (prop != 'offset') {\n          styles[prop] =\n              this._finished ? this._finalKeyframe[prop] : computeStyle(this.element, prop);\n        }\n      });\n    }\n    this.currentSnapshot = styles;\n  }\n\n  /** @internal */\n  triggerCallback(phaseName: string): void {\n    const methods = phaseName == 'start' ? this._onStartFns : this._onDoneFns;\n    methods.forEach(fn => fn());\n    methods.length = 0;\n  }\n}\n"],"sourceRoot":""}