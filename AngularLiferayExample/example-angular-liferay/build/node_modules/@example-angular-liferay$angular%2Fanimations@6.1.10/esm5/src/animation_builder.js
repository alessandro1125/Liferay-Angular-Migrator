Liferay.Loader.define("@example-angular-liferay$angular/animations@6.1.10/esm5/src/animation_builder", ['module', 'exports', 'require'], function (module, exports, require) {
  var define = undefined;
  /**
   * An injectable service that produces an animation sequence programmatically within an
   * Angular component or directive.
   * Provided by the `BrowserAnimationsModule` or `NoopAnimationsModule`.
   *
   * @usageNotes
   *
   * To use this service, add it to your component or directive as a dependency.
   * The service is instantiated along with your component.
   *
   * Apps do not typically need to create their own animation players, but if you
   * do need to, follow these steps:
   *
   * 1. Use the `build()` method to create a programmatic animation using the
   * `animate()` function. The method returns an `AnimationFactory` instance.
   *
   * 2. Use the factory object to create an `AnimationPlayer` and attach it to a DOM element.
   *
   * 3. Use the player object to control the animation programmatically.
   *
   * For example:
   *
   * ```ts
   * // import the service from BrowserAnimationsModule
   * import {AnimationBuilder} from '@angular/animations';
   * // require the service as a dependency
   * class MyCmp {
   *   constructor(private _builder: AnimationBuilder) {}
   *
   *   makeAnimation(element: any) {
   *     // first define a reusable animation
   *     const myAnimation = this._builder.build([
   *       style({ width: 0 }),
   *       animate(1000, style({ width: '100px' }))
   *     ]);
   *
   *     // use the returned factory object to create a player
   *     const player = myAnimation.create(element);
   *
   *     player.play();
   *   }
   * }
   * ```
   *
   */
  var AnimationBuilder = /** @class */function () {
    function AnimationBuilder() {}
    return AnimationBuilder;
  }();
  export { AnimationBuilder };
  /**
   * A factory object returned from the `AnimationBuilder`.`build()` method.
   *
   */
  var AnimationFactory = /** @class */function () {
    function AnimationFactory() {}
    return AnimationFactory;
  }();
  export { AnimationFactory };
});
//# sourceMappingURL=animation_builder.js.map