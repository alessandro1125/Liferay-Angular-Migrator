{"version":3,"sources":["../../../../../../../../packages/animations/browser/src/dsl/animation.ts"],"names":[],"mappings":";;;;;;AAUA,aAAQ,eAAR,EAAyB,eAAzB,EAA0C,eAA1C,QAAgE,SAAhE;AAGA,aAAQ,iBAAR,QAAgC,yBAAhC;AACA,aAAQ,uBAAR,QAAsC,8BAAtC;AAEA,aAAQ,qBAAR,QAAoC,2BAApC;AAEA,WAAM,MAAA,SAAA,CAAA;;;;;AAEJ,oBAAoB,OAApB,EAA8C,KAA9C,EAA0F;AAAtE,iBAAA,OAAA,GAAA,OAAA;;AAClB,kBAAM,SAAgB,EAAtB;;AACA,kBAAM,MAAM,kBAAkB,OAAlB,EAA2B,KAA3B,EAAkC,MAAlC,CAAZ;AACA,gBAAI,OAAO,MAAX,EAAmB;;AACjB,sBAAM,eAAe,iCAAiC,OAAO,IAAP,CAAY,IAAZ,CAAiB,EAAvE;AACA,sBAAM,IAAI,KAAJ,CAAU,YAAV,CAAN;AACD;AACD,iBAAK,aAAL,GAAqB,GAArB;AACD;;;;;;;;;AAED,uBACI,OADJ,EACkB,cADlB,EAEI,iBAFJ,EAEgD,OAFhD,EAGI,eAHJ,EAG2C;;AACzC,kBAAM,QAAQ,MAAM,OAAN,CAAc,cAAd,IAAgC,gBAAgB,cAAhB,CAAhC,GAAiE,gBACrB,cAD1D;;AAEA,kBAAM,OAAO,MAAM,OAAN,CAAc,iBAAd,IAAmC,gBAAgB,iBAAhB,CAAnC,GAAuE,gBACxB,iBAD5D;;AAEA,kBAAM,SAAc,EAApB;AACA,8BAAkB,mBAAmB,IAAI,qBAAJ,EAArC;;AACA,kBAAM,SAAS,wBACX,KAAK,OADM,EACG,OADH,EACY,KAAK,aADjB,EACgC,eADhC,EACiD,eADjD,EACkE,KADlE,EACyE,IADzE,EAEX,OAFW,EAEF,eAFE,EAEe,MAFf,CAAf;AAGA,gBAAI,OAAO,MAAX,EAAmB;;AACjB,sBAAM,eAAe,+BAA+B,OAAO,IAAP,CAAY,IAAZ,CAAiB,EAArE;AACA,sBAAM,IAAI,KAAJ,CAAU,YAAV,CAAN;AACD;AACD,mBAAO,MAAP;AACD;AA9BG","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {AnimationMetadata, AnimationMetadataType, AnimationOptions, ɵStyleData} from '@angular/animations';\n\nimport {AnimationDriver} from '../render/animation_driver';\nimport {ENTER_CLASSNAME, LEAVE_CLASSNAME, normalizeStyles} from '../util';\n\nimport {Ast} from './animation_ast';\nimport {buildAnimationAst} from './animation_ast_builder';\nimport {buildAnimationTimelines} from './animation_timeline_builder';\nimport {AnimationTimelineInstruction} from './animation_timeline_instruction';\nimport {ElementInstructionMap} from './element_instruction_map';\n\nexport class Animation {\n  private _animationAst: Ast<AnimationMetadataType>;\n  constructor(private _driver: AnimationDriver, input: AnimationMetadata|AnimationMetadata[]) {\n    const errors: any[] = [];\n    const ast = buildAnimationAst(_driver, input, errors);\n    if (errors.length) {\n      const errorMessage = `animation validation failed:\\n${errors.join(\"\\n\")}`;\n      throw new Error(errorMessage);\n    }\n    this._animationAst = ast;\n  }\n\n  buildTimelines(\n      element: any, startingStyles: ɵStyleData|ɵStyleData[],\n      destinationStyles: ɵStyleData|ɵStyleData[], options: AnimationOptions,\n      subInstructions?: ElementInstructionMap): AnimationTimelineInstruction[] {\n    const start = Array.isArray(startingStyles) ? normalizeStyles(startingStyles) :\n                                                  <ɵStyleData>startingStyles;\n    const dest = Array.isArray(destinationStyles) ? normalizeStyles(destinationStyles) :\n                                                    <ɵStyleData>destinationStyles;\n    const errors: any = [];\n    subInstructions = subInstructions || new ElementInstructionMap();\n    const result = buildAnimationTimelines(\n        this._driver, element, this._animationAst, ENTER_CLASSNAME, LEAVE_CLASSNAME, start, dest,\n        options, subInstructions, errors);\n    if (errors.length) {\n      const errorMessage = `animation building failed:\\n${errors.join(\"\\n\")}`;\n      throw new Error(errorMessage);\n    }\n    return result;\n  }\n}\n"],"sourceRoot":""}