{"version":3,"sources":["../../../../../../../../packages/animations/browser/src/render/animation_driver.ts"],"names":[],"mappings":";;;;;;AAOA,WAAyB,mBAAzB,QAAmD,qBAAnD;AACA,WAAQ,UAAR,QAAyB,eAAzB;AAEA,WAAQ,eAAR,EAAyB,WAAzB,EAAsC,cAAtC,EAAsD,qBAAtD,QAAkF,UAAlF;;;;AAMA,SAAM,MAAA,mBAAA,CAAA;;;;;AACJ,0BAAsB,IAAtB,EAAkC;AAAa,aAAO,sBAAsB,IAAtB,CAAP;AAAqC;;;;;;AAEpF,mBAAe,OAAf,EAA6B,QAA7B,EAA6C;AAC3C,aAAO,eAAe,OAAf,EAAwB,QAAxB,CAAP;AACD;;;;;;AAED,oBAAgB,IAAhB,EAA2B,IAA3B,EAAoC;AAAa,aAAO,gBAAgB,IAAhB,EAAsB,IAAtB,CAAP;AAAqC;;;;;;;AAEtF,UAAM,OAAN,EAAoB,QAApB,EAAsC,KAAtC,EAAoD;AAClD,aAAO,YAAY,OAAZ,EAAqB,QAArB,EAA+B,KAA/B,CAAP;AACD;;;;;;;AAED,iBAAa,OAAb,EAA2B,IAA3B,EAAyC,YAAzC,EAA8D;AAC5D,aAAO,gBAAgB,EAAvB;AACD;;;;;;;;;;;AAED,YACI,OADJ,EACkB,SADlB,EACiE,QADjE,EACmF,KADnF,EAEI,MAFJ,EAEoB,kBAAyB,EAF7C,EAGI,uBAHJ,EAGqC;AACnC,aAAO,IAAI,mBAAJ,CAAwB,QAAxB,EAAkC,KAAlC,CAAP;AACD;AAtBG;4CADL,U;;;;;AA6BD,SAAM,MAAA,eAAA,CAAA;yBAC2B,IAAI,mBAAJ,E","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {AnimationPlayer, NoopAnimationPlayer} from '@angular/animations';\nimport {Injectable} from '@angular/core';\n\nimport {containsElement, invokeQuery, matchesElement, validateStyleProperty} from './shared';\n\n/**\n * @experimental\n */\n@Injectable()\nexport class NoopAnimationDriver implements AnimationDriver {\n  validateStyleProperty(prop: string): boolean { return validateStyleProperty(prop); }\n\n  matchesElement(element: any, selector: string): boolean {\n    return matchesElement(element, selector);\n  }\n\n  containsElement(elm1: any, elm2: any): boolean { return containsElement(elm1, elm2); }\n\n  query(element: any, selector: string, multi: boolean): any[] {\n    return invokeQuery(element, selector, multi);\n  }\n\n  computeStyle(element: any, prop: string, defaultValue?: string): string {\n    return defaultValue || '';\n  }\n\n  animate(\n      element: any, keyframes: {[key: string]: string | number}[], duration: number, delay: number,\n      easing: string, previousPlayers: any[] = [],\n      scrubberAccessRequested?: boolean): AnimationPlayer {\n    return new NoopAnimationPlayer(duration, delay);\n  }\n}\n\n/**\n * @experimental\n */\nexport abstract class AnimationDriver {\n  static NOOP: AnimationDriver = new NoopAnimationDriver();\n\n  abstract validateStyleProperty(prop: string): boolean;\n\n  abstract matchesElement(element: any, selector: string): boolean;\n\n  abstract containsElement(elm1: any, elm2: any): boolean;\n\n  abstract query(element: any, selector: string, multi: boolean): any[];\n\n  abstract computeStyle(element: any, prop: string, defaultValue?: string): string;\n\n  abstract animate(\n      element: any, keyframes: {[key: string]: string | number}[], duration: number, delay: number,\n      easing?: string|null, previousPlayers?: any[], scrubberAccessRequested?: boolean): any;\n}\n"],"sourceRoot":""}