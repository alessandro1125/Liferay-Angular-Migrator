{"version":3,"sources":["../../../../../../../../packages/animations/browser/src/render/timeline_animation_engine.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {AUTO_STYLE, AnimationMetadata, AnimationMetadataType, AnimationOptions, AnimationPlayer, ɵStyleData} from '@angular/animations';\n\nimport {Ast} from '../dsl/animation_ast';\nimport {buildAnimationAst} from '../dsl/animation_ast_builder';\nimport {buildAnimationTimelines} from '../dsl/animation_timeline_builder';\nimport {AnimationTimelineInstruction} from '../dsl/animation_timeline_instruction';\nimport {ElementInstructionMap} from '../dsl/element_instruction_map';\nimport {AnimationStyleNormalizer} from '../dsl/style_normalization/animation_style_normalizer';\nimport {ENTER_CLASSNAME, LEAVE_CLASSNAME} from '../util';\n\nimport {AnimationDriver} from './animation_driver';\nimport {getOrSetAsInMap, listenOnPlayer, makeAnimationEvent, normalizeKeyframes, optimizeGroupPlayer} from './shared';\n\nconst EMPTY_INSTRUCTION_MAP = new ElementInstructionMap();\n\nexport class TimelineAnimationEngine {\n  private _animations: {[id: string]: Ast<AnimationMetadataType>} = {};\n  private _playersById: {[id: string]: AnimationPlayer} = {};\n  public players: AnimationPlayer[] = [];\n\n  constructor(\n      public bodyNode: any, private _driver: AnimationDriver,\n      private _normalizer: AnimationStyleNormalizer) {}\n\n  register(id: string, metadata: AnimationMetadata|AnimationMetadata[]) {\n    const errors: any[] = [];\n    const ast = buildAnimationAst(this._driver, metadata, errors);\n    if (errors.length) {\n      throw new Error(\n          `Unable to build the animation due to the following errors: ${errors.join(\"\\n\")}`);\n    } else {\n      this._animations[id] = ast;\n    }\n  }\n\n  private _buildPlayer(\n      i: AnimationTimelineInstruction, preStyles: ɵStyleData,\n      postStyles?: ɵStyleData): AnimationPlayer {\n    const element = i.element;\n    const keyframes = normalizeKeyframes(\n        this._driver, this._normalizer, element, i.keyframes, preStyles, postStyles);\n    return this._driver.animate(element, keyframes, i.duration, i.delay, i.easing, [], true);\n  }\n\n  create(id: string, element: any, options: AnimationOptions = {}): AnimationPlayer {\n    const errors: any[] = [];\n    const ast = this._animations[id];\n    let instructions: AnimationTimelineInstruction[];\n\n    const autoStylesMap = new Map<any, ɵStyleData>();\n\n    if (ast) {\n      instructions = buildAnimationTimelines(\n          this._driver, element, ast, ENTER_CLASSNAME, LEAVE_CLASSNAME, {}, {}, options,\n          EMPTY_INSTRUCTION_MAP, errors);\n      instructions.forEach(inst => {\n        const styles = getOrSetAsInMap(autoStylesMap, inst.element, {});\n        inst.postStyleProps.forEach(prop => styles[prop] = null);\n      });\n    } else {\n      errors.push('The requested animation doesn\\'t exist or has already been destroyed');\n      instructions = [];\n    }\n\n    if (errors.length) {\n      throw new Error(\n          `Unable to create the animation due to the following errors: ${errors.join(\"\\n\")}`);\n    }\n\n    autoStylesMap.forEach((styles, element) => {\n      Object.keys(styles).forEach(\n          prop => { styles[prop] = this._driver.computeStyle(element, prop, AUTO_STYLE); });\n    });\n\n    const players = instructions.map(i => {\n      const styles = autoStylesMap.get(i.element);\n      return this._buildPlayer(i, {}, styles);\n    });\n    const player = optimizeGroupPlayer(players);\n    this._playersById[id] = player;\n    player.onDestroy(() => this.destroy(id));\n\n    this.players.push(player);\n    return player;\n  }\n\n  destroy(id: string) {\n    const player = this._getPlayer(id);\n    player.destroy();\n    delete this._playersById[id];\n    const index = this.players.indexOf(player);\n    if (index >= 0) {\n      this.players.splice(index, 1);\n    }\n  }\n\n  private _getPlayer(id: string): AnimationPlayer {\n    const player = this._playersById[id];\n    if (!player) {\n      throw new Error(`Unable to find the timeline player referenced by ${id}`);\n    }\n    return player;\n  }\n\n  listen(id: string, element: string, eventName: string, callback: (event: any) => any):\n      () => void {\n    // triggerName, fromState, toState are all ignored for timeline animations\n    const baseEvent = makeAnimationEvent(element, '', '', '');\n    listenOnPlayer(this._getPlayer(id), eventName, baseEvent, callback);\n    return () => {};\n  }\n\n  command(id: string, element: any, command: string, args: any[]): void {\n    if (command == 'register') {\n      this.register(id, args[0] as AnimationMetadata | AnimationMetadata[]);\n      return;\n    }\n\n    if (command == 'create') {\n      const options = (args[0] || {}) as AnimationOptions;\n      this.create(id, element, options);\n      return;\n    }\n\n    const player = this._getPlayer(id);\n    switch (command) {\n      case 'play':\n        player.play();\n        break;\n      case 'pause':\n        player.pause();\n        break;\n      case 'reset':\n        player.reset();\n        break;\n      case 'restart':\n        player.restart();\n        break;\n      case 'finish':\n        player.finish();\n        break;\n      case 'init':\n        player.init();\n        break;\n      case 'setPosition':\n        player.setPosition(parseFloat(args[0] as string));\n        break;\n      case 'destroy':\n        this.destroy(id);\n        break;\n    }\n  }\n}\n"],"sourceRoot":""}