{"version":3,"sources":["../../../../../../../../packages/animations/browser/src/render/animation_engine_next.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {AnimationMetadata, AnimationPlayer, AnimationTriggerMetadata} from '@angular/animations';\nimport {TriggerAst} from '../dsl/animation_ast';\nimport {buildAnimationAst} from '../dsl/animation_ast_builder';\nimport {AnimationTrigger, buildTrigger} from '../dsl/animation_trigger';\nimport {AnimationStyleNormalizer} from '../dsl/style_normalization/animation_style_normalizer';\n\nimport {AnimationDriver} from './animation_driver';\nimport {parseTimelineCommand} from './shared';\nimport {TimelineAnimationEngine} from './timeline_animation_engine';\nimport {TransitionAnimationEngine} from './transition_animation_engine';\n\nexport class AnimationEngine {\n  private _transitionEngine: TransitionAnimationEngine;\n  private _timelineEngine: TimelineAnimationEngine;\n\n  private _triggerCache: {[key: string]: AnimationTrigger} = {};\n\n  // this method is designed to be overridden by the code that uses this engine\n  public onRemovalComplete = (element: any, context: any) => {};\n\n  constructor(\n      private bodyNode: any, private _driver: AnimationDriver,\n      normalizer: AnimationStyleNormalizer) {\n    this._transitionEngine = new TransitionAnimationEngine(bodyNode, _driver, normalizer);\n    this._timelineEngine = new TimelineAnimationEngine(bodyNode, _driver, normalizer);\n\n    this._transitionEngine.onRemovalComplete = (element: any, context: any) =>\n        this.onRemovalComplete(element, context);\n  }\n\n  registerTrigger(\n      componentId: string, namespaceId: string, hostElement: any, name: string,\n      metadata: AnimationTriggerMetadata): void {\n    const cacheKey = componentId + '-' + name;\n    let trigger = this._triggerCache[cacheKey];\n    if (!trigger) {\n      const errors: any[] = [];\n      const ast =\n          buildAnimationAst(this._driver, metadata as AnimationMetadata, errors) as TriggerAst;\n      if (errors.length) {\n        throw new Error(\n            `The animation trigger \"${name}\" has failed to build due to the following errors:\\n - ${errors.join(\"\\n - \")}`);\n      }\n      trigger = buildTrigger(name, ast);\n      this._triggerCache[cacheKey] = trigger;\n    }\n    this._transitionEngine.registerTrigger(namespaceId, name, trigger);\n  }\n\n  register(namespaceId: string, hostElement: any) {\n    this._transitionEngine.register(namespaceId, hostElement);\n  }\n\n  destroy(namespaceId: string, context: any) {\n    this._transitionEngine.destroy(namespaceId, context);\n  }\n\n  onInsert(namespaceId: string, element: any, parent: any, insertBefore: boolean): void {\n    this._transitionEngine.insertNode(namespaceId, element, parent, insertBefore);\n  }\n\n  onRemove(namespaceId: string, element: any, context: any): void {\n    this._transitionEngine.removeNode(namespaceId, element, context);\n  }\n\n  disableAnimations(element: any, disable: boolean) {\n    this._transitionEngine.markElementAsDisabled(element, disable);\n  }\n\n  process(namespaceId: string, element: any, property: string, value: any) {\n    if (property.charAt(0) == '@') {\n      const [id, action] = parseTimelineCommand(property);\n      const args = value as any[];\n      this._timelineEngine.command(id, element, action, args);\n    } else {\n      this._transitionEngine.trigger(namespaceId, element, property, value);\n    }\n  }\n\n  listen(\n      namespaceId: string, element: any, eventName: string, eventPhase: string,\n      callback: (event: any) => any): () => any {\n    // @@listen\n    if (eventName.charAt(0) == '@') {\n      const [id, action] = parseTimelineCommand(eventName);\n      return this._timelineEngine.listen(id, element, action, callback);\n    }\n    return this._transitionEngine.listen(namespaceId, element, eventName, eventPhase, callback);\n  }\n\n  flush(microtaskId: number = -1): void { this._transitionEngine.flush(microtaskId); }\n\n  get players(): AnimationPlayer[] {\n    return (this._transitionEngine.players as AnimationPlayer[])\n        .concat(this._timelineEngine.players as AnimationPlayer[]);\n  }\n\n  whenRenderingDone(): Promise<any> { return this._transitionEngine.whenRenderingDone(); }\n}\n"],"sourceRoot":""}