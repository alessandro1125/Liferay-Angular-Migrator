{"version":3,"sources":["../../../../../../../../packages/animations/browser/testing/src/mock_animation_driver.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {AUTO_STYLE, AnimationPlayer, NoopAnimationPlayer, ɵStyleData} from '@angular/animations';\nimport {ɵAnimationDriver as AnimationDriver, ɵallowPreviousPlayerStylesMerge as allowPreviousPlayerStylesMerge, ɵcontainsElement as containsElement, ɵinvokeQuery as invokeQuery, ɵmatchesElement as matchesElement, ɵvalidateStyleProperty as validateStyleProperty} from '@angular/animations/browser';\n\n\n/**\n * @experimental Animation support is experimental.\n */\nexport class MockAnimationDriver implements AnimationDriver {\n  static log: AnimationPlayer[] = [];\n\n  validateStyleProperty(prop: string): boolean { return validateStyleProperty(prop); }\n\n  matchesElement(element: any, selector: string): boolean {\n    return matchesElement(element, selector);\n  }\n\n  containsElement(elm1: any, elm2: any): boolean { return containsElement(elm1, elm2); }\n\n  query(element: any, selector: string, multi: boolean): any[] {\n    return invokeQuery(element, selector, multi);\n  }\n\n  computeStyle(element: any, prop: string, defaultValue?: string): string {\n    return defaultValue || '';\n  }\n\n  animate(\n      element: any, keyframes: {[key: string]: string | number}[], duration: number, delay: number,\n      easing: string, previousPlayers: any[] = []): MockAnimationPlayer {\n    const player =\n        new MockAnimationPlayer(element, keyframes, duration, delay, easing, previousPlayers);\n    MockAnimationDriver.log.push(<AnimationPlayer>player);\n    return player;\n  }\n}\n\n/**\n * @experimental Animation support is experimental.\n */\nexport class MockAnimationPlayer extends NoopAnimationPlayer {\n  private __finished = false;\n  private __started = false;\n  public previousStyles: {[key: string]: string | number} = {};\n  private _onInitFns: (() => any)[] = [];\n  public currentSnapshot: ɵStyleData = {};\n\n  constructor(\n      public element: any, public keyframes: {[key: string]: string | number}[],\n      public duration: number, public delay: number, public easing: string,\n      public previousPlayers: any[]) {\n    super(duration, delay);\n\n    if (allowPreviousPlayerStylesMerge(duration, delay)) {\n      previousPlayers.forEach(player => {\n        if (player instanceof MockAnimationPlayer) {\n          const styles = player.currentSnapshot;\n          Object.keys(styles).forEach(prop => this.previousStyles[prop] = styles[prop]);\n        }\n      });\n    }\n  }\n\n  /* @internal */\n  onInit(fn: () => any) { this._onInitFns.push(fn); }\n\n  /* @internal */\n  init() {\n    super.init();\n    this._onInitFns.forEach(fn => fn());\n    this._onInitFns = [];\n  }\n\n  finish(): void {\n    super.finish();\n    this.__finished = true;\n  }\n\n  destroy(): void {\n    super.destroy();\n    this.__finished = true;\n  }\n\n  /* @internal */\n  triggerMicrotask() {}\n\n  play(): void {\n    super.play();\n    this.__started = true;\n  }\n\n  hasStarted() { return this.__started; }\n\n  beforeDestroy() {\n    const captures: ɵStyleData = {};\n\n    Object.keys(this.previousStyles).forEach(prop => {\n      captures[prop] = this.previousStyles[prop];\n    });\n\n    if (this.hasStarted()) {\n      // when assembling the captured styles, it's important that\n      // we build the keyframe styles in the following order:\n      // {other styles within keyframes, ... previousStyles }\n      this.keyframes.forEach(kf => {\n        Object.keys(kf).forEach(prop => {\n          if (prop != 'offset') {\n            captures[prop] = this.__finished ? kf[prop] : AUTO_STYLE;\n          }\n        });\n      });\n    }\n\n    this.currentSnapshot = captures;\n  }\n}\n"],"sourceRoot":""}