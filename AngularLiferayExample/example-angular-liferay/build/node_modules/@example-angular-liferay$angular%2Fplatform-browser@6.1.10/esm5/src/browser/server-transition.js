Liferay.Loader.define('@example-angular-liferay$angular/platform-browser@6.1.10/esm5/src/browser/server-transition', ['module', 'exports', 'require'], function (module, exports, require) {
    var define = undefined;
    /**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */
    import { APP_INITIALIZER, ApplicationInitStatus, InjectionToken, Injector } from '@angular/core';
    import { getDOM } from '../dom/dom_adapter';
    import { DOCUMENT } from '../dom/dom_tokens';
    /**
     * An id that identifies a particular application being bootstrapped, that should
     * match across the client/server boundary.
     */
    export var TRANSITION_ID = new InjectionToken('TRANSITION_ID');
    export function appInitializerFactory(transitionId, document, injector) {
        return function () {
            // Wait for all application initializers to be completed before removing the styles set by
            // the server.
            injector.get(ApplicationInitStatus).donePromise.then(function () {
                var dom = getDOM();
                var styles = Array.prototype.slice.apply(dom.querySelectorAll(document, "style[ng-transition]"));
                styles.filter(function (el) {
                    return dom.getAttribute(el, 'ng-transition') === transitionId;
                }).forEach(function (el) {
                    return dom.remove(el);
                });
            });
        };
    }
    export var SERVER_TRANSITION_PROVIDERS = [{
        provide: APP_INITIALIZER,
        useFactory: appInitializerFactory,
        deps: [TRANSITION_ID, DOCUMENT, Injector],
        multi: true
    }];
});
//# sourceMappingURL=server-transition.js.map