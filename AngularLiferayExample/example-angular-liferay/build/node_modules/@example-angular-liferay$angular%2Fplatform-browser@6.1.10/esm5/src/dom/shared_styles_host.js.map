{"version":3,"sources":["../../../../../../../../../../packages/platform-browser/src/dom/shared_styles_host.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Inject, Injectable, OnDestroy} from '@angular/core';\nimport {getDOM} from './dom_adapter';\nimport {DOCUMENT} from './dom_tokens';\n\n@Injectable()\nexport class SharedStylesHost {\n  /** @internal */\n  protected _stylesSet = new Set<string>();\n\n  addStyles(styles: string[]): void {\n    const additions = new Set<string>();\n    styles.forEach(style => {\n      if (!this._stylesSet.has(style)) {\n        this._stylesSet.add(style);\n        additions.add(style);\n      }\n    });\n    this.onStylesAdded(additions);\n  }\n\n  onStylesAdded(additions: Set<string>): void {}\n\n  getAllStyles(): string[] { return Array.from(this._stylesSet); }\n}\n\n@Injectable()\nexport class DomSharedStylesHost extends SharedStylesHost implements OnDestroy {\n  private _hostNodes = new Set<Node>();\n  private _styleNodes = new Set<Node>();\n  constructor(@Inject(DOCUMENT) private _doc: any) {\n    super();\n    this._hostNodes.add(_doc.head);\n  }\n\n  private _addStylesToHost(styles: Set<string>, host: Node): void {\n    styles.forEach((style: string) => {\n      const styleEl = this._doc.createElement('style');\n      styleEl.textContent = style;\n      this._styleNodes.add(host.appendChild(styleEl));\n    });\n  }\n\n  addHost(hostNode: Node): void {\n    this._addStylesToHost(this._stylesSet, hostNode);\n    this._hostNodes.add(hostNode);\n  }\n\n  removeHost(hostNode: Node): void { this._hostNodes.delete(hostNode); }\n\n  onStylesAdded(additions: Set<string>): void {\n    this._hostNodes.forEach(hostNode => this._addStylesToHost(additions, hostNode));\n  }\n\n  ngOnDestroy(): void { this._styleNodes.forEach(styleNode => getDOM().remove(styleNode)); }\n}\n"],"sourceRoot":""}