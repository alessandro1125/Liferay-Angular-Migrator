Liferay.Loader.define('@example-angular-liferay$angular/platform-browser@6.1.10/esm5/src/dom/debug/by', ['module', 'exports', 'require'], function (module, exports, require) {
  var define = undefined;
  /**
   * @license
   * Copyright Google Inc. All Rights Reserved.
   *
   * Use of this source code is governed by an MIT-style license that can be
   * found in the LICENSE file at https://angular.io/license
   */
  import { getDOM } from '../../dom/dom_adapter';
  /**
   * Predicates for use with {@link DebugElement}'s query functions.
   *
   * @experimental All debugging apis are currently experimental.
   */
  var By = /** @class */function () {
    function By() {}
    /**
     * Match all elements.
     *
     * @usageNotes
     * ### Example
     *
     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_all'}
     */
    By.all = function () {
      return function (debugElement) {
        return true;
      };
    };
    /**
     * Match elements by the given CSS selector.
     *
     * @usageNotes
     * ### Example
     *
     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_css'}
     */
    By.css = function (selector) {
      return function (debugElement) {
        return debugElement.nativeElement != null ? getDOM().elementMatches(debugElement.nativeElement, selector) : false;
      };
    };
    /**
     * Match elements that have the given directive present.
     *
     * @usageNotes
     * ### Example
     *
     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_directive'}
     */
    By.directive = function (type) {
      return function (debugElement) {
        return debugElement.providerTokens.indexOf(type) !== -1;
      };
    };
    return By;
  }();
  export { By };
});
//# sourceMappingURL=by.js.map