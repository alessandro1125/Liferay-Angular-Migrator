{"version":3,"sources":["../../../../../../../../../../../packages/platform-browser/animations/src/providers.ts"],"names":[],"mappings":";;;;;;;;;;AAQA,aAAQ,gBAAR,QAA+B,qBAA/B;AACA,aAAQ,eAAR,EAAyB,oBAAoB,eAA7C,EAA8D,6BAA6B,wBAA3F,EAAqH,uBAAuB,kBAA5I,EAAgK,wBAAwB,mBAAxL,EAA6M,wBAAwB,mBAArO,EAA0P,iCAAiC,4BAA3R,EAAyT,0BAA0B,qBAAnV,QAA+W,6BAA/W;AACA,aAAQ,QAAR,QAAuB,iBAAvB;AACA,aAAQ,MAAR,EAAgB,UAAhB,EAA4B,cAA5B,EAA4C,MAA5C,EAA8D,gBAA9D,QAAqF,eAArF;AACA,aAAQ,wBAAwB,mBAAhC,QAA0D,2BAA1D;AAEA,aAAQ,uBAAR,QAAsC,qBAAtC;AACA,aAAQ,wBAAR,QAAuC,sBAAvC;AAGA,QAAA,4BAAA,aAAA,UAAA,MAAA,EAAA;AAA+C,gBAAA,SAAA,CAAA,yBAAA,EAAA,MAAA;AAC7C,iBAAA,yBAAA,CACsB,GADtB,EACgC,MADhC,EACyD,UADzD,EAC6F;mBAC3F,OAAA,IAAA,CAAA,IAAA,EAAM,IAAI,IAAV,EAAgB,MAAhB,EAAwB,UAAxB,KAAmC,I;AACpC;AAJU,oCAAyB,QAAA,UAAA,CAAA,CADrC,YACqC,EAE/B,QAAA,OAAA,CAAA,CAAA,EAAA,OAAO,QAAP,CAAA,CAF+B,E,iDAEI,e,EAA6B,wB,EAFjC,CAAA,EAAzB,yBAAyB,CAAzB;AAKb,eAAA,yBAAA;AAAC,KALD,CAA+C,eAA/C,CAAA;aAAa,yB;AAOb,WAAM,SAAA,mCAAA,GAAA;AACJ,eAAO,0BAA0B,IAAI,mBAAJ,EAA1B,GAAsD,IAAI,kBAAJ,EAA7D;AACD;AAED,WAAM,SAAA,iCAAA,GAAA;AACJ,eAAO,IAAI,4BAAJ,EAAP;AACD;AAED,WAAM,SAAA,0BAAA,CACF,QADE,EAC6B,MAD7B,EACsD,IADtD,EACkE;AACtE,eAAO,IAAI,wBAAJ,CAA6B,QAA7B,EAAuC,MAAvC,EAA+C,IAA/C,CAAP;AACD;AAED;;;AAGA,WAAO,IAAM,wBACT,IAAI,cAAJ,CAAyD,qBAAzD,CADG;AAGP,QAAM,6BAAyC,CAC7C,EAAC,SAAS,gBAAV,EAA4B,UAAU,uBAAtC,EAD6C,EAE7C,EAAC,SAAS,wBAAV,EAAoC,YAAY,iCAAhD,EAF6C,EAG7C,EAAC,SAAS,eAAV,EAA2B,UAAU,yBAArC,EAH6C,EAGoB;AAC/D,iBAAS,gBADsD;AAE/D,oBAAY,0BAFmD;AAG/D,cAAM,CAAC,mBAAD,EAAsB,eAAtB,EAAuC,MAAvC;AAHyD,KAHpB,CAA/C;AAUA;;;;AAIA,WAAO,IAAM,+BAA4B,QAAA,QAAA,CAAA,CACvC,EAAC,SAAS,eAAV,EAA2B,YAAY,mCAAvC,EADuC,EAEvC,EAAC,SAAS,qBAAV,EAAiC,UAAU,mBAA3C,EAFuC,CAAA,EAE6B,0BAF7B,CAAlC;AAKP;;;;AAIA,WAAO,IAAM,oCAAiC,QAAA,QAAA,CAAA,CAC5C,EAAC,SAAS,eAAV,EAA2B,UAAU,mBAArC,EAD4C,EAE5C,EAAC,SAAS,qBAAV,EAAiC,UAAU,gBAA3C,EAF4C,CAAA,EAEqB,0BAFrB,CAAvC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AnimationBuilder} from '@angular/animations';\nimport {AnimationDriver, ɵAnimationEngine as AnimationEngine, ɵAnimationStyleNormalizer as AnimationStyleNormalizer, ɵCssKeyframesDriver as CssKeyframesDriver, ɵNoopAnimationDriver as NoopAnimationDriver, ɵWebAnimationsDriver as WebAnimationsDriver, ɵWebAnimationsStyleNormalizer as WebAnimationsStyleNormalizer, ɵsupportsWebAnimations as supportsWebAnimations} from '@angular/animations/browser';\nimport {DOCUMENT} from '@angular/common';\nimport {Inject, Injectable, InjectionToken, NgZone, Provider, RendererFactory2} from '@angular/core';\nimport {ɵDomRendererFactory2 as DomRendererFactory2} from '@angular/platform-browser';\n\nimport {BrowserAnimationBuilder} from './animation_builder';\nimport {AnimationRendererFactory} from './animation_renderer';\n\n@Injectable()\nexport class InjectableAnimationEngine extends AnimationEngine {\n  constructor(\n      @Inject(DOCUMENT) doc: any, driver: AnimationDriver, normalizer: AnimationStyleNormalizer) {\n    super(doc.body, driver, normalizer);\n  }\n}\n\nexport function instantiateSupportedAnimationDriver() {\n  return supportsWebAnimations() ? new WebAnimationsDriver() : new CssKeyframesDriver();\n}\n\nexport function instantiateDefaultStyleNormalizer() {\n  return new WebAnimationsStyleNormalizer();\n}\n\nexport function instantiateRendererFactory(\n    renderer: DomRendererFactory2, engine: AnimationEngine, zone: NgZone) {\n  return new AnimationRendererFactory(renderer, engine, zone);\n}\n\n/**\n * @experimental Animation support is experimental.\n */\nexport const ANIMATION_MODULE_TYPE =\n    new InjectionToken<'NoopAnimations'|'BrowserAnimations'>('AnimationModuleType');\n\nconst SHARED_ANIMATION_PROVIDERS: Provider[] = [\n  {provide: AnimationBuilder, useClass: BrowserAnimationBuilder},\n  {provide: AnimationStyleNormalizer, useFactory: instantiateDefaultStyleNormalizer},\n  {provide: AnimationEngine, useClass: InjectableAnimationEngine}, {\n    provide: RendererFactory2,\n    useFactory: instantiateRendererFactory,\n    deps: [DomRendererFactory2, AnimationEngine, NgZone]\n  }\n];\n\n/**\n * Separate providers from the actual module so that we can do a local modification in Google3 to\n * include them in the BrowserModule.\n */\nexport const BROWSER_ANIMATIONS_PROVIDERS: Provider[] = [\n  {provide: AnimationDriver, useFactory: instantiateSupportedAnimationDriver},\n  {provide: ANIMATION_MODULE_TYPE, useValue: 'BrowserAnimations'}, ...SHARED_ANIMATION_PROVIDERS\n];\n\n/**\n * Separate providers from the actual module so that we can do a local modification in Google3 to\n * include them in the BrowserTestingModule.\n */\nexport const BROWSER_NOOP_ANIMATIONS_PROVIDERS: Provider[] = [\n  {provide: AnimationDriver, useClass: NoopAnimationDriver},\n  {provide: ANIMATION_MODULE_TYPE, useValue: 'NoopAnimations'}, ...SHARED_ANIMATION_PROVIDERS\n];\n"],"sourceRoot":""}