Liferay.Loader.define('@example-angular-liferay$angular/platform-browser@6.1.10/esm5/testing/src/browser', ['module', 'exports', 'require'], function (module, exports, require) {
    var define = undefined;
    import * as tslib_1 from "tslib";
    /**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */
    import { APP_ID, NgModule, NgZone, PLATFORM_INITIALIZER, createPlatformFactory, platformCore } from '@angular/core';
    import { BrowserModule, ɵBrowserDomAdapter as BrowserDomAdapter, ɵELEMENT_PROBE_PROVIDERS as ELEMENT_PROBE_PROVIDERS } from '@angular/platform-browser';
    import { BrowserDetection, createNgZone } from './browser_util';
    function initBrowserTests() {
        BrowserDomAdapter.makeCurrent();
        BrowserDetection.setup();
    }
    var _TEST_BROWSER_PLATFORM_PROVIDERS = [{ provide: PLATFORM_INITIALIZER, useValue: initBrowserTests, multi: true }];
    /**
     * Platform for testing
     *
     *
     */
    export var platformBrowserTesting = createPlatformFactory(platformCore, 'browserTesting', _TEST_BROWSER_PLATFORM_PROVIDERS);
    var ɵ0 = createNgZone;
    /**
     * NgModule for testing.
     *
     *
     */
    var BrowserTestingModule = /** @class */function () {
        function BrowserTestingModule() {}
        BrowserTestingModule = tslib_1.__decorate([NgModule({
            exports: [BrowserModule],
            providers: [{ provide: APP_ID, useValue: 'a' }, ELEMENT_PROBE_PROVIDERS, { provide: NgZone, useFactory: ɵ0 }]
        })], BrowserTestingModule);
        return BrowserTestingModule;
    }();
    export { BrowserTestingModule };
    export { ɵ0 };
});
//# sourceMappingURL=browser.js.map