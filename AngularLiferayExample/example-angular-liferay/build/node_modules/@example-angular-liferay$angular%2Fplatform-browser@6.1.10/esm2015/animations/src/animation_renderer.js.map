{"version":3,"sources":["../../../../../../../packages/platform-browser/animations/src/animation_renderer.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {AnimationTriggerMetadata} from '@angular/animations';\nimport {ÉµAnimationEngine as AnimationEngine} from '@angular/animations/browser';\nimport {Injectable, NgZone, Renderer2, RendererFactory2, RendererStyleFlags2, RendererType2} from '@angular/core';\n\nconst ANIMATION_PREFIX = '@';\nconst DISABLE_ANIMATIONS_FLAG = '@.disabled';\n\n@Injectable()\nexport class AnimationRendererFactory implements RendererFactory2 {\n  private _currentId: number = 0;\n  private _microtaskId: number = 1;\n  private _animationCallbacksBuffer: [(e: any) => any, any][] = [];\n  private _rendererCache = new Map<Renderer2, BaseAnimationRenderer>();\n  private _cdRecurDepth = 0;\n  private promise: Promise<any> = Promise.resolve(0);\n\n  constructor(\n      private delegate: RendererFactory2, private engine: AnimationEngine, private _zone: NgZone) {\n    engine.onRemovalComplete = (element: any, delegate: Renderer2) => {\n      // Note: if an component element has a leave animation, and the component\n      // a host leave animation, the view engine will call `removeChild` for the parent\n      // component renderer as well as for the child component renderer.\n      // Therefore, we need to check if we already removed the element.\n      if (delegate && delegate.parentNode(element)) {\n        delegate.removeChild(element.parentNode, element);\n      }\n    };\n  }\n\n  createRenderer(hostElement: any, type: RendererType2): Renderer2 {\n    const EMPTY_NAMESPACE_ID = '';\n\n    // cache the delegates to find out which cached delegate can\n    // be used by which cached renderer\n    const delegate = this.delegate.createRenderer(hostElement, type);\n    if (!hostElement || !type || !type.data || !type.data['animation']) {\n      let renderer: BaseAnimationRenderer|undefined = this._rendererCache.get(delegate);\n      if (!renderer) {\n        renderer = new BaseAnimationRenderer(EMPTY_NAMESPACE_ID, delegate, this.engine);\n        // only cache this result when the base renderer is used\n        this._rendererCache.set(delegate, renderer);\n      }\n      return renderer;\n    }\n\n    const componentId = type.id;\n    const namespaceId = type.id + '-' + this._currentId;\n    this._currentId++;\n\n    this.engine.register(namespaceId, hostElement);\n    const animationTriggers = type.data['animation'] as AnimationTriggerMetadata[];\n    animationTriggers.forEach(\n        trigger => this.engine.registerTrigger(\n            componentId, namespaceId, hostElement, trigger.name, trigger));\n    return new AnimationRenderer(this, namespaceId, delegate, this.engine);\n  }\n\n  begin() {\n    this._cdRecurDepth++;\n    if (this.delegate.begin) {\n      this.delegate.begin();\n    }\n  }\n\n  private _scheduleCountTask() {\n    // always use promise to schedule microtask instead of use Zone\n    this.promise.then(() => { this._microtaskId++; });\n  }\n\n  /** @internal */\n  scheduleListenerCallback(count: number, fn: (e: any) => any, data: any) {\n    if (count >= 0 && count < this._microtaskId) {\n      this._zone.run(() => fn(data));\n      return;\n    }\n\n    if (this._animationCallbacksBuffer.length == 0) {\n      Promise.resolve(null).then(() => {\n        this._zone.run(() => {\n          this._animationCallbacksBuffer.forEach(tuple => {\n            const [fn, data] = tuple;\n            fn(data);\n          });\n          this._animationCallbacksBuffer = [];\n        });\n      });\n    }\n\n    this._animationCallbacksBuffer.push([fn, data]);\n  }\n\n  end() {\n    this._cdRecurDepth--;\n\n    // this is to prevent animations from running twice when an inner\n    // component does CD when a parent component insted has inserted it\n    if (this._cdRecurDepth == 0) {\n      this._zone.runOutsideAngular(() => {\n        this._scheduleCountTask();\n        this.engine.flush(this._microtaskId);\n      });\n    }\n    if (this.delegate.end) {\n      this.delegate.end();\n    }\n  }\n\n  whenRenderingDone(): Promise<any> { return this.engine.whenRenderingDone(); }\n}\n\nexport class BaseAnimationRenderer implements Renderer2 {\n  constructor(\n      protected namespaceId: string, public delegate: Renderer2, public engine: AnimationEngine) {\n    this.destroyNode = this.delegate.destroyNode ? (n) => delegate.destroyNode !(n) : null;\n  }\n\n  get data() { return this.delegate.data; }\n\n  destroyNode: ((n: any) => void)|null;\n\n  destroy(): void {\n    this.engine.destroy(this.namespaceId, this.delegate);\n    this.delegate.destroy();\n  }\n\n  createElement(name: string, namespace?: string|null|undefined) {\n    return this.delegate.createElement(name, namespace);\n  }\n\n  createComment(value: string) { return this.delegate.createComment(value); }\n\n  createText(value: string) { return this.delegate.createText(value); }\n\n  appendChild(parent: any, newChild: any): void {\n    this.delegate.appendChild(parent, newChild);\n    this.engine.onInsert(this.namespaceId, newChild, parent, false);\n  }\n\n  insertBefore(parent: any, newChild: any, refChild: any): void {\n    this.delegate.insertBefore(parent, newChild, refChild);\n    this.engine.onInsert(this.namespaceId, newChild, parent, true);\n  }\n\n  removeChild(parent: any, oldChild: any): void {\n    this.engine.onRemove(this.namespaceId, oldChild, this.delegate);\n  }\n\n  selectRootElement(selectorOrNode: any) { return this.delegate.selectRootElement(selectorOrNode); }\n\n  parentNode(node: any) { return this.delegate.parentNode(node); }\n\n  nextSibling(node: any) { return this.delegate.nextSibling(node); }\n\n  setAttribute(el: any, name: string, value: string, namespace?: string|null|undefined): void {\n    this.delegate.setAttribute(el, name, value, namespace);\n  }\n\n  removeAttribute(el: any, name: string, namespace?: string|null|undefined): void {\n    this.delegate.removeAttribute(el, name, namespace);\n  }\n\n  addClass(el: any, name: string): void { this.delegate.addClass(el, name); }\n\n  removeClass(el: any, name: string): void { this.delegate.removeClass(el, name); }\n\n  setStyle(el: any, style: string, value: any, flags?: RendererStyleFlags2|undefined): void {\n    this.delegate.setStyle(el, style, value, flags);\n  }\n\n  removeStyle(el: any, style: string, flags?: RendererStyleFlags2|undefined): void {\n    this.delegate.removeStyle(el, style, flags);\n  }\n\n  setProperty(el: any, name: string, value: any): void {\n    if (name.charAt(0) == ANIMATION_PREFIX && name == DISABLE_ANIMATIONS_FLAG) {\n      this.disableAnimations(el, !!value);\n    } else {\n      this.delegate.setProperty(el, name, value);\n    }\n  }\n\n  setValue(node: any, value: string): void { this.delegate.setValue(node, value); }\n\n  listen(target: any, eventName: string, callback: (event: any) => boolean | void): () => void {\n    return this.delegate.listen(target, eventName, callback);\n  }\n\n  protected disableAnimations(element: any, value: boolean) {\n    this.engine.disableAnimations(element, value);\n  }\n}\n\nexport class AnimationRenderer extends BaseAnimationRenderer implements Renderer2 {\n  constructor(\n      public factory: AnimationRendererFactory, namespaceId: string, delegate: Renderer2,\n      engine: AnimationEngine) {\n    super(namespaceId, delegate, engine);\n    this.namespaceId = namespaceId;\n  }\n\n  setProperty(el: any, name: string, value: any): void {\n    if (name.charAt(0) == ANIMATION_PREFIX) {\n      if (name.charAt(1) == '.' && name == DISABLE_ANIMATIONS_FLAG) {\n        value = value === undefined ? true : !!value;\n        this.disableAnimations(el, value as boolean);\n      } else {\n        this.engine.process(this.namespaceId, el, name.substr(1), value);\n      }\n    } else {\n      this.delegate.setProperty(el, name, value);\n    }\n  }\n\n  listen(target: 'window'|'document'|'body'|any, eventName: string, callback: (event: any) => any):\n      () => void {\n    if (eventName.charAt(0) == ANIMATION_PREFIX) {\n      const element = resolveElementFromTarget(target);\n      let name = eventName.substr(1);\n      let phase = '';\n      // @listener.phase is for trigger animation callbacks\n      // @@listener is for animation builder callbacks\n      if (name.charAt(0) != ANIMATION_PREFIX) {\n        [name, phase] = parseTriggerCallbackName(name);\n      }\n      return this.engine.listen(this.namespaceId, element, name, phase, event => {\n        const countId = (event as any)['_data'] || -1;\n        this.factory.scheduleListenerCallback(countId, callback, event);\n      });\n    }\n    return this.delegate.listen(target, eventName, callback);\n  }\n}\n\nfunction resolveElementFromTarget(target: 'window' | 'document' | 'body' | any): any {\n  switch (target) {\n    case 'body':\n      return document.body;\n    case 'document':\n      return document;\n    case 'window':\n      return window;\n    default:\n      return target;\n  }\n}\n\nfunction parseTriggerCallbackName(triggerName: string) {\n  const dotIndex = triggerName.indexOf('.');\n  const trigger = triggerName.substring(0, dotIndex);\n  const phase = triggerName.substr(dotIndex + 1);\n  return [trigger, phase];\n}\n"],"sourceRoot":""}