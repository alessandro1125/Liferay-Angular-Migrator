{"version":3,"sources":["../../../../../../../../packages/platform-browser/src/browser/location/browser_platform_location.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAQA,WAAgC,gBAAhC,QAAuD,iBAAvD;AACA,WAAQ,MAAR,EAAgB,UAAhB,QAAiC,eAAjC;AAEA,WAAQ,MAAR,QAAqB,uBAArB;AACA,WAAQ,QAAR,QAAuB,sBAAvB;AAEA,WAAQ,aAAR,QAA4B,WAA5B;;;;;;AAUA,SAAM,MAAA,uBAAA,SAAuC,gBAAvC,CAAuD;;;;AAM3D,gBAAsC,IAAtC,EAA+C;AAC7C;AADoC,WAAA,IAAA,GAAA,IAAA;AAEpC,WAAK,KAAL;AACD;;;;;AAID,YAAK;AACH,sBAAC,IAAD,CAA8B,QAA9B,GAAyC,SAAS,WAAT,EAAzC;AACA,WAAK,QAAL,GAAgB,SAAS,UAAT,EAAhB;AACD;;;;AAED,yBAAkB;AAAa,aAAA,iBAAO,SAAS,WAAT,CAAqB,KAAK,IAA1B;AAAP;AAA2C;;;;;AAE1E,eAAW,EAAX,EAAqC;AACnC,eAAS,oBAAT,CAA8B,KAAK,IAAnC,EAAyC,QAAzC,EAAmD,gBAAnD,CAAoE,UAApE,EAAgF,EAAhF,EAAoF,KAApF;AACD;;;;;AAED,iBAAa,EAAb,EAAuC;AACrC,eAAS,oBAAT,CAA8B,KAAK,IAAnC,EAAyC,QAAzC,EAAmD,gBAAnD,CAAoE,YAApE,EAAkF,EAAlF,EAAsF,KAAtF;AACD;;;;AAED,QAAI,QAAJ,GAAY;AAAa,aAAO,KAAK,QAAL,CAAc,QAArB;AAAgC;;;;AACzD,QAAI,MAAJ,GAAU;AAAa,aAAO,KAAK,QAAL,CAAc,MAArB;AAA8B;;;;AACrD,QAAI,IAAJ,GAAQ;AAAa,aAAO,KAAK,QAAL,CAAc,IAArB;AAA4B;;;;;AACjD,QAAI,QAAJ,CAAa,OAAb,EAA4B;AAAI,WAAK,QAAL,CAAc,QAAd,GAAyB,OAAzB;AAAmC;;;;;;;AAEnE,cAAU,KAAV,EAAsB,KAAtB,EAAqC,GAArC,EAAgD;AAC9C,UAAI,eAAJ,EAAqB;AACnB,aAAK,QAAL,CAAc,SAAd,CAAwB,KAAxB,EAA+B,KAA/B,EAAsC,GAAtC;AACD,OAFD,MAEO;AACL,aAAK,QAAL,CAAc,IAAd,GAAqB,GAArB;AACD;AACF;;;;;;;AAED,iBAAa,KAAb,EAAyB,KAAzB,EAAwC,GAAxC,EAAmD;AACjD,UAAI,eAAJ,EAAqB;AACnB,aAAK,QAAL,CAAc,YAAd,CAA2B,KAA3B,EAAkC,KAAlC,EAAyC,GAAzC;AACD,OAFD,MAEO;AACL,aAAK,QAAL,CAAc,IAAd,GAAqB,GAArB;AACD;AACF;;;;AAED,cAAO;AAAW,WAAK,QAAL,CAAc,OAAd;AAA0B;;;;AAE5C,WAAI;AAAW,WAAK,QAAL,CAAc,IAAd;AAAuB;AAnDqB;gDAD5D,U;;0FAOc,M,EAAM,MAAA,CAAC,QAAD,C","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {LocationChangeListener, PlatformLocation} from '@angular/common';\nimport {Inject, Injectable} from '@angular/core';\n\nimport {getDOM} from '../../dom/dom_adapter';\nimport {DOCUMENT} from '../../dom/dom_tokens';\n\nimport {supportsState} from './history';\n\n\n\n/**\n * `PlatformLocation` encapsulates all of the direct calls to platform APIs.\n * This class should not be used directly by an application developer. Instead, use\n * {@link Location}.\n */\n@Injectable()\nexport class BrowserPlatformLocation extends PlatformLocation {\n  // TODO(issue/24571): remove '!'.\n  public readonly location !: Location;\n  // TODO(issue/24571): remove '!'.\n  private _history !: History;\n\n  constructor(@Inject(DOCUMENT) private _doc: any) {\n    super();\n    this._init();\n  }\n\n  // This is moved to its own method so that `MockPlatformLocationStrategy` can overwrite it\n  /** @internal */\n  _init() {\n    (this as{location: Location}).location = getDOM().getLocation();\n    this._history = getDOM().getHistory();\n  }\n\n  getBaseHrefFromDOM(): string { return getDOM().getBaseHref(this._doc) !; }\n\n  onPopState(fn: LocationChangeListener): void {\n    getDOM().getGlobalEventTarget(this._doc, 'window').addEventListener('popstate', fn, false);\n  }\n\n  onHashChange(fn: LocationChangeListener): void {\n    getDOM().getGlobalEventTarget(this._doc, 'window').addEventListener('hashchange', fn, false);\n  }\n\n  get pathname(): string { return this.location.pathname; }\n  get search(): string { return this.location.search; }\n  get hash(): string { return this.location.hash; }\n  set pathname(newPath: string) { this.location.pathname = newPath; }\n\n  pushState(state: any, title: string, url: string): void {\n    if (supportsState()) {\n      this._history.pushState(state, title, url);\n    } else {\n      this.location.hash = url;\n    }\n  }\n\n  replaceState(state: any, title: string, url: string): void {\n    if (supportsState()) {\n      this._history.replaceState(state, title, url);\n    } else {\n      this.location.hash = url;\n    }\n  }\n\n  forward(): void { this._history.forward(); }\n\n  back(): void { this._history.back(); }\n}\n"],"sourceRoot":""}