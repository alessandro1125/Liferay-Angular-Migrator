{"version":3,"sources":["../../../../../../../../packages/platform-browser/src/dom/debug/ng_probe.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAQA,WAAO,KAAK,IAAZ,MAAsB,eAAtB;AACA,aAAQ,WAAR,QAA0B,SAA1B;;AAEA,UAAM,cAAc;AAClB,0BAAkB,KAAK,cADL;AAElB,kBAAU,KAAK;AAFG,KAApB;;AAKA,UAAM,sBAAsB,OAA5B;;AACA,UAAM,0BAA0B,YAAhC;;;;;;;;AAOA,WAAM,SAAA,oBAAA,CAA+B,OAA/B,EAA2C;AAC/C,eAAO,KAAK,YAAL,CAAkB,OAAlB,CAAP;AACD;;;;;AAED,WAAM,SAAA,cAAA,CAAyB,UAAzB,EAAwD;AAC5D,oBAAY,mBAAZ,EAAiC,oBAAjC;AACA,oBAAY,uBAAZ,EAAmC,OAAA,MAAA,CAAA,EAAA,EAAM,WAAN,EAAsB,oBAAoB,cAAc,EAAlC,CAAtB,CAAnC;AACA,eAAO,MAAM,oBAAb;AACD;;;;;AAED,aAAA,mBAAA,CAA6B,MAA7B,EAAwD;AACtD,eAAO,OAAO,MAAP,CAAc,CAAC,IAAD,EAAY,CAAZ,MAAwB,KAAK,EAAE,IAAP,IAAe,EAAE,KAAjB,EAAwB,IAAhD,CAAd,EAAqE,EAArE,CAAP;AACD;;;;AAKD,WAAA,MAAa,0BAA2C,CACtD;AACE,iBAAS,KAAK,eADhB;AAEE,oBAAY,cAFd;AAGE,cAAM,CACJ,CAAC,KAAK,YAAN,EAAoB,IAAI,KAAK,QAAT,EAApB,CADI,CAHR;AAME,eAAO;AANT,KADsD,CAAxD","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as core from '@angular/core';\nimport {exportNgVar} from '../util';\n\nconst CORE_TOKENS = {\n  'ApplicationRef': core.ApplicationRef,\n  'NgZone': core.NgZone,\n};\n\nconst INSPECT_GLOBAL_NAME = 'probe';\nconst CORE_TOKENS_GLOBAL_NAME = 'coreTokens';\n\n/**\n * Returns a {@link DebugElement} for the given native DOM element, or\n * null if the given native element does not have an Angular view associated\n * with it.\n */\nexport function inspectNativeElement(element: any): core.DebugNode|null {\n  return core.getDebugNode(element);\n}\n\nexport function _createNgProbe(coreTokens: core.NgProbeToken[]): any {\n  exportNgVar(INSPECT_GLOBAL_NAME, inspectNativeElement);\n  exportNgVar(CORE_TOKENS_GLOBAL_NAME, {...CORE_TOKENS, ..._ngProbeTokensToMap(coreTokens || [])});\n  return () => inspectNativeElement;\n}\n\nfunction _ngProbeTokensToMap(tokens: core.NgProbeToken[]): {[name: string]: any} {\n  return tokens.reduce((prev: any, t: any) => (prev[t.name] = t.token, prev), {});\n}\n\n/**\n * Providers which support debugging Angular applications (e.g. via `ng.probe`).\n */\nexport const ELEMENT_PROBE_PROVIDERS: core.Provider[] = [\n  {\n    provide: core.APP_INITIALIZER,\n    useFactory: _createNgProbe,\n    deps: [\n      [core.NgProbeToken, new core.Optional()],\n    ],\n    multi: true,\n  },\n];\n"],"sourceRoot":""}