{"version":3,"sources":["../../../../../../../../packages/platform-browser/src/dom/events/dom_events.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {isPlatformServer} from '@angular/common';\nimport {Inject, Injectable, NgZone, Optional, PLATFORM_ID} from '@angular/core';\n\n\nimport {DOCUMENT} from '../dom_tokens';\n\nimport {EventManagerPlugin} from './event_manager';\n\n/**\n * Detect if Zone is present. If it is then use simple zone aware 'addEventListener'\n * since Angular can do much more\n * efficient bookkeeping than Zone can, because we have additional information. This speeds up\n * addEventListener by 3x.\n */\nconst __symbol__ =\n    (typeof Zone !== 'undefined') && (Zone as any)['__symbol__'] || function(v: string): string {\n      return '__zone_symbol__' + v;\n    };\nconst ADD_EVENT_LISTENER: 'addEventListener' = __symbol__('addEventListener');\nconst REMOVE_EVENT_LISTENER: 'removeEventListener' = __symbol__('removeEventListener');\n\nconst symbolNames: {[key: string]: string} = {};\n\nconst FALSE = 'FALSE';\nconst ANGULAR = 'ANGULAR';\nconst NATIVE_ADD_LISTENER = 'addEventListener';\nconst NATIVE_REMOVE_LISTENER = 'removeEventListener';\n\n// use the same symbol string which is used in zone.js\nconst stopSymbol = '__zone_symbol__propagationStopped';\nconst stopMethodSymbol = '__zone_symbol__stopImmediatePropagation';\n\nconst blackListedEvents: string[] =\n    (typeof Zone !== 'undefined') && (Zone as any)[__symbol__('BLACK_LISTED_EVENTS')];\nlet blackListedMap: {[eventName: string]: string};\nif (blackListedEvents) {\n  blackListedMap = {};\n  blackListedEvents.forEach(eventName => { blackListedMap[eventName] = eventName; });\n}\n\nconst isBlackListedEvent = function(eventName: string) {\n  if (!blackListedMap) {\n    return false;\n  }\n  return blackListedMap.hasOwnProperty(eventName);\n};\n\ninterface TaskData {\n  zone: any;\n  handler: Function;\n}\n\n// a global listener to handle all dom event,\n// so we do not need to create a closure every time\nconst globalListener = function(event: Event) {\n  const symbolName = symbolNames[event.type];\n  if (!symbolName) {\n    return;\n  }\n  const taskDatas: TaskData[] = this[symbolName];\n  if (!taskDatas) {\n    return;\n  }\n  const args: any = [event];\n  if (taskDatas.length === 1) {\n    // if taskDatas only have one element, just invoke it\n    const taskData = taskDatas[0];\n    if (taskData.zone !== Zone.current) {\n      // only use Zone.run when Zone.current not equals to stored zone\n      return taskData.zone.run(taskData.handler, this, args);\n    } else {\n      return taskData.handler.apply(this, args);\n    }\n  } else {\n    // copy tasks as a snapshot to avoid event handlers remove\n    // itself or others\n    const copiedTasks = taskDatas.slice();\n    for (let i = 0; i < copiedTasks.length; i++) {\n      // if other listener call event.stopImmediatePropagation\n      // just break\n      if ((event as any)[stopSymbol] === true) {\n        break;\n      }\n      const taskData = copiedTasks[i];\n      if (taskData.zone !== Zone.current) {\n        // only use Zone.run when Zone.current not equals to stored zone\n        taskData.zone.run(taskData.handler, this, args);\n      } else {\n        taskData.handler.apply(this, args);\n      }\n    }\n  }\n};\n\n@Injectable()\nexport class DomEventsPlugin extends EventManagerPlugin {\n  constructor(\n      @Inject(DOCUMENT) doc: any, private ngZone: NgZone,\n      @Optional() @Inject(PLATFORM_ID) platformId: {}|null) {\n    super(doc);\n\n    if (!platformId || !isPlatformServer(platformId)) {\n      this.patchEvent();\n    }\n  }\n\n  private patchEvent() {\n    if (typeof Event === 'undefined' || !Event || !Event.prototype) {\n      return;\n    }\n    if ((Event.prototype as any)[stopMethodSymbol]) {\n      // already patched by zone.js\n      return;\n    }\n    const delegate = (Event.prototype as any)[stopMethodSymbol] =\n        Event.prototype.stopImmediatePropagation;\n    Event.prototype.stopImmediatePropagation = function() {\n      if (this) {\n        this[stopSymbol] = true;\n      }\n\n      // should call native delegate in case\n      // in some environment part of the application\n      // will not use the patched Event\n      delegate && delegate.apply(this, arguments);\n    };\n  }\n\n  // This plugin should come last in the list of plugins, because it accepts all\n  // events.\n  supports(eventName: string): boolean { return true; }\n\n  addEventListener(element: HTMLElement, eventName: string, handler: Function): Function {\n    /**\n     * This code is about to add a listener to the DOM. If Zone.js is present, than\n     * `addEventListener` has been patched. The patched code adds overhead in both\n     * memory and speed (3x slower) than native. For this reason if we detect that\n     * Zone.js is present we use a simple version of zone aware addEventListener instead.\n     * The result is faster registration and the zone will be restored.\n     * But ZoneSpec.onScheduleTask, ZoneSpec.onInvokeTask, ZoneSpec.onCancelTask\n     * will not be invoked\n     * We also do manual zone restoration in element.ts renderEventHandlerClosure method.\n     *\n     * NOTE: it is possible that the element is from different iframe, and so we\n     * have to check before we execute the method.\n     */\n    const self = this;\n    const zoneJsLoaded = element[ADD_EVENT_LISTENER];\n    let callback: EventListener = handler as EventListener;\n    // if zonejs is loaded and current zone is not ngZone\n    // we keep Zone.current on target for later restoration.\n    if (zoneJsLoaded && (!NgZone.isInAngularZone() || isBlackListedEvent(eventName))) {\n      let symbolName = symbolNames[eventName];\n      if (!symbolName) {\n        symbolName = symbolNames[eventName] = __symbol__(ANGULAR + eventName + FALSE);\n      }\n      let taskDatas: TaskData[] = (element as any)[symbolName];\n      const globalListenerRegistered = taskDatas && taskDatas.length > 0;\n      if (!taskDatas) {\n        taskDatas = (element as any)[symbolName] = [];\n      }\n\n      const zone = isBlackListedEvent(eventName) ? Zone.root : Zone.current;\n      if (taskDatas.length === 0) {\n        taskDatas.push({zone: zone, handler: callback});\n      } else {\n        let callbackRegistered = false;\n        for (let i = 0; i < taskDatas.length; i++) {\n          if (taskDatas[i].handler === callback) {\n            callbackRegistered = true;\n            break;\n          }\n        }\n        if (!callbackRegistered) {\n          taskDatas.push({zone: zone, handler: callback});\n        }\n      }\n\n      if (!globalListenerRegistered) {\n        element[ADD_EVENT_LISTENER](eventName, globalListener, false);\n      }\n    } else {\n      element[NATIVE_ADD_LISTENER](eventName, callback, false);\n    }\n    return () => this.removeEventListener(element, eventName, callback);\n  }\n\n  removeEventListener(target: any, eventName: string, callback: Function): void {\n    let underlyingRemove = target[REMOVE_EVENT_LISTENER];\n    // zone.js not loaded, use native removeEventListener\n    if (!underlyingRemove) {\n      return target[NATIVE_REMOVE_LISTENER].apply(target, [eventName, callback, false]);\n    }\n    let symbolName = symbolNames[eventName];\n    let taskDatas: TaskData[] = symbolName && target[symbolName];\n    if (!taskDatas) {\n      // addEventListener not using patched version\n      // just call native removeEventListener\n      return target[NATIVE_REMOVE_LISTENER].apply(target, [eventName, callback, false]);\n    }\n    // fix issue 20532, should be able to remove\n    // listener which was added inside of ngZone\n    let found = false;\n    for (let i = 0; i < taskDatas.length; i++) {\n      // remove listener from taskDatas if the callback equals\n      if (taskDatas[i].handler === callback) {\n        found = true;\n        taskDatas.splice(i, 1);\n        break;\n      }\n    }\n    if (found) {\n      if (taskDatas.length === 0) {\n        // all listeners are removed, we can remove the globalListener from target\n        underlyingRemove.apply(target, [eventName, globalListener, false]);\n      }\n    } else {\n      // not found in taskDatas, the callback may be added inside of ngZone\n      // use native remove listener to remove the callback\n      target[NATIVE_REMOVE_LISTENER].apply(target, [eventName, callback, false]);\n    }\n  }\n}\n"],"sourceRoot":""}