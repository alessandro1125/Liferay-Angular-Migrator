{"version":3,"sources":["../../../../../../../packages/platform-browser/src/dom/shared_styles_host.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAQA,aAAQ,MAAR,EAAgB,UAAhB,QAA4C,eAA5C;AACA,aAAQ,MAAR,QAAqB,eAArB;AACA,aAAQ,QAAR,QAAuB,cAAvB;AAGA,WAAM,MAAA,gBAAA,CAAA;;;;;8BAEmB,IAAI,GAAJ,E;;;;;;AAEvB,kBAAU,MAAV,EAA0B;;AACxB,kBAAM,YAAY,IAAI,GAAJ,EAAlB;AACA,mBAAO,OAAP,CAAe,SAAQ;AACrB,oBAAI,CAAC,KAAK,UAAL,CAAgB,GAAhB,CAAoB,KAApB,CAAL,EAAiC;AAC/B,yBAAK,UAAL,CAAgB,GAAhB,CAAoB,KAApB;AACA,8BAAU,GAAV,CAAc,KAAd;AACD;AACF,aALD;AAMA,iBAAK,aAAL,CAAmB,SAAnB;AACD;;;;;AAED,sBAAc,SAAd,EAAoC,CAAU;;;;AAE9C,uBAAY;AAAe,mBAAO,MAAM,IAAN,CAAW,KAAK,UAAhB,CAAP;AAAqC;AAjB5D;2CADL,U;;;;;;;;AAsBD,WAAM,MAAA,mBAAA,SAAmC,gBAAnC,CAAmD;;;;AAGvD,oBAAsC,IAAtC,EAA+C;AAC7C;AADoC,iBAAA,IAAA,GAAA,IAAA;8BAFjB,IAAI,GAAJ,E;+BACC,IAAI,GAAJ,E;AAGpB,iBAAK,UAAL,CAAgB,GAAhB,CAAoB,KAAK,IAAzB;AACD;;;;;;AAEO,yBAAiB,MAAjB,EAAsC,IAAtC,EAAgD;AACtD,mBAAO,OAAP,CAAgB,KAAD,IAAkB;;AAC/B,sBAAM,UAAU,KAAK,IAAL,CAAU,aAAV,CAAwB,OAAxB,CAAhB;AACA,wBAAQ,WAAR,GAAsB,KAAtB;AACA,qBAAK,WAAL,CAAiB,GAAjB,CAAqB,KAAK,WAAL,CAAiB,OAAjB,CAArB;AACD,aAJD;;;;;;AAOF,gBAAQ,QAAR,EAAsB;AACpB,iBAAK,gBAAL,CAAsB,KAAK,UAA3B,EAAuC,QAAvC;AACA,iBAAK,UAAL,CAAgB,GAAhB,CAAoB,QAApB;AACD;;;;;AAED,mBAAW,QAAX,EAAyB;AAAU,iBAAK,UAAL,CAAgB,MAAhB,CAAuB,QAAvB;AAAmC;;;;;AAEtE,sBAAc,SAAd,EAAoC;AAClC,iBAAK,UAAL,CAAgB,OAAhB,CAAwB,YAAY,KAAK,gBAAL,CAAsB,SAAtB,EAAiC,QAAjC,CAApC;AACD;;;;AAED,sBAAW;AAAW,iBAAK,WAAL,CAAiB,OAAjB,CAAyB,aAAa,SAAS,MAAT,CAAgB,SAAhB,CAAtC;AAAoE;AA3BnC;8CADxD,U;;wFAIc,M,EAAM,MAAA,CAAC,QAAD,C","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Inject, Injectable, OnDestroy} from '@angular/core';\nimport {getDOM} from './dom_adapter';\nimport {DOCUMENT} from './dom_tokens';\n\n@Injectable()\nexport class SharedStylesHost {\n  /** @internal */\n  protected _stylesSet = new Set<string>();\n\n  addStyles(styles: string[]): void {\n    const additions = new Set<string>();\n    styles.forEach(style => {\n      if (!this._stylesSet.has(style)) {\n        this._stylesSet.add(style);\n        additions.add(style);\n      }\n    });\n    this.onStylesAdded(additions);\n  }\n\n  onStylesAdded(additions: Set<string>): void {}\n\n  getAllStyles(): string[] { return Array.from(this._stylesSet); }\n}\n\n@Injectable()\nexport class DomSharedStylesHost extends SharedStylesHost implements OnDestroy {\n  private _hostNodes = new Set<Node>();\n  private _styleNodes = new Set<Node>();\n  constructor(@Inject(DOCUMENT) private _doc: any) {\n    super();\n    this._hostNodes.add(_doc.head);\n  }\n\n  private _addStylesToHost(styles: Set<string>, host: Node): void {\n    styles.forEach((style: string) => {\n      const styleEl = this._doc.createElement('style');\n      styleEl.textContent = style;\n      this._styleNodes.add(host.appendChild(styleEl));\n    });\n  }\n\n  addHost(hostNode: Node): void {\n    this._addStylesToHost(this._stylesSet, hostNode);\n    this._hostNodes.add(hostNode);\n  }\n\n  removeHost(hostNode: Node): void { this._hostNodes.delete(hostNode); }\n\n  onStylesAdded(additions: Set<string>): void {\n    this._hostNodes.forEach(hostNode => this._addStylesToHost(additions, hostNode));\n  }\n\n  ngOnDestroy(): void { this._styleNodes.forEach(styleNode => getDOM().remove(styleNode)); }\n}\n"],"sourceRoot":""}