{"version":3,"sources":["../../../../../../packages/platform-browser/src/browser.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CommonModule, PlatformLocation, ɵPLATFORM_BROWSER_ID as PLATFORM_BROWSER_ID} from '@angular/common';\nimport {APP_ID, ApplicationModule, ClassProvider, ConstructorSansProvider, ErrorHandler, ExistingProvider, FactoryProvider, Inject, InjectionToken, ModuleWithProviders, NgModule, NgZone, Optional, PLATFORM_ID, PLATFORM_INITIALIZER, PlatformRef, RendererFactory2, RootRenderer, Sanitizer, SkipSelf, StaticProvider, Testability, TypeProvider, ValueProvider, createPlatformFactory, platformCore, ɵAPP_ROOT as APP_ROOT, ɵConsole as Console} from '@angular/core';\n\nimport {BrowserDomAdapter} from './browser/browser_adapter';\nimport {BrowserPlatformLocation} from './browser/location/browser_platform_location';\nimport {Meta} from './browser/meta';\nimport {SERVER_TRANSITION_PROVIDERS, TRANSITION_ID} from './browser/server-transition';\nimport {BrowserGetTestability} from './browser/testability';\nimport {Title} from './browser/title';\nimport {ELEMENT_PROBE_PROVIDERS} from './dom/debug/ng_probe';\nimport {getDOM} from './dom/dom_adapter';\nimport {DomRendererFactory2} from './dom/dom_renderer';\nimport {DOCUMENT} from './dom/dom_tokens';\nimport {DomEventsPlugin} from './dom/events/dom_events';\nimport {EVENT_MANAGER_PLUGINS, EventManager, EventManagerPlugin} from './dom/events/event_manager';\nimport {HAMMER_GESTURE_CONFIG, HAMMER_LOADER, HammerGestureConfig, HammerGesturesPlugin} from './dom/events/hammer_gestures';\nimport {KeyEventsPlugin} from './dom/events/key_events';\nimport {DomSharedStylesHost, SharedStylesHost} from './dom/shared_styles_host';\nimport {DomSanitizer, DomSanitizerImpl} from './security/dom_sanitization_service';\n\nexport const INTERNAL_BROWSER_PLATFORM_PROVIDERS: StaticProvider[] = [\n  {provide: PLATFORM_ID, useValue: PLATFORM_BROWSER_ID},\n  {provide: PLATFORM_INITIALIZER, useValue: initDomAdapter, multi: true},\n  {provide: PlatformLocation, useClass: BrowserPlatformLocation, deps: [DOCUMENT]},\n  {provide: DOCUMENT, useFactory: _document, deps: []},\n];\n\n/**\n * @security Replacing built-in sanitization providers exposes the application to XSS risks.\n * Attacker-controlled data introduced by an unsanitized provider could expose your\n * application to XSS risks. For more detail, see the [Security Guide](http://g.co/ng/security).\n * @experimental\n */\nexport const BROWSER_SANITIZATION_PROVIDERS: StaticProvider[] = [\n  {provide: Sanitizer, useExisting: DomSanitizer},\n  {provide: DomSanitizer, useClass: DomSanitizerImpl, deps: [DOCUMENT]},\n];\n\nexport const platformBrowser: (extraProviders?: StaticProvider[]) => PlatformRef =\n    createPlatformFactory(platformCore, 'browser', INTERNAL_BROWSER_PLATFORM_PROVIDERS);\n\nexport function initDomAdapter() {\n  BrowserDomAdapter.makeCurrent();\n  BrowserGetTestability.init();\n}\n\nexport function errorHandler(): ErrorHandler {\n  return new ErrorHandler();\n}\n\nexport function _document(): any {\n  return document;\n}\n\nexport const BROWSER_MODULE_PROVIDERS: StaticProvider[] = [\n  BROWSER_SANITIZATION_PROVIDERS,\n  {provide: APP_ROOT, useValue: true},\n  {provide: ErrorHandler, useFactory: errorHandler, deps: []},\n  {\n    provide: EVENT_MANAGER_PLUGINS,\n    useClass: DomEventsPlugin,\n    multi: true,\n    deps: [DOCUMENT, NgZone, PLATFORM_ID]\n  },\n  {provide: EVENT_MANAGER_PLUGINS, useClass: KeyEventsPlugin, multi: true, deps: [DOCUMENT]},\n  {\n    provide: EVENT_MANAGER_PLUGINS,\n    useClass: HammerGesturesPlugin,\n    multi: true,\n    deps: [DOCUMENT, HAMMER_GESTURE_CONFIG, Console, [new Optional(), HAMMER_LOADER]]\n  },\n  {provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig, deps: []},\n  {\n    provide: DomRendererFactory2,\n    useClass: DomRendererFactory2,\n    deps: [EventManager, DomSharedStylesHost]\n  },\n  {provide: RendererFactory2, useExisting: DomRendererFactory2},\n  {provide: SharedStylesHost, useExisting: DomSharedStylesHost},\n  {provide: DomSharedStylesHost, useClass: DomSharedStylesHost, deps: [DOCUMENT]},\n  {provide: Testability, useClass: Testability, deps: [NgZone]},\n  {provide: EventManager, useClass: EventManager, deps: [EVENT_MANAGER_PLUGINS, NgZone]},\n  ELEMENT_PROBE_PROVIDERS,\n];\n\n/**\n * Exports required infrastructure for all Angular apps.\n * Included by defaults in all Angular apps created with the CLI\n * `new` command.\n * Re-exports `CommonModule` and `ApplicationModule`, making their\n * exports and providers available to all apps.\n *\n *\n */\n@NgModule({providers: BROWSER_MODULE_PROVIDERS, exports: [CommonModule, ApplicationModule]})\nexport class BrowserModule {\n  constructor(@Optional() @SkipSelf() @Inject(BrowserModule) parentModule: BrowserModule|null) {\n    if (parentModule) {\n      throw new Error(\n          `BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead.`);\n    }\n  }\n\n  /**\n   * Configures a browser-based app to transition from a server-rendered app, if\n   * one is present on the page.\n   *\n   * @param params An object containing an identifier for the app to transition.\n   * The ID must match between the client and server versions of the app.\n   * @returns The reconfigured `BrowserModule` to import into the app's root `AppModule`.\n   *\n   * @experimental\n   */\n  static withServerTransition(params: {appId: string}): ModuleWithProviders<BrowserModule> {\n    return {\n      ngModule: BrowserModule,\n      providers: [\n        {provide: APP_ID, useValue: params.appId},\n        {provide: TRANSITION_ID, useExisting: APP_ID},\n        SERVER_TRANSITION_PROVIDERS,\n      ],\n    };\n  }\n}\n"],"sourceRoot":""}