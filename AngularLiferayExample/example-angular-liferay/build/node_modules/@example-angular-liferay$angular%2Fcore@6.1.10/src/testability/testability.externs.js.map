{"version":3,"sources":["testability.externs.js"],"names":["PublicTestability","prototype","isStable","whenStable","callback","timeout","updateCallback","findProviders","using","provider","exactMatch"],"mappings":";;AAAA;;AAEA;AACA,WAASA,iBAAT,GAA6B,CAAE;;AAE/B;;;AAGAA,oBAAkBC,SAAlB,CAA4BC,QAA5B,GAAuC,YAAW,CAAE,CAApD;;AAEA;;;;;;AAMAF,oBAAkBC,SAAlB,CAA4BE,UAA5B,GAAyC,UAASC,QAAT,EAAmBC,OAAnB,EAA4BC,cAA5B,EAA4C,CAAE,CAAvF;;AAEA;;;;;;AAMAN,oBAAkBC,SAAlB,CAA4BM,aAA5B,GAA4C,UAASC,KAAT,EAAgBC,QAAhB,EAA0BC,UAA1B,EAAsC,CAAE,CAApF","file":"testability.externs.js","sourcesContent":["/** @externs */\n\n/** @record @struct */\nfunction PublicTestability() {}\n\n/**\n * @return {?}\n */\nPublicTestability.prototype.isStable = function() {};\n\n/**\n * @param {?} callback\n * @param {?} timeout\n * @param {?} updateCallback\n * @return {?}\n */\nPublicTestability.prototype.whenStable = function(callback, timeout, updateCallback) {};\n\n/**\n * @param {?} using\n * @param {?} provider\n * @param {?} exactMatch\n * @return {?}\n */\nPublicTestability.prototype.findProviders = function(using, provider, exactMatch) {};\n"]}