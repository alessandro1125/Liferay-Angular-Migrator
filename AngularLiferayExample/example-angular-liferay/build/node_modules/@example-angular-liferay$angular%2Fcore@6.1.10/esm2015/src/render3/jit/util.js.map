{"version":3,"sources":["../../../../../../../../packages/core/src/render3/jit/util.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {LiteralExpr, R3DependencyMetadata, R3ResolvedDependencyType, WrappedNodeExpr} from '@angular/compiler';\n\nimport {Injector} from '../../di/injector';\nimport {Host, Inject, Optional, Self, SkipSelf} from '../../di/metadata';\nimport {ElementRef} from '../../linker/element_ref';\nimport {TemplateRef} from '../../linker/template_ref';\nimport {ViewContainerRef} from '../../linker/view_container_ref';\nimport {Attribute} from '../../metadata/di';\nimport {ReflectionCapabilities} from '../../reflection/reflection_capabilities';\nimport {Type} from '../../type';\n\nlet _reflect: ReflectionCapabilities|null = null;\n\nexport function getReflect(): ReflectionCapabilities {\n  return (_reflect = _reflect || new ReflectionCapabilities());\n}\n\nexport function reflectDependencies(type: Type<any>): R3DependencyMetadata[] {\n  return convertDependencies(getReflect().parameters(type));\n}\n\nexport function convertDependencies(deps: any[]): R3DependencyMetadata[] {\n  return deps.map(dep => reflectDependency(dep));\n}\n\nfunction reflectDependency(dep: any | any[]): R3DependencyMetadata {\n  const meta: R3DependencyMetadata = {\n    token: new LiteralExpr(null),\n    host: false,\n    optional: false,\n    resolved: R3ResolvedDependencyType.Token,\n    self: false,\n    skipSelf: false,\n  };\n\n  function setTokenAndResolvedType(token: any): void {\n    if (token === ElementRef) {\n      meta.resolved = R3ResolvedDependencyType.ElementRef;\n    } else if (token === Injector) {\n      meta.resolved = R3ResolvedDependencyType.Injector;\n    } else if (token === TemplateRef) {\n      meta.resolved = R3ResolvedDependencyType.TemplateRef;\n    } else if (token === ViewContainerRef) {\n      meta.resolved = R3ResolvedDependencyType.ViewContainerRef;\n    } else {\n      meta.resolved = R3ResolvedDependencyType.Token;\n    }\n    meta.token = new WrappedNodeExpr(token);\n  }\n\n  if (Array.isArray(dep)) {\n    if (dep.length === 0) {\n      throw new Error('Dependency array must have arguments.');\n    }\n    for (let j = 0; j < dep.length; j++) {\n      const param = dep[j];\n      if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n        meta.optional = true;\n      } else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n        meta.skipSelf = true;\n      } else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n        meta.self = true;\n      } else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n        meta.host = true;\n      } else if (param instanceof Inject) {\n        meta.token = new WrappedNodeExpr(param.token);\n      } else if (param instanceof Attribute) {\n        if (param.attributeName === undefined) {\n          throw new Error(`Attribute name must be defined.`);\n        }\n        meta.token = new LiteralExpr(param.attributeName);\n        meta.resolved = R3ResolvedDependencyType.Attribute;\n      } else {\n        setTokenAndResolvedType(param);\n      }\n    }\n  } else {\n    setTokenAndResolvedType(dep);\n  }\n  return meta;\n}\n"],"sourceRoot":""}