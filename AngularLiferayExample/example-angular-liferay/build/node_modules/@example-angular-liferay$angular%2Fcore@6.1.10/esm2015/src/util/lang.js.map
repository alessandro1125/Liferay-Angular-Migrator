{"version":3,"sources":["../../../../../../../packages/core/src/util/lang.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAaA,SAAM,SAAA,SAAA,CAAoB,GAApB,EAA4B;;;AAGhC,WAAO,CAAC,CAAC,GAAF,IAAS,OAAO,IAAI,IAAX,KAAoB,UAApC;AACD;;;;;;AAKD,SAAM,SAAA,YAAA,CAAuB,GAAvB,EAAiD;;AAErD,WAAO,CAAC,CAAC,GAAF,IAAS,OAAO,IAAI,SAAX,KAAyB,UAAzC;AACD","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Observable} from 'rxjs';\n\n/**\n * Determine if the argument is shaped like a Promise\n */\nexport function isPromise(obj: any): obj is Promise<any> {\n  // allow any Promise/A+ compliant thenable.\n  // It's up to the caller to ensure that obj.then conforms to the spec\n  return !!obj && typeof obj.then === 'function';\n}\n\n/**\n * Determine if the argument is an Observable\n */\nexport function isObservable(obj: any | Observable<any>): obj is Observable<any> {\n  // TODO: use Symbol.observable when https://github.com/ReactiveX/rxjs/issues/2415 will be resolved\n  return !!obj && typeof obj.subscribe === 'function';\n}\n"],"sourceRoot":""}