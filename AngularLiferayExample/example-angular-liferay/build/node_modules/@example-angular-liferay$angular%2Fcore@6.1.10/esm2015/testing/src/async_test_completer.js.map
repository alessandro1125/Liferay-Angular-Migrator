{"version":3,"sources":["../../../../../../../packages/core/testing/src/async_test_completer.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAWA,SAAM,MAAA,kBAAA,CAAA;;sBAK6B,IAAI,OAAJ,CAAY,CAAC,GAAD,EAAM,GAAN,KAAa;AACxD,aAAK,QAAL,GAAgB,GAAhB;AACA,aAAK,OAAL,GAAe,GAAf;AACD,OAHgC,C;;;;;;AAIjC,SAAK,KAAL,EAAgB;AAAI,WAAK,QAAL,CAAc,KAAd;AAAuB;;;;;;AAE3C,SAAK,KAAL,EAAkB,UAAlB,EAAqC;AAAI,WAAK,OAAL,CAAa,KAAb;AAAsB;;;;AAE/D,QAAI,OAAJ,GAAW;AAAmB,aAAO,KAAK,QAAZ;AAAuB;AAbjD","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Injectable completer that allows signaling completion of an asynchronous test. Used internally.\n */\nexport class AsyncTestCompleter {\n  // TODO(issue/24571): remove '!'.\n  private _resolve !: (result: any) => void;\n  // TODO(issue/24571): remove '!'.\n  private _reject !: (err: any) => void;\n  private _promise: Promise<any> = new Promise((res, rej) => {\n    this._resolve = res;\n    this._reject = rej;\n  });\n  done(value?: any) { this._resolve(value); }\n\n  fail(error?: any, stackTrace?: string) { this._reject(error); }\n\n  get promise(): Promise<any> { return this._promise; }\n}\n"],"sourceRoot":""}