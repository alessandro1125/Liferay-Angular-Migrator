{"version":3,"sources":["testing.js"],"names":["RendererFactory2","getDebugNode","Compiler","Injectable","ApplicationInitStatus","Component","InjectionToken","Injector","NgModule","NgZone","Optional","SkipSelf","ɵAPP_ROOT","ɵclearOverrides","ɵoverrideComponentView","ɵoverrideProvider","ɵstringify","__extends","__decorate","__spread","__values","_global","window","global","asyncFallback","fn","jasmine","done","fail","e","runInTestZone","err","Error","_this","Promise","finishCallback","failCallback","context","currentZone","Zone","current","AsyncTestZoneSpec","undefined","ProxyZoneSpec","proxyZoneSpec","get","assertPresent","proxyZone","getZoneWith","previousDelegate","getDelegate","parent","run","testZoneSpec","setDelegate","error","runGuarded","async","_Zone","reject","asyncTest","__symbol__","ComponentFixture","componentRef","ngZone","_autoDetect","_isStable","_isDestroyed","_resolve","_promise","_onUnstableSubscription","_onStableSubscription","_onMicrotaskEmptySubscription","_onErrorSubscription","changeDetectorRef","elementRef","location","debugElement","nativeElement","componentInstance","instance","runOutsideAngular","onUnstable","subscribe","next","onMicrotaskEmpty","detectChanges","onStable","scheduleMicroTask","hasPendingMacrotasks","onError","prototype","_tick","checkNoChanges","autoDetectChanges","autoDetect","isStable","whenStable","resolve","res","_getRenderer","_renderer","injector","whenRenderingDone","renderer","destroy","unsubscribe","FakeAsyncTestZoneSpec","_fakeAsyncTestZoneSpec","resetFakeAsyncZoneFallback","resetDelegate","_inFakeAsyncCall","fakeAsyncFallback","args","_i","arguments","length","lastProxyZoneSpec","apply","flushMicrotasksFallback","pendingPeriodicTimers","pendingTimers","_getFakeAsyncZoneSpec","tickFallback","millis","tick","flushFallback","maxTurns","flush","discardPeriodicTasksFallback","zoneSpec","flushMicrotasks","_Zone$1","fakeAsyncTestModule","resetFakeAsyncZone","fakeAsync","discardPeriodicTasks","AsyncTestCompleter","rej","_reject","value","stackTrace","Object","defineProperty","enumerable","configurable","unimplemented","TestingCompiler","_super","overrideModule","module","overrides","overrideDirective","directive","overrideComponent","component","overridePipe","loadAotSummaries","summaries","getComponentFactory","getComponentFromError","TestingCompilerFactory","UNDEFINED","TestComponentRenderer","insertRootElement","rootElementId","_nextRootElementId","ComponentFixtureAutoDetect","ComponentFixtureNoNgZone","TestBed","_instantiated","_compiler","_moduleRef","_moduleFactory","_compilerOptions","_moduleOverrides","_componentOverrides","_directiveOverrides","_pipeOverrides","_providers","_declarations","_imports","_schemas","_activeFixtures","_testEnvAotSummaries","_aotSummaries","_templateOverrides","_isRoot","_rootProviderOverrides","platform","ngModule","initTestEnvironment","aotSummaries","testBed","getTestBed","resetTestEnvironment","resetTestingModule","configureCompiler","config","configureTestingModule","moduleDef","compileComponents","override","pipe","overrideTemplate","template","set","templateUrl","overrideTemplateUsingTestingModule","overrideProvider","token","provider","deprecatedOverrideProvider","notFoundValue","THROW_IF_NOT_FOUND","createComponent","forEach","fixture","console","stacktrace","_assertNotInstantiated","push","_a","_b","_c","_d","providers","declarations","imports","schemas","moduleType","_createCompilerAndModule","compileModuleAndAllComponentsAsync","then","moduleAndComponentFactories","ngModuleFactory","_initIfNeeded","e_1","compileModuleAndAllComponentsSync","errorCompType","templateOf","compFactory","e_1_1","return","call","enableLongStackTrace","provide","useValue","ngZoneInjector","create","name","runInitializers","e_2","concat","map","entry","rootScopeImports","rootProviderOverrides","RootScopeModule","jit","DynamicTestModule","compilerFactory","createTestingCompiler","summary","e_2_1","methodName","methodDescription","result","execute","tokens","params","t","overrideProviderImpl","deprecated","ngInjectableDef","providedIn","useFactory","deps","flags","dep","depFlags","depToken","Array","isArray","deprecatedBehavior","OverrideComponent","selector","componentFactory","noNgZone","testComponentRenderer","rootElId","initComponent","NULL","_testBed","inject","indexOf","completer","promise","InjectSetupWrapper","_moduleDef","_addModule","self","withModule","_global$1","beforeEach","__core_private_testing_placeholder__","ɵTestingCompiler","ɵTestingCompilerFactory"],"mappings":"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","file":"testing.js","sourcesContent":["/**\n * @license Angular v6.1.10\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\nimport { RendererFactory2, getDebugNode, Compiler, Injectable, ApplicationInitStatus, Component, InjectionToken, Injector, NgModule, NgZone, Optional, SkipSelf, ɵAPP_ROOT, ɵclearOverrides, ɵoverrideComponentView, ɵoverrideProvider, ɵstringify } from '@angular/core';\nimport { __extends, __decorate, __spread, __values } from 'tslib';\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _global = (typeof window === 'undefined' ? global : window);\n/**\n * Wraps a test function in an asynchronous test zone. The test will automatically\n * complete when all asynchronous calls within this zone are done. Can be used\n * to wrap an {@link inject} call.\n *\n * Example:\n *\n * ```\n * it('...', async(inject([AClass], (object) => {\n *   object.doSomething.then(() => {\n *     expect(...);\n *   })\n * });\n * ```\n *\n *\n */\nfunction asyncFallback(fn) {\n    // If we're running using the Jasmine test framework, adapt to call the 'done'\n    // function when asynchronous activity is finished.\n    if (_global.jasmine) {\n        // Not using an arrow function to preserve context passed from call site\n        return function (done) {\n            if (!done) {\n                // if we run beforeEach in @angular/core/testing/testing_internal then we get no done\n                // fake it here and assume sync.\n                done = function () { };\n                done.fail = function (e) { throw e; };\n            }\n            runInTestZone(fn, this, done, function (err) {\n                if (typeof err === 'string') {\n                    return done.fail(new Error(err));\n                }\n                else {\n                    done.fail(err);\n                }\n            });\n        };\n    }\n    // Otherwise, return a promise which will resolve when asynchronous activity\n    // is finished. This will be correctly consumed by the Mocha framework with\n    // it('...', async(myFn)); or can be used in a custom framework.\n    // Not using an arrow function to preserve context passed from call site\n    return function () {\n        var _this = this;\n        return new Promise(function (finishCallback, failCallback) {\n            runInTestZone(fn, _this, finishCallback, failCallback);\n        });\n    };\n}\nfunction runInTestZone(fn, context, finishCallback, failCallback) {\n    var currentZone = Zone.current;\n    var AsyncTestZoneSpec = Zone['AsyncTestZoneSpec'];\n    if (AsyncTestZoneSpec === undefined) {\n        throw new Error('AsyncTestZoneSpec is needed for the async() test helper but could not be found. ' +\n            'Please make sure that your environment includes zone.js/dist/async-test.js');\n    }\n    var ProxyZoneSpec = Zone['ProxyZoneSpec'];\n    if (ProxyZoneSpec === undefined) {\n        throw new Error('ProxyZoneSpec is needed for the async() test helper but could not be found. ' +\n            'Please make sure that your environment includes zone.js/dist/proxy.js');\n    }\n    var proxyZoneSpec = ProxyZoneSpec.get();\n    ProxyZoneSpec.assertPresent();\n    // We need to create the AsyncTestZoneSpec outside the ProxyZone.\n    // If we do it in ProxyZone then we will get to infinite recursion.\n    var proxyZone = Zone.current.getZoneWith('ProxyZoneSpec');\n    var previousDelegate = proxyZoneSpec.getDelegate();\n    proxyZone.parent.run(function () {\n        var testZoneSpec = new AsyncTestZoneSpec(function () {\n            // Need to restore the original zone.\n            currentZone.run(function () {\n                if (proxyZoneSpec.getDelegate() == testZoneSpec) {\n                    // Only reset the zone spec if it's sill this one. Otherwise, assume it's OK.\n                    proxyZoneSpec.setDelegate(previousDelegate);\n                }\n                finishCallback();\n            });\n        }, function (error) {\n            // Need to restore the original zone.\n            currentZone.run(function () {\n                if (proxyZoneSpec.getDelegate() == testZoneSpec) {\n                    // Only reset the zone spec if it's sill this one. Otherwise, assume it's OK.\n                    proxyZoneSpec.setDelegate(previousDelegate);\n                }\n                failCallback(error);\n            });\n        }, 'test');\n        proxyZoneSpec.setDelegate(testZoneSpec);\n    });\n    return Zone.current.runGuarded(fn, context);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Wraps a test function in an asynchronous test zone. The test will automatically\n * complete when all asynchronous calls within this zone are done. Can be used\n * to wrap an {@link inject} call.\n *\n * Example:\n *\n * ```\n * it('...', async(inject([AClass], (object) => {\n *   object.doSomething.then(() => {\n *     expect(...);\n *   })\n * });\n * ```\n *\n *\n */\nfunction async(fn) {\n    var _Zone = typeof Zone !== 'undefined' ? Zone : null;\n    if (!_Zone) {\n        return function () {\n            return Promise.reject('Zone is needed for the async() test helper but could not be found. ' +\n                'Please make sure that your environment includes zone.js/dist/zone.js');\n        };\n    }\n    var asyncTest = _Zone && _Zone[_Zone.__symbol__('asyncTest')];\n    if (typeof asyncTest === 'function') {\n        return asyncTest(fn);\n    }\n    // not using new version of zone.js\n    // TODO @JiaLiPassion, remove this after all library updated to\n    // newest version of zone.js(0.8.25)\n    return asyncFallback(fn);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Fixture for debugging and testing a component.\n *\n *\n */\nvar ComponentFixture = /** @class */ (function () {\n    function ComponentFixture(componentRef, ngZone, _autoDetect) {\n        var _this = this;\n        this.componentRef = componentRef;\n        this.ngZone = ngZone;\n        this._autoDetect = _autoDetect;\n        this._isStable = true;\n        this._isDestroyed = false;\n        this._resolve = null;\n        this._promise = null;\n        this._onUnstableSubscription = null;\n        this._onStableSubscription = null;\n        this._onMicrotaskEmptySubscription = null;\n        this._onErrorSubscription = null;\n        this.changeDetectorRef = componentRef.changeDetectorRef;\n        this.elementRef = componentRef.location;\n        this.debugElement = getDebugNode(this.elementRef.nativeElement);\n        this.componentInstance = componentRef.instance;\n        this.nativeElement = this.elementRef.nativeElement;\n        this.componentRef = componentRef;\n        this.ngZone = ngZone;\n        if (ngZone) {\n            // Create subscriptions outside the NgZone so that the callbacks run oustide\n            // of NgZone.\n            ngZone.runOutsideAngular(function () {\n                _this._onUnstableSubscription =\n                    ngZone.onUnstable.subscribe({ next: function () { _this._isStable = false; } });\n                _this._onMicrotaskEmptySubscription = ngZone.onMicrotaskEmpty.subscribe({\n                    next: function () {\n                        if (_this._autoDetect) {\n                            // Do a change detection run with checkNoChanges set to true to check\n                            // there are no changes on the second run.\n                            _this.detectChanges(true);\n                        }\n                    }\n                });\n                _this._onStableSubscription = ngZone.onStable.subscribe({\n                    next: function () {\n                        _this._isStable = true;\n                        // Check whether there is a pending whenStable() completer to resolve.\n                        if (_this._promise !== null) {\n                            // If so check whether there are no pending macrotasks before resolving.\n                            // Do this check in the next tick so that ngZone gets a chance to update the state of\n                            // pending macrotasks.\n                            scheduleMicroTask(function () {\n                                if (!ngZone.hasPendingMacrotasks) {\n                                    if (_this._promise !== null) {\n                                        _this._resolve(true);\n                                        _this._resolve = null;\n                                        _this._promise = null;\n                                    }\n                                }\n                            });\n                        }\n                    }\n                });\n                _this._onErrorSubscription =\n                    ngZone.onError.subscribe({ next: function (error) { throw error; } });\n            });\n        }\n    }\n    ComponentFixture.prototype._tick = function (checkNoChanges) {\n        this.changeDetectorRef.detectChanges();\n        if (checkNoChanges) {\n            this.checkNoChanges();\n        }\n    };\n    /**\n     * Trigger a change detection cycle for the component.\n     */\n    ComponentFixture.prototype.detectChanges = function (checkNoChanges) {\n        var _this = this;\n        if (checkNoChanges === void 0) { checkNoChanges = true; }\n        if (this.ngZone != null) {\n            // Run the change detection inside the NgZone so that any async tasks as part of the change\n            // detection are captured by the zone and can be waited for in isStable.\n            this.ngZone.run(function () { _this._tick(checkNoChanges); });\n        }\n        else {\n            // Running without zone. Just do the change detection.\n            this._tick(checkNoChanges);\n        }\n    };\n    /**\n     * Do a change detection run to make sure there were no changes.\n     */\n    ComponentFixture.prototype.checkNoChanges = function () { this.changeDetectorRef.checkNoChanges(); };\n    /**\n     * Set whether the fixture should autodetect changes.\n     *\n     * Also runs detectChanges once so that any existing change is detected.\n     */\n    ComponentFixture.prototype.autoDetectChanges = function (autoDetect) {\n        if (autoDetect === void 0) { autoDetect = true; }\n        if (this.ngZone == null) {\n            throw new Error('Cannot call autoDetectChanges when ComponentFixtureNoNgZone is set');\n        }\n        this._autoDetect = autoDetect;\n        this.detectChanges();\n    };\n    /**\n     * Return whether the fixture is currently stable or has async tasks that have not been completed\n     * yet.\n     */\n    ComponentFixture.prototype.isStable = function () { return this._isStable && !this.ngZone.hasPendingMacrotasks; };\n    /**\n     * Get a promise that resolves when the fixture is stable.\n     *\n     * This can be used to resume testing after events have triggered asynchronous activity or\n     * asynchronous change detection.\n     */\n    ComponentFixture.prototype.whenStable = function () {\n        var _this = this;\n        if (this.isStable()) {\n            return Promise.resolve(false);\n        }\n        else if (this._promise !== null) {\n            return this._promise;\n        }\n        else {\n            this._promise = new Promise(function (res) { _this._resolve = res; });\n            return this._promise;\n        }\n    };\n    ComponentFixture.prototype._getRenderer = function () {\n        if (this._renderer === undefined) {\n            this._renderer = this.componentRef.injector.get(RendererFactory2, null);\n        }\n        return this._renderer;\n    };\n    /**\n      * Get a promise that resolves when the ui state is stable following animations.\n      */\n    ComponentFixture.prototype.whenRenderingDone = function () {\n        var renderer = this._getRenderer();\n        if (renderer && renderer.whenRenderingDone) {\n            return renderer.whenRenderingDone();\n        }\n        return this.whenStable();\n    };\n    /**\n     * Trigger component destruction.\n     */\n    ComponentFixture.prototype.destroy = function () {\n        if (!this._isDestroyed) {\n            this.componentRef.destroy();\n            if (this._onUnstableSubscription != null) {\n                this._onUnstableSubscription.unsubscribe();\n                this._onUnstableSubscription = null;\n            }\n            if (this._onStableSubscription != null) {\n                this._onStableSubscription.unsubscribe();\n                this._onStableSubscription = null;\n            }\n            if (this._onMicrotaskEmptySubscription != null) {\n                this._onMicrotaskEmptySubscription.unsubscribe();\n                this._onMicrotaskEmptySubscription = null;\n            }\n            if (this._onErrorSubscription != null) {\n                this._onErrorSubscription.unsubscribe();\n                this._onErrorSubscription = null;\n            }\n            this._isDestroyed = true;\n        }\n    };\n    return ComponentFixture;\n}());\nfunction scheduleMicroTask(fn) {\n    Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * fakeAsync has been moved to zone.js\n * this file is for fallback in case old version of zone.js is used\n */\nvar _Zone = typeof Zone !== 'undefined' ? Zone : null;\nvar FakeAsyncTestZoneSpec = _Zone && _Zone['FakeAsyncTestZoneSpec'];\nvar ProxyZoneSpec = _Zone && _Zone['ProxyZoneSpec'];\nvar _fakeAsyncTestZoneSpec = null;\n/**\n * Clears out the shared fake async zone for a test.\n * To be called in a global `beforeEach`.\n *\n * @experimental\n */\nfunction resetFakeAsyncZoneFallback() {\n    _fakeAsyncTestZoneSpec = null;\n    // in node.js testing we may not have ProxyZoneSpec in which case there is nothing to reset.\n    ProxyZoneSpec && ProxyZoneSpec.assertPresent().resetDelegate();\n}\nvar _inFakeAsyncCall = false;\n/**\n * Wraps a function to be executed in the fakeAsync zone:\n * - microtasks are manually executed by calling `flushMicrotasks()`,\n * - timers are synchronous, `tick()` simulates the asynchronous passage of time.\n *\n * If there are any pending timers at the end of the function, an exception will be thrown.\n *\n * Can be used to wrap inject() calls.\n *\n * @usageNotes\n * ### Example\n *\n * {@example core/testing/ts/fake_async.ts region='basic'}\n *\n * @param fn\n * @returns The function wrapped to be executed in the fakeAsync zone\n *\n * @experimental\n */\nfunction fakeAsyncFallback(fn) {\n    // Not using an arrow function to preserve context passed from call site\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var proxyZoneSpec = ProxyZoneSpec.assertPresent();\n        if (_inFakeAsyncCall) {\n            throw new Error('fakeAsync() calls can not be nested');\n        }\n        _inFakeAsyncCall = true;\n        try {\n            if (!_fakeAsyncTestZoneSpec) {\n                if (proxyZoneSpec.getDelegate() instanceof FakeAsyncTestZoneSpec) {\n                    throw new Error('fakeAsync() calls can not be nested');\n                }\n                _fakeAsyncTestZoneSpec = new FakeAsyncTestZoneSpec();\n            }\n            var res = void 0;\n            var lastProxyZoneSpec = proxyZoneSpec.getDelegate();\n            proxyZoneSpec.setDelegate(_fakeAsyncTestZoneSpec);\n            try {\n                res = fn.apply(this, args);\n                flushMicrotasksFallback();\n            }\n            finally {\n                proxyZoneSpec.setDelegate(lastProxyZoneSpec);\n            }\n            if (_fakeAsyncTestZoneSpec.pendingPeriodicTimers.length > 0) {\n                throw new Error(_fakeAsyncTestZoneSpec.pendingPeriodicTimers.length + \" \" +\n                    \"periodic timer(s) still in the queue.\");\n            }\n            if (_fakeAsyncTestZoneSpec.pendingTimers.length > 0) {\n                throw new Error(_fakeAsyncTestZoneSpec.pendingTimers.length + \" timer(s) still in the queue.\");\n            }\n            return res;\n        }\n        finally {\n            _inFakeAsyncCall = false;\n            resetFakeAsyncZoneFallback();\n        }\n    };\n}\nfunction _getFakeAsyncZoneSpec() {\n    if (_fakeAsyncTestZoneSpec == null) {\n        throw new Error('The code should be running in the fakeAsync zone to call this function');\n    }\n    return _fakeAsyncTestZoneSpec;\n}\n/**\n * Simulates the asynchronous passage of time for the timers in the fakeAsync zone.\n *\n * The microtasks queue is drained at the very start of this function and after any timer callback\n * has been executed.\n *\n * @usageNotes\n * ### Example\n *\n * {@example core/testing/ts/fake_async.ts region='basic'}\n *\n * @experimental\n */\nfunction tickFallback(millis) {\n    if (millis === void 0) { millis = 0; }\n    _getFakeAsyncZoneSpec().tick(millis);\n}\n/**\n * Simulates the asynchronous passage of time for the timers in the fakeAsync zone by\n * draining the macrotask queue until it is empty. The returned value is the milliseconds\n * of time that would have been elapsed.\n *\n * @param maxTurns\n * @returns The simulated time elapsed, in millis.\n *\n * @experimental\n */\nfunction flushFallback(maxTurns) {\n    return _getFakeAsyncZoneSpec().flush(maxTurns);\n}\n/**\n * Discard all remaining periodic tasks.\n *\n * @experimental\n */\nfunction discardPeriodicTasksFallback() {\n    var zoneSpec = _getFakeAsyncZoneSpec();\n    zoneSpec.pendingPeriodicTimers.length = 0;\n}\n/**\n * Flush any pending microtasks.\n *\n * @experimental\n */\nfunction flushMicrotasksFallback() {\n    _getFakeAsyncZoneSpec().flushMicrotasks();\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _Zone$1 = typeof Zone !== 'undefined' ? Zone : null;\nvar fakeAsyncTestModule = _Zone$1 && _Zone$1[_Zone$1.__symbol__('fakeAsyncTest')];\n/**\n * Clears out the shared fake async zone for a test.\n * To be called in a global `beforeEach`.\n *\n * @experimental\n */\nfunction resetFakeAsyncZone() {\n    if (fakeAsyncTestModule) {\n        return fakeAsyncTestModule.resetFakeAsyncZone();\n    }\n    else {\n        return resetFakeAsyncZoneFallback();\n    }\n}\n/**\n * Wraps a function to be executed in the fakeAsync zone:\n * - microtasks are manually executed by calling `flushMicrotasks()`,\n * - timers are synchronous, `tick()` simulates the asynchronous passage of time.\n *\n * If there are any pending timers at the end of the function, an exception will be thrown.\n *\n * Can be used to wrap inject() calls.\n *\n * @usageNotes\n * ### Example\n *\n * {@example core/testing/ts/fake_async.ts region='basic'}\n *\n * @param fn\n * @returns The function wrapped to be executed in the fakeAsync zone\n *\n * @experimental\n */\nfunction fakeAsync(fn) {\n    if (fakeAsyncTestModule) {\n        return fakeAsyncTestModule.fakeAsync(fn);\n    }\n    else {\n        return fakeAsyncFallback(fn);\n    }\n}\n/**\n * Simulates the asynchronous passage of time for the timers in the fakeAsync zone.\n *\n * The microtasks queue is drained at the very start of this function and after any timer callback\n * has been executed.\n *\n * @usageNotes\n * ### Example\n *\n * {@example core/testing/ts/fake_async.ts region='basic'}\n *\n * @experimental\n */\nfunction tick(millis) {\n    if (millis === void 0) { millis = 0; }\n    if (fakeAsyncTestModule) {\n        return fakeAsyncTestModule.tick(millis);\n    }\n    else {\n        return tickFallback(millis);\n    }\n}\n/**\n * Simulates the asynchronous passage of time for the timers in the fakeAsync zone by\n * draining the macrotask queue until it is empty. The returned value is the milliseconds\n * of time that would have been elapsed.\n *\n * @param maxTurns\n * @returns The simulated time elapsed, in millis.\n *\n * @experimental\n */\nfunction flush(maxTurns) {\n    if (fakeAsyncTestModule) {\n        return fakeAsyncTestModule.flush(maxTurns);\n    }\n    else {\n        return flushFallback(maxTurns);\n    }\n}\n/**\n * Discard all remaining periodic tasks.\n *\n * @experimental\n */\nfunction discardPeriodicTasks() {\n    if (fakeAsyncTestModule) {\n        return fakeAsyncTestModule.discardPeriodicTasks();\n    }\n    else {\n        discardPeriodicTasksFallback();\n    }\n}\n/**\n * Flush any pending microtasks.\n *\n * @experimental\n */\nfunction flushMicrotasks() {\n    if (fakeAsyncTestModule) {\n        return fakeAsyncTestModule.flushMicrotasks();\n    }\n    else {\n        return flushMicrotasksFallback();\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injectable completer that allows signaling completion of an asynchronous test. Used internally.\n */\nvar AsyncTestCompleter = /** @class */ (function () {\n    function AsyncTestCompleter() {\n        var _this = this;\n        this._promise = new Promise(function (res, rej) {\n            _this._resolve = res;\n            _this._reject = rej;\n        });\n    }\n    AsyncTestCompleter.prototype.done = function (value) { this._resolve(value); };\n    AsyncTestCompleter.prototype.fail = function (error, stackTrace) { this._reject(error); };\n    Object.defineProperty(AsyncTestCompleter.prototype, \"promise\", {\n        get: function () { return this._promise; },\n        enumerable: true,\n        configurable: true\n    });\n    return AsyncTestCompleter;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction unimplemented() {\n    throw Error('unimplemented');\n}\n/**\n * Special interface to the compiler only used by testing\n *\n * @experimental\n */\nvar TestingCompiler = /** @class */ (function (_super) {\n    __extends(TestingCompiler, _super);\n    function TestingCompiler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(TestingCompiler.prototype, \"injector\", {\n        get: function () { throw unimplemented(); },\n        enumerable: true,\n        configurable: true\n    });\n    TestingCompiler.prototype.overrideModule = function (module, overrides) {\n        throw unimplemented();\n    };\n    TestingCompiler.prototype.overrideDirective = function (directive, overrides) {\n        throw unimplemented();\n    };\n    TestingCompiler.prototype.overrideComponent = function (component, overrides) {\n        throw unimplemented();\n    };\n    TestingCompiler.prototype.overridePipe = function (directive, overrides) {\n        throw unimplemented();\n    };\n    /**\n     * Allows to pass the compile summary from AOT compilation to the JIT compiler,\n     * so that it can use the code generated by AOT.\n     */\n    TestingCompiler.prototype.loadAotSummaries = function (summaries) { throw unimplemented(); };\n    /**\n     * Gets the component factory for the given component.\n     * This assumes that the component has been compiled before calling this call using\n     * `compileModuleAndAllComponents*`.\n     */\n    TestingCompiler.prototype.getComponentFactory = function (component) { throw unimplemented(); };\n    /**\n     * Returns the component type that is stored in the given error.\n     * This can be used for errors created by compileModule...\n     */\n    TestingCompiler.prototype.getComponentFromError = function (error) { throw unimplemented(); };\n    TestingCompiler = __decorate([\n        Injectable()\n    ], TestingCompiler);\n    return TestingCompiler;\n}(Compiler));\n/**\n * A factory for creating a Compiler\n *\n * @experimental\n */\nvar TestingCompilerFactory = /** @class */ (function () {\n    function TestingCompilerFactory() {\n    }\n    return TestingCompilerFactory;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar UNDEFINED = new Object();\n/**\n * An abstract class for inserting the root test component element in a platform independent way.\n *\n * @experimental\n */\nvar TestComponentRenderer = /** @class */ (function () {\n    function TestComponentRenderer() {\n    }\n    TestComponentRenderer.prototype.insertRootElement = function (rootElementId) { };\n    return TestComponentRenderer;\n}());\nvar _nextRootElementId = 0;\n/**\n * @experimental\n */\nvar ComponentFixtureAutoDetect = new InjectionToken('ComponentFixtureAutoDetect');\n/**\n * @experimental\n */\nvar ComponentFixtureNoNgZone = new InjectionToken('ComponentFixtureNoNgZone');\n/**\n * @description\n * Configures and initializes environment for unit testing and provides methods for\n * creating components and services in unit tests.\n *\n * TestBed is the primary api for writing unit tests for Angular applications and libraries.\n *\n *\n */\nvar TestBed = /** @class */ (function () {\n    function TestBed() {\n        this._instantiated = false;\n        this._compiler = null;\n        this._moduleRef = null;\n        this._moduleFactory = null;\n        this._compilerOptions = [];\n        this._moduleOverrides = [];\n        this._componentOverrides = [];\n        this._directiveOverrides = [];\n        this._pipeOverrides = [];\n        this._providers = [];\n        this._declarations = [];\n        this._imports = [];\n        this._schemas = [];\n        this._activeFixtures = [];\n        this._testEnvAotSummaries = function () { return []; };\n        this._aotSummaries = [];\n        this._templateOverrides = [];\n        this._isRoot = true;\n        this._rootProviderOverrides = [];\n        this.platform = null;\n        this.ngModule = null;\n    }\n    /**\n     * Initialize the environment for testing with a compiler factory, a PlatformRef, and an\n     * angular module. These are common to every test in the suite.\n     *\n     * This may only be called once, to set up the common providers for the current test\n     * suite on the current platform. If you absolutely need to change the providers,\n     * first use `resetTestEnvironment`.\n     *\n     * Test modules and platforms for individual platforms are available from\n     * '@angular/<platform_name>/testing'.\n     *\n     * @experimental\n     */\n    TestBed.initTestEnvironment = function (ngModule, platform, aotSummaries) {\n        var testBed = getTestBed();\n        testBed.initTestEnvironment(ngModule, platform, aotSummaries);\n        return testBed;\n    };\n    /**\n     * Reset the providers for the test injector.\n     *\n     * @experimental\n     */\n    TestBed.resetTestEnvironment = function () { getTestBed().resetTestEnvironment(); };\n    TestBed.resetTestingModule = function () {\n        getTestBed().resetTestingModule();\n        return TestBed;\n    };\n    /**\n     * Allows overriding default compiler providers and settings\n     * which are defined in test_injector.js\n     */\n    TestBed.configureCompiler = function (config) {\n        getTestBed().configureCompiler(config);\n        return TestBed;\n    };\n    /**\n     * Allows overriding default providers, directives, pipes, modules of the test injector,\n     * which are defined in test_injector.js\n     */\n    TestBed.configureTestingModule = function (moduleDef) {\n        getTestBed().configureTestingModule(moduleDef);\n        return TestBed;\n    };\n    /**\n     * Compile components with a `templateUrl` for the test's NgModule.\n     * It is necessary to call this function\n     * as fetching urls is asynchronous.\n     */\n    TestBed.compileComponents = function () { return getTestBed().compileComponents(); };\n    TestBed.overrideModule = function (ngModule, override) {\n        getTestBed().overrideModule(ngModule, override);\n        return TestBed;\n    };\n    TestBed.overrideComponent = function (component, override) {\n        getTestBed().overrideComponent(component, override);\n        return TestBed;\n    };\n    TestBed.overrideDirective = function (directive, override) {\n        getTestBed().overrideDirective(directive, override);\n        return TestBed;\n    };\n    TestBed.overridePipe = function (pipe, override) {\n        getTestBed().overridePipe(pipe, override);\n        return TestBed;\n    };\n    TestBed.overrideTemplate = function (component, template) {\n        getTestBed().overrideComponent(component, { set: { template: template, templateUrl: null } });\n        return TestBed;\n    };\n    /**\n     * Overrides the template of the given component, compiling the template\n     * in the context of the TestingModule.\n     *\n     * Note: This works for JIT and AOTed components as well.\n     */\n    TestBed.overrideTemplateUsingTestingModule = function (component, template) {\n        getTestBed().overrideTemplateUsingTestingModule(component, template);\n        return TestBed;\n    };\n    TestBed.overrideProvider = function (token, provider) {\n        getTestBed().overrideProvider(token, provider);\n        return TestBed;\n    };\n    TestBed.deprecatedOverrideProvider = function (token, provider) {\n        getTestBed().deprecatedOverrideProvider(token, provider);\n        return TestBed;\n    };\n    TestBed.get = function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        return getTestBed().get(token, notFoundValue);\n    };\n    TestBed.createComponent = function (component) {\n        return getTestBed().createComponent(component);\n    };\n    /**\n     * Initialize the environment for testing with a compiler factory, a PlatformRef, and an\n     * angular module. These are common to every test in the suite.\n     *\n     * This may only be called once, to set up the common providers for the current test\n     * suite on the current platform. If you absolutely need to change the providers,\n     * first use `resetTestEnvironment`.\n     *\n     * Test modules and platforms for individual platforms are available from\n     * '@angular/<platform_name>/testing'.\n     *\n     * @experimental\n     */\n    TestBed.prototype.initTestEnvironment = function (ngModule, platform, aotSummaries) {\n        if (this.platform || this.ngModule) {\n            throw new Error('Cannot set base providers because it has already been called');\n        }\n        this.platform = platform;\n        this.ngModule = ngModule;\n        if (aotSummaries) {\n            this._testEnvAotSummaries = aotSummaries;\n        }\n    };\n    /**\n     * Reset the providers for the test injector.\n     *\n     * @experimental\n     */\n    TestBed.prototype.resetTestEnvironment = function () {\n        this.resetTestingModule();\n        this.platform = null;\n        this.ngModule = null;\n        this._testEnvAotSummaries = function () { return []; };\n    };\n    TestBed.prototype.resetTestingModule = function () {\n        ɵclearOverrides();\n        this._aotSummaries = [];\n        this._templateOverrides = [];\n        this._compiler = null;\n        this._moduleOverrides = [];\n        this._componentOverrides = [];\n        this._directiveOverrides = [];\n        this._pipeOverrides = [];\n        this._isRoot = true;\n        this._rootProviderOverrides = [];\n        this._moduleRef = null;\n        this._moduleFactory = null;\n        this._compilerOptions = [];\n        this._providers = [];\n        this._declarations = [];\n        this._imports = [];\n        this._schemas = [];\n        this._instantiated = false;\n        this._activeFixtures.forEach(function (fixture) {\n            try {\n                fixture.destroy();\n            }\n            catch (e) {\n                console.error('Error during cleanup of component', {\n                    component: fixture.componentInstance,\n                    stacktrace: e,\n                });\n            }\n        });\n        this._activeFixtures = [];\n    };\n    TestBed.prototype.configureCompiler = function (config) {\n        this._assertNotInstantiated('TestBed.configureCompiler', 'configure the compiler');\n        this._compilerOptions.push(config);\n    };\n    TestBed.prototype.configureTestingModule = function (moduleDef) {\n        var _a, _b, _c, _d;\n        this._assertNotInstantiated('TestBed.configureTestingModule', 'configure the test module');\n        if (moduleDef.providers) {\n            (_a = this._providers).push.apply(_a, __spread(moduleDef.providers));\n        }\n        if (moduleDef.declarations) {\n            (_b = this._declarations).push.apply(_b, __spread(moduleDef.declarations));\n        }\n        if (moduleDef.imports) {\n            (_c = this._imports).push.apply(_c, __spread(moduleDef.imports));\n        }\n        if (moduleDef.schemas) {\n            (_d = this._schemas).push.apply(_d, __spread(moduleDef.schemas));\n        }\n        if (moduleDef.aotSummaries) {\n            this._aotSummaries.push(moduleDef.aotSummaries);\n        }\n    };\n    TestBed.prototype.compileComponents = function () {\n        var _this = this;\n        if (this._moduleFactory || this._instantiated) {\n            return Promise.resolve(null);\n        }\n        var moduleType = this._createCompilerAndModule();\n        return this._compiler.compileModuleAndAllComponentsAsync(moduleType)\n            .then(function (moduleAndComponentFactories) {\n            _this._moduleFactory = moduleAndComponentFactories.ngModuleFactory;\n        });\n    };\n    TestBed.prototype._initIfNeeded = function () {\n        var e_1, _a;\n        if (this._instantiated) {\n            return;\n        }\n        if (!this._moduleFactory) {\n            try {\n                var moduleType = this._createCompilerAndModule();\n                this._moduleFactory =\n                    this._compiler.compileModuleAndAllComponentsSync(moduleType).ngModuleFactory;\n            }\n            catch (e) {\n                var errorCompType = this._compiler.getComponentFromError(e);\n                if (errorCompType) {\n                    throw new Error(\"This test module uses the component \" + ɵstringify(errorCompType) + \" which is using a \\\"templateUrl\\\" or \\\"styleUrls\\\", but they were never compiled. \" +\n                        \"Please call \\\"TestBed.compileComponents\\\" before your test.\");\n                }\n                else {\n                    throw e;\n                }\n            }\n        }\n        try {\n            for (var _b = __values(this._templateOverrides), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var _d = _c.value, component = _d.component, templateOf = _d.templateOf;\n                var compFactory = this._compiler.getComponentFactory(templateOf);\n                ɵoverrideComponentView(component, compFactory);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        var ngZone = new NgZone({ enableLongStackTrace: true });\n        var providers = [{ provide: NgZone, useValue: ngZone }];\n        var ngZoneInjector = Injector.create({\n            providers: providers,\n            parent: this.platform.injector,\n            name: this._moduleFactory.moduleType.name\n        });\n        this._moduleRef = this._moduleFactory.create(ngZoneInjector);\n        // ApplicationInitStatus.runInitializers() is marked @internal to core. So casting to any\n        // before accessing it.\n        this._moduleRef.injector.get(ApplicationInitStatus).runInitializers();\n        this._instantiated = true;\n    };\n    TestBed.prototype._createCompilerAndModule = function () {\n        var _this = this;\n        var e_2, _a;\n        var providers = this._providers.concat([{ provide: TestBed, useValue: this }]);\n        var declarations = __spread(this._declarations, this._templateOverrides.map(function (entry) { return entry.templateOf; }));\n        var rootScopeImports = [];\n        var rootProviderOverrides = this._rootProviderOverrides;\n        if (this._isRoot) {\n            var RootScopeModule = /** @class */ (function () {\n                function RootScopeModule() {\n                }\n                RootScopeModule = __decorate([\n                    NgModule({\n                        providers: __spread(rootProviderOverrides),\n                        jit: true,\n                    })\n                ], RootScopeModule);\n                return RootScopeModule;\n            }());\n            rootScopeImports.push(RootScopeModule);\n        }\n        providers.push({ provide: ɵAPP_ROOT, useValue: this._isRoot });\n        var imports = [rootScopeImports, this.ngModule, this._imports];\n        var schemas = this._schemas;\n        var DynamicTestModule = /** @class */ (function () {\n            function DynamicTestModule() {\n            }\n            DynamicTestModule = __decorate([\n                NgModule({ providers: providers, declarations: declarations, imports: imports, schemas: schemas, jit: true })\n            ], DynamicTestModule);\n            return DynamicTestModule;\n        }());\n        var compilerFactory = this.platform.injector.get(TestingCompilerFactory);\n        this._compiler = compilerFactory.createTestingCompiler(this._compilerOptions);\n        try {\n            for (var _b = __values(__spread([this._testEnvAotSummaries], this._aotSummaries)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var summary = _c.value;\n                this._compiler.loadAotSummaries(summary);\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        this._moduleOverrides.forEach(function (entry) { return _this._compiler.overrideModule(entry[0], entry[1]); });\n        this._componentOverrides.forEach(function (entry) { return _this._compiler.overrideComponent(entry[0], entry[1]); });\n        this._directiveOverrides.forEach(function (entry) { return _this._compiler.overrideDirective(entry[0], entry[1]); });\n        this._pipeOverrides.forEach(function (entry) { return _this._compiler.overridePipe(entry[0], entry[1]); });\n        return DynamicTestModule;\n    };\n    TestBed.prototype._assertNotInstantiated = function (methodName, methodDescription) {\n        if (this._instantiated) {\n            throw new Error(\"Cannot \" + methodDescription + \" when the test module has already been instantiated. \" +\n                (\"Make sure you are not using `inject` before `\" + methodName + \"`.\"));\n        }\n    };\n    TestBed.prototype.get = function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        this._initIfNeeded();\n        if (token === TestBed) {\n            return this;\n        }\n        // Tests can inject things from the ng module and from the compiler,\n        // but the ng module can't inject things from the compiler and vice versa.\n        var result = this._moduleRef.injector.get(token, UNDEFINED);\n        return result === UNDEFINED ? this._compiler.injector.get(token, notFoundValue) : result;\n    };\n    TestBed.prototype.execute = function (tokens, fn, context) {\n        var _this = this;\n        this._initIfNeeded();\n        var params = tokens.map(function (t) { return _this.get(t); });\n        return fn.apply(context, params);\n    };\n    TestBed.prototype.overrideModule = function (ngModule, override) {\n        this._assertNotInstantiated('overrideModule', 'override module metadata');\n        this._moduleOverrides.push([ngModule, override]);\n    };\n    TestBed.prototype.overrideComponent = function (component, override) {\n        this._assertNotInstantiated('overrideComponent', 'override component metadata');\n        this._componentOverrides.push([component, override]);\n    };\n    TestBed.prototype.overrideDirective = function (directive, override) {\n        this._assertNotInstantiated('overrideDirective', 'override directive metadata');\n        this._directiveOverrides.push([directive, override]);\n    };\n    TestBed.prototype.overridePipe = function (pipe, override) {\n        this._assertNotInstantiated('overridePipe', 'override pipe metadata');\n        this._pipeOverrides.push([pipe, override]);\n    };\n    TestBed.prototype.overrideProvider = function (token, provider) {\n        this.overrideProviderImpl(token, provider);\n    };\n    TestBed.prototype.deprecatedOverrideProvider = function (token, provider) {\n        this.overrideProviderImpl(token, provider, /* deprecated */ true);\n    };\n    TestBed.prototype.overrideProviderImpl = function (token, provider, deprecated) {\n        if (deprecated === void 0) { deprecated = false; }\n        if (typeof token !== 'string' && token.ngInjectableDef &&\n            token.ngInjectableDef.providedIn === 'root') {\n            if (provider.useFactory) {\n                this._rootProviderOverrides.push({ provide: token, useFactory: provider.useFactory, deps: provider.deps || [] });\n            }\n            else {\n                this._rootProviderOverrides.push({ provide: token, useValue: provider.useValue });\n            }\n        }\n        var flags = 0;\n        var value;\n        if (provider.useFactory) {\n            flags |= 1024 /* TypeFactoryProvider */;\n            value = provider.useFactory;\n        }\n        else {\n            flags |= 256 /* TypeValueProvider */;\n            value = provider.useValue;\n        }\n        var deps = (provider.deps || []).map(function (dep) {\n            var depFlags = 0 /* None */;\n            var depToken;\n            if (Array.isArray(dep)) {\n                dep.forEach(function (entry) {\n                    if (entry instanceof Optional) {\n                        depFlags |= 2 /* Optional */;\n                    }\n                    else if (entry instanceof SkipSelf) {\n                        depFlags |= 1 /* SkipSelf */;\n                    }\n                    else {\n                        depToken = entry;\n                    }\n                });\n            }\n            else {\n                depToken = dep;\n            }\n            return [depFlags, depToken];\n        });\n        ɵoverrideProvider({ token: token, flags: flags, deps: deps, value: value, deprecatedBehavior: deprecated });\n    };\n    TestBed.prototype.overrideTemplateUsingTestingModule = function (component, template) {\n        this._assertNotInstantiated('overrideTemplateUsingTestingModule', 'override template');\n        var OverrideComponent = /** @class */ (function () {\n            function OverrideComponent() {\n            }\n            OverrideComponent = __decorate([\n                Component({ selector: 'empty', template: template, jit: true })\n            ], OverrideComponent);\n            return OverrideComponent;\n        }());\n        this._templateOverrides.push({ component: component, templateOf: OverrideComponent });\n    };\n    TestBed.prototype.createComponent = function (component) {\n        var _this = this;\n        this._initIfNeeded();\n        var componentFactory = this._compiler.getComponentFactory(component);\n        if (!componentFactory) {\n            throw new Error(\"Cannot create the component \" + ɵstringify(component) + \" as it was not imported into the testing module!\");\n        }\n        var noNgZone = this.get(ComponentFixtureNoNgZone, false);\n        var autoDetect = this.get(ComponentFixtureAutoDetect, false);\n        var ngZone = noNgZone ? null : this.get(NgZone, null);\n        var testComponentRenderer = this.get(TestComponentRenderer);\n        var rootElId = \"root\" + _nextRootElementId++;\n        testComponentRenderer.insertRootElement(rootElId);\n        var initComponent = function () {\n            var componentRef = componentFactory.create(Injector.NULL, [], \"#\" + rootElId, _this._moduleRef);\n            return new ComponentFixture(componentRef, ngZone, autoDetect);\n        };\n        var fixture = !ngZone ? initComponent() : ngZone.run(initComponent);\n        this._activeFixtures.push(fixture);\n        return fixture;\n    };\n    return TestBed;\n}());\nvar _testBed = null;\n/**\n * @experimental\n */\nfunction getTestBed() {\n    return _testBed = _testBed || new TestBed();\n}\n/**\n * Allows injecting dependencies in `beforeEach()` and `it()`.\n *\n * Example:\n *\n * ```\n * beforeEach(inject([Dependency, AClass], (dep, object) => {\n *   // some code that uses `dep` and `object`\n *   // ...\n * }));\n *\n * it('...', inject([AClass], (object) => {\n *   object.doSomething();\n *   expect(...);\n * })\n * ```\n *\n * Notes:\n * - inject is currently a function because of some Traceur limitation the syntax should\n * eventually\n *   becomes `it('...', @Inject (object: AClass, async: AsyncTestCompleter) => { ... });`\n *\n *\n */\nfunction inject(tokens, fn) {\n    var testBed = getTestBed();\n    if (tokens.indexOf(AsyncTestCompleter) >= 0) {\n        // Not using an arrow function to preserve context passed from call site\n        return function () {\n            var _this = this;\n            // Return an async test method that returns a Promise if AsyncTestCompleter is one of\n            // the injected tokens.\n            return testBed.compileComponents().then(function () {\n                var completer = testBed.get(AsyncTestCompleter);\n                testBed.execute(tokens, fn, _this);\n                return completer.promise;\n            });\n        };\n    }\n    else {\n        // Not using an arrow function to preserve context passed from call site\n        return function () { return testBed.execute(tokens, fn, this); };\n    }\n}\n/**\n * @experimental\n */\nvar InjectSetupWrapper = /** @class */ (function () {\n    function InjectSetupWrapper(_moduleDef) {\n        this._moduleDef = _moduleDef;\n    }\n    InjectSetupWrapper.prototype._addModule = function () {\n        var moduleDef = this._moduleDef();\n        if (moduleDef) {\n            getTestBed().configureTestingModule(moduleDef);\n        }\n    };\n    InjectSetupWrapper.prototype.inject = function (tokens, fn) {\n        var self = this;\n        // Not using an arrow function to preserve context passed from call site\n        return function () {\n            self._addModule();\n            return inject(tokens, fn).call(this);\n        };\n    };\n    return InjectSetupWrapper;\n}());\nfunction withModule(moduleDef, fn) {\n    if (fn) {\n        // Not using an arrow function to preserve context passed from call site\n        return function () {\n            var testBed = getTestBed();\n            if (moduleDef) {\n                testBed.configureTestingModule(moduleDef);\n            }\n            return fn.apply(this);\n        };\n    }\n    return new InjectSetupWrapper(function () { return moduleDef; });\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _global$1 = (typeof window === 'undefined' ? global : window);\n// Reset the test providers and the fake async zone before each test.\nif (_global$1.beforeEach) {\n    _global$1.beforeEach(function () {\n        TestBed.resetTestingModule();\n        resetFakeAsyncZone();\n    });\n}\n// TODO(juliemr): remove this, only used because we need to export something to have compilation\n// work.\nvar __core_private_testing_placeholder__ = '';\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { async, ComponentFixture, resetFakeAsyncZone, fakeAsync, tick, flush, discardPeriodicTasks, flushMicrotasks, TestComponentRenderer, ComponentFixtureAutoDetect, ComponentFixtureNoNgZone, TestBed, getTestBed, inject, InjectSetupWrapper, withModule, __core_private_testing_placeholder__, TestingCompiler as ɵTestingCompiler, TestingCompilerFactory as ɵTestingCompilerFactory };\n//# sourceMappingURL=testing.js.map\n"]}