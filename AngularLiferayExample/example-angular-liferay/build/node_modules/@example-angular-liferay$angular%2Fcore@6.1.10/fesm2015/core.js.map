{"version":3,"sources":["core.js"],"names":["Subject","Subscription","Observable","merge","share","defineInjectable","opts","providedIn","factory","value","undefined","defineInjector","options","providers","imports","InjectionToken","constructor","_desc","ngMetadataName","ngInjectableDef","toString","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","chainFn","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","args","call","annotationInstance","TypeDecorator","cls","annotations","hasOwnProperty","Object","defineProperty","push","prototype","create","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","apply","ParamDecorator","annotation","unusedKey","index","parameters","length","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","target","meta","unshift","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","Query","ContentChildren","selector","data","assign","first","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ChangeDetectionStrategy","OnPush","Default","ChangeDetectorStatus","CheckOnce","Checked","CheckAlways","Detached","Errored","Destroyed","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ivyEnabled","Directive","dir","type","Component","c","changeDetection","Pipe","p","pure","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","eventName","Type","Function","isType","v","__window","window","__self","self","WorkerGlobalScope","__global","global","_global","promise","Promise","resolve","_symbolIterator","getSymbolIterator","Symbol","iterator","keys","getOwnPropertyNames","Map","i","key","scheduleMicroTask","fn","Zone","then","current","looseIdentical","a","b","isNaN","stringify","token","Array","map","join","overriddenName","res","newLineIndex","indexOf","substring","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","t","_zipTypesAndAnnotations","paramTypes","paramAnnotations","result","concat","_ownParameters","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","ctorParam","convertTsickleDecoratorIntoMetadata","decorators","getOwnMetadata","fill","getParentCtor","_ownAnnotations","typeOrFunc","ownAnnotations","parentAnnotations","_ownPropMetadata","propMetadata","propDecorators","forEach","prop","parentPropMetadata","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","functionBody","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","decoratorType","annotationArgs","parentProto","getPrototypeOf","getClosureSafeProperty","objWithPropertyToExtract","Error","forwardRef","forwardRefFn","__forward_ref__","resolveForwardRef","Inject","Optional","Self","SkipSelf","Host","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR","NullInjector","get","notFoundValue","Injector","parent","isArray","StaticInjector","NULL","inject","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","slice","arguments","GET_PROPERTY_NAME","USE_VALUE","getClosureSafeProperty$1","provide","String","useValue","NG_TOKEN_PATH","NG_TEMP_TOKEN_PATH","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","source","records","_records","set","deps","useNew","recursivelyProcessProviders","flags","record","tryResolveToken","e","tokenPath","message","formatError","tokens","resolveProvider","provider","computeDeps","useFactory","useExisting","useClass","staticError","multiProviderMixError","resolvedProvider","multi","multiProvider","resolveToken","path","obj","depRecords","depRecord","childRecord","providerDeps","j","text","charAt","substr","context","parts","JSON","replace","_currentInjector","setCurrentInjector","injector","former","injectableDef","injectArgs","types","arg","GET_PROPERTY_NAME$1","Éµ0$1","USE_VALUE$1","EMPTY_ARRAY","convertInjectableProviderToFactory","reflectionCapabilities","valueProvider","existingProvider","factoryProvider","classProvider","preR3InjectableCompile","injectableType","Injectable","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","preR3NgModuleCompile","moduleType","metadata","exports","ngInjectorDef","NgModule","ngModule","ViewEncapsulation","Emulated","Native","None","ShadowDom","Version","full","major","split","minor","patch","VERSION","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","error","getOriginalError","getErrorLogger","defaultErrorLogger","console","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","wrappedError","msg","findFirstClosedCycle","constructResolvingPath","reversed","reverse","tokenStrs","k","injectionError","constructResolvingMessage","errMsg","addKey","injectors","noProviderError","cyclicDependencyError","instantiationError","originalException","originalStack","invalidProviderError","noAnnotationError","params","signature","ii","parameter","outOfBoundsError","mixingMultiProvidersWithRegularProvidersError","provider1","provider2","ReflectiveKey","id","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","has","newKey","size","Reflector","updateCapabilities","caps","identifier","reflector","ReflectiveDependency","optional","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","resolveReflectiveProvider","resolveReflectiveProviders","normalized","_normalizeProviders","resolved","resolvedProviderMap","mergeResolvedReflectiveProviders","from","normalizedProvidersMap","existing","_extractToken","some","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","_new","_getMaxNumberOfObjects","_instantiate","ResolvedReflectiveFactory$$1","dep","_getByReflectiveDependency","stack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","inj_","_mapProviders","APP_ROOT","NOT_YET","CIRCULAR$1","EMPTY_ARRAY$1","NULL_INJECTOR$1","getNullInjector","createInjector","defType","additionalProviders","R3Injector","def","injectorDefTypes","Set","onDestroy","destroyed","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","destroy","assertNotDestroyed","service","ngOnDestroy","clear","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefRecord","hydrate","next","defOrWrappedDef","parents","add","imported","delete","isTypeProvider","providerToRecord","multiRecord","hasOnDestroy","isValueProvider","isExistingProvider","isFactoryProvider","classRef","hasDeps","input","isPromise","isObservable","subscribe","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","done","donePromise","rej","reject","runInitializers","asyncInitPromises","complete","initResult","all","catch","APP_ID","_appIdRandomProviderFactory","_randomChar","APP_ID_RANDOM_PROVIDER","fromCharCode","Math","floor","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","warn","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","COMPILER_OPTIONS","CompilerFactory","ComponentRef","ComponentFactory","noComponentFactoryError","component","ERROR_COMPONENT","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","factories","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","ngContentSelectors","inputs","outputs","projectableNodes","rootSelectorOrNode","NgModuleRef","NgModuleFactory","trace","events","detectWTF","wtf","createScope","leave","scope","returnValue","leaveScope","startTimeRange","rangeType","action","beginTimeRange","endTimeRange","range","wtfEnabled","noopScope","arg0","arg1","wtfCreateScope","wtfLeave","s","r","wtfStartTimeRange","wtfEndTimeRange","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","schedulerFn","errorFn","err","completeFn","setTimeout","sink","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","applyThis","applyArgs","runTask","zone","task","scheduleEventTask","EMPTY_PAYLOAD","noop","cancelTask","runGuarded","runOutsideAngular","checkStable","properties","onInvokeTask","delegate","onEnter","invokeTask","onLeave","onInvoke","callback","invoke","onHasTask","hasTaskState","hasTask","change","microTask","macroTask","onHandleError","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","taskTrackingZone","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","pop","clearTimeout","timeoutId","doneCb","pending","getPendingTasks","filter","updateCb","macroTasks","isPeriodic","delay","creationLocation","xhr","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","registry","setTestabilityGetter","_devMode","_runModeLocked","_platform","ALLOW_MULTIPLE_PLATFORMS","enableProdMode","isDevMode","NgProbeToken","createPlatform","PlatformRef","inits","init","createPlatformFactory","parentPlatformFactory","desc","marker","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","destroyPlatform","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZoneOption","ngZone","getNgZone","ngZoneInjector","moduleRef","exceptionHandler","remove","_callAndReportToErrorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","compilerFactory","optionsReducer","compiler","createCompiler","appRef","ApplicationRef","_bootstrapComponents","f","bootstrap","instance","ngDoBootstrap","module","listener","errorHandler","dst","reduce","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","components","tick","isCurrentlyStable","observer","stableSub","unstableSub","unsubscribe","pipe","componentOrFactory","componentFactory","selectorOrNode","compRef","_unloadComponent","location","nativeElement","_loadComponent","_tickScope","view","detectChanges","checkNoChanges","attachView","viewRef","attachToAppRef","detachView","detachFromAppRef","componentRef","hostView","listeners","viewCount","list","el","splice","RenderComponentType","templateUrl","slotCount","encapsulation","styles","animations","RenderDebugInfo","Renderer","Renderer2Interceptor","RootRenderer","RendererFactory2","RendererStyleFlags2","Important","DashCase","Renderer2","ElementRef","NgModuleFactoryLoader","moduleFactories","registerModuleFactory","getModuleFactory","QueryList","dirty","_results","changes","find","toArray","reset","flatten","last","notifyOnChanges","setDirty","flat","item","flatItem","_SEPARATOR","FACTORY_CLASS_SUFFIX","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","load","offlineMode","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","TemplateRef","ViewContainerRef","ChangeDetectorRef","ViewRef","EmbeddedViewRef","EventListener","DebugNode","nativeNode","_debugContext","DebugElement","addChild","componentInstance","references","providerTokens","attributes","classes","childNodes","child","removeChild","childIndex","insertChildrenAfter","newChildren","siblingIndex","insertBefore","refChild","newChild","refIndex","query","predicate","results","queryAll","matches","_queryElementChildren","queryAllNodes","_queryNodeChildren","children","node","triggerEventHandler","eventObj","asNativeElements","debugEls","element","parentNode","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","removeDebugNodeFromIndex","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","isAObject","isBObject","WrappedValue","wrapped","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isJsObject","comparator","iterator1","iterator2","item1","item2","iterateListLike","o","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","offset","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","mayBeDirty","itemTrackBy","trackById","_mismatch","_verifyReinsertion","_addIdentityChange","_truncate","isDirty","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","isEmpty","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","KeyValueChangeRecord_","_addToAdditions","newValue","_addToChanges","IterableDiffers","copied","extend","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","iterableDiff","defaultIterableDiffers","defaultKeyValueDiffers","_CORE_PLATFORM_PROVIDERS","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","MissingTranslationStrategy","Warning","Ignore","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","locale","APPLICATION_MODULE_PROVIDERS","ApplicationModule","resolveComponentResources","resourceResolver","urlFetches","urlMap","cachedResourceResolve","url","resp","unwrapResponse","componentResourceResolutionQueue","template","styleUrls","styleOffset","styleUrl","style","response","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","body","inertHtml","createElement","appendChild","innerHTML","querySelector","getInertBodyElement","getInertBodyElement_XHR","isDOMParserAvailable","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","html","encodeURI","XMLHttpRequest","responseType","open","send","firstChild","DOMParser","parseFromString","templateEl","documentMode","stripCustomNsAttrs","elAttrs","attrib","attrName","removeAttribute","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","match","sanitizeSrcset","srcset","trim","tagSet","tags","merge$1","sets","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","tagName","nodeName","toLowerCase","elAttr","lower","encodeEntities","nextNode","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","hi","charCodeAt","low","inertBodyHelper","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","sanitizer","safeHtml","getTemplateContent","isTemplateElement","content","VALUES","TRANSFORMATION_FNS","COLOR_FNS","GRADIENTS","CSS3_FNS","FN_ARGS","SAFE_STYLE_VALUE","RegExp","URL_RE","hasBalancedQuotes","outsideSingle","outsideDouble","_sanitizeStyle","urlMatch","SecurityContext","NONE","HTML","STYLE","SCRIPT","URL","RESOURCE_URL","Sanitizer","shiftInitState","priorInitState","newInitState","state","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","DebugContext","Services","setCurrentNode","createRootView","createEmbeddedView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","expressionChangedAfterItHasBeenCheckedError","oldValue","currValue","isFirstCheck","viewDebugError","viewWrappedDebugError","_addDebugContext","logError","bind","isViewDebugError","viewDestroyedError","NOOP","_tokenKeyCache","tokenKey","unwrapValue","nodeIdx","bindingIdx","globalBindingIdx","bindingIndex","oldValues","UNDEFINED_RENDERER_TYPE_ID","EMPTY_RENDERER_TYPE_ID","createRendererType2","_renderCompCount","resolveRendererType2","isFilled","checkBinding","checkAndUpdateBinding","checkBindingNoChanges","bindingName","bindings","nodeIndex","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","nodeDef","startView","componentView","root","declaredViewContainer","parentView","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","valueType","splitDepsDsl","sourceName","configurable","getParentRenderElement","renderHost","renderParent","componentRendererType","DEFINITION_CACHE","WeakMap","resolveDefinition","rootRenderNodes","renderNodes","visitRootRenderNodes","renderer","lastRenderRootNode","visitSiblingRenderNodes","startIndex","endIndex","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","interpolate","valueCount","constAndInterp","_toStringWithNull","inlineInterpolate","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","EMPTY_ARRAY$2","EMPTY_MAP","anchorDef","templateFactory","outputIndex","checkIndex","childFlags","directChildFlags","childMatchedQueries","ns","attrs","componentProvider","publicProviders","allProviders","elementDef","namespaceAndName","fixedAttrs","bindingDefs","suffixOrSecurityContext","securityContext","suffix","nonMinifiedName","outputDefs","elDef","createComment","parentEl","selectRootElement","setAttribute","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","listen","disposables","checkAndUpdateElementInline","v0","v1","v2","v3","v4","v5","v6","v7","v8","v9","bindLen","changed","checkAndUpdateElementValue","checkAndUpdateElementDynamic","binding","elData","renderNode$$1","setElementAttribute","setElementClass","setElementStyle","bindView","setElementProperty","renderValue","sanitize","addClass","removeClass","unit","setStyle","removeStyle","setProperty","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","moduleProvideDef","depDefs","moduleDef","providersByKey","modules","isRoot","initNgModule","_def","provDef","_createProviderInstance","resolveNgModuleDep","depDef","tokenKey$$1","providerDef","providerInstance","targetsModule","moduleTransitivelyPresent","injectable","_createClass","_callFactory","depValues","callNgModuleLifecycle","lifecycles","attachEmbeddedView","elementData","viewIndex","addToArray","attachProjectedView","prevView","renderAttachEmbeddedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","viewDef","nodeFlags","detachEmbeddedView","removeFromArray","renderDetachView","detachProjectedView","moveEmbeddedView","oldViewIndex","newViewIndex","prevRenderNode","arr","EMPTY_CONTEXT","createComponentFactory","viewDefFactory","ComponentFactory_","getComponentViewDefinitionFactory","_inputs","_outputs","inputsArr","templateName","outputsArr","componentNodeIndex","ComponentRef_","ViewRef_","_view","_viewRef","_component","_elDef","changeDetectorRef","Injector_","createViewContainerData","ViewContainerRef_","_data","parentInjector","ref","attachToViewContainerRef","templateRef","insert","createComponent","ngModuleRef","contextInjector","viewRef_","viewData","move","detach","createChangeDetectorRef","_viewContainerRef","_appRef","rootNodes","markForCheck","fs","rendererFactory","begin","end","reattach","vcRef","createTemplateData","TemplateRef_","_parentView","elementRef","createInjector$1","allowPrivateServices","createRendererV1","RendererAdapter","createViewRoot","hostElement","createTemplateAnchor","parentElement","comment","createText","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","destroyNode","listenGlobal","propertyName","propertyValue","attributeValue","setBindingDebugInfo","className","isAdd","styleName","styleValue","invokeElementMethod","methodName","setText","setValue","animate","bootstrapComponents","NgModuleRef_","_moduleType","injectFlags","componentFactoryResolver","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","directiveDef","pipeDef","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","subscription","eventHandlerClosure","checkAndUpdateDirectiveInline","providerData","directive","updateProp","ngOnChanges","ngOnInit","ngDoCheck","checkAndUpdateDirectiveDynamic","callFactory","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","searchView","findCompView","cdView","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","ngAfterContentInit","ngAfterContentChecked","ngAfterViewInit","ngAfterViewChecked","queryDef","bindingType","filterId","createQuery","queryIds","nodeMatchedQueries","tplDef","checkAndUpdateQuery","queryList","directiveInstance","newValues","calcQueryValues","notify","boundValue","getQueryValue","embeddedView","dvc","projectedView","queryValueType","ngContentDef","appendNgContent","purePipeDef","argCount","_pureExpressionDef","pureArrayDef","pureObjectDef","propToIndex","nbKeys","propertyNames","createPureExpression","checkAndUpdatePureExpressionInline","transform","checkAndUpdatePureExpressionDynamic","textDef","staticText","prefix","checkAndUpdateTextInline","_addInterpolationPart","checkAndUpdateTextDynamic","valueStr","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","validateNode","isPrivateService","isComponent","isNgContainer","newParent","rootNodeFlags","bindingCount","outputCount","nodeCount","parentFlags","parentEnd","anchorDef$$1","createView","initView","createViewNodes","rendererType","compRenderer","createRenderer","hostDef","nodeData","compViewDef","execComponentViewsAction","ViewAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","checkAndUpdateNodeInline","checkAndUpdateNodeDynamic","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","destroyViewNodes","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","callViewAction","viewState","execProjectedViewsAction","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","createProdServices","createProdRootView","DebugContext_","prodCheckAndUpdateNode","prodCheckNoChangesNode","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","providerOverrides","providerOverridesWithScope","override","comp","compFactory","hostViewDef","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","applyProviderOverridesToElement","elIndicesWithOverwrittenProviders","lastElementDef","elIndex","hasOverrides","hasDeprecatedOverrides","calcHasOverrides","applyProviderOverrides","deprecatedBehavior","moduleSet","_currentAction","_currentView","_currentNodeIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","normalizeDebugBindingName","normalizeDebugBindingValue","attr","camelCaseToDashCase","CAMEL_CASE_REGEXP","m","elView","elOrCompView","childDef","collectReferences","componentRenderElement","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","nodeLogger","refName","oldAction","oldView","oldNodeIndex","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","fullName","createNgModuleFactory","ngModuleType","defFactory","NgModuleFactory_","cloneNgModuleDefinition","_ngModuleDefFactory","assertEqual","actual","expected","throwError","assertNotEqual","assertLessThan","assertGreaterThan","assertNotDefined","assertDefined","assertComponentType","ngComponentDef","HEADER_OFFSET","TVIEW","PARENT","NEXT","QUERIES","FLAGS","HOST_NODE","BINDING_INDEX","DIRECTIVES","CLEANUP","CONTEXT","INJECTOR$1","RENDERER","SANITIZER","TAIL","CONTAINER_INDEX","CONTENT_QUERIES","queueInitHooks","onInit","doCheck","tView","ngDevMode","firstTemplatePass","initHooks","checkHooks","queueLifecycleHooks","start","count","directives","queueContentHooks","queueViewHooks","queueDestroyHooks","afterContentInit","contentHooks","afterContentChecked","contentCheckHooks","afterViewInit","viewHooks","afterViewChecked","viewCheckHooks","destroyHooks","executeInitHooks","currentView","creationMode","executeHooks","allHooks","hooksToCall","callHooks","ngDevModeResetPerfCounters","newCounters","tNode","rendererCreateTextNode","rendererSetText","rendererCreateElement","rendererAddEventListener","rendererSetAttribute","rendererRemoveAttribute","rendererSetProperty","rendererSetClassName","rendererAddClass","rendererRemoveClass","rendererSetStyle","rendererRemoveStyle","rendererDestroy","rendererDestroyNode","rendererMoveNode","rendererRemoveNode","throwCyclicDependencyError","throwMultipleComponentError","throwErrorIfNoChangesMode","checkNoChangesMode","ACTIVE_INDEX","VIEWS","RENDER_PARENT","NG_PROJECT_AS_ATTR_NAME","RendererStyleFlags3","isProceduralRenderer","domRendererFactory3","document","assertNodeType","typeName","assertNodeOfPossibleTypes","found","isDifferent","stringify$1","flatten$1","loadInternal","assertDataInRangeInternal","loadElementInternal","readElementValue","getNextLNode","getChildLNode","getParentLNode","containerHostIndex","dynamicLContainerNode","projectionNodeStack","walkLNodeTree","startingNode","rootNode","renderParentNode","beforeNode","projectionNodeIndex","native","executeNodeAction","lContainerNode","childContainerData","componentHost","findComponentHost","head","projection","lViewData","viewRootLNode","createTextNode","addRemoveViewFromContainer","container","insertMode","destroyViewTree","rootView","cleanUpView","viewOrContainer","getLViewChild","getParentState","insertView","viewNode","views","lView","removeIndex","detached","removedLView","removeView","destroyLView","hostNode","removeListeners","executeOnDestroys","executePipeOnDestroys","cleanup","removeEventListener","cleanupFn","pipeDestroyHooks","canInsertNativeNode","grandParentContainer","appendProjectedNode","lContainer","isCssClassMatching","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","isNodeMatchingSelector","mode","nodeAttrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","attrIndexInNode","findAttrIndexInNode","selectorAttrValue","nodeAttrValue","maybeAttrName","selectOnlyMode","isNodeMatchingSelectorList","getProjectAsAttrValue","ngProjectAsAttrIdx","matchingSelectorIndex","selectors","textSelectors","ngProjectAsAttrVal","allocStylingContext","lElement","templateStyleContext","createStylingContextTemplate","initialClassDeclarations","initialStyleDeclarations","styleSanitizer","initialStylingValues","stylesLookup","classesLookup","totalStyleDeclarations","hasPassedDeclarations","styleProps","classNames","classNamesIndexStart","totalProps","maxLength","singleStart","multiStart","isClassBased","indexForInitial","initialValue","indexForMulti","indexForSingle","initialFlag","prepareInitialFlag","setFlag","pointers","setProp","flagForMulti","setContextDirty","EMPTY_ARR","EMPTY_OBJ","updateStylingMap","applyAllClasses","ignoreAllClassUpdates","cachedClassString","classesStartIndex","multiStartIndex","getMultiStartIndex","ctxIndex","propIndex","propLimit","adjustedPropIndex","newProp","getProp","getValue","flag","getPointers","hasValueChanged","getInitialValue","indexOfEntry","findEntryPositionByProp","valueToCompare","flagToCompare","swapMultiContextEntries","newFlag","getStyleSanitizer","insertNewMultiProperty","doRemoveValue","valueExists","updateStyleProp","singleIndex","currFlag","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","updateClassProp","addOrRemove","adjustedIndex","renderStyling","styleStore","classStore","isContextDirty","isInSingleRegion","valueToApply","multiIndex","setClass","store","removeProperty","isDirtyYes","isSanitizable","configFlag","staticIndex","dynamicIndex","getInitialIndex","thisProp","indexA","indexB","tmpValue","tmpProp","tmpFlag","flagA","flagB","singleIndexA","_flag","_initial","singleIndexB","updateSinglePointerValues","indexStartPosition","multiFlag","singleFlag","initialIndexForSingle","flagValue","updatedFlag","classBased","doShift","hasValues","usesSanitizer","NG_HOST_SYMBOL","_CLEAN_PROMISE","_ROOT_DIRECTIVE_INDICES","HEADER_FILLER","CIRCULAR$2","currentElementNode","getRenderer","getCurrentSanitizer","getViewData","previousOrParentNode","getPreviousOrParentNode","isParent","currentQueries","getCurrentQueries","QueryType","queries","clone","getCreationMode","getCleanup","getTViewCleanup","enterView","newView","host","leaveView","creationOnly","refreshView","refreshDynamicEmbeddedViews","setHostBindings","hostBindings","refreshContentQueries","refreshChildComponents","defs","dirIndex","contentQueries","directiveDefIdx","contentQueriesRefresh","componentRefresh","executeInitAndContentHooks","createLViewData","createLNodeObject","nodeInjector","createLNode","tParent","isState","createTNode","assertDataNext","tData","previousTNode","dynamicContainerNode","resetApplicationState","createEmbeddedViewNode","_isParent","_previousOrParentNode","renderEmbeddedTemplate","rf","tickRootContext","namespaceHTML","isCreationOnly","renderComponentOrTemplate","componentOrContext","getRenderFlags","_currentNamespace","namespaceSVG","namespaceMathML","localRefs","elementStart","elementEnd","elementCreate","assertDataInRange","setUpAttributes","createDirectivesAndLocals","overriddenRenderer","rendererToUse","createElementNS","cacheMatchingDirectivesForNode","instantiateDirectivesDirectly","saveResolvedLocalsInData","exportsMap","currentMatches","findDirectiveMatches","valueIndex","resolveDirective","saveNameToExportMap","cacheMatchingLocalNames","directiveRegistry","diPublic","directiveCreate","queueComponentIndexForCheck","queueHostBindingForCheck","initChangeDetectorIfExisting","_setComponentContext","tDirectives","localNames","exportAs","getOrCreateTView","pipes","viewQuery","ngPrivateData","createTView","bindingStartIndex","pipeRegistry","isProc","namespaceURI","attrVal","setAttributeNS","createError","locateHostElement","elementOrSelector","defaultRenderer","rNode","tag","directiveDefs","pipeDefs","onPush","listenerFn","useCapture","assertPreviousIsParent","wrappedListener","wrapListenerWithDirtyLogic","storeCleanupFn","wrapListenerWithDirtyAndDefault","addEventListener","cleanupInstances","generatePropertyAliases","outputData","createOutput","storeCleanupWithContext","assertHasParent","addNode","elementAttribute","NO_CHANGE","loadElement","strValue","elementProperty","inputData","dataValue","setInputsForProperty","markDirtyIfOnPush","tViews","initialInputs","stylingTemplate","tNodeFlags","direction","propStore","isInput","propertyAliasMap","publicName","internalName","hasProperty","elementClassProp","stylingIndex","getStylingContext","elementStyling","classDeclarations","styleDeclarations","elementStylingApply","stylingContext","elementStyleProp","styleIndex","valueToAdd","elementStylingMap","textNode","textBinding","existingNode","textContent","baseDirectiveCreate","addComponentLogic","setInputsFromAttrs","directiveIndex","addToViewTree","enumerable","initialInputData","generateInitialInputs","minifiedInputName","attrValue","inputsToStore","createLContainer","parentLNode","isForViewContainerRef","containerRefreshStart","containerRefreshEnd","nextIndex","lViewNode","dynamicViewData","scanForView","containerNode","startIdx","viewBlockId","viewAtPositionId","embeddedViewStart","getOrCreateEmbeddedTView","containerTViews","embeddedViewEnd","adjustedElementIndex","viewAttached","detectChangesInternal","projectionDef","componentNode","noOfNodeBuckets","pData","tails","componentChild","bucketIndex","projectionNodeStack$1","selectorIndex","nodeToProject","grandparent","currentComponentHost","firstProjectedNode","lNode","adjustedHostIndex","markViewDirty","wrapListenerIn_markViewDirty","preventDefault","scheduleTick","rootContext","clean","scheduler","rootComponent","_getComponentHostLElementNode","getRootView","lElementNode","hostTView","createViewQuery","updateViewQuery","markDirty","initBindings","bindingUpdated","reserveSlots","numSlots","moveBindingIndexToReservedSlot","currentSlot","restoreBindingIndex","interpolationV","different","interpolation1","interpolation2","i0","bindingUpdated2","interpolation3","i1","interpolation4","i2","bindingUpdated4","interpolation5","i3","interpolation6","i4","interpolation7","i5","interpolation8","i6","loadDirective","loadQueryList","queryListIdx","consumeBinding","checkAndUpdateBinding$1","exp1","exp2","exp3","exp4","getTView","registerContentQuery","savedContentQueriesLength","currentDirectiveIndex","tViewContentQueries","lastSavedDirectiveIndex","assertReservedSlotInitialized","slotOffset","CLEAN_PROMISE","ROOT_DIRECTIVE_INDICES","renderComponent","componentDef","componentTag","createRootContext","requestAnimationFrame","elementNode","hostFeatures","feature","LifecycleHooksFeature","getRootContext","whenRendered","defineComponent","componentDefinition","pipeTypes","directiveTypes","declaredInputs","invertObject","extractDirectiveDef","extractPipeDef","features","ngDirectiveDef","ngPipeDef","defineNgModule","declarations","transitiveCompileScopes","EMPTY$1","secondary","newLookup","minifiedKey","declaredName","defineDirective","definePipe","fillProperties","isComponentDef","definition","getSuperType","InheritDefinitionFeature","superType","superDef","prevHostBindings","superHostBindings","elementIndex","superPrototype","PRIVATE_PREFIX","NgOnChangesFeature","declaredToMinifiedInputs","proto","privateMinKey","originalProperty","checkProto","getOwnPropertyDescriptor","simpleChanges","writable","currentChange","onChangesWrapper","delegateHook","ViewRef$1","_lViewNode","ComponentFactoryResolver$1","ComponentFactory$1","toRefArray","array","nonMinified","minified","ROOT_CONTEXT","SCHEDULER","isInternalRootView","projection$$1","nodeList","firstTNode","ComponentRef$1","destroyCbs","NG_ELEMENT_ID","BLOOM_SIZE","nextNgElementId","bloomAdd","bloomBit","mask","bf0","bf1","bf2","bf3","bf4","bf5","bf6","bf7","getOrCreateNodeInjector","getOrCreateNodeInjectorForNode","cbf0","cbf1","cbf2","cbf3","cbf4","cbf5","cbf6","cbf7","viewContainerRef","diPublicInInjector","di","directiveInject","getOrCreateInjectable","injectElementRef","getOrCreateElementRef","injectTemplateRef","getOrCreateTemplateRef","injectViewContainerRef","getOrCreateContainerRef","injectChangeDetectorRef","getOrCreateChangeDetectorRef","injectAttribute","attrNameToInject","tElement","currentNode","getOrCreateHostChangeDetector","getClosestComponentAncestor","hostInjector","existingRef","bloomHash","bloomHashBit","moduleInjector","formerInjector","bloomFindPossibleInjector","searchMatchesQueuedForCreation","sameHostView","startInjector","ReadFromInjectorFn","read","ElementRef$1","vcRefHost","hostParent","hostTNode","ViewContainerRef$1","_lContainerNode","_viewRefs","adjustedIdx","_adjustIndex","newIndex","shift","TemplateRef$1","_tView","_renderer","_queries","PublicFeature","i18nTagRegex","i18nMapping","translation","elements","expressions","templateRoots","lastChildIndex","translationParts","nbTemplates","instructions","generateMappingInstructions","tmplIndex","partIndex","tmplInstructions","phVisited","openedTagCount","maxIndex","currentElements","currentExpressions","phIndex","templateRootIndex","newTmplIndex","tmplElements","phKeys","ph","tmplExpressions","appendI18nNode","previousNode","i18nApply","localParentNode","localPreviousNode","instruction","element$$1","textRNode","textLNode","removedNode","i18nExpMapping","placeholders","i18nInterpolation1","i18nInterpolation2","idx","b1","i18nInterpolation3","b2","i18nInterpolation4","i18nInterpolation5","b4","i18nInterpolation6","i18nInterpolation7","i18nInterpolation8","i18nInterpolationV","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","ngModuleDef","NgModuleFactory$1","pureFunction0","pureFn","thisArg","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipeName","getPipeDef","pipeInstance","pipeBind1","isPure","pipeBind2","pipeBind3","pipeBind4","pipeBindV","LQueries_","deep","shallow","track","descend","createQuery$1","containerValues","clonedQuery","viewValuesIdx","removed","getIdxOfMatchingSelector","getIdxOfMatchingDirective","readFromNodeInjector","directiveIdx","matchingIdx","addMatch","matchingValue","createPredicate","previous","_valuesTree","QueryList_","_values","QueryList$1","memoryIndex","queryRefresh","queryListImpl","BRAND","allowSanitizationBypass","bypassSanitizationTrustHtml","trustedHtml","bypassSanitizationTrustString","bypassSanitizationTrustStyle","trustedStyle","bypassSanitizationTrustScript","trustedScript","bypassSanitizationTrustUrl","trustedUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","trustedString","trusted","sanitizeHtml","sanitizeStyle","unsafeStyle","sanitizeUrl","unsafeUrl","sanitizeResourceUrl","unsafeResourceUrl","Éµangular_packages_core_core_l","Éµangular_packages_core_core_i","Éµangular_packages_core_core_j","Éµangular_packages_core_core_k","Éµangular_packages_core_core_f","Éµangular_packages_core_core_g","Éµangular_packages_core_core_h","Éµangular_packages_core_core_c","Éµangular_packages_core_core_d","Éµangular_packages_core_core_e","Éµangular_packages_core_core_m","Éµangular_packages_core_core_o","Éµangular_packages_core_core_n","Éµangular_packages_core_core_r","Éµangular_packages_core_core_p","Éµangular_packages_core_core_q","Éµangular_packages_core_core_v","Éµangular_packages_core_core_y","Éµangular_packages_core_core_x","Éµangular_packages_core_core_w","Éµangular_packages_core_core_u","Éµangular_packages_core_core_z","Éµangular_packages_core_core_ba","Éµangular_packages_core_core_bb","Éµangular_packages_core_core_a","Éµangular_packages_core_core_b","Éµangular_packages_core_core_s","Éµangular_packages_core_core_t","ÉµNoopNgZone","ÉµALLOW_MULTIPLE_PLATFORMS","ÉµAPP_ID_RANDOM_PROVIDER","ÉµdefaultIterableDiffers","ÉµdefaultKeyValueDiffers","ÉµdevModeEqual","ÉµisListLikeIterable","ÉµChangeDetectorStatus","ÉµisDefaultChangeDetectionStrategy","ÉµConsole","Éµinject","ÉµsetCurrentInjector","ÉµAPP_ROOT","ÉµivyEnabled","ÉµComponentFactory","ÉµCodegenComponentFactoryResolver","ÉµresolveComponentResources","ÉµReflectionCapabilities","ÉµRenderDebugInfo","Éµ_sanitizeHtml","Éµ_sanitizeStyle","Éµ_sanitizeUrl","Éµglobal","ÉµlooseIdentical","Éµstringify","ÉµmakeDecorator","ÉµisObservable","ÉµisPromise","ÉµclearOverrides","ÉµinitServicesIfNeeded","ÉµoverrideComponentView","ÉµoverrideProvider","ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ÉµdefineComponent","ÉµdefineDirective","ÉµdefinePipe","ÉµdefineNgModule","ÉµdetectChanges","ÉµrenderComponent","ÉµdirectiveInject","ÉµinjectElementRef","ÉµinjectTemplateRef","ÉµinjectViewContainerRef","ÉµinjectChangeDetectorRef","ÉµinjectAttribute","ÉµPublicFeature","ÉµInheritDefinitionFeature","ÉµNgOnChangesFeature","ÉµmarkDirty","ÉµNgModuleFactory","ÉµNC","ÉµC","ÉµE","ÉµNH","ÉµNM","ÉµNS","ÉµEe","ÉµL","ÉµT","ÉµV","ÉµQ","ÉµQr","Éµd","ÉµP","Éµb","Éµi1","Éµi2","Éµi3","Éµi4","Éµi5","Éµi6","Éµi7","Éµi8","ÉµiV","Éµpb1","Éµpb2","Éµpb3","Éµpb4","ÉµpbV","Éµf0","Éµf1","Éµf2","Éµf3","Éµf4","Éµf5","Éµf6","Éµf7","Éµf8","ÉµfV","ÉµcR","Éµcr","ÉµqR","Éµql","Éµe","Éµp","ÉµpD","ÉµrS","Éµa","Éµs","Éµsm","Éµsp","Éµsa","Éµcp","Éµt","Éµv","Éµst","Éµld","ÉµPp","ÉµwhenRendered","ÉµiA","ÉµiEM","ÉµiI1","ÉµiI2","ÉµiI3","ÉµiI4","ÉµiI5","ÉµiI6","ÉµiI7","ÉµiI8","ÉµIV","ÉµiM","ÉµsanitizeHtml","ÉµsanitizeStyle","ÉµsanitizeUrl","ÉµsanitizeResourceUrl","ÉµbypassSanitizationTrustHtml","ÉµbypassSanitizationTrustStyle","ÉµbypassSanitizationTrustScript","ÉµbypassSanitizationTrustUrl","ÉµbypassSanitizationTrustResourceUrl","ÉµregisterModuleFactory","ÉµEMPTY_ARRAY","ÉµEMPTY_MAP","Éµand","Éµccf","Éµcmf","Éµcrt","Éµdid","Éµeld","ÉµelementEventFullName","ÉµgetComponentViewDefinitionFactory","ÉµinlineInterpolate","Éµinterpolate","Éµmod","Éµmpd","Éµncd","Éµnov","Éµpid","Éµprd","Éµpad","Éµpod","Éµppd","Éµqud","Éµted","Éµunv","Éµvid"],"mappings":"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","file":"core.js","sourcesContent":["/**\n * @license Angular v6.1.10\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\nimport { Subject, Subscription, Observable, merge } from 'rxjs';\nimport { share } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n * in which injectors (if any) it will be available.\n *\n * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n * `InjectableType`.\n *\n * Options:\n * * `providedIn` determines which injectors will include the injectable, by either associating it\n *   with an `\\@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n * * `factory` gives the zero argument function which will create an instance of the injectable.\n *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n *\n * \\@experimental\n * @template T\n * @param {?} opts\n * @return {?}\n */\nfunction defineInjectable(opts) {\n    return /** @type {?} */ ((/** @type {?} */ ({\n        providedIn: /** @type {?} */ (opts.providedIn) || null, factory: opts.factory, value: undefined,\n    })));\n}\n/**\n * Construct an `InjectorDef` which configures an injector.\n *\n * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n * `InjectorType`.\n *\n * Options:\n *\n * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n *   create the type must be provided. If that factory function needs to inject arguments, it can\n *   use the `inject` function.\n * * `providers`: an optional array of providers to add to the injector. Each provider must\n *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n *   type must be an `InjectableType`).\n * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n *   whose providers will also be added to the injector. Locally provided types will override\n *   providers from imports.\n *\n * \\@experimental\n * @param {?} options\n * @return {?}\n */\nfunction defineInjector(options) {\n    return /** @type {?} */ ((/** @type {?} */ ({\n        factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n    })));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Creates a token that can be used in a DI Provider.\n *\n * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n * runtime representation) such as when injecting an interface, callable type, array or\n * parametrized type.\n *\n * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n * the `Injector`. This provides additional level of type safety.\n *\n * ```\n * interface MyInterface {...}\n * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n * // myInterface is inferred to be MyInterface.\n * ```\n *\n * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n * application's root injector. If the factory function, which takes zero arguments, needs to inject\n * dependencies, it can do so using the `inject` function. See below for an example.\n *\n * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n * overrides the above behavior and marks the token as belonging to a particular `\\@NgModule`. As\n * mentioned above, `'root'` is the default value for `providedIn`.\n *\n * \\@usageNotes\n * ### Basic Example\n *\n * ### Plain InjectionToken\n *\n * {\\@example core/di/ts/injector_spec.ts region='InjectionToken'}\n *\n * ### Tree-shakable InjectionToken\n *\n * {\\@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n *\n * @template T\n */\nclass InjectionToken {\n    /**\n     * @param {?} _desc\n     * @param {?=} options\n     */\n    constructor(_desc, options) {\n        this._desc = _desc;\n        /**\n         * \\@internal\n         */\n        this.ngMetadataName = 'InjectionToken';\n        if (options !== undefined) {\n            /** @nocollapse */ this.ngInjectableDef = defineInjectable({\n                providedIn: options.providedIn || 'root',\n                factory: options.factory,\n            });\n        }\n        else {\n            /** @nocollapse */ this.ngInjectableDef = undefined;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    toString() { return `InjectionToken ${this._desc}`; }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst ANNOTATIONS = '__annotations__';\n/** @type {?} */\nconst PARAMETERS = '__parameters__';\n/** @type {?} */\nconst PROP_METADATA = '__prop__metadata__';\n/**\n * @suppress {globalThis}\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @param {?=} chainFn\n * @param {?=} typeFn\n * @return {?}\n */\nfunction makeDecorator(name, props, parentClass, chainFn, typeFn) {\n    /** @type {?} */\n    const metaCtor = makeMetadataCtor(props);\n    /**\n     * @param {...?} args\n     * @return {?}\n     */\n    function DecoratorFactory(...args) {\n        if (this instanceof DecoratorFactory) {\n            metaCtor.call(this, ...args);\n            return this;\n        }\n        /** @type {?} */\n        const annotationInstance = new (/** @type {?} */ (DecoratorFactory))(...args);\n        /** @type {?} */\n        const TypeDecorator = /** @type {?} */ (function TypeDecorator(cls) {\n            typeFn && typeFn(cls, ...args);\n            /** @type {?} */\n            const annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                (/** @type {?} */ (cls))[ANNOTATIONS] :\n                Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n            annotations.push(annotationInstance);\n            return cls;\n        });\n        if (chainFn)\n            chainFn(TypeDecorator);\n        return TypeDecorator;\n    }\n    if (parentClass) {\n        DecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    DecoratorFactory.prototype.ngMetadataName = name;\n    (/** @type {?} */ (DecoratorFactory)).annotationCls = DecoratorFactory;\n    return /** @type {?} */ (DecoratorFactory);\n}\n/**\n * @param {?=} props\n * @return {?}\n */\nfunction makeMetadataCtor(props) {\n    return function ctor(...args) {\n        if (props) {\n            /** @type {?} */\n            const values = props(...args);\n            for (const propName in values) {\n                this[propName] = values[propName];\n            }\n        }\n    };\n}\n/**\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @return {?}\n */\nfunction makeParamDecorator(name, props, parentClass) {\n    /** @type {?} */\n    const metaCtor = makeMetadataCtor(props);\n    /**\n     * @param {...?} args\n     * @return {?}\n     */\n    function ParamDecoratorFactory(...args) {\n        if (this instanceof ParamDecoratorFactory) {\n            metaCtor.apply(this, args);\n            return this;\n        }\n        /** @type {?} */\n        const annotationInstance = new (/** @type {?} */ (ParamDecoratorFactory))(...args);\n        (/** @type {?} */ (ParamDecorator)).annotation = annotationInstance;\n        return ParamDecorator;\n        /**\n         * @param {?} cls\n         * @param {?} unusedKey\n         * @param {?} index\n         * @return {?}\n         */\n        function ParamDecorator(cls, unusedKey, index) {\n            /** @type {?} */\n            const parameters = cls.hasOwnProperty(PARAMETERS) ?\n                (/** @type {?} */ (cls))[PARAMETERS] :\n                Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n            // there might be gaps if some in between parameters do not have annotations.\n            // we pad with nulls.\n            while (parameters.length <= index) {\n                parameters.push(null);\n            }\n            (parameters[index] = parameters[index] || []).push(annotationInstance);\n            return cls;\n        }\n    }\n    if (parentClass) {\n        ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    ParamDecoratorFactory.prototype.ngMetadataName = name;\n    (/** @type {?} */ (ParamDecoratorFactory)).annotationCls = ParamDecoratorFactory;\n    return ParamDecoratorFactory;\n}\n/**\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @return {?}\n */\nfunction makePropDecorator(name, props, parentClass) {\n    /** @type {?} */\n    const metaCtor = makeMetadataCtor(props);\n    /**\n     * @param {...?} args\n     * @return {?}\n     */\n    function PropDecoratorFactory(...args) {\n        if (this instanceof PropDecoratorFactory) {\n            metaCtor.apply(this, args);\n            return this;\n        }\n        /** @type {?} */\n        const decoratorInstance = new (/** @type {?} */ (PropDecoratorFactory))(...args);\n        return function PropDecorator(target, name) {\n            /** @type {?} */\n            const constructor = target.constructor;\n            /** @type {?} */\n            const meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                (/** @type {?} */ (constructor))[PROP_METADATA] :\n                Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n            meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n            meta[name].unshift(decoratorInstance);\n        };\n    }\n    if (parentClass) {\n        PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    PropDecoratorFactory.prototype.ngMetadataName = name;\n    (/** @type {?} */ (PropDecoratorFactory)).annotationCls = PropDecoratorFactory;\n    return PropDecoratorFactory;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * This token can be used to create a virtual provider that will populate the\n * `entryComponents` fields of components and ng modules based on its `useValue`.\n * All components that are referenced in the `useValue` value (either directly\n * or in a nested array or map) will be added to the `entryComponents` property.\n *\n * \\@usageNotes\n * ### Example\n * The following example shows how the router can populate the `entryComponents`\n * field of an NgModule based on the router configuration which refers\n * to components.\n *\n * ```typescript\n * // helper function inside the router\n * function provideRoutes(routes) {\n *   return [\n *     {provide: ROUTES, useValue: routes},\n *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n *   ];\n * }\n *\n * // user code\n * let routes = [\n *   {path: '/root', component: RootComp},\n *   {path: '/teams', component: TeamsComp}\n * ];\n *\n * \\@NgModule({\n *   providers: [provideRoutes(routes)]\n * })\n * class ModuleWithRoutes {}\n * ```\n *\n * \\@experimental\n  @type {?} */\nconst ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n/** *\n * Attribute decorator and metadata.\n *\n * \\@Annotation\n  @type {?} */\nconst Attribute = makeParamDecorator('Attribute', (attributeName) => ({ attributeName }));\n/**\n * Base class for query metadata.\n *\n * @see `ContentChildren`.\n * @see `ContentChild`.\n * @see `ViewChildren`.\n * @see `ViewChild`.\n * @abstract\n */\nclass Query {\n}\n/** *\n * ContentChildren decorator and metadata.\n *\n *\n * \\@Annotation\n  @type {?} */\nconst ContentChildren = makePropDecorator('ContentChildren', (selector, data = {}) => (Object.assign({ selector, first: false, isViewQuery: false, descendants: false }, data)), Query);\n/** *\n * ContentChild decorator and metadata.\n *\n *\n * \\@Annotation\n  @type {?} */\nconst ContentChild = makePropDecorator('ContentChild', (selector, data = {}) => (Object.assign({ selector, first: true, isViewQuery: false, descendants: true }, data)), Query);\n/** *\n * ViewChildren decorator and metadata.\n *\n * \\@Annotation\n  @type {?} */\nconst ViewChildren = makePropDecorator('ViewChildren', (selector, data = {}) => (Object.assign({ selector, first: false, isViewQuery: true, descendants: true }, data)), Query);\n/** *\n * ViewChild decorator and metadata.\n *\n * \\@Annotation\n  @type {?} */\nconst ViewChild = makePropDecorator('ViewChild', (selector, data) => (Object.assign({ selector, first: true, isViewQuery: true, descendants: true }, data)), Query);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nconst ChangeDetectionStrategy = {\n    /**\n       * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n       * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n       * Change detection can still be explictly invoked.\n       */\n    OnPush: 0,\n    /**\n       * Use the default `CheckAlways` strategy, in which change detection is automatic until\n       * explicitly deactivated.\n       */\n    Default: 1,\n};\nChangeDetectionStrategy[ChangeDetectionStrategy.OnPush] = 'OnPush';\nChangeDetectionStrategy[ChangeDetectionStrategy.Default] = 'Default';\n/** @enum {number} */\nconst ChangeDetectorStatus = {\n    /**\n       * A state in which, after calling `detectChanges()`, the change detector\n       * state becomes `Checked`, and must be explicitly invoked or reactivated.\n       */\n    CheckOnce: 0,\n    /**\n       * A state in which change detection is skipped until the change detector mode\n       * becomes `CheckOnce`.\n       */\n    Checked: 1,\n    /**\n       * A state in which change detection continues automatically until explictly\n       * deactivated.\n       */\n    CheckAlways: 2,\n    /**\n       * A state in which a change detector sub tree is not a part of the main tree and\n       * should be skipped.\n       */\n    Detached: 3,\n    /**\n       * Indicates that the change detector encountered an error checking a binding\n       * or calling a directive lifecycle method and is now in an inconsistent state. Change\n       * detectors in this state do not detect changes.\n       */\n    Errored: 4,\n    /**\n       * Indicates that the change detector has been destroyed.\n       */\n    Destroyed: 5,\n};\nChangeDetectorStatus[ChangeDetectorStatus.CheckOnce] = 'CheckOnce';\nChangeDetectorStatus[ChangeDetectorStatus.Checked] = 'Checked';\nChangeDetectorStatus[ChangeDetectorStatus.CheckAlways] = 'CheckAlways';\nChangeDetectorStatus[ChangeDetectorStatus.Detached] = 'Detached';\nChangeDetectorStatus[ChangeDetectorStatus.Errored] = 'Errored';\nChangeDetectorStatus[ChangeDetectorStatus.Destroyed] = 'Destroyed';\n/**\n * Reports whether a given strategy is currently the default for change detection.\n * @see `ChangeDetectorStatus`\n * @see `ChangeDetectorRef`\n * @param {?} changeDetectionStrategy The strategy to check.\n * @return {?} True if the given strategy is the current default, false otherwise.\n */\nfunction isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n    return changeDetectionStrategy == null ||\n        changeDetectionStrategy === ChangeDetectionStrategy.Default;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @type {?} */\nconst ivyEnabled = false;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Type of the Directive metadata.\n  @type {?} */\nconst Directive = makeDecorator('Directive', (dir = {}) => dir, undefined, undefined, (type, meta) => (() => { })(type, meta));\n/** *\n * Component decorator and metadata.\n *\n * \\@usageNotes\n *\n * ### Using animations\n *\n * The following snippet shows an animation trigger in a component's\n * metadata. The trigger is attached to an element in the component's\n * template, using \"\\@_trigger_name_\", and a state expression that is evaluated\n * at run time to determine whether the animation should start.\n *\n * ```typescript\n * \\@Component({\n *   selector: 'animation-cmp',\n *   templateUrl: 'animation-cmp.html',\n *   animations: [\n *     trigger('myTriggerName', [\n *       state('on', style({ opacity: 1 }),\n *       state('off', style({ opacity: 0 }),\n *       transition('on => off', [\n *         animate(\"1s\")\n *       ])\n *     ])\n *   ]\n * })\n * ```\n *\n * ```html\n * <!-- animation-cmp.html -->\n * <div \\@myTriggerName=\"expression\">...</div>\n * ```\n *\n * ### Preserving whitespace\n *\n * Removing whitespace can greatly reduce AOT-generated code size, and speed up view creation.\n * As of Angular 6, default for `preserveWhitespaces` is false (whitespace is removed).\n * To change the default setting for all components in your application, set\n * the `preserveWhitespaces` option of the AOT compiler.\n *\n * Current implementation removes whitespace characters as follows:\n * - Trims all whitespaces at the beginning and the end of a template.\n * - Removes whitespace-only text nodes. For example,\n * `<button>Action 1</button>  <button>Action 2</button>` becomes\n * `<button>Action 1</button><button>Action 2</button>`.\n * - Replaces a series of whitespace characters in text nodes with a single space.\n * For example, `<span>\\n some text\\n</span>` becomes `<span> some text </span>`.\n * - Does NOT alter text nodes inside HTML tags such as `<pre>` or `<textarea>`,\n * where whitespace characters are significant.\n *\n * Note that these transformations can influence DOM nodes layout, although impact\n * should be minimal.\n *\n * You can override the default behavior to preserve whitespace characters\n * in certain fragments of a template. For example, you can exclude an entire\n * DOM sub-tree by using the `ngPreserveWhitespaces` attribute:\n *\n * ```html\n * <div ngPreserveWhitespaces>\n *     whitespaces are preserved here\n *     <span>    and here </span>\n * </div>\n * ```\n *\n * You can force a single space to be preserved in a text node by using `&ngsp;`,\n * which is replaced with a space character by Angular's template\n * compiler:\n *\n * ```html\n * <a>Spaces</a>&ngsp;<a>between</a>&ngsp;<a>links.</a>\n * <!-->compiled to be equivalent to:</>\n *  <a>Spaces</a> <a>between</a> <a>links.</a>\n * ```\n *\n * Note that sequences of `&ngsp;` are still collapsed to just one space character when\n * the `preserveWhitespaces` option is set to `false`.\n *\n * ```html\n * <a>before</a>&ngsp;&ngsp;&ngsp;<a>after</a>\n * <!-->compiled to be equivalent to:</>\n *  <a>Spaces</a> <a>between</a> <a>links.</a>\n * ```\n *\n * To preserve sequences of whitespace characters, use the\n * `ngPreserveWhitespaces` attribute.\n *\n * \\@Annotation\n  @type {?} */\nconst Component = makeDecorator('Component', (c = {}) => (Object.assign({ changeDetection: ChangeDetectionStrategy.Default }, c)), Directive, undefined, (type, meta) => (() => { })(type, meta));\n/** *\n *\n *\n * \\@Annotation\n  @type {?} */\nconst Pipe = makeDecorator('Pipe', (p) => (Object.assign({ pure: true }, p)), undefined, undefined, (type, meta) => (() => { })(type, meta));\n/** *\n *\n * \\@Annotation\n  @type {?} */\nconst Input = makePropDecorator('Input', (bindingPropertyName) => ({ bindingPropertyName }));\n/** *\n *\n * \\@Annotation\n  @type {?} */\nconst Output = makePropDecorator('Output', (bindingPropertyName) => ({ bindingPropertyName }));\n/** *\n *\n * \\@Annotation\n  @type {?} */\nconst HostBinding = makePropDecorator('HostBinding', (hostPropertyName) => ({ hostPropertyName }));\n/** *\n * Binds a CSS event to a host listener and supplies configuration metadata.\n * Angular invokes the supplied handler method when the host element emits the specified event,\n * and updates the bound element with the result.\n * If the handler method returns false, applies `preventDefault` on the bound element.\n *\n * \\@usageNotes\n *\n * The following example declares a directive\n * that attaches a click listener to a button and counts clicks.\n *\n * ```\n * \\@Directive({selector: 'button[counting]'})\n * class CountClicks {\n *   numberOfClicks = 0;\n *\n * \\@HostListener('click', ['$event.target'])\n *   onClick(btn) {\n *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n *  }\n * }\n *\n * \\@Component({\n *   selector: 'app',\n *   template: '<button counting>Increment</button>',\n * })\n * class App {}\n * ```\n *\n * \\@Annotation\n  @type {?} */\nconst HostListener = makePropDecorator('HostListener', (eventName, args) => ({ eventName, args }));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** *\n * \\@description\n *\n * Represents a type that a Component or other object is instances of.\n *\n * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n * the `MyCustomComponent` constructor function.\n *\n *\n  @type {?} */\nconst Type = Function;\n/**\n * @param {?} v\n * @return {?}\n */\nfunction isType(v) {\n    return typeof v === 'function';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @type {?} */\nconst __window = typeof window !== 'undefined' && window;\n/** @type {?} */\nconst __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\n/** @type {?} */\nconst __global = typeof global !== 'undefined' && global;\n/** @type {?} */\nconst _global = __global || __window || __self;\n/** @type {?} */\nconst promise = Promise.resolve(0);\n/** @type {?} */\nlet _symbolIterator = null;\n/**\n * @return {?}\n */\nfunction getSymbolIterator() {\n    if (!_symbolIterator) {\n        /** @type {?} */\n        const Symbol = _global['Symbol'];\n        if (Symbol && Symbol.iterator) {\n            _symbolIterator = Symbol.iterator;\n        }\n        else {\n            /** @type {?} */\n            const keys = Object.getOwnPropertyNames(Map.prototype);\n            for (let i = 0; i < keys.length; ++i) {\n                /** @type {?} */\n                const key = keys[i];\n                if (key !== 'entries' && key !== 'size' &&\n                    (/** @type {?} */ (Map)).prototype[key] === Map.prototype['entries']) {\n                    _symbolIterator = key;\n                }\n            }\n        }\n    }\n    return _symbolIterator;\n}\n/**\n * @param {?} fn\n * @return {?}\n */\nfunction scheduleMicroTask(fn) {\n    if (typeof Zone === 'undefined') {\n        // use promise to schedule microTask instead of use Zone\n        promise.then(() => { fn && fn.apply(null, null); });\n    }\n    else {\n        Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n    }\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction looseIdentical(a, b) {\n    return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction stringify(token) {\n    if (typeof token === 'string') {\n        return token;\n    }\n    if (token instanceof Array) {\n        return '[' + token.map(stringify).join(', ') + ']';\n    }\n    if (token == null) {\n        return '' + token;\n    }\n    if (token.overriddenName) {\n        return `${token.overriddenName}`;\n    }\n    if (token.name) {\n        return `${token.name}`;\n    }\n    /** @type {?} */\n    const res = token.toString();\n    if (res == null) {\n        return '' + res;\n    }\n    /** @type {?} */\n    const newLineIndex = res.indexOf('\\n');\n    return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Attention: These regex has to hold even if the code is minified!\n  @type {?} */\nconst DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n/** @type {?} */\nconst INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{/;\n/** @type {?} */\nconst INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{[\\s\\S]*constructor\\s*\\(/;\nclass ReflectionCapabilities {\n    /**\n     * @param {?=} reflect\n     */\n    constructor(reflect) { this._reflect = reflect || _global['Reflect']; }\n    /**\n     * @return {?}\n     */\n    isReflectionEnabled() { return true; }\n    /**\n     * @template T\n     * @param {?} t\n     * @return {?}\n     */\n    factory(t) { return (...args) => new t(...args); }\n    /**\n     * \\@internal\n     * @param {?} paramTypes\n     * @param {?} paramAnnotations\n     * @return {?}\n     */\n    _zipTypesAndAnnotations(paramTypes, paramAnnotations) {\n        /** @type {?} */\n        let result;\n        if (typeof paramTypes === 'undefined') {\n            result = new Array(paramAnnotations.length);\n        }\n        else {\n            result = new Array(paramTypes.length);\n        }\n        for (let i = 0; i < result.length; i++) {\n            // TS outputs Object for parameters without types, while Traceur omits\n            // the annotations. For now we preserve the Traceur behavior to aid\n            // migration, but this can be revisited.\n            if (typeof paramTypes === 'undefined') {\n                result[i] = [];\n            }\n            else if (paramTypes[i] != Object) {\n                result[i] = [paramTypes[i]];\n            }\n            else {\n                result[i] = [];\n            }\n            if (paramAnnotations && paramAnnotations[i] != null) {\n                result[i] = result[i].concat(paramAnnotations[i]);\n            }\n        }\n        return result;\n    }\n    /**\n     * @param {?} type\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    _ownParameters(type, parentCtor) {\n        /** @type {?} */\n        const typeStr = type.toString();\n        // If we have no decorators, we only have function.length as metadata.\n        // In that case, to detect whether a child class declared an own constructor or not,\n        // we need to look inside of that constructor to check whether it is\n        // just calling the parent.\n        // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n        // that sets 'design:paramtypes' to []\n        // if a class inherits from another class but has no ctor declared itself.\n        if (DELEGATE_CTOR.exec(typeStr) ||\n            (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n            return null;\n        }\n        // Prefer the direct API.\n        if ((/** @type {?} */ (type)).parameters && (/** @type {?} */ (type)).parameters !== parentCtor.parameters) {\n            return (/** @type {?} */ (type)).parameters;\n        }\n        /** @type {?} */\n        const tsickleCtorParams = (/** @type {?} */ (type)).ctorParameters;\n        if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n            /** @type {?} */\n            const ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n            /** @type {?} */\n            const paramTypes = ctorParameters.map((ctorParam) => ctorParam && ctorParam.type);\n            /** @type {?} */\n            const paramAnnotations = ctorParameters.map((ctorParam) => ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators));\n            return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n        }\n        /** @type {?} */\n        const paramAnnotations = type.hasOwnProperty(PARAMETERS) && (/** @type {?} */ (type))[PARAMETERS];\n        /** @type {?} */\n        const paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n            this._reflect.getOwnMetadata('design:paramtypes', type);\n        if (paramTypes || paramAnnotations) {\n            return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n        }\n        // If a class has no decorators, at least create metadata\n        // based on function.length.\n        // Note: We know that this is a real constructor as we checked\n        // the content of the constructor above.\n        return new Array((/** @type {?} */ (type.length))).fill(undefined);\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    parameters(type) {\n        // Note: only report metadata if we have at least one class decorator\n        // to stay in sync with the static reflector.\n        if (!isType(type)) {\n            return [];\n        }\n        /** @type {?} */\n        const parentCtor = getParentCtor(type);\n        /** @type {?} */\n        let parameters = this._ownParameters(type, parentCtor);\n        if (!parameters && parentCtor !== Object) {\n            parameters = this.parameters(parentCtor);\n        }\n        return parameters || [];\n    }\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    _ownAnnotations(typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if ((/** @type {?} */ (typeOrFunc)).annotations && (/** @type {?} */ (typeOrFunc)).annotations !== parentCtor.annotations) {\n            /** @type {?} */\n            let annotations = (/** @type {?} */ (typeOrFunc)).annotations;\n            if (typeof annotations === 'function' && annotations.annotations) {\n                annotations = annotations.annotations;\n            }\n            return annotations;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if ((/** @type {?} */ (typeOrFunc)).decorators && (/** @type {?} */ (typeOrFunc)).decorators !== parentCtor.decorators) {\n            return convertTsickleDecoratorIntoMetadata((/** @type {?} */ (typeOrFunc)).decorators);\n        }\n        // API for metadata created by invoking the decorators.\n        if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n            return (/** @type {?} */ (typeOrFunc))[ANNOTATIONS];\n        }\n        return null;\n    }\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    annotations(typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return [];\n        }\n        /** @type {?} */\n        const parentCtor = getParentCtor(typeOrFunc);\n        /** @type {?} */\n        const ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n        /** @type {?} */\n        const parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n        return parentAnnotations.concat(ownAnnotations);\n    }\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    _ownPropMetadata(typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if ((/** @type {?} */ (typeOrFunc)).propMetadata &&\n            (/** @type {?} */ (typeOrFunc)).propMetadata !== parentCtor.propMetadata) {\n            /** @type {?} */\n            let propMetadata = (/** @type {?} */ (typeOrFunc)).propMetadata;\n            if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                propMetadata = propMetadata.propMetadata;\n            }\n            return propMetadata;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if ((/** @type {?} */ (typeOrFunc)).propDecorators &&\n            (/** @type {?} */ (typeOrFunc)).propDecorators !== parentCtor.propDecorators) {\n            /** @type {?} */\n            const propDecorators = (/** @type {?} */ (typeOrFunc)).propDecorators;\n            /** @type {?} */\n            const propMetadata = /** @type {?} */ ({});\n            Object.keys(propDecorators).forEach(prop => {\n                propMetadata[prop] = convertTsickleDecoratorIntoMetadata(propDecorators[prop]);\n            });\n            return propMetadata;\n        }\n        // API for metadata created by invoking the decorators.\n        if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n            return (/** @type {?} */ (typeOrFunc))[PROP_METADATA];\n        }\n        return null;\n    }\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    propMetadata(typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return {};\n        }\n        /** @type {?} */\n        const parentCtor = getParentCtor(typeOrFunc);\n        /** @type {?} */\n        const propMetadata = {};\n        if (parentCtor !== Object) {\n            /** @type {?} */\n            const parentPropMetadata = this.propMetadata(parentCtor);\n            Object.keys(parentPropMetadata).forEach((propName) => {\n                propMetadata[propName] = parentPropMetadata[propName];\n            });\n        }\n        /** @type {?} */\n        const ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n        if (ownPropMetadata) {\n            Object.keys(ownPropMetadata).forEach((propName) => {\n                /** @type {?} */\n                const decorators = [];\n                if (propMetadata.hasOwnProperty(propName)) {\n                    decorators.push(...propMetadata[propName]);\n                }\n                decorators.push(...ownPropMetadata[propName]);\n                propMetadata[propName] = decorators;\n            });\n        }\n        return propMetadata;\n    }\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    hasLifecycleHook(type, lcProperty) {\n        return type instanceof Type && lcProperty in type.prototype;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    guards(type) { return {}; }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    getter(name) { return /** @type {?} */ (new Function('o', 'return o.' + name + ';')); }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    setter(name) {\n        return /** @type {?} */ (new Function('o', 'v', 'return o.' + name + ' = v;'));\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    method(name) {\n        /** @type {?} */\n        const functionBody = `if (!o.${name}) throw new Error('\"${name}\" is undefined');\n        return o.${name}.apply(o, args);`;\n        return /** @type {?} */ (new Function('o', 'args', functionBody));\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    importUri(type) {\n        // StaticSymbol\n        if (typeof type === 'object' && type['filePath']) {\n            return type['filePath'];\n        }\n        // Runtime type\n        return `./${stringify(type)}`;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    resourceUri(type) { return `./${stringify(type)}`; }\n    /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    resolveIdentifier(name, moduleUrl, members, runtime) {\n        return runtime;\n    }\n    /**\n     * @param {?} enumIdentifier\n     * @param {?} name\n     * @return {?}\n     */\n    resolveEnum(enumIdentifier, name) { return enumIdentifier[name]; }\n}\n/**\n * @param {?} decoratorInvocations\n * @return {?}\n */\nfunction convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n    if (!decoratorInvocations) {\n        return [];\n    }\n    return decoratorInvocations.map(decoratorInvocation => {\n        /** @type {?} */\n        const decoratorType = decoratorInvocation.type;\n        /** @type {?} */\n        const annotationCls = decoratorType.annotationCls;\n        /** @type {?} */\n        const annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n        return new annotationCls(...annotationArgs);\n    });\n}\n/**\n * @param {?} ctor\n * @return {?}\n */\nfunction getParentCtor(ctor) {\n    /** @type {?} */\n    const parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n    /** @type {?} */\n    const parentCtor = parentProto ? parentProto.constructor : null;\n    // Note: We always use `Object` as the null value\n    // to simplify checking later on.\n    return parentCtor || Object;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @template T\n * @param {?} objWithPropertyToExtract\n * @param {?} target\n * @return {?}\n */\nfunction getClosureSafeProperty(objWithPropertyToExtract, target) {\n    for (let key in objWithPropertyToExtract) {\n        if (objWithPropertyToExtract[key] === target) {\n            return key;\n        }\n    }\n    throw Error('Could not find renamed property on target object.');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Allows to refer to references which are not yet defined.\n *\n * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n * a query is not yet defined.\n *\n * \\@usageNotes\n * ### Example\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n * \\@experimental\n * @param {?} forwardRefFn\n * @return {?}\n */\nfunction forwardRef(forwardRefFn) {\n    (/** @type {?} */ (forwardRefFn)).__forward_ref__ = forwardRef;\n    (/** @type {?} */ (forwardRefFn)).toString = function () { return stringify(this()); };\n    return (/** @type {?} */ (/** @type {?} */ (forwardRefFn)));\n}\n/**\n * Lazily retrieves the reference value from a forwardRef.\n *\n * Acts as the identity function when given a non-forward-ref value.\n *\n * \\@usageNotes\n * ### Example\n *\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n *\n * @see `forwardRef`\n * \\@experimental\n * @param {?} type\n * @return {?}\n */\nfunction resolveForwardRef(type) {\n    if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n        type.__forward_ref__ === forwardRef) {\n        return (/** @type {?} */ (type))();\n    }\n    else {\n        return type;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Inject decorator and metadata.\n *\n * \\@Annotation\n  @type {?} */\nconst Inject = makeParamDecorator('Inject', (token) => ({ token }));\n/** *\n * Optional decorator and metadata.\n *\n * \\@Annotation\n  @type {?} */\nconst Optional = makeParamDecorator('Optional');\n/** *\n * Self decorator and metadata.\n *\n * \\@Annotation\n  @type {?} */\nconst Self = makeParamDecorator('Self');\n/** *\n * SkipSelf decorator and metadata.\n *\n * \\@Annotation\n  @type {?} */\nconst SkipSelf = makeParamDecorator('SkipSelf');\n/** *\n * Host decorator and metadata.\n *\n * \\@Annotation\n  @type {?} */\nconst Host = makeParamDecorator('Host');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst SOURCE = '__source';\n/** @type {?} */\nconst _THROW_IF_NOT_FOUND = new Object();\n/** @type {?} */\nconst THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n/** *\n * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n *\n * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n * project.\n *\n * \\@experimental\n  @type {?} */\nconst INJECTOR = new InjectionToken('INJECTOR');\nclass NullInjector {\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    get(token, notFoundValue = _THROW_IF_NOT_FOUND) {\n        if (notFoundValue === _THROW_IF_NOT_FOUND) {\n            // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n            // reason why correctly written application should cause this exception.\n            // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n            // if(ngDevMode) debugger;\n            throw new Error(`NullInjectorError: No provider for ${stringify(token)}!`);\n        }\n        return notFoundValue;\n    }\n}\n/**\n * Concrete injectors implement this interface.\n *\n * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n *\n * \\@usageNotes\n * ### Example\n *\n * {\\@example core/di/ts/injector_spec.ts region='Injector'}\n *\n * `Injector` returns itself when given `Injector` as a token:\n *\n * {\\@example core/di/ts/injector_spec.ts region='injectInjector'}\n *\n *\n * @abstract\n */\nclass Injector {\n    /**\n     * Create a new Injector which is configure using `StaticProvider`s.\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * {\\@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     * @param {?} options\n     * @param {?=} parent\n     * @return {?}\n     */\n    static create(options, parent) {\n        if (Array.isArray(options)) {\n            return new StaticInjector(options, parent);\n        }\n        else {\n            return new StaticInjector(options.providers, options.parent, options.name || null);\n        }\n    }\n}\nInjector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\nInjector.NULL = new NullInjector();\n/** @nocollapse */ Injector.ngInjectableDef = defineInjectable({\n    providedIn: /** @type {?} */ ('any'),\n    factory: () => inject(INJECTOR),\n});\n/** @type {?} */\nconst IDENT = function (value) {\n    return value;\n};\n/** @type {?} */\nconst EMPTY = /** @type {?} */ ([]);\n/** @type {?} */\nconst CIRCULAR = IDENT;\n/** @type {?} */\nconst MULTI_PROVIDER_FN = function () {\n    return Array.prototype.slice.call(arguments);\n};\n/** @type {?} */\nconst GET_PROPERTY_NAME = /** @type {?} */ ({});\n/** @type {?} */\nconst USE_VALUE = getClosureSafeProperty$1({ provide: String, useValue: GET_PROPERTY_NAME });\n/** @type {?} */\nconst NG_TOKEN_PATH = 'ngTokenPath';\n/** @type {?} */\nconst NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n/** @type {?} */\nconst NULL_INJECTOR = Injector.NULL;\n/** @type {?} */\nconst NEW_LINE = /\\n/gm;\n/** @type {?} */\nconst NO_NEW_LINE = 'Éµ';\nclass StaticInjector {\n    /**\n     * @param {?} providers\n     * @param {?=} parent\n     * @param {?=} source\n     */\n    constructor(providers, parent = NULL_INJECTOR, source = null) {\n        this.parent = parent;\n        this.source = source;\n        /** @type {?} */\n        const records = this._records = new Map();\n        records.set(Injector, /** @type {?} */ ({ token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false }));\n        records.set(INJECTOR, /** @type {?} */ ({ token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false }));\n        recursivelyProcessProviders(records, providers);\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @param {?=} flags\n     * @return {?}\n     */\n    get(token, notFoundValue, flags = 0 /* Default */) {\n        /** @type {?} */\n        const record = this._records.get(token);\n        try {\n            return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n        }\n        catch (e) {\n            /** @type {?} */\n            const tokenPath = e[NG_TEMP_TOKEN_PATH];\n            if (token[SOURCE]) {\n                tokenPath.unshift(token[SOURCE]);\n            }\n            e.message = formatError('\\n' + e.message, tokenPath, this.source);\n            e[NG_TOKEN_PATH] = tokenPath;\n            e[NG_TEMP_TOKEN_PATH] = null;\n            throw e;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    toString() {\n        /** @type {?} */\n        const tokens = /** @type {?} */ ([]);\n        /** @type {?} */\n        const records = this._records;\n        records.forEach((v, token) => tokens.push(stringify(token)));\n        return `StaticInjector[${tokens.join(', ')}]`;\n    }\n}\n/**\n * @param {?} provider\n * @return {?}\n */\nfunction resolveProvider(provider) {\n    /** @type {?} */\n    const deps = computeDeps(provider);\n    /** @type {?} */\n    let fn = IDENT;\n    /** @type {?} */\n    let value = EMPTY;\n    /** @type {?} */\n    let useNew = false;\n    /** @type {?} */\n    let provide = resolveForwardRef(provider.provide);\n    if (USE_VALUE in provider) {\n        // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n        value = (/** @type {?} */ (provider)).useValue;\n    }\n    else if ((/** @type {?} */ (provider)).useFactory) {\n        fn = (/** @type {?} */ (provider)).useFactory;\n    }\n    else if ((/** @type {?} */ (provider)).useExisting) ;\n    else if ((/** @type {?} */ (provider)).useClass) {\n        useNew = true;\n        fn = resolveForwardRef((/** @type {?} */ (provider)).useClass);\n    }\n    else if (typeof provide == 'function') {\n        useNew = true;\n        fn = provide;\n    }\n    else {\n        throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n    }\n    return { deps, fn, useNew, value };\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction multiProviderMixError(token) {\n    return staticError('Cannot mix multi providers and regular providers', token);\n}\n/**\n * @param {?} records\n * @param {?} provider\n * @return {?}\n */\nfunction recursivelyProcessProviders(records, provider) {\n    if (provider) {\n        provider = resolveForwardRef(provider);\n        if (provider instanceof Array) {\n            // if we have an array recurse into the array\n            for (let i = 0; i < provider.length; i++) {\n                recursivelyProcessProviders(records, provider[i]);\n            }\n        }\n        else if (typeof provider === 'function') {\n            // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n            // error messages\n            throw staticError('Function/Class not supported', provider);\n        }\n        else if (provider && typeof provider === 'object' && provider.provide) {\n            /** @type {?} */\n            let token = resolveForwardRef(provider.provide);\n            /** @type {?} */\n            const resolvedProvider = resolveProvider(provider);\n            if (provider.multi === true) {\n                /** @type {?} */\n                let multiProvider = records.get(token);\n                if (multiProvider) {\n                    if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                        throw multiProviderMixError(token);\n                    }\n                }\n                else {\n                    // Create a placeholder factory which will look up the constituents of the multi provider.\n                    records.set(token, multiProvider = /** @type {?} */ ({\n                        token: provider.provide,\n                        deps: [],\n                        useNew: false,\n                        fn: MULTI_PROVIDER_FN,\n                        value: EMPTY\n                    }));\n                }\n                // Treat the provider as the token.\n                token = provider;\n                multiProvider.deps.push({ token, options: 6 /* Default */ });\n            }\n            /** @type {?} */\n            const record = records.get(token);\n            if (record && record.fn == MULTI_PROVIDER_FN) {\n                throw multiProviderMixError(token);\n            }\n            records.set(token, resolvedProvider);\n        }\n        else {\n            throw staticError('Unexpected provider', provider);\n        }\n    }\n}\n/**\n * @param {?} token\n * @param {?} record\n * @param {?} records\n * @param {?} parent\n * @param {?} notFoundValue\n * @param {?} flags\n * @return {?}\n */\nfunction tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n    try {\n        return resolveToken(token, record, records, parent, notFoundValue, flags);\n    }\n    catch (e) {\n        // ensure that 'e' is of type Error.\n        if (!(e instanceof Error)) {\n            e = new Error(e);\n        }\n        /** @type {?} */\n        const path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n        path.unshift(token);\n        if (record && record.value == CIRCULAR) {\n            // Reset the Circular flag.\n            record.value = EMPTY;\n        }\n        throw e;\n    }\n}\n/**\n * @param {?} token\n * @param {?} record\n * @param {?} records\n * @param {?} parent\n * @param {?} notFoundValue\n * @param {?} flags\n * @return {?}\n */\nfunction resolveToken(token, record, records, parent, notFoundValue, flags) {\n    /** @type {?} */\n    let value;\n    if (record && !(flags & 4 /* SkipSelf */)) {\n        // If we don't have a record, this implies that we don't own the provider hence don't know how\n        // to resolve it.\n        value = record.value;\n        if (value == CIRCULAR) {\n            throw Error(NO_NEW_LINE + 'Circular dependency');\n        }\n        else if (value === EMPTY) {\n            record.value = CIRCULAR;\n            /** @type {?} */\n            let obj = undefined;\n            /** @type {?} */\n            let useNew = record.useNew;\n            /** @type {?} */\n            let fn = record.fn;\n            /** @type {?} */\n            let depRecords = record.deps;\n            /** @type {?} */\n            let deps = EMPTY;\n            if (depRecords.length) {\n                deps = [];\n                for (let i = 0; i < depRecords.length; i++) {\n                    /** @type {?} */\n                    const depRecord = depRecords[i];\n                    /** @type {?} */\n                    const options = depRecord.options;\n                    /** @type {?} */\n                    const childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                    deps.push(tryResolveToken(\n                    // Current Token to resolve\n                    depRecord.token, childRecord, records, \n                    // If we don't know how to resolve dependency and we should not check parent for it,\n                    // than pass in Null injector.\n                    !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, 0 /* Default */));\n                }\n            }\n            record.value = value = useNew ? new (/** @type {?} */ (fn))(...deps) : fn.apply(obj, deps);\n        }\n    }\n    else if (!(flags & 2 /* Self */)) {\n        value = parent.get(token, notFoundValue, 0 /* Default */);\n    }\n    return value;\n}\n/**\n * @param {?} provider\n * @return {?}\n */\nfunction computeDeps(provider) {\n    /** @type {?} */\n    let deps = EMPTY;\n    /** @type {?} */\n    const providerDeps = (/** @type {?} */ (provider)).deps;\n    if (providerDeps && providerDeps.length) {\n        deps = [];\n        for (let i = 0; i < providerDeps.length; i++) {\n            /** @type {?} */\n            let options = 6 /* Default */;\n            /** @type {?} */\n            let token = resolveForwardRef(providerDeps[i]);\n            if (token instanceof Array) {\n                for (let j = 0, annotations = token; j < annotations.length; j++) {\n                    /** @type {?} */\n                    const annotation = annotations[j];\n                    if (annotation instanceof Optional || annotation == Optional) {\n                        options = options | 1 /* Optional */;\n                    }\n                    else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                        options = options & ~2 /* CheckSelf */;\n                    }\n                    else if (annotation instanceof Self || annotation == Self) {\n                        options = options & ~4 /* CheckParent */;\n                    }\n                    else if (annotation instanceof Inject) {\n                        token = (/** @type {?} */ (annotation)).token;\n                    }\n                    else {\n                        token = resolveForwardRef(annotation);\n                    }\n                }\n            }\n            deps.push({ token, options });\n        }\n    }\n    else if ((/** @type {?} */ (provider)).useExisting) {\n        /** @type {?} */\n        const token = resolveForwardRef((/** @type {?} */ (provider)).useExisting);\n        deps = [{ token, options: 6 /* Default */ }];\n    }\n    else if (!providerDeps && !(USE_VALUE in provider)) {\n        // useValue & useExisting are the only ones which are exempt from deps all others need it.\n        throw staticError('\\'deps\\' required', provider);\n    }\n    return deps;\n}\n/**\n * @param {?} text\n * @param {?} obj\n * @param {?=} source\n * @return {?}\n */\nfunction formatError(text, obj, source = null) {\n    text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n    /** @type {?} */\n    let context = stringify(obj);\n    if (obj instanceof Array) {\n        context = obj.map(stringify).join(' -> ');\n    }\n    else if (typeof obj === 'object') {\n        /** @type {?} */\n        let parts = /** @type {?} */ ([]);\n        for (let key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                /** @type {?} */\n                let value = obj[key];\n                parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n            }\n        }\n        context = `{${parts.join(', ')}}`;\n    }\n    return `StaticInjectorError${source ? '(' + source + ')' : ''}[${context}]: ${text.replace(NEW_LINE, '\\n  ')}`;\n}\n/**\n * @param {?} text\n * @param {?} obj\n * @return {?}\n */\nfunction staticError(text, obj) {\n    return new Error(formatError(text, obj));\n}\n/**\n * @template T\n * @param {?} objWithPropertyToExtract\n * @return {?}\n */\nfunction getClosureSafeProperty$1(objWithPropertyToExtract) {\n    for (let key in objWithPropertyToExtract) {\n        if (objWithPropertyToExtract[key] === GET_PROPERTY_NAME) {\n            return key;\n        }\n    }\n    throw Error('!prop');\n}\n/** *\n * Current injector value used by `inject`.\n * - `undefined`: it is an error to call `inject`\n * - `null`: `inject` can be called but there is no injector (limp-mode).\n * - Injector instance: Use the injector for resolution.\n  @type {?} */\nlet _currentInjector = undefined;\n/**\n * @param {?} injector\n * @return {?}\n */\nfunction setCurrentInjector(injector) {\n    /** @type {?} */\n    const former = _currentInjector;\n    _currentInjector = injector;\n    return former;\n}\n/**\n * @template T\n * @param {?} token\n * @param {?=} flags\n * @return {?}\n */\nfunction inject(token, flags = 0 /* Default */) {\n    if (_currentInjector === undefined) {\n        throw new Error(`inject() must be called from an injection context`);\n    }\n    else if (_currentInjector === null) {\n        /** @type {?} */\n        const injectableDef = (/** @type {?} */ (token)).ngInjectableDef;\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & 8 /* Optional */)\n            return null;\n        throw new Error(`Injector: NOT_FOUND [${stringify(token)}]`);\n    }\n    else {\n        return _currentInjector.get(token, flags & 8 /* Optional */ ? null : undefined, flags);\n    }\n}\n/**\n * @param {?} types\n * @return {?}\n */\nfunction injectArgs(types) {\n    /** @type {?} */\n    const args = [];\n    for (let i = 0; i < types.length; i++) {\n        /** @type {?} */\n        const arg = types[i];\n        if (Array.isArray(arg)) {\n            if (arg.length === 0) {\n                throw new Error('Arguments array must have arguments.');\n            }\n            /** @type {?} */\n            let type = undefined;\n            /** @type {?} */\n            let flags = 0 /* Default */;\n            for (let j = 0; j < arg.length; j++) {\n                /** @type {?} */\n                const meta = arg[j];\n                if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                    flags |= 8 /* Optional */;\n                }\n                else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                    flags |= 4 /* SkipSelf */;\n                }\n                else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                    flags |= 2 /* Self */;\n                }\n                else if (meta instanceof Inject) {\n                    type = meta.token;\n                }\n                else {\n                    type = meta;\n                }\n            }\n            args.push(inject(/** @type {?} */ ((type)), flags));\n        }\n        else {\n            args.push(inject(arg));\n        }\n    }\n    return args;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst GET_PROPERTY_NAME$1 = /** @type {?} */ ({});\nconst Éµ0$1 = GET_PROPERTY_NAME$1;\n/** @type {?} */\nconst USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: Éµ0$1 }, GET_PROPERTY_NAME$1);\n/** @type {?} */\nconst EMPTY_ARRAY = [];\n/**\n * @param {?} type\n * @param {?=} provider\n * @return {?}\n */\nfunction convertInjectableProviderToFactory(type, provider) {\n    if (!provider) {\n        /** @type {?} */\n        const reflectionCapabilities = new ReflectionCapabilities();\n        /** @type {?} */\n        const deps = reflectionCapabilities.parameters(type);\n        // TODO - convert to flags.\n        return () => new type(...injectArgs(/** @type {?} */ (deps)));\n    }\n    if (USE_VALUE$1 in provider) {\n        /** @type {?} */\n        const valueProvider = (/** @type {?} */ (provider));\n        return () => valueProvider.useValue;\n    }\n    else if ((/** @type {?} */ (provider)).useExisting) {\n        /** @type {?} */\n        const existingProvider = (/** @type {?} */ (provider));\n        return () => inject(existingProvider.useExisting);\n    }\n    else if ((/** @type {?} */ (provider)).useFactory) {\n        /** @type {?} */\n        const factoryProvider = (/** @type {?} */ (provider));\n        return () => factoryProvider.useFactory(...injectArgs(factoryProvider.deps || EMPTY_ARRAY));\n    }\n    else if ((/** @type {?} */ (provider)).useClass) {\n        /** @type {?} */\n        const classProvider = (/** @type {?} */ (provider));\n        /** @type {?} */\n        let deps = (/** @type {?} */ (provider)).deps;\n        if (!deps) {\n            /** @type {?} */\n            const reflectionCapabilities = new ReflectionCapabilities();\n            deps = reflectionCapabilities.parameters(type);\n        }\n        return () => new classProvider.useClass(...injectArgs(deps));\n    }\n    else {\n        /** @type {?} */\n        let deps = (/** @type {?} */ (provider)).deps;\n        if (!deps) {\n            /** @type {?} */\n            const reflectionCapabilities = new ReflectionCapabilities();\n            deps = reflectionCapabilities.parameters(type);\n        }\n        return () => new type(...injectArgs(/** @type {?} */ ((deps))));\n    }\n}\n/**\n * Supports \\@Injectable() in JIT mode for Render2.\n * @param {?} injectableType\n * @param {?} options\n * @return {?}\n */\nfunction preR3InjectableCompile(injectableType, options) {\n    if (options && options.providedIn !== undefined && injectableType.ngInjectableDef === undefined) {\n        /** @nocollapse */ injectableType.ngInjectableDef = defineInjectable({\n            providedIn: options.providedIn,\n            factory: convertInjectableProviderToFactory(injectableType, options),\n        });\n    }\n}\n/** *\n * Injectable decorator and metadata.\n *\n * \\@Annotation\n  @type {?} */\nconst Injectable = makeDecorator('Injectable', undefined, undefined, undefined, (type, meta) => (preR3InjectableCompile)(type, meta));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Defines a schema that allows an NgModule to contain the following:\n * - Non-Angular elements named with dash case (`-`).\n * - Element properties named with dash case (`-`).\n * Dash case is the naming convention for custom elements.\n *\n *\n  @type {?} */\nconst CUSTOM_ELEMENTS_SCHEMA = {\n    name: 'custom-elements'\n};\n/** *\n * Defines a schema that allows any property on any element.\n *\n * \\@experimental\n  @type {?} */\nconst NO_ERRORS_SCHEMA = {\n    name: 'no-errors-schema'\n};\n/**\n * @param {?} moduleType\n * @param {?} metadata\n * @return {?}\n */\nfunction preR3NgModuleCompile(moduleType, metadata) {\n    /** @type {?} */\n    let imports = (metadata && metadata.imports) || [];\n    if (metadata && metadata.exports) {\n        imports = [...imports, metadata.exports];\n    }\n    moduleType.ngInjectorDef = defineInjector({\n        factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n        providers: metadata && metadata.providers,\n        imports: imports,\n    });\n}\n/** *\n * \\@Annotation\n  @type {?} */\nconst NgModule = makeDecorator('NgModule', (ngModule) => ngModule, undefined, undefined, /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n(type, meta) => (preR3NgModuleCompile)(type, meta));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nconst ViewEncapsulation = {\n    /**\n       * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n       * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n       * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n       * selectors.\n       *\n       * This is the default option.\n       */\n    Emulated: 0,\n    /**\n       * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n       * Use the native encapsulation mechanism of the renderer.\n       *\n       * For the DOM this means using the deprecated [Shadow DOM\n       * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n       * creating a ShadowRoot for Component's Host Element.\n       */\n    Native: 1,\n    /**\n       * Don't provide any template or style encapsulation.\n       */\n    None: 2,\n    /**\n       * Use Shadow DOM to encapsulate styles.\n       *\n       * For the DOM this means using modern [Shadow\n       * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n       * creating a ShadowRoot for Component's Host Element.\n       */\n    ShadowDom: 3,\n};\nViewEncapsulation[ViewEncapsulation.Emulated] = 'Emulated';\nViewEncapsulation[ViewEncapsulation.Native] = 'Native';\nViewEncapsulation[ViewEncapsulation.None] = 'None';\nViewEncapsulation[ViewEncapsulation.ShadowDom] = 'ShadowDom';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@description Represents the version of Angular\n *\n *\n */\nclass Version {\n    /**\n     * @param {?} full\n     */\n    constructor(full) {\n        this.full = full;\n        this.major = full.split('.')[0];\n        this.minor = full.split('.')[1];\n        this.patch = full.split('.').slice(2).join('.');\n    }\n}\n/** @type {?} */\nconst VERSION = new Version('6.1.10');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n/** @type {?} */\nconst ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n/** @type {?} */\nconst ERROR_LOGGER = 'ngErrorLogger';\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getDebugContext(error) {\n    return (/** @type {?} */ (error))[ERROR_DEBUG_CONTEXT];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getOriginalError(error) {\n    return (/** @type {?} */ (error))[ERROR_ORIGINAL_ERROR];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getErrorLogger(error) {\n    return (/** @type {?} */ (error))[ERROR_LOGGER] || defaultErrorLogger;\n}\n/**\n * @param {?} console\n * @param {...?} values\n * @return {?}\n */\nfunction defaultErrorLogger(console, ...values) {\n    (/** @type {?} */ (console.error))(...values);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Provides a hook for centralized exception handling.\n *\n * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n * intercept error handling, write a custom exception handler that replaces this default as\n * appropriate for your app.\n *\n * \\@usageNotes\n * ### Example\n *\n * ```\n * class MyErrorHandler implements ErrorHandler {\n *   handleError(error) {\n *     // do something with the exception\n *   }\n * }\n *\n * \\@NgModule({\n *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n * })\n * class MyModule {}\n * ```\n */\nclass ErrorHandler {\n    constructor() {\n        /**\n         * \\@internal\n         */\n        this._console = console;\n    }\n    /**\n     * @param {?} error\n     * @return {?}\n     */\n    handleError(error) {\n        /** @type {?} */\n        const originalError = this._findOriginalError(error);\n        /** @type {?} */\n        const context = this._findContext(error);\n        /** @type {?} */\n        const errorLogger = getErrorLogger(error);\n        errorLogger(this._console, `ERROR`, error);\n        if (originalError) {\n            errorLogger(this._console, `ORIGINAL ERROR`, originalError);\n        }\n        if (context) {\n            errorLogger(this._console, 'ERROR CONTEXT', context);\n        }\n    }\n    /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    _findContext(error) {\n        if (error) {\n            return getDebugContext(error) ? getDebugContext(error) :\n                this._findContext(getOriginalError(error));\n        }\n        return null;\n    }\n    /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    _findOriginalError(error) {\n        /** @type {?} */\n        let e = getOriginalError(error);\n        while (e && getOriginalError(e)) {\n            e = getOriginalError(e);\n        }\n        return e;\n    }\n}\n/**\n * @param {?} message\n * @param {?} originalError\n * @return {?}\n */\nfunction wrappedError(message, originalError) {\n    /** @type {?} */\n    const msg = `${message} caused by: ${originalError instanceof Error ? originalError.message : originalError}`;\n    /** @type {?} */\n    const error = Error(msg);\n    (/** @type {?} */ (error))[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction findFirstClosedCycle(keys) {\n    /** @type {?} */\n    const res = [];\n    for (let i = 0; i < keys.length; ++i) {\n        if (res.indexOf(keys[i]) > -1) {\n            res.push(keys[i]);\n            return res;\n        }\n        res.push(keys[i]);\n    }\n    return res;\n}\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction constructResolvingPath(keys) {\n    if (keys.length > 1) {\n        /** @type {?} */\n        const reversed = findFirstClosedCycle(keys.slice().reverse());\n        /** @type {?} */\n        const tokenStrs = reversed.map(k => stringify(k.token));\n        return ' (' + tokenStrs.join(' -> ') + ')';\n    }\n    return '';\n}\n/**\n * @param {?} injector\n * @param {?} key\n * @param {?} constructResolvingMessage\n * @param {?=} originalError\n * @return {?}\n */\nfunction injectionError(injector, key, constructResolvingMessage, originalError) {\n    /** @type {?} */\n    const keys = [key];\n    /** @type {?} */\n    const errMsg = constructResolvingMessage(keys);\n    /** @type {?} */\n    const error = /** @type {?} */ ((originalError ? wrappedError(errMsg, originalError) : Error(errMsg)));\n    error.addKey = addKey;\n    error.keys = keys;\n    error.injectors = [injector];\n    error.constructResolvingMessage = constructResolvingMessage;\n    (/** @type {?} */ (error))[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\n/**\n * @this {?}\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction addKey(injector, key) {\n    this.injectors.push(injector);\n    this.keys.push(key);\n    // Note: This updated message won't be reflected in the `.stack` property\n    this.message = this.constructResolvingMessage(this.keys);\n}\n/**\n * Thrown when trying to retrieve a dependency by key from {\\@link Injector}, but the\n * {\\@link Injector} does not have a {\\@link Provider} for the given key.\n *\n * \\@usageNotes\n * ### Example\n *\n * ```typescript\n * class A {\n *   constructor(b:B) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction noProviderError(injector, key) {\n    return injectionError(injector, key, function (keys) {\n        /** @type {?} */\n        const first = stringify(keys[0].token);\n        return `No provider for ${first}!${constructResolvingPath(keys)}`;\n    });\n}\n/**\n * Thrown when dependencies form a cycle.\n *\n * \\@usageNotes\n * ### Example\n *\n * ```typescript\n * var injector = Injector.resolveAndCreate([\n *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n * ]);\n *\n * expect(() => injector.get(\"one\")).toThrowError();\n * ```\n *\n * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction cyclicDependencyError(injector, key) {\n    return injectionError(injector, key, function (keys) {\n        return `Cannot instantiate cyclic dependency!${constructResolvingPath(keys)}`;\n    });\n}\n/**\n * Thrown when a constructing type returns with an Error.\n *\n * The `InstantiationError` class contains the original error plus the dependency graph which caused\n * this object to be instantiated.\n *\n * \\@usageNotes\n * ### Example\n *\n * ```typescript\n * class A {\n *   constructor() {\n *     throw new Error('message');\n *   }\n * }\n *\n * var injector = Injector.resolveAndCreate([A]);\n * try {\n *   injector.get(A);\n * } catch (e) {\n *   expect(e instanceof InstantiationError).toBe(true);\n *   expect(e.originalException.message).toEqual(\"message\");\n *   expect(e.originalStack).toBeDefined();\n * }\n * ```\n * @param {?} injector\n * @param {?} originalException\n * @param {?} originalStack\n * @param {?} key\n * @return {?}\n */\nfunction instantiationError(injector, originalException, originalStack, key) {\n    return injectionError(injector, key, function (keys) {\n        /** @type {?} */\n        const first = stringify(keys[0].token);\n        return `${originalException.message}: Error during instantiation of ${first}!${constructResolvingPath(keys)}.`;\n    }, originalException);\n}\n/**\n * Thrown when an object other then {\\@link Provider} (or `Type`) is passed to {\\@link Injector}\n * creation.\n *\n * \\@usageNotes\n * ### Example\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n * ```\n * @param {?} provider\n * @return {?}\n */\nfunction invalidProviderError(provider) {\n    return Error(`Invalid provider - only instances of Provider and Type are allowed, got: ${provider}`);\n}\n/**\n * Thrown when the class has no annotation information.\n *\n * Lack of annotation information prevents the {\\@link Injector} from determining which dependencies\n * need to be injected into the constructor.\n *\n * \\@usageNotes\n * ### Example\n *\n * ```typescript\n * class A {\n *   constructor(b) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n *\n * This error is also thrown when the class not marked with {\\@link Injectable} has parameter types.\n *\n * ```typescript\n * class B {}\n *\n * class A {\n *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n * }\n *\n * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n * ```\n *\n * @param {?} typeOrFunc\n * @param {?} params\n * @return {?}\n */\nfunction noAnnotationError(typeOrFunc, params) {\n    /** @type {?} */\n    const signature = [];\n    for (let i = 0, ii = params.length; i < ii; i++) {\n        /** @type {?} */\n        const parameter = params[i];\n        if (!parameter || parameter.length == 0) {\n            signature.push('?');\n        }\n        else {\n            signature.push(parameter.map(stringify).join(' '));\n        }\n    }\n    return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n        signature.join(', ') + '). ' +\n        'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n        stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n}\n/**\n * Thrown when getting an object by index.\n *\n * \\@usageNotes\n * ### Example\n *\n * ```typescript\n * class A {}\n *\n * var injector = Injector.resolveAndCreate([A]);\n *\n * expect(() => injector.getAt(100)).toThrowError();\n * ```\n *\n * @param {?} index\n * @return {?}\n */\nfunction outOfBoundsError(index) {\n    return Error(`Index ${index} is out-of-bounds.`);\n}\n/**\n * Thrown when a multi provider and a regular provider are bound to the same token.\n *\n * \\@usageNotes\n * ### Example\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\n *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n * ])).toThrowError();\n * ```\n * @param {?} provider1\n * @param {?} provider2\n * @return {?}\n */\nfunction mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n    return Error(`Cannot mix multi providers and regular providers, got: ${provider1} ${provider2}`);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * A unique object used for retrieving items from the {\\@link ReflectiveInjector}.\n *\n * Keys have:\n * - a system-wide unique `id`.\n * - a `token`.\n *\n * `Key` is used internally by {\\@link ReflectiveInjector} because its system-wide unique `id` allows\n * the\n * injector to store created objects in a more efficient way.\n *\n * `Key` should not be created directly. {\\@link ReflectiveInjector} creates keys automatically when\n * resolving\n * providers.\n * @deprecated No replacement\n */\nclass ReflectiveKey {\n    /**\n     * Private\n     * @param {?} token\n     * @param {?} id\n     */\n    constructor(token, id) {\n        this.token = token;\n        this.id = id;\n        if (!token) {\n            throw new Error('Token must be defined!');\n        }\n        this.displayName = stringify(this.token);\n    }\n    /**\n     * Retrieves a `Key` for a token.\n     * @param {?} token\n     * @return {?}\n     */\n    static get(token) {\n        return _globalKeyRegistry.get(resolveForwardRef(token));\n    }\n    /**\n     * @return {?} the number of keys registered in the system.\n     */\n    static get numberOfKeys() { return _globalKeyRegistry.numberOfKeys; }\n}\nclass KeyRegistry {\n    constructor() {\n        this._allKeys = new Map();\n    }\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    get(token) {\n        if (token instanceof ReflectiveKey)\n            return token;\n        if (this._allKeys.has(token)) {\n            return /** @type {?} */ ((this._allKeys.get(token)));\n        }\n        /** @type {?} */\n        const newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n        this._allKeys.set(token, newKey);\n        return newKey;\n    }\n    /**\n     * @return {?}\n     */\n    get numberOfKeys() { return this._allKeys.size; }\n}\n/** @type {?} */\nconst _globalKeyRegistry = new KeyRegistry();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides access to reflection data about symbols. Used internally by Angular\n * to power dependency injection and compilation.\n */\nclass Reflector {\n    /**\n     * @param {?} reflectionCapabilities\n     */\n    constructor(reflectionCapabilities) {\n        this.reflectionCapabilities = reflectionCapabilities;\n    }\n    /**\n     * @param {?} caps\n     * @return {?}\n     */\n    updateCapabilities(caps) { this.reflectionCapabilities = caps; }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    factory(type) { return this.reflectionCapabilities.factory(type); }\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    parameters(typeOrFunc) {\n        return this.reflectionCapabilities.parameters(typeOrFunc);\n    }\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    annotations(typeOrFunc) {\n        return this.reflectionCapabilities.annotations(typeOrFunc);\n    }\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    propMetadata(typeOrFunc) {\n        return this.reflectionCapabilities.propMetadata(typeOrFunc);\n    }\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    hasLifecycleHook(type, lcProperty) {\n        return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    getter(name) { return this.reflectionCapabilities.getter(name); }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    setter(name) { return this.reflectionCapabilities.setter(name); }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    method(name) { return this.reflectionCapabilities.method(name); }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    importUri(type) { return this.reflectionCapabilities.importUri(type); }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    resourceUri(type) { return this.reflectionCapabilities.resourceUri(type); }\n    /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    resolveIdentifier(name, moduleUrl, members, runtime) {\n        return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n    }\n    /**\n     * @param {?} identifier\n     * @param {?} name\n     * @return {?}\n     */\n    resolveEnum(identifier, name) {\n        return this.reflectionCapabilities.resolveEnum(identifier, name);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * The {\\@link Reflector} used internally in Angular to access metadata\n * about symbols.\n  @type {?} */\nconst reflector = new Reflector(new ReflectionCapabilities());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * `Dependency` is used by the framework to extend DI.\n * This is internal to Angular and should not be used directly.\n */\nclass ReflectiveDependency {\n    /**\n     * @param {?} key\n     * @param {?} optional\n     * @param {?} visibility\n     */\n    constructor(key, optional, visibility) {\n        this.key = key;\n        this.optional = optional;\n        this.visibility = visibility;\n    }\n    /**\n     * @param {?} key\n     * @return {?}\n     */\n    static fromKey(key) {\n        return new ReflectiveDependency(key, false, null);\n    }\n}\n/** @type {?} */\nconst _EMPTY_LIST = [];\nclass ResolvedReflectiveProvider_ {\n    /**\n     * @param {?} key\n     * @param {?} resolvedFactories\n     * @param {?} multiProvider\n     */\n    constructor(key, resolvedFactories, multiProvider) {\n        this.key = key;\n        this.resolvedFactories = resolvedFactories;\n        this.multiProvider = multiProvider;\n        this.resolvedFactory = this.resolvedFactories[0];\n    }\n}\n/**\n * An internal resolved representation of a factory function created by resolving `Provider`.\n * \\@experimental\n */\nclass ResolvedReflectiveFactory {\n    /**\n     * @param {?} factory\n     * @param {?} dependencies\n     */\n    constructor(factory, dependencies) {\n        this.factory = factory;\n        this.dependencies = dependencies;\n    }\n}\n/**\n * Resolve a single provider.\n * @param {?} provider\n * @return {?}\n */\nfunction resolveReflectiveFactory(provider) {\n    /** @type {?} */\n    let factoryFn;\n    /** @type {?} */\n    let resolvedDeps;\n    if (provider.useClass) {\n        /** @type {?} */\n        const useClass = resolveForwardRef(provider.useClass);\n        factoryFn = reflector.factory(useClass);\n        resolvedDeps = _dependenciesFor(useClass);\n    }\n    else if (provider.useExisting) {\n        factoryFn = (aliasInstance) => aliasInstance;\n        resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n    }\n    else if (provider.useFactory) {\n        factoryFn = provider.useFactory;\n        resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n    }\n    else {\n        factoryFn = () => provider.useValue;\n        resolvedDeps = _EMPTY_LIST;\n    }\n    return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n}\n/**\n * Converts the `Provider` into `ResolvedProvider`.\n *\n * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n * syntax.\n * @param {?} provider\n * @return {?}\n */\nfunction resolveReflectiveProvider(provider) {\n    return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n}\n/**\n * Resolve a list of Providers.\n * @param {?} providers\n * @return {?}\n */\nfunction resolveReflectiveProviders(providers) {\n    /** @type {?} */\n    const normalized = _normalizeProviders(providers, []);\n    /** @type {?} */\n    const resolved = normalized.map(resolveReflectiveProvider);\n    /** @type {?} */\n    const resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n    return Array.from(resolvedProviderMap.values());\n}\n/**\n * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n * multi providers have been merged.\n * @param {?} providers\n * @param {?} normalizedProvidersMap\n * @return {?}\n */\nfunction mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n    for (let i = 0; i < providers.length; i++) {\n        /** @type {?} */\n        const provider = providers[i];\n        /** @type {?} */\n        const existing = normalizedProvidersMap.get(provider.key.id);\n        if (existing) {\n            if (provider.multiProvider !== existing.multiProvider) {\n                throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n            }\n            if (provider.multiProvider) {\n                for (let j = 0; j < provider.resolvedFactories.length; j++) {\n                    existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                }\n            }\n            else {\n                normalizedProvidersMap.set(provider.key.id, provider);\n            }\n        }\n        else {\n            /** @type {?} */\n            let resolvedProvider;\n            if (provider.multiProvider) {\n                resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n            }\n            else {\n                resolvedProvider = provider;\n            }\n            normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n        }\n    }\n    return normalizedProvidersMap;\n}\n/**\n * @param {?} providers\n * @param {?} res\n * @return {?}\n */\nfunction _normalizeProviders(providers, res) {\n    providers.forEach(b => {\n        if (b instanceof Type) {\n            res.push({ provide: b, useClass: b });\n        }\n        else if (b && typeof b == 'object' && (/** @type {?} */ (b)).provide !== undefined) {\n            res.push(/** @type {?} */ (b));\n        }\n        else if (b instanceof Array) {\n            _normalizeProviders(b, res);\n        }\n        else {\n            throw invalidProviderError(b);\n        }\n    });\n    return res;\n}\n/**\n * @param {?} typeOrFunc\n * @param {?=} dependencies\n * @return {?}\n */\nfunction constructDependencies(typeOrFunc, dependencies) {\n    if (!dependencies) {\n        return _dependenciesFor(typeOrFunc);\n    }\n    else {\n        /** @type {?} */\n        const params = dependencies.map(t => [t]);\n        return dependencies.map(t => _extractToken(typeOrFunc, t, params));\n    }\n}\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\nfunction _dependenciesFor(typeOrFunc) {\n    /** @type {?} */\n    const params = reflector.parameters(typeOrFunc);\n    if (!params)\n        return [];\n    if (params.some(p => p == null)) {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n    return params.map(p => _extractToken(typeOrFunc, p, params));\n}\n/**\n * @param {?} typeOrFunc\n * @param {?} metadata\n * @param {?} params\n * @return {?}\n */\nfunction _extractToken(typeOrFunc, metadata, params) {\n    /** @type {?} */\n    let token = null;\n    /** @type {?} */\n    let optional = false;\n    if (!Array.isArray(metadata)) {\n        if (metadata instanceof Inject) {\n            return _createDependency(metadata.token, optional, null);\n        }\n        else {\n            return _createDependency(metadata, optional, null);\n        }\n    }\n    /** @type {?} */\n    let visibility = null;\n    for (let i = 0; i < metadata.length; ++i) {\n        /** @type {?} */\n        const paramMetadata = metadata[i];\n        if (paramMetadata instanceof Type) {\n            token = paramMetadata;\n        }\n        else if (paramMetadata instanceof Inject) {\n            token = paramMetadata.token;\n        }\n        else if (paramMetadata instanceof Optional) {\n            optional = true;\n        }\n        else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n            visibility = paramMetadata;\n        }\n        else if (paramMetadata instanceof InjectionToken) {\n            token = paramMetadata;\n        }\n    }\n    token = resolveForwardRef(token);\n    if (token != null) {\n        return _createDependency(token, optional, visibility);\n    }\n    else {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n}\n/**\n * @param {?} token\n * @param {?} optional\n * @param {?} visibility\n * @return {?}\n */\nfunction _createDependency(token, optional, visibility) {\n    return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst UNDEFINED = new Object();\n/**\n * A ReflectiveDependency injection container used for instantiating objects and resolving\n * dependencies.\n *\n * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n * constructor dependencies.\n *\n * In typical use, application code asks for the dependencies in the constructor and they are\n * resolved by the `Injector`.\n *\n * \\@usageNotes\n * ### Example\n *\n * The following example creates an `Injector` configured to create `Engine` and `Car`.\n *\n * ```typescript\n * \\@Injectable()\n * class Engine {\n * }\n *\n * \\@Injectable()\n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n *\n * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n * var car = injector.get(Car);\n * expect(car instanceof Car).toBe(true);\n * expect(car.engine instanceof Engine).toBe(true);\n * ```\n *\n * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n * resolve all of the object's dependencies automatically.\n *\n * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n * @abstract\n */\nclass ReflectiveInjector {\n    /**\n     * Turns an array of provider definitions into an array of resolved providers.\n     *\n     * A resolution is a process of flattening multiple nested arrays and converting individual\n     * providers into an array of `ResolvedReflectiveProvider`s.\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n     *\n     * expect(providers.length).toEqual(2);\n     *\n     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n     * expect(providers[0].key.displayName).toBe(\"Car\");\n     * expect(providers[0].dependencies.length).toEqual(1);\n     * expect(providers[0].factory).toBeDefined();\n     *\n     * expect(providers[1].key.displayName).toBe(\"Engine\");\n     * });\n     * ```\n     *\n     * @param {?} providers\n     * @return {?}\n     */\n    static resolve(providers) {\n        return resolveReflectiveProviders(providers);\n    }\n    /**\n     * Resolves an array of providers and creates an injector from those providers.\n     *\n     * The passed-in providers can be an array of `Type`, `Provider`,\n     * or a recursive array of more providers.\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    static resolveAndCreate(providers, parent) {\n        /** @type {?} */\n        const ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n    }\n    /**\n     * Creates an injector from previously resolved providers.\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, Engine]);\n     * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * \\@experimental\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    static fromResolvedProviders(providers, parent) {\n        return new ReflectiveInjector_(providers, parent);\n    }\n}\nclass ReflectiveInjector_ {\n    /**\n     * Private\n     * @param {?} _providers\n     * @param {?=} _parent\n     */\n    constructor(_providers, _parent) {\n        /**\n         * \\@internal\n         */\n        this._constructionCounter = 0;\n        this._providers = _providers;\n        this.parent = _parent || null;\n        /** @type {?} */\n        const len = _providers.length;\n        this.keyIds = new Array(len);\n        this.objs = new Array(len);\n        for (let i = 0; i < len; i++) {\n            this.keyIds[i] = _providers[i].key.id;\n            this.objs[i] = UNDEFINED;\n        }\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    get(token, notFoundValue = THROW_IF_NOT_FOUND) {\n        return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n    }\n    /**\n     * @param {?} providers\n     * @return {?}\n     */\n    resolveAndCreateChild(providers) {\n        /** @type {?} */\n        const ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return this.createChildFromResolved(ResolvedReflectiveProviders);\n    }\n    /**\n     * @param {?} providers\n     * @return {?}\n     */\n    createChildFromResolved(providers) {\n        /** @type {?} */\n        const inj = new ReflectiveInjector_(providers);\n        (/** @type {?} */ (inj)).parent = this;\n        return inj;\n    }\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    resolveAndInstantiate(provider) {\n        return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n    }\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    instantiateResolved(provider) {\n        return this._instantiateProvider(provider);\n    }\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    getProviderAtIndex(index) {\n        if (index < 0 || index >= this._providers.length) {\n            throw outOfBoundsError(index);\n        }\n        return this._providers[index];\n    }\n    /**\n     * \\@internal\n     * @param {?} provider\n     * @return {?}\n     */\n    _new(provider) {\n        if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n            throw cyclicDependencyError(this, provider.key);\n        }\n        return this._instantiateProvider(provider);\n    }\n    /**\n     * @return {?}\n     */\n    _getMaxNumberOfObjects() { return this.objs.length; }\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    _instantiateProvider(provider) {\n        if (provider.multiProvider) {\n            /** @type {?} */\n            const res = new Array(provider.resolvedFactories.length);\n            for (let i = 0; i < provider.resolvedFactories.length; ++i) {\n                res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n            }\n            return res;\n        }\n        else {\n            return this._instantiate(provider, provider.resolvedFactories[0]);\n        }\n    }\n    /**\n     * @param {?} provider\n     * @param {?} ResolvedReflectiveFactory\n     * @return {?}\n     */\n    _instantiate(provider, ResolvedReflectiveFactory$$1) {\n        /** @type {?} */\n        const factory = ResolvedReflectiveFactory$$1.factory;\n        /** @type {?} */\n        let deps;\n        try {\n            deps =\n                ResolvedReflectiveFactory$$1.dependencies.map(dep => this._getByReflectiveDependency(dep));\n        }\n        catch (e) {\n            if (e.addKey) {\n                e.addKey(this, provider.key);\n            }\n            throw e;\n        }\n        /** @type {?} */\n        let obj;\n        try {\n            obj = factory(...deps);\n        }\n        catch (e) {\n            throw instantiationError(this, e, e.stack, provider.key);\n        }\n        return obj;\n    }\n    /**\n     * @param {?} dep\n     * @return {?}\n     */\n    _getByReflectiveDependency(dep) {\n        return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n    }\n    /**\n     * @param {?} key\n     * @param {?} visibility\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    _getByKey(key, visibility, notFoundValue) {\n        if (key === ReflectiveInjector_.INJECTOR_KEY) {\n            return this;\n        }\n        if (visibility instanceof Self) {\n            return this._getByKeySelf(key, notFoundValue);\n        }\n        else {\n            return this._getByKeyDefault(key, notFoundValue, visibility);\n        }\n    }\n    /**\n     * @param {?} keyId\n     * @return {?}\n     */\n    _getObjByKeyId(keyId) {\n        for (let i = 0; i < this.keyIds.length; i++) {\n            if (this.keyIds[i] === keyId) {\n                if (this.objs[i] === UNDEFINED) {\n                    this.objs[i] = this._new(this._providers[i]);\n                }\n                return this.objs[i];\n            }\n        }\n        return UNDEFINED;\n    }\n    /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    _throwOrNull(key, notFoundValue) {\n        if (notFoundValue !== THROW_IF_NOT_FOUND) {\n            return notFoundValue;\n        }\n        else {\n            throw noProviderError(this, key);\n        }\n    }\n    /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    _getByKeySelf(key, notFoundValue) {\n        /** @type {?} */\n        const obj = this._getObjByKeyId(key.id);\n        return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n    }\n    /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @param {?} visibility\n     * @return {?}\n     */\n    _getByKeyDefault(key, notFoundValue, visibility) {\n        /** @type {?} */\n        let inj;\n        if (visibility instanceof SkipSelf) {\n            inj = this.parent;\n        }\n        else {\n            inj = this;\n        }\n        while (inj instanceof ReflectiveInjector_) {\n            /** @type {?} */\n            const inj_ = /** @type {?} */ (inj);\n            /** @type {?} */\n            const obj = inj_._getObjByKeyId(key.id);\n            if (obj !== UNDEFINED)\n                return obj;\n            inj = inj_.parent;\n        }\n        if (inj !== null) {\n            return inj.get(key.token, notFoundValue);\n        }\n        else {\n            return this._throwOrNull(key, notFoundValue);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get displayName() {\n        /** @type {?} */\n        const providers = _mapProviders(this, (b) => ' \"' + b.key.displayName + '\" ')\n            .join(', ');\n        return `ReflectiveInjector(providers: [${providers}])`;\n    }\n    /**\n     * @return {?}\n     */\n    toString() { return this.displayName; }\n}\nReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n/**\n * @param {?} injector\n * @param {?} fn\n * @return {?}\n */\nfunction _mapProviders(injector, fn) {\n    /** @type {?} */\n    const res = new Array(injector._providers.length);\n    for (let i = 0; i < injector._providers.length; ++i) {\n        res[i] = fn(injector.getProviderAtIndex(i));\n    }\n    return res;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * An internal token whose presence in an injector indicates that the injector should treat itself\n * as a root scoped injector when processing requests for unknown tokens which may indicate\n * they are provided in the root scope.\n  @type {?} */\nconst APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Marker which indicates that a value has not yet been created from the factory function.\n  @type {?} */\nconst NOT_YET = {};\n/** *\n * Marker which indicates that the factory function for a token is in the process of being called.\n *\n * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n * injection of a dependency has recursively attempted to inject the original token, and there is\n * a circular dependency among the providers.\n  @type {?} */\nconst CIRCULAR$1 = {};\n/** @type {?} */\nconst EMPTY_ARRAY$1 = /** @type {?} */ ([]);\n/** *\n * A lazily initialized NullInjector.\n  @type {?} */\nlet NULL_INJECTOR$1 = undefined;\n/**\n * @return {?}\n */\nfunction getNullInjector() {\n    if (NULL_INJECTOR$1 === undefined) {\n        NULL_INJECTOR$1 = new NullInjector();\n    }\n    return NULL_INJECTOR$1;\n}\n/**\n * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n *\n * \\@experimental\n * @param {?} defType\n * @param {?=} parent\n * @param {?=} additionalProviders\n * @return {?}\n */\nfunction createInjector(defType, parent = null, additionalProviders = null) {\n    parent = parent || getNullInjector();\n    return new R3Injector(defType, additionalProviders, parent);\n}\nclass R3Injector {\n    /**\n     * @param {?} def\n     * @param {?} additionalProviders\n     * @param {?} parent\n     */\n    constructor(def, additionalProviders, parent) {\n        this.parent = parent;\n        /**\n         * Map of tokens to records which contain the instances of those tokens.\n         */\n        this.records = new Map();\n        /**\n         * The transitive set of `InjectorType`s which define this injector.\n         */\n        this.injectorDefTypes = new Set();\n        /**\n         * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n         */\n        this.onDestroy = new Set();\n        /**\n         * Flag indicating that this injector was previously destroyed.\n         */\n        this.destroyed = false;\n        // Start off by creating Records for every provider declared in every InjectorType\n        // included transitively in `def`.\n        deepForEach([def], injectorDef => this.processInjectorType(injectorDef, new Set()));\n        additionalProviders &&\n            deepForEach(additionalProviders, provider => this.processProvider(provider));\n        // Make sure the INJECTOR token provides this injector.\n        this.records.set(INJECTOR, makeRecord(undefined, this));\n        // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n        // any injectable scoped to APP_ROOT_SCOPE.\n        this.isRootInjector = this.records.has(APP_ROOT);\n        // Eagerly instantiate the InjectorType classes themselves.\n        this.injectorDefTypes.forEach(defType => this.get(defType));\n    }\n    /**\n     * Destroy the injector and release references to every instance or provider associated with it.\n     *\n     * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n     * hook was found.\n     * @return {?}\n     */\n    destroy() {\n        this.assertNotDestroyed();\n        // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n        this.destroyed = true;\n        try {\n            // Call all the lifecycle hooks.\n            this.onDestroy.forEach(service => service.ngOnDestroy());\n        }\n        finally {\n            // Release all references.\n            this.records.clear();\n            this.onDestroy.clear();\n            this.injectorDefTypes.clear();\n        }\n    }\n    /**\n     * @template T\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @param {?=} flags\n     * @return {?}\n     */\n    get(token, notFoundValue = THROW_IF_NOT_FOUND, flags = 0 /* Default */) {\n        this.assertNotDestroyed();\n        /** @type {?} */\n        const previousInjector = setCurrentInjector(this);\n        try {\n            // Check for the SkipSelf flag.\n            if (!(flags & 4 /* SkipSelf */)) {\n                /** @type {?} */\n                let record = this.records.get(token);\n                if (record === undefined) {\n                    /** @type {?} */\n                    const def = couldBeInjectableType(token) &&\n                        (/** @type {?} */ (token)).ngInjectableDef ||\n                        undefined;\n                    if (def !== undefined && this.injectableDefInScope(def)) {\n                        // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                        // all along.\n                        record = injectableDefRecord(token);\n                        this.records.set(token, record);\n                    }\n                }\n                // If a record was found, get the instance for it and return it.\n                if (record !== undefined) {\n                    return this.hydrate(token, record);\n                }\n            }\n            /** @type {?} */\n            let next = !(flags & 2 /* Self */) ? this.parent : getNullInjector();\n            return this.parent.get(token, notFoundValue);\n        }\n        finally {\n            // Lastly, clean up the state by restoring the previous injector.\n            setCurrentInjector(previousInjector);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    assertNotDestroyed() {\n        if (this.destroyed) {\n            throw new Error('Injector has already been destroyed.');\n        }\n    }\n    /**\n     * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n     * to this injector.\n     * @param {?} defOrWrappedDef\n     * @param {?} parents\n     * @return {?}\n     */\n    processInjectorType(defOrWrappedDef, parents) {\n        defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n        /** @type {?} */\n        let def = /** @type {?} */ ((/** @type {?} */ (defOrWrappedDef)).ngInjectorDef);\n        /** @type {?} */\n        const ngModule = (def == null) && (/** @type {?} */ (defOrWrappedDef)).ngModule || undefined;\n        /** @type {?} */\n        const defType = (ngModule === undefined) ? (/** @type {?} */ (defOrWrappedDef)) : ngModule;\n        /** @type {?} */\n        const providers = (ngModule !== undefined) && (/** @type {?} */ (defOrWrappedDef)).providers ||\n            EMPTY_ARRAY$1;\n        // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n        // `InjectorDef` is on its `ngModule`.\n        if (ngModule !== undefined) {\n            def = ngModule.ngInjectorDef;\n        }\n        // If no definition was found, it might be from exports. Remove it.\n        if (def == null) {\n            return;\n        }\n        // Check for circular dependencies.\n        if (parents.has(defType)) {\n            throw new Error(`Circular dependency: type ${stringify(defType)} ends up importing itself.`);\n        }\n        // Track the InjectorType and add a provider for it.\n        this.injectorDefTypes.add(defType);\n        this.records.set(defType, makeRecord(def.factory));\n        // Add providers in the same way that @NgModule resolution did:\n        // First, include providers from any imports.\n        if (def.imports != null) {\n            // Before processing defType's imports, add it to the set of parents. This way, if it ends\n            // up deeply importing itself, this can be detected.\n            parents.add(defType);\n            try {\n                deepForEach(def.imports, imported => this.processInjectorType(imported, parents));\n            }\n            finally {\n                // Remove it from the parents set when finished.\n                parents.delete(defType);\n            }\n        }\n        // Next, include providers listed on the definition itself.\n        if (def.providers != null) {\n            deepForEach(def.providers, provider => this.processProvider(provider));\n        }\n        // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n        deepForEach(providers, provider => this.processProvider(provider));\n    }\n    /**\n     * Process a `SingleProvider` and add it.\n     * @param {?} provider\n     * @return {?}\n     */\n    processProvider(provider) {\n        // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n        // property.\n        provider = resolveForwardRef(provider);\n        /** @type {?} */\n        let token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n        /** @type {?} */\n        const record = providerToRecord(provider);\n        if (!isTypeProvider(provider) && provider.multi === true) {\n            /** @type {?} */\n            let multiRecord = this.records.get(token);\n            if (multiRecord) {\n                // It has. Throw a nice error if\n                if (multiRecord.multi === undefined) {\n                    throw new Error(`Mixed multi-provider for ${token}.`);\n                }\n            }\n            else {\n                multiRecord = makeRecord(undefined, NOT_YET, true);\n                multiRecord.factory = () => injectArgs(/** @type {?} */ ((/** @type {?} */ ((multiRecord)).multi)));\n                this.records.set(token, multiRecord);\n            }\n            token = provider; /** @type {?} */\n            ((multiRecord.multi)).push(provider);\n        }\n        else {\n            /** @type {?} */\n            const existing = this.records.get(token);\n            if (existing && existing.multi !== undefined) {\n                throw new Error(`Mixed multi-provider for ${stringify(token)}`);\n            }\n        }\n        this.records.set(token, record);\n    }\n    /**\n     * @template T\n     * @param {?} token\n     * @param {?} record\n     * @return {?}\n     */\n    hydrate(token, record) {\n        if (record.value === CIRCULAR$1) {\n            throw new Error(`Circular dep for ${stringify(token)}`);\n        }\n        else if (record.value === NOT_YET) {\n            record.value = CIRCULAR$1;\n            record.value = /** @type {?} */ ((record.factory))();\n        }\n        if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n            this.onDestroy.add(record.value);\n        }\n        return /** @type {?} */ (record.value);\n    }\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    injectableDefInScope(def) {\n        if (!def.providedIn) {\n            return false;\n        }\n        else if (typeof def.providedIn === 'string') {\n            return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n        }\n        else {\n            return this.injectorDefTypes.has(def.providedIn);\n        }\n    }\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction injectableDefRecord(token) {\n    /** @type {?} */\n    const def = /** @type {?} */ ((/** @type {?} */ (token)).ngInjectableDef);\n    if (def === undefined) {\n        if (token instanceof InjectionToken) {\n            throw new Error(`Token ${stringify(token)} is missing an ngInjectableDef definition.`);\n        }\n        // TODO(alxhub): there should probably be a strict mode which throws here instead of assuming a\n        // no-args constructor.\n        return makeRecord(() => new (/** @type {?} */ (token))());\n    }\n    return makeRecord(def.factory);\n}\n/**\n * @param {?} provider\n * @return {?}\n */\nfunction providerToRecord(provider) {\n    /** @type {?} */\n    let token = resolveForwardRef(provider);\n    /** @type {?} */\n    let value = NOT_YET;\n    /** @type {?} */\n    let factory = undefined;\n    if (isTypeProvider(provider)) {\n        return injectableDefRecord(provider);\n    }\n    else {\n        token = resolveForwardRef(provider.provide);\n        if (isValueProvider(provider)) {\n            value = provider.useValue;\n        }\n        else if (isExistingProvider(provider)) {\n            factory = () => inject(provider.useExisting);\n        }\n        else if (isFactoryProvider(provider)) {\n            factory = () => provider.useFactory(...injectArgs(provider.deps || []));\n        }\n        else {\n            /** @type {?} */\n            const classRef = (/** @type {?} */ (provider)).useClass || token;\n            if (hasDeps(provider)) {\n                factory = () => new (classRef)(...injectArgs(provider.deps));\n            }\n            else {\n                return injectableDefRecord(classRef);\n            }\n        }\n    }\n    return makeRecord(factory, value);\n}\n/**\n * @template T\n * @param {?} factory\n * @param {?=} value\n * @param {?=} multi\n * @return {?}\n */\nfunction makeRecord(factory, value = NOT_YET, multi = false) {\n    return {\n        factory: factory,\n        value: value,\n        multi: multi ? [] : undefined,\n    };\n}\n/**\n * @template T\n * @param {?} input\n * @param {?} fn\n * @return {?}\n */\nfunction deepForEach(input, fn) {\n    input.forEach(value => Array.isArray(value) ? deepForEach(value, fn) : fn(value));\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isValueProvider(value) {\n    return USE_VALUE in value;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isExistingProvider(value) {\n    return !!(/** @type {?} */ (value)).useExisting;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isFactoryProvider(value) {\n    return !!(/** @type {?} */ (value)).useFactory;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isTypeProvider(value) {\n    return typeof value === 'function';\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction hasDeps(value) {\n    return !!(/** @type {?} */ (value)).deps;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction hasOnDestroy(value) {\n    return typeof value === 'object' && value != null && (/** @type {?} */ (value)).ngOnDestroy &&\n        typeof (/** @type {?} */ (value)).ngOnDestroy === 'function';\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction couldBeInjectableType(value) {\n    return (typeof value === 'function') ||\n        (typeof value === 'object' && value instanceof InjectionToken);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Determine if the argument is shaped like a Promise\n * @param {?} obj\n * @return {?}\n */\nfunction isPromise(obj) {\n    // allow any Promise/A+ compliant thenable.\n    // It's up to the caller to ensure that obj.then conforms to the spec\n    return !!obj && typeof obj.then === 'function';\n}\n/**\n * Determine if the argument is an Observable\n * @param {?} obj\n * @return {?}\n */\nfunction isObservable(obj) {\n    // TODO: use Symbol.observable when https://github.com/ReactiveX/rxjs/issues/2415 will be resolved\n    return !!obj && typeof obj.subscribe === 'function';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * A function that will be executed when an application is initialized.\n  @type {?} */\nconst APP_INITIALIZER = new InjectionToken('Application Initializer');\n/**\n * A class that reflects the state of running {\\@link APP_INITIALIZER}s.\n */\nclass ApplicationInitStatus {\n    /**\n     * @param {?} appInits\n     */\n    constructor(appInits) {\n        this.appInits = appInits;\n        this.initialized = false;\n        this.done = false;\n        this.donePromise = new Promise((res, rej) => {\n            this.resolve = res;\n            this.reject = rej;\n        });\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    runInitializers() {\n        if (this.initialized) {\n            return;\n        }\n        /** @type {?} */\n        const asyncInitPromises = [];\n        /** @type {?} */\n        const complete = () => {\n            (/** @type {?} */ (this)).done = true;\n            this.resolve();\n        };\n        if (this.appInits) {\n            for (let i = 0; i < this.appInits.length; i++) {\n                /** @type {?} */\n                const initResult = this.appInits[i]();\n                if (isPromise(initResult)) {\n                    asyncInitPromises.push(initResult);\n                }\n            }\n        }\n        Promise.all(asyncInitPromises).then(() => { complete(); }).catch(e => { this.reject(e); });\n        if (asyncInitPromises.length === 0) {\n            complete();\n        }\n        this.initialized = true;\n    }\n}\nApplicationInitStatus.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nApplicationInitStatus.ctorParameters = () => [\n    { type: Array, decorators: [{ type: Inject, args: [APP_INITIALIZER,] }, { type: Optional }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * A DI Token representing a unique string id assigned to the application by Angular and used\n * primarily for prefixing application attributes and CSS styles when\n * {\\@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n *\n * If you need to avoid randomly generated value to be used as an application id, you can provide\n * a custom value via a DI provider <!-- TODO: provider --> configuring the root {\\@link Injector}\n * using this token.\n * \\@experimental\n  @type {?} */\nconst APP_ID = new InjectionToken('AppId');\n/**\n * @return {?}\n */\nfunction _appIdRandomProviderFactory() {\n    return `${_randomChar()}${_randomChar()}${_randomChar()}`;\n}\n/** *\n * Providers that will generate a random APP_ID_TOKEN.\n * \\@experimental\n  @type {?} */\nconst APP_ID_RANDOM_PROVIDER = {\n    provide: APP_ID,\n    useFactory: _appIdRandomProviderFactory,\n    deps: /** @type {?} */ ([]),\n};\n/**\n * @return {?}\n */\nfunction _randomChar() {\n    return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n}\n/** *\n * A function that will be executed when a platform is initialized.\n * \\@experimental\n  @type {?} */\nconst PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n/** *\n * A token that indicates an opaque platform id.\n * \\@experimental\n  @type {?} */\nconst PLATFORM_ID = new InjectionToken('Platform ID');\n/** *\n * All callbacks provided via this token will be called for every component that is bootstrapped.\n * Signature of the callback:\n *\n * `(componentRef: ComponentRef) => void`.\n *\n * \\@experimental\n  @type {?} */\nconst APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n/** *\n * A token which indicates the root directory of the application\n * \\@experimental\n  @type {?} */\nconst PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass Console {\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    log(message) {\n        // tslint:disable-next-line:no-console\n        console.log(message);\n    }\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    warn(message) {\n        // tslint:disable-next-line:no-console\n        console.warn(message);\n    }\n}\nConsole.decorators = [\n    { type: Injectable }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Combination of NgModuleFactory and ComponentFactorys.\n *\n * \\@experimental\n * @template T\n */\nclass ModuleWithComponentFactories {\n    /**\n     * @param {?} ngModuleFactory\n     * @param {?} componentFactories\n     */\n    constructor(ngModuleFactory, componentFactories) {\n        this.ngModuleFactory = ngModuleFactory;\n        this.componentFactories = componentFactories;\n    }\n}\n/**\n * @return {?}\n */\nfunction _throwError() {\n    throw new Error(`Runtime compiler is not loaded`);\n}\n/**\n * Low-level service for running the angular compiler during runtime\n * to create {\\@link ComponentFactory}s, which\n * can later be used to create and render a Component instance.\n *\n * Each `\\@NgModule` provides an own `Compiler` to its injector,\n * that will use the directives/pipes of the ng module for compilation\n * of components.\n *\n */\nclass Compiler {\n    /**\n     * Compiles the given NgModule and all of its components. All templates of the components listed\n     * in `entryComponents` have to be inlined.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    compileModuleSync(moduleType) { throw _throwError(); }\n    /**\n     * Compiles the given NgModule and all of its components\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    compileModuleAsync(moduleType) { throw _throwError(); }\n    /**\n     * Same as {\\@link #compileModuleSync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    compileModuleAndAllComponentsSync(moduleType) {\n        throw _throwError();\n    }\n    /**\n     * Same as {\\@link #compileModuleAsync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    compileModuleAndAllComponentsAsync(moduleType) {\n        throw _throwError();\n    }\n    /**\n     * Clears all caches.\n     * @return {?}\n     */\n    clearCache() { }\n    /**\n     * Clears the cache for the given component/ngModule.\n     * @param {?} type\n     * @return {?}\n     */\n    clearCacheFor(type) { }\n    /**\n     * Returns the id for a given NgModule, if one is defined and known to the compiler.\n     * @param {?} moduleType\n     * @return {?}\n     */\n    getModuleId(moduleType) { return undefined; }\n}\nCompiler.decorators = [\n    { type: Injectable }\n];\n/** *\n * Token to provide CompilerOptions in the platform injector.\n *\n * \\@experimental\n  @type {?} */\nconst COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n/**\n * A factory for creating a Compiler\n *\n * \\@experimental\n * @abstract\n */\nclass CompilerFactory {\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents a component created by a `ComponentFactory`.\n * Provides access to the component instance and related objects,\n * and provides the means of destroying the instance.\n *\n * @abstract\n * @template C\n */\nclass ComponentRef {\n}\n/**\n * @abstract\n * @template C\n */\nclass ComponentFactory {\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @param {?} component\n * @return {?}\n */\nfunction noComponentFactoryError(component) {\n    /** @type {?} */\n    const error = Error(`No component factory found for ${stringify(component)}. Did you add it to @NgModule.entryComponents?`);\n    (/** @type {?} */ (error))[ERROR_COMPONENT] = component;\n    return error;\n}\n/** @type {?} */\nconst ERROR_COMPONENT = 'ngComponent';\nclass _NullComponentFactoryResolver {\n    /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    resolveComponentFactory(component) {\n        throw noComponentFactoryError(component);\n    }\n}\n/**\n * @abstract\n */\nclass ComponentFactoryResolver {\n}\nComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\nclass CodegenComponentFactoryResolver {\n    /**\n     * @param {?} factories\n     * @param {?} _parent\n     * @param {?} _ngModule\n     */\n    constructor(factories, _parent, _ngModule) {\n        this._parent = _parent;\n        this._ngModule = _ngModule;\n        this._factories = new Map();\n        for (let i = 0; i < factories.length; i++) {\n            /** @type {?} */\n            const factory = factories[i];\n            this._factories.set(factory.componentType, factory);\n        }\n    }\n    /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    resolveComponentFactory(component) {\n        /** @type {?} */\n        let factory = this._factories.get(component);\n        if (!factory && this._parent) {\n            factory = this._parent.resolveComponentFactory(component);\n        }\n        if (!factory) {\n            throw noComponentFactoryError(component);\n        }\n        return new ComponentFactoryBoundToModule(factory, this._ngModule);\n    }\n}\n/**\n * @template C\n */\nclass ComponentFactoryBoundToModule extends ComponentFactory {\n    /**\n     * @param {?} factory\n     * @param {?} ngModule\n     */\n    constructor(factory, ngModule) {\n        super();\n        this.factory = factory;\n        this.ngModule = ngModule;\n        this.selector = factory.selector;\n        this.componentType = factory.componentType;\n        this.ngContentSelectors = factory.ngContentSelectors;\n        this.inputs = factory.inputs;\n        this.outputs = factory.outputs;\n    }\n    /**\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    create(injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents an instance of an NgModule created via a {\\@link NgModuleFactory}.\n *\n * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n * NgModule Instance.\n *\n *\n * @abstract\n * @template T\n */\nclass NgModuleRef {\n}\n/**\n * \\@experimental\n * @abstract\n * @template T\n */\nclass NgModuleFactory {\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet trace;\n/** @type {?} */\nlet events;\n/**\n * @return {?}\n */\nfunction detectWTF() {\n    /** @type {?} */\n    const wtf = (/** @type {?} */ (_global /** TODO #9100 */) /** TODO #9100 */)['wtf'];\n    if (wtf) {\n        trace = wtf['trace'];\n        if (trace) {\n            events = trace['events'];\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @param {?} signature\n * @param {?=} flags\n * @return {?}\n */\nfunction createScope(signature, flags = null) {\n    return events.createScope(signature, flags);\n}\n/**\n * @template T\n * @param {?} scope\n * @param {?=} returnValue\n * @return {?}\n */\nfunction leave(scope, returnValue) {\n    trace.leaveScope(scope, returnValue);\n    return returnValue;\n}\n/**\n * @param {?} rangeType\n * @param {?} action\n * @return {?}\n */\nfunction startTimeRange(rangeType, action) {\n    return trace.beginTimeRange(rangeType, action);\n}\n/**\n * @param {?} range\n * @return {?}\n */\nfunction endTimeRange(range) {\n    trace.endTimeRange(range);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * True if WTF is enabled.\n  @type {?} */\nconst wtfEnabled = detectWTF();\n/**\n * @param {?=} arg0\n * @param {?=} arg1\n * @return {?}\n */\nfunction noopScope(arg0, arg1) {\n    return null;\n}\n/** *\n * Create trace scope.\n *\n * Scopes must be strictly nested and are analogous to stack frames, but\n * do not have to follow the stack frames. Instead it is recommended that they follow logical\n * nesting. You may want to use\n * [Event\n * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n * as they are defined in WTF.\n *\n * Used to mark scope entry. The return value is used to leave the scope.\n *\n *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n *\n *     someMethod() {\n *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n *        // DO SOME WORK HERE\n *        return wtfLeave(s, 123); // Return value 123\n *     }\n *\n * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n * negatively impact the performance of your application. For this reason we recommend that\n * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n * exception, will produce incorrect trace, but presence of exception signifies logic error which\n * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n * an exception is expected during normal execution while profiling.\n *\n * \\@experimental\n  @type {?} */\nconst wtfCreateScope = wtfEnabled ? createScope : (signature, flags) => noopScope;\n/** *\n * Used to mark end of Scope.\n *\n * - `scope` to end.\n * - `returnValue` (optional) to be passed to the WTF.\n *\n * Returns the `returnValue for easy chaining.\n * \\@experimental\n  @type {?} */\nconst wtfLeave = wtfEnabled ? leave : (s, r) => r;\n/** *\n * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n * enabled.\n *\n *     someMethod() {\n *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n *        var future = new Future.delay(5).then((_) {\n *          wtfEndTimeRange(s);\n *        });\n *     }\n * \\@experimental\n  @type {?} */\nconst wtfStartTimeRange = wtfEnabled ? startTimeRange : (rangeType, action) => null;\n/** *\n * Ends a async time range operation.\n * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n * enabled.\n * \\@experimental\n  @type {?} */\nconst wtfEndTimeRange = wtfEnabled ? endTimeRange : (r) => null;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Use in directives and components to emit custom events synchronously\n * or asynchronously, and register handlers for those events by subscribing\n * to an instance.\n *\n * \\@usageNotes\n *\n * In the following example, a component defines two output properties\n * that create event emitters. When the title is clicked, the emitter\n * emits an open or close event to toggle the current visibility state.\n *\n * ```\n * \\@Component({\n *   selector: 'zippy',\n *   template: `\n *   <div class=\"zippy\">\n *     <div (click)=\"toggle()\">Toggle</div>\n *     <div [hidden]=\"!visible\">\n *       <ng-content></ng-content>\n *     </div>\n *  </div>`})\n * export class Zippy {\n *   visible: boolean = true;\n * \\@Output() open: EventEmitter<any> = new EventEmitter();\n * \\@Output() close: EventEmitter<any> = new EventEmitter();\n *\n *   toggle() {\n *     this.visible = !this.visible;\n *     if (this.visible) {\n *       this.open.emit(null);\n *     } else {\n *       this.close.emit(null);\n *     }\n *   }\n * }\n * ```\n *\n * Access the event object with the `$event` argument passed to the output event\n * handler:\n *\n * ```\n * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n * ```\n *\n * ### Notes\n *\n * Uses Rx.Observable but provides an adapter to make it work as specified here:\n * https://github.com/jhusain/observable-spec\n *\n * Once a reference implementation of the spec is available, switch to it.\n *\n * @template T\n */\nclass EventEmitter extends Subject {\n    /**\n     * Creates an instance of this class that can\n     * deliver events synchronously or asynchronously.\n     *\n     * @param {?=} isAsync When true, deliver events asynchronously.\n     *\n     */\n    constructor(isAsync = false) {\n        super();\n        this.__isAsync = isAsync;\n    }\n    /**\n     * Emits an event containing a given value.\n     * @param {?=} value The value to emit.\n     * @return {?}\n     */\n    emit(value) { super.next(value); }\n    /**\n     * Registers handlers for events emitted by this instance.\n     * @param {?=} generatorOrNext When supplied, a custom handler for emitted events.\n     * @param {?=} error When supplied, a custom handler for an error notification\n     * from this emitter.\n     * @param {?=} complete When supplied, a custom handler for a completion\n     * notification from this emitter.\n     * @return {?}\n     */\n    subscribe(generatorOrNext, error, complete) {\n        /** @type {?} */\n        let schedulerFn;\n        /** @type {?} */\n        let errorFn = (err) => null;\n        /** @type {?} */\n        let completeFn = () => null;\n        if (generatorOrNext && typeof generatorOrNext === 'object') {\n            schedulerFn = this.__isAsync ? (value) => {\n                setTimeout(() => generatorOrNext.next(value));\n            } : (value) => { generatorOrNext.next(value); };\n            if (generatorOrNext.error) {\n                errorFn = this.__isAsync ? (err) => { setTimeout(() => generatorOrNext.error(err)); } :\n                    (err) => { generatorOrNext.error(err); };\n            }\n            if (generatorOrNext.complete) {\n                completeFn = this.__isAsync ? () => { setTimeout(() => generatorOrNext.complete()); } :\n                    () => { generatorOrNext.complete(); };\n            }\n        }\n        else {\n            schedulerFn = this.__isAsync ? (value) => { setTimeout(() => generatorOrNext(value)); } :\n                (value) => { generatorOrNext(value); };\n            if (error) {\n                errorFn =\n                    this.__isAsync ? (err) => { setTimeout(() => error(err)); } : (err) => { error(err); };\n            }\n            if (complete) {\n                completeFn =\n                    this.__isAsync ? () => { setTimeout(() => complete()); } : () => { complete(); };\n            }\n        }\n        /** @type {?} */\n        const sink = super.subscribe(schedulerFn, errorFn, completeFn);\n        if (generatorOrNext instanceof Subscription) {\n            generatorOrNext.add(sink);\n        }\n        return sink;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * An injectable service for executing work inside or outside of the Angular zone.\n *\n * The most common use of this service is to optimize performance when starting a work consisting of\n * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n * Angular. Such tasks can be kicked off via {\\@link #runOutsideAngular} and if needed, these tasks\n * can reenter the Angular zone via {\\@link #run}.\n *\n * <!-- TODO: add/fix links to:\n *   - docs explaining zones and the use of zones in Angular and change-detection\n *   - link to runOutsideAngular/run (throughout this file!)\n *   -->\n *\n * \\@usageNotes\n * ### Example\n *\n * ```\n * import {Component, NgZone} from '\\@angular/core';\n * import {NgIf} from '\\@angular/common';\n *\n * \\@Component({\n *   selector: 'ng-zone-demo',\n *   template: `\n *     <h2>Demo: NgZone</h2>\n *\n *     <p>Progress: {{progress}}%</p>\n *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n *\n *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n *   `,\n * })\n * export class NgZoneDemo {\n *   progress: number = 0;\n *   label: string;\n *\n *   constructor(private _ngZone: NgZone) {}\n *\n *   // Loop inside the Angular zone\n *   // so the UI DOES refresh after each setTimeout cycle\n *   processWithinAngularZone() {\n *     this.label = 'inside';\n *     this.progress = 0;\n *     this._increaseProgress(() => console.log('Inside Done!'));\n *   }\n *\n *   // Loop outside of the Angular zone\n *   // so the UI DOES NOT refresh after each setTimeout cycle\n *   processOutsideOfAngularZone() {\n *     this.label = 'outside';\n *     this.progress = 0;\n *     this._ngZone.runOutsideAngular(() => {\n *       this._increaseProgress(() => {\n *         // reenter the Angular zone and display done\n *         this._ngZone.run(() => { console.log('Outside Done!'); });\n *       });\n *     });\n *   }\n *\n *   _increaseProgress(doneCallback: () => void) {\n *     this.progress += 1;\n *     console.log(`Current progress: ${this.progress}%`);\n *\n *     if (this.progress < 100) {\n *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n *     } else {\n *       doneCallback();\n *     }\n *   }\n * }\n * ```\n *\n * \\@experimental\n */\nclass NgZone {\n    /**\n     * @param {?} __0\n     */\n    constructor({ enableLongStackTrace = false }) {\n        this.hasPendingMicrotasks = false;\n        this.hasPendingMacrotasks = false;\n        /**\n         * Whether there are no outstanding microtasks or macrotasks.\n         */\n        this.isStable = true;\n        /**\n         * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n         */\n        this.onUnstable = new EventEmitter(false);\n        /**\n         * Notifies when there is no more microtasks enqueued in the current VM Turn.\n         * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n         * For this reason this event can fire multiple times per VM Turn.\n         */\n        this.onMicrotaskEmpty = new EventEmitter(false);\n        /**\n         * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n         * implies we are about to relinquish VM turn.\n         * This event gets called just once.\n         */\n        this.onStable = new EventEmitter(false);\n        /**\n         * Notifies that an error has been delivered.\n         */\n        this.onError = new EventEmitter(false);\n        if (typeof Zone == 'undefined') {\n            throw new Error(`In this configuration Angular requires Zone.js`);\n        }\n        Zone.assertZonePatched();\n        /** @type {?} */\n        const self = /** @type {?} */ ((this));\n        self._nesting = 0;\n        self._outer = self._inner = Zone.current;\n        if ((/** @type {?} */ (Zone))['wtfZoneSpec']) {\n            self._inner = self._inner.fork((/** @type {?} */ (Zone))['wtfZoneSpec']);\n        }\n        if ((/** @type {?} */ (Zone))['TaskTrackingZoneSpec']) {\n            self._inner = self._inner.fork(new (/** @type {?} */ ((/** @type {?} */ (Zone))['TaskTrackingZoneSpec'])));\n        }\n        if (enableLongStackTrace && (/** @type {?} */ (Zone))['longStackTraceZoneSpec']) {\n            self._inner = self._inner.fork((/** @type {?} */ (Zone))['longStackTraceZoneSpec']);\n        }\n        forkInnerZoneWithAngularBehavior(self);\n    }\n    /**\n     * @return {?}\n     */\n    static isInAngularZone() { return Zone.current.get('isAngularZone') === true; }\n    /**\n     * @return {?}\n     */\n    static assertInAngularZone() {\n        if (!NgZone.isInAngularZone()) {\n            throw new Error('Expected to be in Angular Zone, but it is not!');\n        }\n    }\n    /**\n     * @return {?}\n     */\n    static assertNotInAngularZone() {\n        if (NgZone.isInAngularZone()) {\n            throw new Error('Expected to not be in Angular Zone, but it is!');\n        }\n    }\n    /**\n     * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    run(fn, applyThis, applyArgs) {\n        return /** @type {?} */ ((/** @type {?} */ ((this)))._inner.run(fn, applyThis, applyArgs));\n    }\n    /**\n     * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n     * returned by the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @param {?=} name\n     * @return {?}\n     */\n    runTask(fn, applyThis, applyArgs, name) {\n        /** @type {?} */\n        const zone = (/** @type {?} */ ((this)))._inner;\n        /** @type {?} */\n        const task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n        try {\n            return /** @type {?} */ (zone.runTask(task, applyThis, applyArgs));\n        }\n        finally {\n            zone.cancelTask(task);\n        }\n    }\n    /**\n     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n     * rethrown.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    runGuarded(fn, applyThis, applyArgs) {\n        return /** @type {?} */ ((/** @type {?} */ ((this)))._inner.runGuarded(fn, applyThis, applyArgs));\n    }\n    /**\n     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n     * the function.\n     *\n     * Running functions via {\\@link #runOutsideAngular} allows you to escape Angular's zone and do\n     * work that\n     * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * outside of the Angular zone.\n     *\n     * Use {\\@link #run} to reenter the Angular zone and do work that updates the application model.\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    runOutsideAngular(fn) {\n        return /** @type {?} */ ((/** @type {?} */ ((this)))._outer.run(fn));\n    }\n}\n/**\n * @return {?}\n */\nfunction noop() { }\n/** @type {?} */\nconst EMPTY_PAYLOAD = {};\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction checkStable(zone) {\n    if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n        try {\n            zone._nesting++;\n            zone.onMicrotaskEmpty.emit(null);\n        }\n        finally {\n            zone._nesting--;\n            if (!zone.hasPendingMicrotasks) {\n                try {\n                    zone.runOutsideAngular(() => zone.onStable.emit(null));\n                }\n                finally {\n                    zone.isStable = true;\n                }\n            }\n        }\n    }\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction forkInnerZoneWithAngularBehavior(zone) {\n    zone._inner = zone._inner.fork({\n        name: 'angular',\n        properties: /** @type {?} */ ({ 'isAngularZone': true }),\n        onInvokeTask: (delegate, current, target, task, applyThis, applyArgs) => {\n            try {\n                onEnter(zone);\n                return delegate.invokeTask(target, task, applyThis, applyArgs);\n            }\n            finally {\n                onLeave(zone);\n            }\n        },\n        onInvoke: (delegate, current, target, callback, applyThis, applyArgs, source) => {\n            try {\n                onEnter(zone);\n                return delegate.invoke(target, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                onLeave(zone);\n            }\n        },\n        onHasTask: (delegate, current, target, hasTaskState) => {\n            delegate.hasTask(target, hasTaskState);\n            if (current === target) {\n                // We are only interested in hasTask events which originate from our zone\n                // (A child hasTask event is not interesting to us)\n                if (hasTaskState.change == 'microTask') {\n                    zone.hasPendingMicrotasks = hasTaskState.microTask;\n                    checkStable(zone);\n                }\n                else if (hasTaskState.change == 'macroTask') {\n                    zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                }\n            }\n        },\n        onHandleError: (delegate, current, target, error) => {\n            delegate.handleError(target, error);\n            zone.runOutsideAngular(() => zone.onError.emit(error));\n            return false;\n        }\n    });\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction onEnter(zone) {\n    zone._nesting++;\n    if (zone.isStable) {\n        zone.isStable = false;\n        zone.onUnstable.emit(null);\n    }\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction onLeave(zone) {\n    zone._nesting--;\n    checkStable(zone);\n}\n/**\n * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n * to framework to perform rendering.\n */\nclass NoopNgZone {\n    constructor() {\n        this.hasPendingMicrotasks = false;\n        this.hasPendingMacrotasks = false;\n        this.isStable = true;\n        this.onUnstable = new EventEmitter();\n        this.onMicrotaskEmpty = new EventEmitter();\n        this.onStable = new EventEmitter();\n        this.onError = new EventEmitter();\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    run(fn) { return fn(); }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    runGuarded(fn) { return fn(); }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    runOutsideAngular(fn) { return fn(); }\n    /**\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    runTask(fn) { return fn(); }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * The Testability service provides testing hooks that can be accessed from\n * the browser and by services such as Protractor. Each bootstrapped Angular\n * application on the page will have an instance of Testability.\n * \\@experimental\n */\nclass Testability {\n    /**\n     * @param {?} _ngZone\n     */\n    constructor(_ngZone) {\n        this._ngZone = _ngZone;\n        this._pendingCount = 0;\n        this._isZoneStable = true;\n        /**\n         * Whether any work was done since the last 'whenStable' callback. This is\n         * useful to detect if this could have potentially destabilized another\n         * component while it is stabilizing.\n         * \\@internal\n         */\n        this._didWork = false;\n        this._callbacks = [];\n        this._watchAngularEvents();\n        _ngZone.run(() => { this.taskTrackingZone = Zone.current.get('TaskTrackingZone'); });\n    }\n    /**\n     * @return {?}\n     */\n    _watchAngularEvents() {\n        this._ngZone.onUnstable.subscribe({\n            next: () => {\n                this._didWork = true;\n                this._isZoneStable = false;\n            }\n        });\n        this._ngZone.runOutsideAngular(() => {\n            this._ngZone.onStable.subscribe({\n                next: () => {\n                    NgZone.assertNotInAngularZone();\n                    scheduleMicroTask(() => {\n                        this._isZoneStable = true;\n                        this._runCallbacksIfReady();\n                    });\n                }\n            });\n        });\n    }\n    /**\n     * Increases the number of pending request\n     * @deprecated pending requests are now tracked with zones.\n     * @return {?}\n     */\n    increasePendingRequestCount() {\n        this._pendingCount += 1;\n        this._didWork = true;\n        return this._pendingCount;\n    }\n    /**\n     * Decreases the number of pending request\n     * @deprecated pending requests are now tracked with zones\n     * @return {?}\n     */\n    decreasePendingRequestCount() {\n        this._pendingCount -= 1;\n        if (this._pendingCount < 0) {\n            throw new Error('pending async requests below zero');\n        }\n        this._runCallbacksIfReady();\n        return this._pendingCount;\n    }\n    /**\n     * Whether an associated application is stable\n     * @return {?}\n     */\n    isStable() {\n        return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n    }\n    /**\n     * @return {?}\n     */\n    _runCallbacksIfReady() {\n        if (this.isStable()) {\n            // Schedules the call backs in a new frame so that it is always async.\n            scheduleMicroTask(() => {\n                while (this._callbacks.length !== 0) {\n                    /** @type {?} */\n                    let cb = /** @type {?} */ ((this._callbacks.pop()));\n                    clearTimeout(cb.timeoutId);\n                    cb.doneCb(this._didWork);\n                }\n                this._didWork = false;\n            });\n        }\n        else {\n            /** @type {?} */\n            let pending = this.getPendingTasks();\n            this._callbacks = this._callbacks.filter((cb) => {\n                if (cb.updateCb && cb.updateCb(pending)) {\n                    clearTimeout(cb.timeoutId);\n                    return false;\n                }\n                return true;\n            });\n            this._didWork = true;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    getPendingTasks() {\n        if (!this.taskTrackingZone) {\n            return [];\n        }\n        return this.taskTrackingZone.macroTasks.map((t) => {\n            return {\n                source: t.source,\n                isPeriodic: t.data.isPeriodic,\n                delay: t.data.delay,\n                // From TaskTrackingZone:\n                // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                creationLocation: /** @type {?} */ ((/** @type {?} */ (t)).creationLocation),\n                // Added by Zones for XHRs\n                // https://github.com/angular/zone.js/blob/master/lib/browser/browser.ts#L133\n                xhr: (/** @type {?} */ (t.data)).target\n            };\n        });\n    }\n    /**\n     * @param {?} cb\n     * @param {?=} timeout\n     * @param {?=} updateCb\n     * @return {?}\n     */\n    addCallback(cb, timeout, updateCb) {\n        /** @type {?} */\n        let timeoutId = -1;\n        if (timeout && timeout > 0) {\n            timeoutId = setTimeout(() => {\n                this._callbacks = this._callbacks.filter((cb) => cb.timeoutId !== timeoutId);\n                cb(this._didWork, this.getPendingTasks());\n            }, timeout);\n        }\n        this._callbacks.push(/** @type {?} */ ({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb }));\n    }\n    /**\n     * Wait for the application to be stable with a timeout. If the timeout is reached before that\n     * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n     *\n     * @param {?} doneCb The callback to invoke when Angular is stable or the timeout expires\n     *    whichever comes first.\n     * @param {?=} timeout Optional. The maximum time to wait for Angular to become stable. If not\n     *    specified, whenStable() will wait forever.\n     * @param {?=} updateCb Optional. If specified, this callback will be invoked whenever the set of\n     *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n     *    and no further updates will be issued.\n     * @return {?}\n     */\n    whenStable(doneCb, timeout, updateCb) {\n        if (updateCb && !this.taskTrackingZone) {\n            throw new Error('Task tracking zone is required when passing an update callback to ' +\n                'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n        }\n        // These arguments are 'Function' above to keep the public API simple.\n        this.addCallback(/** @type {?} */ (doneCb), timeout, /** @type {?} */ (updateCb));\n        this._runCallbacksIfReady();\n    }\n    /**\n     * Get the number of pending requests\n     * @deprecated pending requests are now tracked with zones\n     * @return {?}\n     */\n    getPendingRequestCount() { return this._pendingCount; }\n    /**\n     * Find providers by name\n     * @param {?} using The root element to search from\n     * @param {?} provider The name of binding variable\n     * @param {?} exactMatch Whether using exactMatch\n     * @return {?}\n     */\n    findProviders(using, provider, exactMatch) {\n        // TODO(juliemr): implement.\n        return [];\n    }\n}\nTestability.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nTestability.ctorParameters = () => [\n    { type: NgZone }\n];\n/**\n * A global registry of {\\@link Testability} instances for specific elements.\n * \\@experimental\n */\nclass TestabilityRegistry {\n    constructor() {\n        /**\n         * \\@internal\n         */\n        this._applications = new Map();\n        _testabilityGetter.addToWindow(this);\n    }\n    /**\n     * Registers an application with a testability hook so that it can be tracked\n     * @param {?} token token of application, root element\n     * @param {?} testability Testability hook\n     * @return {?}\n     */\n    registerApplication(token, testability) {\n        this._applications.set(token, testability);\n    }\n    /**\n     * Unregisters an application.\n     * @param {?} token token of application, root element\n     * @return {?}\n     */\n    unregisterApplication(token) { this._applications.delete(token); }\n    /**\n     * Unregisters all applications\n     * @return {?}\n     */\n    unregisterAllApplications() { this._applications.clear(); }\n    /**\n     * Get a testability hook associated with the application\n     * @param {?} elem root element\n     * @return {?}\n     */\n    getTestability(elem) { return this._applications.get(elem) || null; }\n    /**\n     * Get all registered testabilities\n     * @return {?}\n     */\n    getAllTestabilities() { return Array.from(this._applications.values()); }\n    /**\n     * Get all registered applications(root elements)\n     * @return {?}\n     */\n    getAllRootElements() { return Array.from(this._applications.keys()); }\n    /**\n     * Find testability of a node in the Tree\n     * @param {?} elem node\n     * @param {?=} findInAncestors whether finding testability in ancestors if testability was not found in\n     * current node\n     * @return {?}\n     */\n    findTestabilityInTree(elem, findInAncestors = true) {\n        return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n    }\n}\nTestabilityRegistry.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nTestabilityRegistry.ctorParameters = () => [];\nclass _NoopGetTestability {\n    /**\n     * @param {?} registry\n     * @return {?}\n     */\n    addToWindow(registry) { }\n    /**\n     * @param {?} registry\n     * @param {?} elem\n     * @param {?} findInAncestors\n     * @return {?}\n     */\n    findTestabilityInTree(registry, elem, findInAncestors) {\n        return null;\n    }\n}\n/**\n * Set the {\\@link GetTestability} implementation used by the Angular testing framework.\n * \\@experimental\n * @param {?} getter\n * @return {?}\n */\nfunction setTestabilityGetter(getter) {\n    _testabilityGetter = getter;\n}\n/** @type {?} */\nlet _testabilityGetter = new _NoopGetTestability();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet _devMode = true;\n/** @type {?} */\nlet _runModeLocked = false;\n/** @type {?} */\nlet _platform;\n/** @type {?} */\nconst ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n/**\n * Disable Angular's development mode, which turns off assertions and other\n * checks within the framework.\n *\n * One important assertion this disables verifies that a change detection pass\n * does not result in additional changes to any bindings (also known as\n * unidirectional data flow).\n *\n *\n * @return {?}\n */\nfunction enableProdMode() {\n    if (_runModeLocked) {\n        throw new Error('Cannot enable prod mode after platform setup.');\n    }\n    _devMode = false;\n}\n/**\n * Returns whether Angular is in development mode. After called once,\n * the value is locked and won't change any more.\n *\n * By default, this is true, unless a user calls `enableProdMode` before calling this.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nfunction isDevMode() {\n    _runModeLocked = true;\n    return _devMode;\n}\n/**\n * A token for third-party components that can register themselves with NgProbe.\n *\n * \\@experimental\n */\nclass NgProbeToken {\n    /**\n     * @param {?} name\n     * @param {?} token\n     */\n    constructor(name, token) {\n        this.name = name;\n        this.token = token;\n    }\n}\n/**\n * Creates a platform.\n * Platforms have to be eagerly created via this function.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} injector\n * @return {?}\n */\nfunction createPlatform(injector) {\n    if (_platform && !_platform.destroyed &&\n        !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n        throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n    }\n    _platform = injector.get(PlatformRef);\n    /** @type {?} */\n    const inits = injector.get(PLATFORM_INITIALIZER, null);\n    if (inits)\n        inits.forEach((init) => init());\n    return _platform;\n}\n/**\n * Creates a factory for a platform\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} parentPlatformFactory\n * @param {?} name\n * @param {?=} providers\n * @return {?}\n */\nfunction createPlatformFactory(parentPlatformFactory, name, providers = []) {\n    /** @type {?} */\n    const desc = `Platform: ${name}`;\n    /** @type {?} */\n    const marker = new InjectionToken(desc);\n    return (extraProviders = []) => {\n        /** @type {?} */\n        let platform = getPlatform();\n        if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            if (parentPlatformFactory) {\n                parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n            }\n            else {\n                /** @type {?} */\n                const injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n            }\n        }\n        return assertPlatform(marker);\n    };\n}\n/**\n * Checks that there currently is a platform which contains the given token as a provider.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} requiredToken\n * @return {?}\n */\nfunction assertPlatform(requiredToken) {\n    /** @type {?} */\n    const platform = getPlatform();\n    if (!platform) {\n        throw new Error('No platform exists!');\n    }\n    if (!platform.injector.get(requiredToken, null)) {\n        throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n    }\n    return platform;\n}\n/**\n * Destroy the existing platform.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nfunction destroyPlatform() {\n    if (_platform && !_platform.destroyed) {\n        _platform.destroy();\n    }\n}\n/**\n * Returns the current platform.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nfunction getPlatform() {\n    return _platform && !_platform.destroyed ? _platform : null;\n}\n/**\n * The Angular platform is the entry point for Angular on a web page. Each page\n * has exactly one platform, and services (such as reflection) which are common\n * to every Angular application running on the page are bound in its scope.\n *\n * A page's platform is initialized implicitly when a platform is created via a platform factory\n * (e.g. {\\@link platformBrowser}), or explicitly by calling the {\\@link createPlatform} function.\n */\nclass PlatformRef {\n    /**\n     * \\@internal\n     * @param {?} _injector\n     */\n    constructor(_injector) {\n        this._injector = _injector;\n        this._modules = [];\n        this._destroyListeners = [];\n        this._destroyed = false;\n    }\n    /**\n     * Creates an instance of an `\\@NgModule` for the given platform\n     * for offline compilation.\n     *\n     * \\@usageNotes\n     * ### Simple Example\n     *\n     * ```typescript\n     * my_module.ts:\n     *\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * main.ts:\n     * import {MyModuleNgFactory} from './my_module.ngfactory';\n     * import {platformBrowser} from '\\@angular/platform-browser';\n     *\n     * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n     * ```\n     *\n     * \\@experimental APIs related to application bootstrap are currently under review.\n     * @template M\n     * @param {?} moduleFactory\n     * @param {?=} options\n     * @return {?}\n     */\n    bootstrapModuleFactory(moduleFactory, options) {\n        /** @type {?} */\n        const ngZoneOption = options ? options.ngZone : undefined;\n        /** @type {?} */\n        const ngZone = getNgZone(ngZoneOption);\n        /** @type {?} */\n        const providers = [{ provide: NgZone, useValue: ngZone }];\n        // Attention: Don't use ApplicationRef.run here,\n        // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n        return ngZone.run(() => {\n            /** @type {?} */\n            const ngZoneInjector = Injector.create({ providers: providers, parent: this.injector, name: moduleFactory.moduleType.name });\n            /** @type {?} */\n            const moduleRef = /** @type {?} */ (moduleFactory.create(ngZoneInjector));\n            /** @type {?} */\n            const exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n            if (!exceptionHandler) {\n                throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n            }\n            moduleRef.onDestroy(() => remove(this._modules, moduleRef)); /** @type {?} */\n            ((ngZone)).runOutsideAngular(() => /** @type {?} */ ((ngZone)).onError.subscribe({ next: (error) => { exceptionHandler.handleError(error); } }));\n            return _callAndReportToErrorHandler(exceptionHandler, /** @type {?} */ ((ngZone)), () => {\n                /** @type {?} */\n                const initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                initStatus.runInitializers();\n                return initStatus.donePromise.then(() => {\n                    this._moduleDoBootstrap(moduleRef);\n                    return moduleRef;\n                });\n            });\n        });\n    }\n    /**\n     * Creates an instance of an `\\@NgModule` for a given platform using the given runtime compiler.\n     *\n     * \\@usageNotes\n     * ### Simple Example\n     *\n     * ```typescript\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n     * ```\n     *\n     * @template M\n     * @param {?} moduleType\n     * @param {?=} compilerOptions\n     * @return {?}\n     */\n    bootstrapModule(moduleType, compilerOptions = []) {\n        /** @type {?} */\n        const compilerFactory = this.injector.get(CompilerFactory);\n        /** @type {?} */\n        const options = optionsReducer({}, compilerOptions);\n        /** @type {?} */\n        const compiler = compilerFactory.createCompiler([options]);\n        return compiler.compileModuleAsync(moduleType)\n            .then((moduleFactory) => this.bootstrapModuleFactory(moduleFactory, options));\n    }\n    /**\n     * @param {?} moduleRef\n     * @return {?}\n     */\n    _moduleDoBootstrap(moduleRef) {\n        /** @type {?} */\n        const appRef = /** @type {?} */ (moduleRef.injector.get(ApplicationRef));\n        if (moduleRef._bootstrapComponents.length > 0) {\n            moduleRef._bootstrapComponents.forEach(f => appRef.bootstrap(f));\n        }\n        else if (moduleRef.instance.ngDoBootstrap) {\n            moduleRef.instance.ngDoBootstrap(appRef);\n        }\n        else {\n            throw new Error(`The module ${stringify(moduleRef.instance.constructor)} was bootstrapped, but it does not declare \"@NgModule.bootstrap\" components nor a \"ngDoBootstrap\" method. ` +\n                `Please define one of these.`);\n        }\n        this._modules.push(moduleRef);\n    }\n    /**\n     * Register a listener to be called when the platform is disposed.\n     * @param {?} callback\n     * @return {?}\n     */\n    onDestroy(callback) { this._destroyListeners.push(callback); }\n    /**\n     * Retrieve the platform {\\@link Injector}, which is the parent injector for\n     * every Angular application on the page and provides singleton providers.\n     * @return {?}\n     */\n    get injector() { return this._injector; }\n    /**\n     * Destroy the Angular platform and all Angular applications on the page.\n     * @return {?}\n     */\n    destroy() {\n        if (this._destroyed) {\n            throw new Error('The platform has already been destroyed!');\n        }\n        this._modules.slice().forEach(module => module.destroy());\n        this._destroyListeners.forEach(listener => listener());\n        this._destroyed = true;\n    }\n    /**\n     * @return {?}\n     */\n    get destroyed() { return this._destroyed; }\n}\nPlatformRef.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nPlatformRef.ctorParameters = () => [\n    { type: Injector }\n];\n/**\n * @param {?=} ngZoneOption\n * @return {?}\n */\nfunction getNgZone(ngZoneOption) {\n    /** @type {?} */\n    let ngZone;\n    if (ngZoneOption === 'noop') {\n        ngZone = new NoopNgZone();\n    }\n    else {\n        ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n            new NgZone({ enableLongStackTrace: isDevMode() });\n    }\n    return ngZone;\n}\n/**\n * @param {?} errorHandler\n * @param {?} ngZone\n * @param {?} callback\n * @return {?}\n */\nfunction _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n    try {\n        /** @type {?} */\n        const result = callback();\n        if (isPromise(result)) {\n            return result.catch((e) => {\n                ngZone.runOutsideAngular(() => errorHandler.handleError(e));\n                // rethrow as the exception handler might not do it\n                throw e;\n            });\n        }\n        return result;\n    }\n    catch (e) {\n        ngZone.runOutsideAngular(() => errorHandler.handleError(e));\n        // rethrow as the exception handler might not do it\n        throw e;\n    }\n}\n/**\n * @template T\n * @param {?} dst\n * @param {?} objs\n * @return {?}\n */\nfunction optionsReducer(dst, objs) {\n    if (Array.isArray(objs)) {\n        dst = objs.reduce(optionsReducer, dst);\n    }\n    else {\n        dst = Object.assign({}, dst, (/** @type {?} */ (objs)));\n    }\n    return dst;\n}\n/**\n * A reference to an Angular application running on a page.\n */\nclass ApplicationRef {\n    /**\n     * \\@internal\n     * @param {?} _zone\n     * @param {?} _console\n     * @param {?} _injector\n     * @param {?} _exceptionHandler\n     * @param {?} _componentFactoryResolver\n     * @param {?} _initStatus\n     */\n    constructor(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n        this._zone = _zone;\n        this._console = _console;\n        this._injector = _injector;\n        this._exceptionHandler = _exceptionHandler;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._initStatus = _initStatus;\n        this._bootstrapListeners = [];\n        this._views = [];\n        this._runningTick = false;\n        this._enforceNoNewChanges = false;\n        this._stable = true;\n        /**\n         * Get a list of component types registered to this application.\n         * This list is populated even before the component is created.\n         */\n        this.componentTypes = [];\n        /**\n         * Get a list of components registered to this application.\n         */\n        this.components = [];\n        this._enforceNoNewChanges = isDevMode();\n        this._zone.onMicrotaskEmpty.subscribe({ next: () => { this._zone.run(() => { this.tick(); }); } });\n        /** @type {?} */\n        const isCurrentlyStable = new Observable((observer) => {\n            this._stable = this._zone.isStable && !this._zone.hasPendingMacrotasks &&\n                !this._zone.hasPendingMicrotasks;\n            this._zone.runOutsideAngular(() => {\n                observer.next(this._stable);\n                observer.complete();\n            });\n        });\n        /** @type {?} */\n        const isStable = new Observable((observer) => {\n            /** @type {?} */\n            let stableSub;\n            this._zone.runOutsideAngular(() => {\n                stableSub = this._zone.onStable.subscribe(() => {\n                    NgZone.assertNotInAngularZone();\n                    // Check whether there are no pending macro/micro tasks in the next tick\n                    // to allow for NgZone to update the state.\n                    scheduleMicroTask(() => {\n                        if (!this._stable && !this._zone.hasPendingMacrotasks &&\n                            !this._zone.hasPendingMicrotasks) {\n                            this._stable = true;\n                            observer.next(true);\n                        }\n                    });\n                });\n            });\n            /** @type {?} */\n            const unstableSub = this._zone.onUnstable.subscribe(() => {\n                NgZone.assertInAngularZone();\n                if (this._stable) {\n                    this._stable = false;\n                    this._zone.runOutsideAngular(() => { observer.next(false); });\n                }\n            });\n            return () => {\n                stableSub.unsubscribe();\n                unstableSub.unsubscribe();\n            };\n        });\n        (/** @type {?} */ (this)).isStable =\n            merge(isCurrentlyStable, isStable.pipe(share()));\n    }\n    /**\n     * Bootstrap a new component at the root level of the application.\n     *\n     * \\@usageNotes\n     * ### Bootstrap process\n     *\n     * When bootstrapping a new root component into an application, Angular mounts the\n     * specified application component onto DOM elements identified by the componentType's\n     * selector and kicks off automatic change detection to finish initializing the component.\n     *\n     * Optionally, a component can be mounted onto a DOM element that does not match the\n     * componentType's selector.\n     *\n     * ### Example\n     * {\\@example core/ts/platform/platform.ts region='longform'}\n     * @template C\n     * @param {?} componentOrFactory\n     * @param {?=} rootSelectorOrNode\n     * @return {?}\n     */\n    bootstrap(componentOrFactory, rootSelectorOrNode) {\n        if (!this._initStatus.done) {\n            throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n        }\n        /** @type {?} */\n        let componentFactory;\n        if (componentOrFactory instanceof ComponentFactory) {\n            componentFactory = componentOrFactory;\n        }\n        else {\n            componentFactory =\n                /** @type {?} */ ((this._componentFactoryResolver.resolveComponentFactory(componentOrFactory)));\n        }\n        this.componentTypes.push(componentFactory.componentType);\n        /** @type {?} */\n        const ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n            null :\n            this._injector.get(NgModuleRef);\n        /** @type {?} */\n        const selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n        /** @type {?} */\n        const compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n        compRef.onDestroy(() => { this._unloadComponent(compRef); });\n        /** @type {?} */\n        const testability = compRef.injector.get(Testability, null);\n        if (testability) {\n            compRef.injector.get(TestabilityRegistry)\n                .registerApplication(compRef.location.nativeElement, testability);\n        }\n        this._loadComponent(compRef);\n        if (isDevMode()) {\n            this._console.log(`Angular is running in the development mode. Call enableProdMode() to enable the production mode.`);\n        }\n        return compRef;\n    }\n    /**\n     * Invoke this method to explicitly process change detection and its side-effects.\n     *\n     * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n     * further changes are detected. If additional changes are picked up during this second cycle,\n     * bindings in the app have side-effects that cannot be resolved in a single change detection\n     * pass.\n     * In this case, Angular throws an error, since an Angular application can only have one change\n     * detection pass during which all change detection must complete.\n     * @return {?}\n     */\n    tick() {\n        if (this._runningTick) {\n            throw new Error('ApplicationRef.tick is called recursively');\n        }\n        /** @type {?} */\n        const scope = ApplicationRef._tickScope();\n        try {\n            this._runningTick = true;\n            this._views.forEach((view) => view.detectChanges());\n            if (this._enforceNoNewChanges) {\n                this._views.forEach((view) => view.checkNoChanges());\n            }\n        }\n        catch (e) {\n            // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n            this._zone.runOutsideAngular(() => this._exceptionHandler.handleError(e));\n        }\n        finally {\n            this._runningTick = false;\n            wtfLeave(scope);\n        }\n    }\n    /**\n     * Attaches a view so that it will be dirty checked.\n     * The view will be automatically detached when it is destroyed.\n     * This will throw if the view is already attached to a ViewContainer.\n     * @param {?} viewRef\n     * @return {?}\n     */\n    attachView(viewRef) {\n        /** @type {?} */\n        const view = (/** @type {?} */ (viewRef));\n        this._views.push(view);\n        view.attachToAppRef(this);\n    }\n    /**\n     * Detaches a view from dirty checking again.\n     * @param {?} viewRef\n     * @return {?}\n     */\n    detachView(viewRef) {\n        /** @type {?} */\n        const view = (/** @type {?} */ (viewRef));\n        remove(this._views, view);\n        view.detachFromAppRef();\n    }\n    /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    _loadComponent(componentRef) {\n        this.attachView(componentRef.hostView);\n        this.tick();\n        this.components.push(componentRef);\n        /** @type {?} */\n        const listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n        listeners.forEach((listener) => listener(componentRef));\n    }\n    /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    _unloadComponent(componentRef) {\n        this.detachView(componentRef.hostView);\n        remove(this.components, componentRef);\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    ngOnDestroy() {\n        // TODO(alxhub): Dispose of the NgZone.\n        this._views.slice().forEach((view) => view.destroy());\n    }\n    /**\n     * Returns the number of attached views.\n     * @return {?}\n     */\n    get viewCount() { return this._views.length; }\n}\n/**\n * \\@internal\n */\nApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\nApplicationRef.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nApplicationRef.ctorParameters = () => [\n    { type: NgZone },\n    { type: Console },\n    { type: Injector },\n    { type: ErrorHandler },\n    { type: ComponentFactoryResolver },\n    { type: ApplicationInitStatus }\n];\n/**\n * @template T\n * @param {?} list\n * @param {?} el\n * @return {?}\n */\nfunction remove(list, el) {\n    /** @type {?} */\n    const index = list.indexOf(el);\n    if (index > -1) {\n        list.splice(index, 1);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n */\nclass RenderComponentType {\n    /**\n     * @param {?} id\n     * @param {?} templateUrl\n     * @param {?} slotCount\n     * @param {?} encapsulation\n     * @param {?} styles\n     * @param {?} animations\n     */\n    constructor(id, templateUrl, slotCount, encapsulation, styles, animations) {\n        this.id = id;\n        this.templateUrl = templateUrl;\n        this.slotCount = slotCount;\n        this.encapsulation = encapsulation;\n        this.styles = styles;\n        this.animations = animations;\n    }\n}\n/**\n * @deprecated Debug info is handeled internally in the view engine now.\n * @abstract\n */\nclass RenderDebugInfo {\n}\n/**\n * @deprecated Use the `Renderer2` instead.\n * @abstract\n */\nclass Renderer {\n}\n/** @type {?} */\nconst Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n/**\n * Injectable service that provides a low-level interface for modifying the UI.\n *\n * Use this service to bypass Angular's templating and make custom UI changes that can't be\n * expressed declaratively. For example if you need to set a property or an attribute whose name is\n * not statically known, use {\\@link Renderer#setElementProperty setElementProperty} or\n * {\\@link Renderer#setElementAttribute setElementAttribute} respectively.\n *\n * If you are implementing a custom renderer, you must implement this interface.\n *\n * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n *\n * @deprecated Use `RendererFactory2` instead.\n * @abstract\n */\nclass RootRenderer {\n}\n/**\n * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n *\n * \\@experimental\n * @abstract\n */\nclass RendererFactory2 {\n}\n/** @enum {number} */\nconst RendererStyleFlags2 = {\n    /**\n       * Marks a style as important.\n       */\n    Important: 1,\n    /**\n       * Marks a style as using dash case naming (this-is-dash-case).\n       */\n    DashCase: 2,\n};\nRendererStyleFlags2[RendererStyleFlags2.Important] = 'Important';\nRendererStyleFlags2[RendererStyleFlags2.DashCase] = 'DashCase';\n/**\n * Extend this base class to implement custom rendering. By default, Angular\n * renders a template into DOM. You can use custom rendering to intercept\n * rendering calls, or to render to something other than DOM.\n *\n * Create your custom renderer using `RendererFactory2`.\n *\n * Use a custom renderer to bypass Angular's templating and\n * make custom UI changes that can't be expressed declaratively.\n * For example if you need to set a property or an attribute whose name is\n * not statically known, use the `setProperty()` or\n * `setAttribute()` method.\n *\n * \\@experimental\n * @abstract\n */\nclass Renderer2 {\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A wrapper around a native element inside of a View.\n *\n * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n * element.\n *\n * \\@security Permitting direct access to the DOM can make your application more vulnerable to\n * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n * [Security Guide](http://g.co/ng/security).\n *\n *\n * @template T\n */\nclass ElementRef {\n    /**\n     * @param {?} nativeElement\n     */\n    constructor(nativeElement) { this.nativeElement = nativeElement; }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to load ng module factories.\n *\n * @abstract\n */\nclass NgModuleFactoryLoader {\n}\n/** @type {?} */\nlet moduleFactories = new Map();\n/**\n * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n * \\@experimental\n * @param {?} id\n * @param {?} factory\n * @return {?}\n */\nfunction registerModuleFactory(id, factory) {\n    /** @type {?} */\n    const existing = moduleFactories.get(id);\n    if (existing) {\n        throw new Error(`Duplicate module registered for ${id} - ${existing.moduleType.name} vs ${factory.moduleType.name}`);\n    }\n    moduleFactories.set(id, factory);\n}\n/**\n * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n * cannot be found.\n * \\@experimental\n * @param {?} id\n * @return {?}\n */\nfunction getModuleFactory(id) {\n    /** @type {?} */\n    const factory = moduleFactories.get(id);\n    if (!factory)\n        throw new Error(`No module with ID ${id} loaded`);\n    return factory;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * An unmodifiable list of items that Angular keeps up to date when the state\n * of the application changes.\n *\n * The type of object that {\\@link ViewChildren}, {\\@link ContentChildren}, and {\\@link QueryList}\n * provide.\n *\n * Implements an iterable interface, therefore it can be used in both ES6\n * javascript `for (var i of items)` loops as well as in Angular templates with\n * `*ngFor=\"let i of myList\"`.\n *\n * Changes can be observed by subscribing to the changes `Observable`.\n *\n * NOTE: In the future this class will implement an `Observable` interface.\n *\n * \\@usageNotes\n * ### Example\n * ```typescript\n * \\@Component({...})\n * class Container {\n * \\@ViewChildren(Item) items:QueryList<Item>;\n * }\n * ```\n * @template T\n */\nclass QueryList {\n    constructor() {\n        this.dirty = true;\n        this._results = [];\n        this.changes = new EventEmitter();\n        this.length = 0;\n    }\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     * @template U\n     * @param {?} fn\n     * @return {?}\n     */\n    map(fn) { return this._results.map(fn); }\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     * @param {?} fn\n     * @return {?}\n     */\n    filter(fn) {\n        return this._results.filter(fn);\n    }\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     * @param {?} fn\n     * @return {?}\n     */\n    find(fn) {\n        return this._results.find(fn);\n    }\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     * @template U\n     * @param {?} fn\n     * @param {?} init\n     * @return {?}\n     */\n    reduce(fn, init) {\n        return this._results.reduce(fn, init);\n    }\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     * @param {?} fn\n     * @return {?}\n     */\n    forEach(fn) { this._results.forEach(fn); }\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     * @param {?} fn\n     * @return {?}\n     */\n    some(fn) {\n        return this._results.some(fn);\n    }\n    /**\n     * @return {?}\n     */\n    toArray() { return this._results.slice(); }\n    /**\n     * @return {?}\n     */\n    [getSymbolIterator()]() { return (/** @type {?} */ (this._results))[getSymbolIterator()](); }\n    /**\n     * @return {?}\n     */\n    toString() { return this._results.toString(); }\n    /**\n     * @param {?} res\n     * @return {?}\n     */\n    reset(res) {\n        this._results = flatten(res);\n        (/** @type {?} */ (this)).dirty = false;\n        (/** @type {?} */ (this)).length = this._results.length;\n        (/** @type {?} */ (this)).last = this._results[this.length - 1];\n        (/** @type {?} */ (this)).first = this._results[0];\n    }\n    /**\n     * @return {?}\n     */\n    notifyOnChanges() { (/** @type {?} */ (this.changes)).emit(this); }\n    /**\n     * internal\n     * @return {?}\n     */\n    setDirty() { (/** @type {?} */ (this)).dirty = true; }\n    /**\n     * internal\n     * @return {?}\n     */\n    destroy() {\n        (/** @type {?} */ (this.changes)).complete();\n        (/** @type {?} */ (this.changes)).unsubscribe();\n    }\n}\n/**\n * @template T\n * @param {?} list\n * @return {?}\n */\nfunction flatten(list) {\n    return list.reduce((flat, item) => {\n        /** @type {?} */\n        const flatItem = Array.isArray(item) ? flatten(item) : item;\n        return (/** @type {?} */ (flat)).concat(flatItem);\n    }, []);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst _SEPARATOR = '#';\n/** @type {?} */\nconst FACTORY_CLASS_SUFFIX = 'NgFactory';\n/**\n * Configuration for SystemJsNgModuleLoader.\n * token.\n *\n * \\@experimental\n * @abstract\n */\nclass SystemJsNgModuleLoaderConfig {\n}\n/** @type {?} */\nconst DEFAULT_CONFIG = {\n    factoryPathPrefix: '',\n    factoryPathSuffix: '.ngfactory',\n};\n/**\n * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n * \\@experimental\n */\nclass SystemJsNgModuleLoader {\n    /**\n     * @param {?} _compiler\n     * @param {?=} config\n     */\n    constructor(_compiler, config) {\n        this._compiler = _compiler;\n        this._config = config || DEFAULT_CONFIG;\n    }\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    load(path) {\n        /** @type {?} */\n        const offlineMode = this._compiler instanceof Compiler;\n        return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n    }\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    loadAndCompile(path) {\n        let [module, exportName] = path.split(_SEPARATOR);\n        if (exportName === undefined) {\n            exportName = 'default';\n        }\n        return System.import(module)\n            .then((module) => module[exportName])\n            .then((type) => checkNotEmpty(type, module, exportName))\n            .then((type) => this._compiler.compileModuleAsync(type));\n    }\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    loadFactory(path) {\n        let [module, exportName] = path.split(_SEPARATOR);\n        /** @type {?} */\n        let factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n        if (exportName === undefined) {\n            exportName = 'default';\n            factoryClassSuffix = '';\n        }\n        return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n            .then((module) => module[exportName + factoryClassSuffix])\n            .then((factory) => checkNotEmpty(factory, module, exportName));\n    }\n}\nSystemJsNgModuleLoader.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nSystemJsNgModuleLoader.ctorParameters = () => [\n    { type: Compiler },\n    { type: SystemJsNgModuleLoaderConfig, decorators: [{ type: Optional }] }\n];\n/**\n * @param {?} value\n * @param {?} modulePath\n * @param {?} exportName\n * @return {?}\n */\nfunction checkNotEmpty(value, modulePath, exportName) {\n    if (!value) {\n        throw new Error(`Cannot find '${exportName}' in '${modulePath}'`);\n    }\n    return value;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents an embedded template that can be used to instantiate embedded views.\n * To instantiate embedded views based on a template, use the `ViewContainerRef`\n * method `createEmbeddedView()`.\n *\n * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n * is injected into the constructor of the directive,\n * using the `TemplateRef` token.\n *\n * You can also use a `Query` to find a `TemplateRef` associated with\n * a component or a directive.\n *\n * @see `ViewContainerRef`\n * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n *\n * @abstract\n * @template C\n */\nclass TemplateRef {\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents a container where one or more views can be attached to a component.\n *\n * Can contain *host views* (created by instantiating a\n * component with the `createComponent()` method), and *embedded views*\n * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n *\n * A view container instance can contain other view containers,\n * creating a [view hierarchy](guide/glossary#view-tree).\n *\n * @see `ComponentRef`\n * @see `EmbeddedViewRef`\n *\n * @abstract\n */\nclass ViewContainerRef {\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base class for Angular Views, provides change detection functionality.\n * A change-detection tree collects all views that are to be checked for changes.\n * Use the methods to add and remove views from the tree, initiate change-detection,\n * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n *\n * \\@usageNotes\n *\n * The following examples demonstrate how to modify default change-detection behavior\n * to perform explicit detection when needed.\n *\n * ### Use `markForCheck()` with `CheckOnce` strategy\n *\n * The following example sets the `OnPush` change-detection strategy for a component\n * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n *\n * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n * region=\"mark-for-check\"></code-example>\n *\n * ### Detach change detector to limit how often check occurs\n *\n * The following example defines a component with a large list of read-only data\n * that is expected to change constantly, many times per second.\n * To improve performance, we want to check and update the list\n * less often than the changes actually occur. To do that, we detach\n * the component's change detector and perform an explicit local check every five seconds.\n *\n * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n *\n *\n * ### Reattaching a detached component\n *\n * The following example creates a component displaying live data.\n * The component detaches its change detector from the main change detector tree\n * when the `live` property is set to false, and reattaches it when the property\n * becomes true.\n *\n * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n *\n * @abstract\n */\nclass ChangeDetectorRef {\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Represents an Angular [view](guide/glossary#view),\n * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n * Also serves as the base class\n * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n *\n * @see `EmbeddedViewRef`\n * @abstract\n */\nclass ViewRef extends ChangeDetectorRef {\n}\n/**\n * Represents an Angular [view](guide/glossary#view) in a view container.\n * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n * other than the hosting component whose template defines it, or it can be defined\n * independently by a `TemplateRef`.\n *\n * Properties of elements in a view can change, but the structure (number and order) of elements in\n * a view cannot. Change the structure of elements by inserting, moving, or\n * removing nested views in a view container.\n *\n * @see `ViewContainerRef`\n *\n * \\@usageNotes\n *\n * The following template breaks down into two separate `TemplateRef` instances,\n * an outer one and an inner one.\n *\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <li *ngFor=\"let  item of items\">{{item}}</li>\n * </ul>\n * ```\n *\n * This is the outer `TemplateRef`:\n *\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n * </ul>\n * ```\n *\n * This is the inner `TemplateRef`:\n *\n * ```\n *   <li>{{item}}</li>\n * ```\n *\n * The outer and inner `TemplateRef` instances are assembled into views as follows:\n *\n * ```\n * <!-- ViewRef: outer-0 -->\n * Count: 2\n * <ul>\n *   <ng-template view-container-ref></ng-template>\n *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n * </ul>\n * <!-- /ViewRef: outer-0 -->\n * ```\n * \\@experimental\n * @abstract\n * @template C\n */\nclass EmbeddedViewRef extends ViewRef {\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass EventListener {\n    /**\n     * @param {?} name\n     * @param {?} callback\n     */\n    constructor(name, callback) {\n        this.name = name;\n        this.callback = callback;\n    }\n}\n/**\n * \\@experimental All debugging apis are currently experimental.\n */\nclass DebugNode {\n    /**\n     * @param {?} nativeNode\n     * @param {?} parent\n     * @param {?} _debugContext\n     */\n    constructor(nativeNode, parent, _debugContext) {\n        this._debugContext = _debugContext;\n        this.nativeNode = nativeNode;\n        if (parent && parent instanceof DebugElement) {\n            parent.addChild(this);\n        }\n        else {\n            this.parent = null;\n        }\n        this.listeners = [];\n    }\n    /**\n     * @return {?}\n     */\n    get injector() { return this._debugContext.injector; }\n    /**\n     * @return {?}\n     */\n    get componentInstance() { return this._debugContext.component; }\n    /**\n     * @return {?}\n     */\n    get context() { return this._debugContext.context; }\n    /**\n     * @return {?}\n     */\n    get references() { return this._debugContext.references; }\n    /**\n     * @return {?}\n     */\n    get providerTokens() { return this._debugContext.providerTokens; }\n}\n/**\n * \\@experimental All debugging apis are currently experimental.\n */\nclass DebugElement extends DebugNode {\n    /**\n     * @param {?} nativeNode\n     * @param {?} parent\n     * @param {?} _debugContext\n     */\n    constructor(nativeNode, parent, _debugContext) {\n        super(nativeNode, parent, _debugContext);\n        this.properties = {};\n        this.attributes = {};\n        this.classes = {};\n        this.styles = {};\n        this.childNodes = [];\n        this.nativeElement = nativeNode;\n    }\n    /**\n     * @param {?} child\n     * @return {?}\n     */\n    addChild(child) {\n        if (child) {\n            this.childNodes.push(child);\n            child.parent = this;\n        }\n    }\n    /**\n     * @param {?} child\n     * @return {?}\n     */\n    removeChild(child) {\n        /** @type {?} */\n        const childIndex = this.childNodes.indexOf(child);\n        if (childIndex !== -1) {\n            child.parent = null;\n            this.childNodes.splice(childIndex, 1);\n        }\n    }\n    /**\n     * @param {?} child\n     * @param {?} newChildren\n     * @return {?}\n     */\n    insertChildrenAfter(child, newChildren) {\n        /** @type {?} */\n        const siblingIndex = this.childNodes.indexOf(child);\n        if (siblingIndex !== -1) {\n            this.childNodes.splice(siblingIndex + 1, 0, ...newChildren);\n            newChildren.forEach(c => {\n                if (c.parent) {\n                    c.parent.removeChild(c);\n                }\n                c.parent = this;\n            });\n        }\n    }\n    /**\n     * @param {?} refChild\n     * @param {?} newChild\n     * @return {?}\n     */\n    insertBefore(refChild, newChild) {\n        /** @type {?} */\n        const refIndex = this.childNodes.indexOf(refChild);\n        if (refIndex === -1) {\n            this.addChild(newChild);\n        }\n        else {\n            if (newChild.parent) {\n                newChild.parent.removeChild(newChild);\n            }\n            newChild.parent = this;\n            this.childNodes.splice(refIndex, 0, newChild);\n        }\n    }\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    query(predicate) {\n        /** @type {?} */\n        const results = this.queryAll(predicate);\n        return results[0] || null;\n    }\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    queryAll(predicate) {\n        /** @type {?} */\n        const matches = [];\n        _queryElementChildren(this, predicate, matches);\n        return matches;\n    }\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    queryAllNodes(predicate) {\n        /** @type {?} */\n        const matches = [];\n        _queryNodeChildren(this, predicate, matches);\n        return matches;\n    }\n    /**\n     * @return {?}\n     */\n    get children() {\n        return /** @type {?} */ (this.childNodes.filter((node) => node instanceof DebugElement));\n    }\n    /**\n     * @param {?} eventName\n     * @param {?} eventObj\n     * @return {?}\n     */\n    triggerEventHandler(eventName, eventObj) {\n        this.listeners.forEach((listener) => {\n            if (listener.name == eventName) {\n                listener.callback(eventObj);\n            }\n        });\n    }\n}\n/**\n * \\@experimental\n * @param {?} debugEls\n * @return {?}\n */\nfunction asNativeElements(debugEls) {\n    return debugEls.map((el) => el.nativeElement);\n}\n/**\n * @param {?} element\n * @param {?} predicate\n * @param {?} matches\n * @return {?}\n */\nfunction _queryElementChildren(element, predicate, matches) {\n    element.childNodes.forEach(node => {\n        if (node instanceof DebugElement) {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            _queryElementChildren(node, predicate, matches);\n        }\n    });\n}\n/**\n * @param {?} parentNode\n * @param {?} predicate\n * @param {?} matches\n * @return {?}\n */\nfunction _queryNodeChildren(parentNode, predicate, matches) {\n    if (parentNode instanceof DebugElement) {\n        parentNode.childNodes.forEach(node => {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            if (node instanceof DebugElement) {\n                _queryNodeChildren(node, predicate, matches);\n            }\n        });\n    }\n}\n/** @type {?} */\nconst _nativeNodeToDebugNode = new Map();\n/**\n * \\@experimental\n * @param {?} nativeNode\n * @return {?}\n */\nfunction getDebugNode(nativeNode) {\n    return _nativeNodeToDebugNode.get(nativeNode) || null;\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction indexDebugNode(node) {\n    _nativeNodeToDebugNode.set(node.nativeNode, node);\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction removeDebugNodeFromIndex(node) {\n    _nativeNodeToDebugNode.delete(node.nativeNode);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction devModeEqual(a, b) {\n    /** @type {?} */\n    const isListLikeIterableA = isListLikeIterable(a);\n    /** @type {?} */\n    const isListLikeIterableB = isListLikeIterable(b);\n    if (isListLikeIterableA && isListLikeIterableB) {\n        return areIterablesEqual(a, b, devModeEqual);\n    }\n    else {\n        /** @type {?} */\n        const isAObject = a && (typeof a === 'object' || typeof a === 'function');\n        /** @type {?} */\n        const isBObject = b && (typeof b === 'object' || typeof b === 'function');\n        if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n            return true;\n        }\n        else {\n            return looseIdentical(a, b);\n        }\n    }\n}\n/**\n * Indicates that the result of a {\\@link Pipe} transformation has changed even though the\n * reference has not changed.\n *\n * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n * is stored.\n *\n * Example:\n *\n * ```\n * if (this._latestValue === this._latestReturnedValue) {\n *    return this._latestReturnedValue;\n *  } else {\n *    this._latestReturnedValue = this._latestValue;\n *    return WrappedValue.wrap(this._latestValue); // this will force update\n *  }\n * ```\n *\n */\nclass WrappedValue {\n    /**\n     * @param {?} value\n     */\n    constructor(value) { this.wrapped = value; }\n    /**\n     * Creates a wrapped value.\n     * @param {?} value\n     * @return {?}\n     */\n    static wrap(value) { return new WrappedValue(value); }\n    /**\n     * Returns the underlying value of a wrapped value.\n     * Returns the given `value` when it is not wrapped.\n     *\n     * @param {?} value\n     * @return {?}\n     */\n    static unwrap(value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; }\n    /**\n     * Returns true if `value` is a wrapped value.\n     * @param {?} value\n     * @return {?}\n     */\n    static isWrapped(value) { return value instanceof WrappedValue; }\n}\n/**\n * Represents a basic change from a previous to a new value.\n *\n */\nclass SimpleChange {\n    /**\n     * @param {?} previousValue\n     * @param {?} currentValue\n     * @param {?} firstChange\n     */\n    constructor(previousValue, currentValue, firstChange) {\n        this.previousValue = previousValue;\n        this.currentValue = currentValue;\n        this.firstChange = firstChange;\n    }\n    /**\n     * Check whether the new value is the first value assigned.\n     * @return {?}\n     */\n    isFirstChange() { return this.firstChange; }\n}\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isListLikeIterable(obj) {\n    if (!isJsObject(obj))\n        return false;\n    return Array.isArray(obj) ||\n        (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n            // JS Map are iterables but return entries as [k, v]\n            getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n}\n/**\n * @param {?} a\n * @param {?} b\n * @param {?} comparator\n * @return {?}\n */\nfunction areIterablesEqual(a, b, comparator) {\n    /** @type {?} */\n    const iterator1 = a[getSymbolIterator()]();\n    /** @type {?} */\n    const iterator2 = b[getSymbolIterator()]();\n    while (true) {\n        /** @type {?} */\n        const item1 = iterator1.next();\n        /** @type {?} */\n        const item2 = iterator2.next();\n        if (item1.done && item2.done)\n            return true;\n        if (item1.done || item2.done)\n            return false;\n        if (!comparator(item1.value, item2.value))\n            return false;\n    }\n}\n/**\n * @param {?} obj\n * @param {?} fn\n * @return {?}\n */\nfunction iterateListLike(obj, fn) {\n    if (Array.isArray(obj)) {\n        for (let i = 0; i < obj.length; i++) {\n            fn(obj[i]);\n        }\n    }\n    else {\n        /** @type {?} */\n        const iterator = obj[getSymbolIterator()]();\n        /** @type {?} */\n        let item;\n        while (!((item = iterator.next()).done)) {\n            fn(item.value);\n        }\n    }\n}\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isJsObject(o) {\n    return o !== null && (typeof o === 'function' || typeof o === 'object');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass DefaultIterableDifferFactory {\n    constructor() { }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    supports(obj) { return isListLikeIterable(obj); }\n    /**\n     * @template V\n     * @param {?=} trackByFn\n     * @return {?}\n     */\n    create(trackByFn) {\n        return new DefaultIterableDiffer(trackByFn);\n    }\n}\n/** @type {?} */\nconst trackByIdentity = (index, item) => item;\n/**\n * @deprecated v4.0.0 - Should not be part of public API.\n * @template V\n */\nclass DefaultIterableDiffer {\n    /**\n     * @param {?=} trackByFn\n     */\n    constructor(trackByFn) {\n        this.length = 0;\n        this._linkedRecords = null;\n        this._unlinkedRecords = null;\n        this._previousItHead = null;\n        this._itHead = null;\n        this._itTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._movesHead = null;\n        this._movesTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n        this._identityChangesHead = null;\n        this._identityChangesTail = null;\n        this._trackByFn = trackByFn || trackByIdentity;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    forEachItem(fn) {\n        /** @type {?} */\n        let record;\n        for (record = this._itHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    forEachOperation(fn) {\n        /** @type {?} */\n        let nextIt = this._itHead;\n        /** @type {?} */\n        let nextRemove = this._removalsHead;\n        /** @type {?} */\n        let addRemoveOffset = 0;\n        /** @type {?} */\n        let moveOffsets = null;\n        while (nextIt || nextRemove) {\n            /** @type {?} */\n            const record = !nextRemove ||\n                nextIt && /** @type {?} */ ((nextIt.currentIndex)) < getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ? /** @type {?} */\n                ((nextIt)) :\n                nextRemove;\n            /** @type {?} */\n            const adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n            /** @type {?} */\n            const currentIndex = record.currentIndex;\n            // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n            if (record === nextRemove) {\n                addRemoveOffset--;\n                nextRemove = nextRemove._nextRemoved;\n            }\n            else {\n                nextIt = /** @type {?} */ ((nextIt))._next;\n                if (record.previousIndex == null) {\n                    addRemoveOffset++;\n                }\n                else {\n                    // INVARIANT:  currentIndex < previousIndex\n                    if (!moveOffsets)\n                        moveOffsets = [];\n                    /** @type {?} */\n                    const localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                    /** @type {?} */\n                    const localCurrentIndex = /** @type {?} */ ((currentIndex)) - addRemoveOffset;\n                    if (localMovePreviousIndex != localCurrentIndex) {\n                        for (let i = 0; i < localMovePreviousIndex; i++) {\n                            /** @type {?} */\n                            const offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                            /** @type {?} */\n                            const index = offset + i;\n                            if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                moveOffsets[i] = offset + 1;\n                            }\n                        }\n                        /** @type {?} */\n                        const previousIndex = record.previousIndex;\n                        moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                    }\n                }\n            }\n            if (adjPreviousIndex !== currentIndex) {\n                fn(record, adjPreviousIndex, currentIndex);\n            }\n        }\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    forEachPreviousItem(fn) {\n        /** @type {?} */\n        let record;\n        for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    forEachAddedItem(fn) {\n        /** @type {?} */\n        let record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    forEachMovedItem(fn) {\n        /** @type {?} */\n        let record;\n        for (record = this._movesHead; record !== null; record = record._nextMoved) {\n            fn(record);\n        }\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    forEachRemovedItem(fn) {\n        /** @type {?} */\n        let record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    forEachIdentityChange(fn) {\n        /** @type {?} */\n        let record;\n        for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n            fn(record);\n        }\n    }\n    /**\n     * @param {?} collection\n     * @return {?}\n     */\n    diff(collection) {\n        if (collection == null)\n            collection = [];\n        if (!isListLikeIterable(collection)) {\n            throw new Error(`Error trying to diff '${stringify(collection)}'. Only arrays and iterables are allowed`);\n        }\n        if (this.check(collection)) {\n            return this;\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    onDestroy() { }\n    /**\n     * @param {?} collection\n     * @return {?}\n     */\n    check(collection) {\n        this._reset();\n        /** @type {?} */\n        let record = this._itHead;\n        /** @type {?} */\n        let mayBeDirty = false;\n        /** @type {?} */\n        let index;\n        /** @type {?} */\n        let item;\n        /** @type {?} */\n        let itemTrackBy;\n        if (Array.isArray(collection)) {\n            (/** @type {?} */ (this)).length = collection.length;\n            for (let index = 0; index < this.length; index++) {\n                item = collection[index];\n                itemTrackBy = this._trackByFn(index, item);\n                if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                    record = this._mismatch(record, item, itemTrackBy, index);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = this._verifyReinsertion(record, item, itemTrackBy, index);\n                    }\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                }\n                record = record._next;\n            }\n        }\n        else {\n            index = 0;\n            iterateListLike(collection, (item) => {\n                itemTrackBy = this._trackByFn(index, item);\n                if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                    record = this._mismatch(record, item, itemTrackBy, index);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = this._verifyReinsertion(record, item, itemTrackBy, index);\n                    }\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                }\n                record = record._next;\n                index++;\n            });\n            (/** @type {?} */ (this)).length = index;\n        }\n        this._truncate(record);\n        (/** @type {?} */ (this)).collection = collection;\n        return this.isDirty;\n    }\n    /**\n     * @return {?}\n     */\n    get isDirty() {\n        return this._additionsHead !== null || this._movesHead !== null ||\n            this._removalsHead !== null || this._identityChangesHead !== null;\n    }\n    /**\n     * Reset the state of the change objects to show no changes. This means set previousKey to\n     * currentKey, and clear all of the queues (additions, moves, removals).\n     * Set the previousIndexes of moved and added items to their currentIndexes\n     * Reset the list of additions, moves and removals\n     *\n     * \\@internal\n     * @return {?}\n     */\n    _reset() {\n        if (this.isDirty) {\n            /** @type {?} */\n            let record;\n            /** @type {?} */\n            let nextRecord;\n            for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                record.previousIndex = record.currentIndex;\n            }\n            this._additionsHead = this._additionsTail = null;\n            for (record = this._movesHead; record !== null; record = nextRecord) {\n                record.previousIndex = record.currentIndex;\n                nextRecord = record._nextMoved;\n            }\n            this._movesHead = this._movesTail = null;\n            this._removalsHead = this._removalsTail = null;\n            this._identityChangesHead = this._identityChangesTail = null;\n            // TODO(vicb): when assert gets supported\n            // assert(!this.isDirty);\n        }\n    }\n    /**\n     * This is the core function which handles differences between collections.\n     *\n     * - `record` is the record which we saw at this position last time. If null then it is a new\n     *   item.\n     * - `item` is the current item in the collection\n     * - `index` is the position of the item in the collection\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    _mismatch(record, item, itemTrackBy, index) {\n        /** @type {?} */\n        let previousRecord;\n        if (record === null) {\n            previousRecord = this._itTail;\n        }\n        else {\n            previousRecord = record._prev;\n            // Remove the record from the collection since we know it does not match the item.\n            this._remove(record);\n        }\n        // Attempt to see if we have seen the item before.\n        record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n        if (record !== null) {\n            // We have seen this before, we need to move it forward in the collection.\n            // But first we need to check if identity changed, so we can update in view if necessary\n            if (!looseIdentical(record.item, item))\n                this._addIdentityChange(record, item);\n            this._moveAfter(record, previousRecord, index);\n        }\n        else {\n            // Never seen it, check evicted list.\n            record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (record !== null) {\n                // It is an item which we have evicted earlier: reinsert it back into the list.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._reinsertAfter(record, previousRecord, index);\n            }\n            else {\n                // It is a new item: add it.\n                record =\n                    this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n            }\n        }\n        return record;\n    }\n    /**\n     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n     *\n     * Use case: `[a, a]` => `[b, a, a]`\n     *\n     * If we did not have this check then the insertion of `b` would:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) leave `a` at index `1` as is. <-- this is wrong!\n     *   3) reinsert `a` at index 2. <-- this is wrong!\n     *\n     * The correct behavior is:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) reinsert `a` at index 1.\n     *   3) move `a` at from `1` to `2`.\n     *\n     *\n     * Double check that we have not evicted a duplicate item. We need to check if the item type may\n     * have already been removed:\n     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n     * at the end.\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    _verifyReinsertion(record, item, itemTrackBy, index) {\n        /** @type {?} */\n        let reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n        if (reinsertRecord !== null) {\n            record = this._reinsertAfter(reinsertRecord, /** @type {?} */ ((record._prev)), index);\n        }\n        else if (record.currentIndex != index) {\n            record.currentIndex = index;\n            this._addToMoves(record, index);\n        }\n        return record;\n    }\n    /**\n     * Get rid of any excess {\\@link IterableChangeRecord_}s from the previous collection\n     *\n     * - `record` The first excess {\\@link IterableChangeRecord_}.\n     *\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    _truncate(record) {\n        // Anything after that needs to be removed;\n        while (record !== null) {\n            /** @type {?} */\n            const nextRecord = record._next;\n            this._addToRemovals(this._unlink(record));\n            record = nextRecord;\n        }\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.clear();\n        }\n        if (this._additionsTail !== null) {\n            this._additionsTail._nextAdded = null;\n        }\n        if (this._movesTail !== null) {\n            this._movesTail._nextMoved = null;\n        }\n        if (this._itTail !== null) {\n            this._itTail._next = null;\n        }\n        if (this._removalsTail !== null) {\n            this._removalsTail._nextRemoved = null;\n        }\n        if (this._identityChangesTail !== null) {\n            this._identityChangesTail._nextIdentityChange = null;\n        }\n    }\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    _reinsertAfter(record, prevRecord, index) {\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.remove(record);\n        }\n        /** @type {?} */\n        const prev = record._prevRemoved;\n        /** @type {?} */\n        const next = record._nextRemoved;\n        if (prev === null) {\n            this._removalsHead = next;\n        }\n        else {\n            prev._nextRemoved = next;\n        }\n        if (next === null) {\n            this._removalsTail = prev;\n        }\n        else {\n            next._prevRemoved = prev;\n        }\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    }\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    _moveAfter(record, prevRecord, index) {\n        this._unlink(record);\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    }\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    _addAfter(record, prevRecord, index) {\n        this._insertAfter(record, prevRecord, index);\n        if (this._additionsTail === null) {\n            // TODO(vicb):\n            // assert(this._additionsHead === null);\n            this._additionsTail = this._additionsHead = record;\n        }\n        else {\n            // TODO(vicb):\n            // assert(_additionsTail._nextAdded === null);\n            // assert(record._nextAdded === null);\n            this._additionsTail = this._additionsTail._nextAdded = record;\n        }\n        return record;\n    }\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    _insertAfter(record, prevRecord, index) {\n        /** @type {?} */\n        const next = prevRecord === null ? this._itHead : prevRecord._next;\n        // TODO(vicb):\n        // assert(next != record);\n        // assert(prevRecord != record);\n        record._next = next;\n        record._prev = prevRecord;\n        if (next === null) {\n            this._itTail = record;\n        }\n        else {\n            next._prev = record;\n        }\n        if (prevRecord === null) {\n            this._itHead = record;\n        }\n        else {\n            prevRecord._next = record;\n        }\n        if (this._linkedRecords === null) {\n            this._linkedRecords = new _DuplicateMap();\n        }\n        this._linkedRecords.put(record);\n        record.currentIndex = index;\n        return record;\n    }\n    /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    _remove(record) {\n        return this._addToRemovals(this._unlink(record));\n    }\n    /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    _unlink(record) {\n        if (this._linkedRecords !== null) {\n            this._linkedRecords.remove(record);\n        }\n        /** @type {?} */\n        const prev = record._prev;\n        /** @type {?} */\n        const next = record._next;\n        // TODO(vicb):\n        // assert((record._prev = null) === null);\n        // assert((record._next = null) === null);\n        if (prev === null) {\n            this._itHead = next;\n        }\n        else {\n            prev._next = next;\n        }\n        if (next === null) {\n            this._itTail = prev;\n        }\n        else {\n            next._prev = prev;\n        }\n        return record;\n    }\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} toIndex\n     * @return {?}\n     */\n    _addToMoves(record, toIndex) {\n        // TODO(vicb):\n        // assert(record._nextMoved === null);\n        if (record.previousIndex === toIndex) {\n            return record;\n        }\n        if (this._movesTail === null) {\n            // TODO(vicb):\n            // assert(_movesHead === null);\n            this._movesTail = this._movesHead = record;\n        }\n        else {\n            // TODO(vicb):\n            // assert(_movesTail._nextMoved === null);\n            this._movesTail = this._movesTail._nextMoved = record;\n        }\n        return record;\n    }\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    _addToRemovals(record) {\n        if (this._unlinkedRecords === null) {\n            this._unlinkedRecords = new _DuplicateMap();\n        }\n        this._unlinkedRecords.put(record);\n        record.currentIndex = null;\n        record._nextRemoved = null;\n        if (this._removalsTail === null) {\n            // TODO(vicb):\n            // assert(_removalsHead === null);\n            this._removalsTail = this._removalsHead = record;\n            record._prevRemoved = null;\n        }\n        else {\n            // TODO(vicb):\n            // assert(_removalsTail._nextRemoved === null);\n            // assert(record._nextRemoved === null);\n            record._prevRemoved = this._removalsTail;\n            this._removalsTail = this._removalsTail._nextRemoved = record;\n        }\n        return record;\n    }\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @return {?}\n     */\n    _addIdentityChange(record, item) {\n        record.item = item;\n        if (this._identityChangesTail === null) {\n            this._identityChangesTail = this._identityChangesHead = record;\n        }\n        else {\n            this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n        }\n        return record;\n    }\n}\n/**\n * @template V\n */\nclass IterableChangeRecord_ {\n    /**\n     * @param {?} item\n     * @param {?} trackById\n     */\n    constructor(item, trackById) {\n        this.item = item;\n        this.trackById = trackById;\n        this.currentIndex = null;\n        this.previousIndex = null;\n        /**\n         * \\@internal\n         */\n        this._nextPrevious = null;\n        /**\n         * \\@internal\n         */\n        this._prev = null;\n        /**\n         * \\@internal\n         */\n        this._next = null;\n        /**\n         * \\@internal\n         */\n        this._prevDup = null;\n        /**\n         * \\@internal\n         */\n        this._nextDup = null;\n        /**\n         * \\@internal\n         */\n        this._prevRemoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextRemoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextAdded = null;\n        /**\n         * \\@internal\n         */\n        this._nextMoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextIdentityChange = null;\n    }\n}\n/**\n * @template V\n */\nclass _DuplicateItemRecordList {\n    constructor() {\n        /**\n         * \\@internal\n         */\n        this._head = null;\n        /**\n         * \\@internal\n         */\n        this._tail = null;\n    }\n    /**\n     * Append the record to the list of duplicates.\n     *\n     * Note: by design all records in the list of duplicates hold the same value in record.item.\n     * @param {?} record\n     * @return {?}\n     */\n    add(record) {\n        if (this._head === null) {\n            this._head = this._tail = record;\n            record._nextDup = null;\n            record._prevDup = null;\n        }\n        else {\n            /** @type {?} */ ((\n            // TODO(vicb):\n            // assert(record.item ==  _head.item ||\n            //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n            this._tail))._nextDup = record;\n            record._prevDup = this._tail;\n            record._nextDup = null;\n            this._tail = record;\n        }\n    }\n    /**\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    get(trackById, atOrAfterIndex) {\n        /** @type {?} */\n        let record;\n        for (record = this._head; record !== null; record = record._nextDup) {\n            if ((atOrAfterIndex === null || atOrAfterIndex <= /** @type {?} */ ((record.currentIndex))) &&\n                looseIdentical(record.trackById, trackById)) {\n                return record;\n            }\n        }\n        return null;\n    }\n    /**\n     * Remove one {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * Returns whether the list of duplicates is empty.\n     * @param {?} record\n     * @return {?}\n     */\n    remove(record) {\n        /** @type {?} */\n        const prev = record._prevDup;\n        /** @type {?} */\n        const next = record._nextDup;\n        if (prev === null) {\n            this._head = next;\n        }\n        else {\n            prev._nextDup = next;\n        }\n        if (next === null) {\n            this._tail = prev;\n        }\n        else {\n            next._prevDup = prev;\n        }\n        return this._head === null;\n    }\n}\n/**\n * @template V\n */\nclass _DuplicateMap {\n    constructor() {\n        this.map = new Map();\n    }\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    put(record) {\n        /** @type {?} */\n        const key = record.trackById;\n        /** @type {?} */\n        let duplicates = this.map.get(key);\n        if (!duplicates) {\n            duplicates = new _DuplicateItemRecordList();\n            this.map.set(key, duplicates);\n        }\n        duplicates.add(record);\n    }\n    /**\n     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n     *\n     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n     * have any more `a`s needs to return the second `a`.\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    get(trackById, atOrAfterIndex) {\n        /** @type {?} */\n        const key = trackById;\n        /** @type {?} */\n        const recordList = this.map.get(key);\n        return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n    }\n    /**\n     * Removes a {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * The list of duplicates also is removed from the map if it gets empty.\n     * @param {?} record\n     * @return {?}\n     */\n    remove(record) {\n        /** @type {?} */\n        const key = record.trackById;\n        /** @type {?} */\n        const recordList = /** @type {?} */ ((this.map.get(key)));\n        // Remove the list of duplicates when it gets empty\n        if (recordList.remove(record)) {\n            this.map.delete(key);\n        }\n        return record;\n    }\n    /**\n     * @return {?}\n     */\n    get isEmpty() { return this.map.size === 0; }\n    /**\n     * @return {?}\n     */\n    clear() { this.map.clear(); }\n}\n/**\n * @param {?} item\n * @param {?} addRemoveOffset\n * @param {?} moveOffsets\n * @return {?}\n */\nfunction getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n    /** @type {?} */\n    const previousIndex = item.previousIndex;\n    if (previousIndex === null)\n        return previousIndex;\n    /** @type {?} */\n    let moveOffset = 0;\n    if (moveOffsets && previousIndex < moveOffsets.length) {\n        moveOffset = moveOffsets[previousIndex];\n    }\n    return previousIndex + addRemoveOffset + moveOffset;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @template K, V\n */\nclass DefaultKeyValueDifferFactory {\n    constructor() { }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    supports(obj) { return obj instanceof Map || isJsObject(obj); }\n    /**\n     * @template K, V\n     * @return {?}\n     */\n    create() { return new DefaultKeyValueDiffer(); }\n}\n/**\n * @template K, V\n */\nclass DefaultKeyValueDiffer {\n    constructor() {\n        this._records = new Map();\n        this._mapHead = null;\n        this._appendAfter = null;\n        this._previousMapHead = null;\n        this._changesHead = null;\n        this._changesTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n    }\n    /**\n     * @return {?}\n     */\n    get isDirty() {\n        return this._additionsHead !== null || this._changesHead !== null ||\n            this._removalsHead !== null;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    forEachItem(fn) {\n        /** @type {?} */\n        let record;\n        for (record = this._mapHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    forEachPreviousItem(fn) {\n        /** @type {?} */\n        let record;\n        for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    forEachChangedItem(fn) {\n        /** @type {?} */\n        let record;\n        for (record = this._changesHead; record !== null; record = record._nextChanged) {\n            fn(record);\n        }\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    forEachAddedItem(fn) {\n        /** @type {?} */\n        let record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    forEachRemovedItem(fn) {\n        /** @type {?} */\n        let record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    }\n    /**\n     * @param {?=} map\n     * @return {?}\n     */\n    diff(map) {\n        if (!map) {\n            map = new Map();\n        }\n        else if (!(map instanceof Map || isJsObject(map))) {\n            throw new Error(`Error trying to diff '${stringify(map)}'. Only maps and objects are allowed`);\n        }\n        return this.check(map) ? this : null;\n    }\n    /**\n     * @return {?}\n     */\n    onDestroy() { }\n    /**\n     * Check the current state of the map vs the previous.\n     * The algorithm is optimised for when the keys do no change.\n     * @param {?} map\n     * @return {?}\n     */\n    check(map) {\n        this._reset();\n        /** @type {?} */\n        let insertBefore = this._mapHead;\n        this._appendAfter = null;\n        this._forEach(map, (value, key) => {\n            if (insertBefore && insertBefore.key === key) {\n                this._maybeAddToChanges(insertBefore, value);\n                this._appendAfter = insertBefore;\n                insertBefore = insertBefore._next;\n            }\n            else {\n                /** @type {?} */\n                const record = this._getOrCreateRecordForKey(key, value);\n                insertBefore = this._insertBeforeOrAppend(insertBefore, record);\n            }\n        });\n        // Items remaining at the end of the list have been deleted\n        if (insertBefore) {\n            if (insertBefore._prev) {\n                insertBefore._prev._next = null;\n            }\n            this._removalsHead = insertBefore;\n            for (let record = insertBefore; record !== null; record = record._nextRemoved) {\n                if (record === this._mapHead) {\n                    this._mapHead = null;\n                }\n                this._records.delete(record.key);\n                record._nextRemoved = record._next;\n                record.previousValue = record.currentValue;\n                record.currentValue = null;\n                record._prev = null;\n                record._next = null;\n            }\n        }\n        // Make sure tails have no next records from previous runs\n        if (this._changesTail)\n            this._changesTail._nextChanged = null;\n        if (this._additionsTail)\n            this._additionsTail._nextAdded = null;\n        return this.isDirty;\n    }\n    /**\n     * Inserts a record before `before` or append at the end of the list when `before` is null.\n     *\n     * Notes:\n     * - This method appends at `this._appendAfter`,\n     * - This method updates `this._appendAfter`,\n     * - The return value is the new value for the insertion pointer.\n     * @param {?} before\n     * @param {?} record\n     * @return {?}\n     */\n    _insertBeforeOrAppend(before, record) {\n        if (before) {\n            /** @type {?} */\n            const prev = before._prev;\n            record._next = before;\n            record._prev = prev;\n            before._prev = record;\n            if (prev) {\n                prev._next = record;\n            }\n            if (before === this._mapHead) {\n                this._mapHead = record;\n            }\n            this._appendAfter = before;\n            return before;\n        }\n        if (this._appendAfter) {\n            this._appendAfter._next = record;\n            record._prev = this._appendAfter;\n        }\n        else {\n            this._mapHead = record;\n        }\n        this._appendAfter = record;\n        return null;\n    }\n    /**\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n    _getOrCreateRecordForKey(key, value) {\n        if (this._records.has(key)) {\n            /** @type {?} */\n            const record = /** @type {?} */ ((this._records.get(key)));\n            this._maybeAddToChanges(record, value);\n            /** @type {?} */\n            const prev = record._prev;\n            /** @type {?} */\n            const next = record._next;\n            if (prev) {\n                prev._next = next;\n            }\n            if (next) {\n                next._prev = prev;\n            }\n            record._next = null;\n            record._prev = null;\n            return record;\n        }\n        /** @type {?} */\n        const record = new KeyValueChangeRecord_(key);\n        this._records.set(key, record);\n        record.currentValue = value;\n        this._addToAdditions(record);\n        return record;\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _reset() {\n        if (this.isDirty) {\n            /** @type {?} */\n            let record;\n            // let `_previousMapHead` contain the state of the map before the changes\n            this._previousMapHead = this._mapHead;\n            for (record = this._previousMapHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            // Update `record.previousValue` with the value of the item before the changes\n            // We need to update all changed items (that's those which have been added and changed)\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                record.previousValue = record.currentValue;\n            }\n            for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                record.previousValue = record.currentValue;\n            }\n            this._changesHead = this._changesTail = null;\n            this._additionsHead = this._additionsTail = null;\n            this._removalsHead = null;\n        }\n    }\n    /**\n     * @param {?} record\n     * @param {?} newValue\n     * @return {?}\n     */\n    _maybeAddToChanges(record, newValue) {\n        if (!looseIdentical(newValue, record.currentValue)) {\n            record.previousValue = record.currentValue;\n            record.currentValue = newValue;\n            this._addToChanges(record);\n        }\n    }\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    _addToAdditions(record) {\n        if (this._additionsHead === null) {\n            this._additionsHead = this._additionsTail = record;\n        }\n        else {\n            /** @type {?} */ ((this._additionsTail))._nextAdded = record;\n            this._additionsTail = record;\n        }\n    }\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    _addToChanges(record) {\n        if (this._changesHead === null) {\n            this._changesHead = this._changesTail = record;\n        }\n        else {\n            /** @type {?} */ ((this._changesTail))._nextChanged = record;\n            this._changesTail = record;\n        }\n    }\n    /**\n     * \\@internal\n     * @template K, V\n     * @param {?} obj\n     * @param {?} fn\n     * @return {?}\n     */\n    _forEach(obj, fn) {\n        if (obj instanceof Map) {\n            obj.forEach(fn);\n        }\n        else {\n            Object.keys(obj).forEach(k => fn(obj[k], k));\n        }\n    }\n}\n/**\n * @template K, V\n */\nclass KeyValueChangeRecord_ {\n    /**\n     * @param {?} key\n     */\n    constructor(key) {\n        this.key = key;\n        this.previousValue = null;\n        this.currentValue = null;\n        /**\n         * \\@internal\n         */\n        this._nextPrevious = null;\n        /**\n         * \\@internal\n         */\n        this._next = null;\n        /**\n         * \\@internal\n         */\n        this._prev = null;\n        /**\n         * \\@internal\n         */\n        this._nextAdded = null;\n        /**\n         * \\@internal\n         */\n        this._nextRemoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextChanged = null;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n *\n */\nclass IterableDiffers {\n    /**\n     * @param {?} factories\n     */\n    constructor(factories) { this.factories = factories; }\n    /**\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    static create(factories, parent) {\n        if (parent != null) {\n            /** @type {?} */\n            const copied = parent.factories.slice();\n            factories = factories.concat(copied);\n        }\n        return new IterableDiffers(factories);\n    }\n    /**\n     * Takes an array of {\\@link IterableDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link IterableDiffers} instance with the provided factories and return a new\n     * {\\@link IterableDiffers} instance.\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link IterableDiffer} available.\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     IterableDiffers.extend([new ImmutableListDiffer()])\n     *   ]\n     * })\n     * ```\n     * @param {?} factories\n     * @return {?}\n     */\n    static extend(factories) {\n        return {\n            provide: IterableDiffers,\n            useFactory: (parent) => {\n                if (!parent) {\n                    // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                    // to\n                    // bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend IterableDiffers without a parent injector');\n                }\n                return IterableDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n        };\n    }\n    /**\n     * @param {?} iterable\n     * @return {?}\n     */\n    find(iterable) {\n        /** @type {?} */\n        const factory = this.factories.find(f => f.supports(iterable));\n        if (factory != null) {\n            return factory;\n        }\n        else {\n            throw new Error(`Cannot find a differ supporting object '${iterable}' of type '${getTypeNameForDebugging(iterable)}'`);\n        }\n    }\n}\n/** @nocollapse */ IterableDiffers.ngInjectableDef = defineInjectable({\n    providedIn: 'root',\n    factory: () => new IterableDiffers([new DefaultIterableDifferFactory()])\n});\n/**\n * @param {?} type\n * @return {?}\n */\nfunction getTypeNameForDebugging(type) {\n    return type['name'] || typeof type;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n *\n */\nclass KeyValueDiffers {\n    /**\n     * @param {?} factories\n     */\n    constructor(factories) { this.factories = factories; }\n    /**\n     * @template S\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    static create(factories, parent) {\n        if (parent) {\n            /** @type {?} */\n            const copied = parent.factories.slice();\n            factories = factories.concat(copied);\n        }\n        return new KeyValueDiffers(factories);\n    }\n    /**\n     * Takes an array of {\\@link KeyValueDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link KeyValueDiffers} instance with the provided factories and return a new\n     * {\\@link KeyValueDiffers} instance.\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link KeyValueDiffer} available.\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n     *   ]\n     * })\n     * ```\n     * @template S\n     * @param {?} factories\n     * @return {?}\n     */\n    static extend(factories) {\n        return {\n            provide: KeyValueDiffers,\n            useFactory: (parent) => {\n                if (!parent) {\n                    // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                    // to bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                }\n                return KeyValueDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n        };\n    }\n    /**\n     * @param {?} kv\n     * @return {?}\n     */\n    find(kv) {\n        /** @type {?} */\n        const factory = this.factories.find(f => f.supports(kv));\n        if (factory) {\n            return factory;\n        }\n        throw new Error(`Cannot find a differ supporting object '${kv}'`);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Structural diffing for `Object`s and `Map`s.\n  @type {?} */\nconst keyValDiff = [new DefaultKeyValueDifferFactory()];\n/** *\n * Structural diffing for `Iterable` types such as `Array`s.\n  @type {?} */\nconst iterableDiff = [new DefaultIterableDifferFactory()];\n/** @type {?} */\nconst defaultIterableDiffers = new IterableDiffers(iterableDiff);\n/** @type {?} */\nconst defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst _CORE_PLATFORM_PROVIDERS = [\n    // Set a default platform name for platforms that don't set it explicitly.\n    { provide: PLATFORM_ID, useValue: 'unknown' },\n    { provide: PlatformRef, deps: [Injector] },\n    { provide: TestabilityRegistry, deps: [] },\n    { provide: Console, deps: [] },\n];\n/** *\n * This platform has to be included in any other platform\n *\n * \\@experimental\n  @type {?} */\nconst platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Provide this token to set the locale of your application.\n * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n * DecimalPipe and PercentPipe) and by ICU expressions.\n *\n * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n *\n * \\@usageNotes\n * ### Example\n *\n * ```typescript\n * import { LOCALE_ID } from '\\@angular/core';\n * import { platformBrowserDynamic } from '\\@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n * });\n * ```\n *\n * \\@experimental i18n support is experimental.\n  @type {?} */\nconst LOCALE_ID = new InjectionToken('LocaleId');\n/** *\n * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n * `xlf` or `xlf2`) when you want to translate your application in another language.\n *\n * See the [i18n guide](guide/i18n#merge) for more information.\n *\n * \\@usageNotes\n * ### Example\n *\n * ```typescript\n * import { TRANSLATIONS } from '\\@angular/core';\n * import { platformBrowserDynamic } from '\\@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * // content of your translation file\n * const translations = '....';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n * });\n * ```\n *\n * \\@experimental i18n support is experimental.\n  @type {?} */\nconst TRANSLATIONS = new InjectionToken('Translations');\n/** *\n * Provide this token at bootstrap to set the format of your {\\@link TRANSLATIONS}: `xtb`,\n * `xlf` or `xlf2`.\n *\n * See the [i18n guide](guide/i18n#merge) for more information.\n *\n * \\@usageNotes\n * ### Example\n *\n * ```typescript\n * import { TRANSLATIONS_FORMAT } from '\\@angular/core';\n * import { platformBrowserDynamic } from '\\@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n * });\n * ```\n *\n * \\@experimental i18n support is experimental.\n  @type {?} */\nconst TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n/** @enum {number} */\nconst MissingTranslationStrategy = {\n    Error: 0,\n    Warning: 1,\n    Ignore: 2,\n};\nMissingTranslationStrategy[MissingTranslationStrategy.Error] = 'Error';\nMissingTranslationStrategy[MissingTranslationStrategy.Warning] = 'Warning';\nMissingTranslationStrategy[MissingTranslationStrategy.Ignore] = 'Ignore';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @return {?}\n */\nfunction _iterableDiffersFactory() {\n    return defaultIterableDiffers;\n}\n/**\n * @return {?}\n */\nfunction _keyValueDiffersFactory() {\n    return defaultKeyValueDiffers;\n}\n/**\n * @param {?=} locale\n * @return {?}\n */\nfunction _localeFactory(locale) {\n    return locale || 'en-US';\n}\n/** *\n * A built-in [dependency injection token](guide/glossary#di-token)\n * that is used to configure the root injector for bootstrapping.\n  @type {?} */\nconst APPLICATION_MODULE_PROVIDERS = [\n    {\n        provide: ApplicationRef,\n        useClass: ApplicationRef,\n        deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n    },\n    {\n        provide: ApplicationInitStatus,\n        useClass: ApplicationInitStatus,\n        deps: [[new Optional(), APP_INITIALIZER]]\n    },\n    { provide: Compiler, useClass: Compiler, deps: [] },\n    APP_ID_RANDOM_PROVIDER,\n    { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n    { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n    {\n        provide: LOCALE_ID,\n        useFactory: _localeFactory,\n        deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n    },\n];\n/**\n * Configures the root injector for an app with\n * providers of `\\@angular/core` dependencies that `ApplicationRef` needs\n * to bootstrap components.\n *\n * Re-exported by `BrowserModule`, which is included automatically in the root\n * `AppModule` when you create a new app with the CLI `new` command.\n *\n * \\@experimental\n */\nclass ApplicationModule {\n    /**\n     * @param {?} appRef\n     */\n    constructor(appRef) { }\n}\nApplicationModule.decorators = [\n    { type: NgModule, args: [{ providers: APPLICATION_MODULE_PROVIDERS },] }\n];\n/** @nocollapse */\nApplicationModule.ctorParameters = () => [\n    { type: ApplicationRef }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to resolve resource URLs on `\\@Component` when used with JIT compilation.\n *\n * Example:\n * ```\n * \\@Component({\n *   selector: 'my-comp',\n *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n * })\n * class MyComponnent{\n * }\n *\n * // Calling `renderComponent` will fail because `MyComponent`'s `\\@Compenent.templateUrl`\n * // needs to be resolved because `renderComponent` is synchronous process.\n * // renderComponent(MyComponent);\n *\n * // Calling `resolveComponentResources` will resolve `\\@Compenent.templateUrl` into\n * // `\\@Compenent.template`, which would allow `renderComponent` to proceed in synchronous manner.\n * // Use browser's `fetch` function as the default resource resolution strategy.\n * resolveComponentResources(fetch).then(() => {\n *   // After resolution all URLs have been converted into strings.\n *   renderComponent(MyComponent);\n * });\n *\n * ```\n *\n * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n * to call this method outside JIT mode.\n *\n * @param {?} resourceResolver a function which is responsible to returning a `Promise` of the resolved\n * URL. Browser's `fetch` method is a good default implementation.\n * @return {?}\n */\nfunction resolveComponentResources(resourceResolver) {\n    /** @type {?} */\n    const urlFetches = [];\n    /** @type {?} */\n    const urlMap = new Map();\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    function cachedResourceResolve(url) {\n        /** @type {?} */\n        let promise = urlMap.get(url);\n        if (!promise) {\n            /** @type {?} */\n            const resp = resourceResolver(url);\n            urlMap.set(url, promise = resp.then(unwrapResponse));\n            urlFetches.push(promise);\n        }\n        return promise;\n    }\n    componentResourceResolutionQueue.forEach((component) => {\n        if (component.templateUrl) {\n            cachedResourceResolve(component.templateUrl).then((template) => {\n                component.template = template;\n                component.templateUrl = undefined;\n            });\n        }\n        /** @type {?} */\n        const styleUrls = component.styleUrls;\n        /** @type {?} */\n        const styles = component.styles || (component.styles = []);\n        /** @type {?} */\n        const styleOffset = component.styles.length;\n        styleUrls && styleUrls.forEach((styleUrl, index) => {\n            styles.push(''); // pre-allocate array.\n            cachedResourceResolve(styleUrl).then((style) => {\n                styles[styleOffset + index] = style;\n                styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                if (styleUrls.length == 0) {\n                    component.styleUrls = undefined;\n                }\n            });\n        });\n    });\n    componentResourceResolutionQueue.clear();\n    return Promise.all(urlFetches).then(() => null);\n}\n/** @type {?} */\nconst componentResourceResolutionQueue = new Set();\n/**\n * @param {?} response\n * @return {?}\n */\nfunction unwrapResponse(response) {\n    return typeof response == 'string' ? response : response.text();\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n * that needs sanitizing.\n * Depending upon browser support we must use one of three strategies for doing this.\n * Support: Safari 10.x -> XHR strategy\n * Support: Firefox -> DomParser strategy\n * Default: InertDocument strategy\n */\nclass InertBodyHelper {\n    /**\n     * @param {?} defaultDoc\n     */\n    constructor(defaultDoc) {\n        this.defaultDoc = defaultDoc;\n        this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n        this.inertBodyElement = this.inertDocument.body;\n        if (this.inertBodyElement == null) {\n            /** @type {?} */\n            const inertHtml = this.inertDocument.createElement('html');\n            this.inertDocument.appendChild(inertHtml);\n            this.inertBodyElement = this.inertDocument.createElement('body');\n            inertHtml.appendChild(this.inertBodyElement);\n        }\n        this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n        if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n            // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n            // so use the XHR strategy.\n            this.getInertBodyElement = this.getInertBodyElement_XHR;\n            return;\n        }\n        this.inertBodyElement.innerHTML =\n            '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n        if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n            // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n            // so use the DOMParser strategy, if it is available.\n            // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n            // fall through to the default strategy below.\n            if (isDOMParserAvailable()) {\n                this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                return;\n            }\n        }\n        // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n        this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n    }\n    /**\n     * Use XHR to create and fill an inert body element (on Safari 10.1)\n     * See\n     * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n     * @param {?} html\n     * @return {?}\n     */\n    getInertBodyElement_XHR(html) {\n        // We add these extra elements to ensure that the rest of the content is parsed as expected\n        // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n        // `<head>` tag.\n        html = '<body><remove></remove>' + html + '</body>';\n        try {\n            html = encodeURI(html);\n        }\n        catch (e) {\n            return null;\n        }\n        /** @type {?} */\n        const xhr = new XMLHttpRequest();\n        xhr.responseType = 'document';\n        xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n        xhr.send(null);\n        /** @type {?} */\n        const body = xhr.response.body;\n        body.removeChild(/** @type {?} */ ((body.firstChild)));\n        return body;\n    }\n    /**\n     * Use DOMParser to create and fill an inert body element (on Firefox)\n     * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n     *\n     * @param {?} html\n     * @return {?}\n     */\n    getInertBodyElement_DOMParser(html) {\n        // We add these extra elements to ensure that the rest of the content is parsed as expected\n        // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n        // `<head>` tag.\n        html = '<body><remove></remove>' + html + '</body>';\n        try {\n            /** @type {?} */\n            const body = /** @type {?} */ (new (/** @type {?} */ (window))\n                .DOMParser()\n                .parseFromString(html, 'text/html')\n                .body);\n            body.removeChild(/** @type {?} */ ((body.firstChild)));\n            return body;\n        }\n        catch (e) {\n            return null;\n        }\n    }\n    /**\n     * Use an HTML5 `template` element, if supported, or an inert body element created via\n     * `createHtmlDocument` to create and fill an inert DOM element.\n     * This is the default sane strategy to use if the browser does not require one of the specialised\n     * strategies above.\n     * @param {?} html\n     * @return {?}\n     */\n    getInertBodyElement_InertDocument(html) {\n        /** @type {?} */\n        const templateEl = this.inertDocument.createElement('template');\n        if ('content' in templateEl) {\n            templateEl.innerHTML = html;\n            return templateEl;\n        }\n        this.inertBodyElement.innerHTML = html;\n        // Support: IE 9-11 only\n        // strip custom-namespaced attributes on IE<=11\n        if ((/** @type {?} */ (this.defaultDoc)).documentMode) {\n            this.stripCustomNsAttrs(this.inertBodyElement);\n        }\n        return this.inertBodyElement;\n    }\n    /**\n     * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n     * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n     * 'ns1:xlink:foo').\n     *\n     * This is undesirable since we don't want to allow any of these custom attributes. This method\n     * strips them all.\n     * @param {?} el\n     * @return {?}\n     */\n    stripCustomNsAttrs(el) {\n        /** @type {?} */\n        const elAttrs = el.attributes;\n        // loop backwards so that we can support removals.\n        for (let i = elAttrs.length - 1; 0 < i; i--) {\n            /** @type {?} */\n            const attrib = elAttrs.item(i);\n            /** @type {?} */\n            const attrName = /** @type {?} */ ((attrib)).name;\n            if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                el.removeAttribute(attrName);\n            }\n        }\n        /** @type {?} */\n        let childNode = el.firstChild;\n        while (childNode) {\n            if (childNode.nodeType === Node.ELEMENT_NODE)\n                this.stripCustomNsAttrs(/** @type {?} */ (childNode));\n            childNode = childNode.nextSibling;\n        }\n    }\n}\n/**\n * We need to determine whether the DOMParser exists in the global context.\n * The try-catch is because, on some browsers, trying to access this property\n * on window can actually throw an error.\n *\n * @suppress {uselessCode}\n * @return {?}\n */\nfunction isDOMParserAvailable() {\n    try {\n        return !!(/** @type {?} */ (window)).DOMParser;\n    }\n    catch (e) {\n        return false;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * A pattern that recognizes a commonly useful subset of URLs that are safe.\n *\n * This regular expression matches a subset of URLs that will not cause script\n * execution if used in URL context within a HTML document. Specifically, this\n * regular expression matches if (comment from here on and regex copied from\n * Soy's EscapingConventions):\n * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n * (2) or no protocol.  A protocol must be followed by a colon. The below\n *     allows that by allowing colons only after one of the characters [/?#].\n *     A colon after a hash (#) must be in the fragment.\n *     Otherwise, a colon after a (?) must be in a query.\n *     Otherwise, a colon after a single solidus (/) must be in a path.\n *     Otherwise, a colon after a double solidus (//) must be in the authority\n *     (before port).\n *\n * The pattern disallows &, used in HTML entity declarations before\n * one of the characters in [/?#]. This disallows HTML entities used in the\n * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n * It also disallows HTML entities in the first path part of a relative path,\n * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n * that. More importantly, it disallows masking of a colon,\n * e.g. \"javascript&#58;...\".\n *\n * This regular expression was taken from the Closure sanitization library.\n  @type {?} */\nconst SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n/** *\n * A pattern that matches safe data URLs. Only matches image, video and audio types.\n  @type {?} */\nconst DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n/**\n * @param {?} url\n * @return {?}\n */\nfunction _sanitizeUrl(url) {\n    url = String(url);\n    if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n        return url;\n    if (isDevMode()) {\n        console.warn(`WARNING: sanitizing unsafe URL value ${url} (see http://g.co/ng/security#xss)`);\n    }\n    return 'unsafe:' + url;\n}\n/**\n * @param {?} srcset\n * @return {?}\n */\nfunction sanitizeSrcset(srcset) {\n    srcset = String(srcset);\n    return srcset.split(',').map((srcset) => _sanitizeUrl(srcset.trim())).join(', ');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @param {?} tags\n * @return {?}\n */\nfunction tagSet(tags) {\n    /** @type {?} */\n    const res = {};\n    for (const t of tags.split(','))\n        res[t] = true;\n    return res;\n}\n/**\n * @param {...?} sets\n * @return {?}\n */\nfunction merge$1(...sets) {\n    /** @type {?} */\n    const res = {};\n    for (const s of sets) {\n        for (const v in s) {\n            if (s.hasOwnProperty(v))\n                res[v] = true;\n        }\n    }\n    return res;\n}\n/** @type {?} */\nconst VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n/** @type {?} */\nconst OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n/** @type {?} */\nconst OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n/** @type {?} */\nconst OPTIONAL_END_TAG_ELEMENTS = merge$1(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n/** @type {?} */\nconst BLOCK_ELEMENTS = merge$1(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n    'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n    'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n/** @type {?} */\nconst INLINE_ELEMENTS = merge$1(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n    'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n    'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n/** @type {?} */\nconst VALID_ELEMENTS = merge$1(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n/** @type {?} */\nconst URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n/** @type {?} */\nconst SRCSET_ATTRS = tagSet('srcset');\n/** @type {?} */\nconst HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n    'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n    'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n    'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n    'valign,value,vspace,width');\n/** @type {?} */\nconst VALID_ATTRS = merge$1(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n/**\n * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n * attributes.\n */\nclass SanitizingHtmlSerializer {\n    constructor() {\n        this.sanitizedSomething = false;\n        this.buf = [];\n    }\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    sanitizeChildren(el) {\n        /** @type {?} */\n        let current = /** @type {?} */ ((el.firstChild));\n        while (current) {\n            if (current.nodeType === Node.ELEMENT_NODE) {\n                this.startElement(/** @type {?} */ (current));\n            }\n            else if (current.nodeType === Node.TEXT_NODE) {\n                this.chars(/** @type {?} */ ((current.nodeValue)));\n            }\n            else {\n                // Strip non-element, non-text nodes.\n                this.sanitizedSomething = true;\n            }\n            if (current.firstChild) {\n                current = /** @type {?} */ ((current.firstChild));\n                continue;\n            }\n            while (current) {\n                // Leaving the element. Walk up and to the right, closing tags as we go.\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    this.endElement(/** @type {?} */ (current));\n                }\n                /** @type {?} */\n                let next = this.checkClobberedElement(current, /** @type {?} */ ((current.nextSibling)));\n                if (next) {\n                    current = next;\n                    break;\n                }\n                current = this.checkClobberedElement(current, /** @type {?} */ ((current.parentNode)));\n            }\n        }\n        return this.buf.join('');\n    }\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    startElement(element) {\n        /** @type {?} */\n        const tagName = element.nodeName.toLowerCase();\n        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n            this.sanitizedSomething = true;\n            return;\n        }\n        this.buf.push('<');\n        this.buf.push(tagName);\n        /** @type {?} */\n        const elAttrs = element.attributes;\n        for (let i = 0; i < elAttrs.length; i++) {\n            /** @type {?} */\n            const elAttr = elAttrs.item(i);\n            /** @type {?} */\n            const attrName = /** @type {?} */ ((elAttr)).name;\n            /** @type {?} */\n            const lower = attrName.toLowerCase();\n            if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                this.sanitizedSomething = true;\n                continue;\n            }\n            /** @type {?} */\n            let value = /** @type {?} */ ((elAttr)).value;\n            // TODO(martinprobst): Special case image URIs for data:image/...\n            if (URI_ATTRS[lower])\n                value = _sanitizeUrl(value);\n            if (SRCSET_ATTRS[lower])\n                value = sanitizeSrcset(value);\n            this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n        }\n        this.buf.push('>');\n    }\n    /**\n     * @param {?} current\n     * @return {?}\n     */\n    endElement(current) {\n        /** @type {?} */\n        const tagName = current.nodeName.toLowerCase();\n        if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n            this.buf.push('</');\n            this.buf.push(tagName);\n            this.buf.push('>');\n        }\n    }\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    chars(chars) { this.buf.push(encodeEntities(chars)); }\n    /**\n     * @param {?} node\n     * @param {?} nextNode\n     * @return {?}\n     */\n    checkClobberedElement(node, nextNode) {\n        if (nextNode &&\n            (node.compareDocumentPosition(nextNode) &\n                Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n            throw new Error(`Failed to sanitize html because the element is clobbered: ${((/** @type {?} */ (node))).outerHTML}`);\n        }\n        return nextNode;\n    }\n}\n/** @type {?} */\nconst SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n/** @type {?} */\nconst NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n/**\n * Escapes all potentially dangerous characters, so that the\n * resulting string can be safely inserted into attribute or\n * element text.\n * @param {?} value\n * @return {?}\n */\nfunction encodeEntities(value) {\n    return value.replace(/&/g, '&amp;')\n        .replace(SURROGATE_PAIR_REGEXP, function (match) {\n        /** @type {?} */\n        const hi = match.charCodeAt(0);\n        /** @type {?} */\n        const low = match.charCodeAt(1);\n        return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n    })\n        .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;');\n}\n/** @type {?} */\nlet inertBodyHelper;\n/**\n * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n * the DOM in a browser environment.\n * @param {?} defaultDoc\n * @param {?} unsafeHtmlInput\n * @return {?}\n */\nfunction _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n    /** @type {?} */\n    let inertBodyElement = null;\n    try {\n        inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n        /** @type {?} */\n        let unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n        inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        /** @type {?} */\n        let mXSSAttempts = 5;\n        /** @type {?} */\n        let parsedHtml = unsafeHtml;\n        do {\n            if (mXSSAttempts === 0) {\n                throw new Error('Failed to sanitize html because the input is unstable');\n            }\n            mXSSAttempts--;\n            unsafeHtml = parsedHtml;\n            parsedHtml = /** @type {?} */ ((inertBodyElement)).innerHTML;\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        } while (unsafeHtml !== parsedHtml);\n        /** @type {?} */\n        const sanitizer = new SanitizingHtmlSerializer();\n        /** @type {?} */\n        const safeHtml = sanitizer.sanitizeChildren(/** @type {?} */ (getTemplateContent(/** @type {?} */ ((inertBodyElement)))) || inertBodyElement);\n        if (isDevMode() && sanitizer.sanitizedSomething) {\n            console.warn('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n        }\n        return safeHtml;\n    }\n    finally {\n        // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n        if (inertBodyElement) {\n            /** @type {?} */\n            const parent = getTemplateContent(inertBodyElement) || inertBodyElement;\n            while (parent.firstChild) {\n                parent.removeChild(parent.firstChild);\n            }\n        }\n    }\n}\n/**\n * @param {?} el\n * @return {?}\n */\nfunction getTemplateContent(el) {\n    return 'content' in (/** @type {?} */ (el /** Microsoft/TypeScript#21517 */) /** Microsoft/TypeScript#21517 */) && isTemplateElement(el) ?\n        el.content :\n        null;\n}\n/**\n * @param {?} el\n * @return {?}\n */\nfunction isTemplateElement(el) {\n    return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Regular expression for safe style values.\n *\n * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n *\n * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n * of XSS.\n *\n * The function expression checks only for XSS safety, not for CSS validity.\n *\n * This regular expression was taken from the Closure sanitization library, and augmented for\n * transformation values.\n  @type {?} */\nconst VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n/** @type {?} */\nconst TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n/** @type {?} */\nconst COLOR_FNS = '(?:rgb|hsl)a?';\n/** @type {?} */\nconst GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n/** @type {?} */\nconst CSS3_FNS = '(?:calc|attr)';\n/** @type {?} */\nconst FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n/** @type {?} */\nconst SAFE_STYLE_VALUE = new RegExp(`^(${VALUES}|` +\n    `(?:${TRANSFORMATION_FNS}|${COLOR_FNS}|${GRADIENTS}|${CSS3_FNS})` +\n    `${FN_ARGS})$`, 'g');\n/** *\n * Matches a `url(...)` value with an arbitrary argument as long as it does\n * not contain parentheses.\n *\n * The URL value still needs to be sanitized separately.\n *\n * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n * by observing whether scroll bars are displayed, or character ranges used by a font face\n * definition.\n *\n * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n * binding a URL value without further cooperation from the page will cause an information leak, and\n * if so, it is just a leak, not a full blown XSS vulnerability.\n *\n * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n * code is permissive and allows URLs that sanitize otherwise.\n  @type {?} */\nconst URL_RE = /^url\\(([^)]+)\\)$/;\n/**\n * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n * that neither escape (\\) nor any other character that could result in\n * breaking out of a string parsing context are allowed;\n * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n *\n * This code was taken from the Closure sanitization library.\n * @param {?} value\n * @return {?}\n */\nfunction hasBalancedQuotes(value) {\n    /** @type {?} */\n    let outsideSingle = true;\n    /** @type {?} */\n    let outsideDouble = true;\n    for (let i = 0; i < value.length; i++) {\n        /** @type {?} */\n        const c = value.charAt(i);\n        if (c === '\\'' && outsideDouble) {\n            outsideSingle = !outsideSingle;\n        }\n        else if (c === '\"' && outsideSingle) {\n            outsideDouble = !outsideDouble;\n        }\n    }\n    return outsideSingle && outsideDouble;\n}\n/**\n * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n * value) and returns a value that is safe to use in a browser environment.\n * @param {?} value\n * @return {?}\n */\nfunction _sanitizeStyle(value) {\n    value = String(value).trim(); // Make sure it's actually a string.\n    if (!value)\n        return '';\n    /** @type {?} */\n    const urlMatch = value.match(URL_RE);\n    if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n        value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n        return value; // Safe style values.\n    }\n    if (isDevMode()) {\n        console.warn(`WARNING: sanitizing unsafe style value ${value} (see http://g.co/ng/security#xss).`);\n    }\n    return 'unsafe';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nconst SecurityContext = {\n    NONE: 0,\n    HTML: 1,\n    STYLE: 2,\n    SCRIPT: 3,\n    URL: 4,\n    RESOURCE_URL: 5,\n};\nSecurityContext[SecurityContext.NONE] = 'NONE';\nSecurityContext[SecurityContext.HTML] = 'HTML';\nSecurityContext[SecurityContext.STYLE] = 'STYLE';\nSecurityContext[SecurityContext.SCRIPT] = 'SCRIPT';\nSecurityContext[SecurityContext.URL] = 'URL';\nSecurityContext[SecurityContext.RESOURCE_URL] = 'RESOURCE_URL';\n/**\n * Sanitizer is used by the views to sanitize potentially dangerous values.\n *\n *\n * @abstract\n */\nclass Sanitizer {\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @param {?} view\n * @param {?} priorInitState\n * @param {?} newInitState\n * @return {?}\n */\nfunction shiftInitState(view, priorInitState, newInitState) {\n    /** @type {?} */\n    const state = view.state;\n    /** @type {?} */\n    const initState = state & 1792 /* InitState_Mask */;\n    if (initState === priorInitState) {\n        view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n        view.initIndex = -1;\n        return true;\n    }\n    return initState === newInitState;\n}\n/**\n * @param {?} view\n * @param {?} initState\n * @param {?} index\n * @return {?}\n */\nfunction shouldCallLifecycleInitHook(view, initState, index) {\n    if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n        view.initIndex = index + 1;\n        return true;\n    }\n    return false;\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asTextData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asElementData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asProviderData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asPureExpressionData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asQueryList(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * @abstract\n */\nclass DebugContext {\n}\n/** *\n * This object is used to prevent cycles in the source files and to have a place where\n * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n  @type {?} */\nconst Services = {\n    setCurrentNode: /** @type {?} */ ((undefined)),\n    createRootView: /** @type {?} */ ((undefined)),\n    createEmbeddedView: /** @type {?} */ ((undefined)),\n    createComponentView: /** @type {?} */ ((undefined)),\n    createNgModuleRef: /** @type {?} */ ((undefined)),\n    overrideProvider: /** @type {?} */ ((undefined)),\n    overrideComponentView: /** @type {?} */ ((undefined)),\n    clearOverrides: /** @type {?} */ ((undefined)),\n    checkAndUpdateView: /** @type {?} */ ((undefined)),\n    checkNoChangesView: /** @type {?} */ ((undefined)),\n    destroyView: /** @type {?} */ ((undefined)),\n    resolveDep: /** @type {?} */ ((undefined)),\n    createDebugContext: /** @type {?} */ ((undefined)),\n    handleEvent: /** @type {?} */ ((undefined)),\n    updateDirectives: /** @type {?} */ ((undefined)),\n    updateRenderer: /** @type {?} */ ((undefined)),\n    dirtyParentQueries: /** @type {?} */ ((undefined)),\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @param {?} context\n * @param {?} oldValue\n * @param {?} currValue\n * @param {?} isFirstCheck\n * @return {?}\n */\nfunction expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n    /** @type {?} */\n    let msg = `ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '${oldValue}'. Current value: '${currValue}'.`;\n    if (isFirstCheck) {\n        msg +=\n            ` It seems like the view has been created after its parent and its children have been dirty checked.` +\n                ` Has it been created in a change detection hook ?`;\n    }\n    return viewDebugError(msg, context);\n}\n/**\n * @param {?} err\n * @param {?} context\n * @return {?}\n */\nfunction viewWrappedDebugError(err, context) {\n    if (!(err instanceof Error)) {\n        // errors that are not Error instances don't have a stack,\n        // so it is ok to wrap them into a new Error object...\n        err = new Error(err.toString());\n    }\n    _addDebugContext(err, context);\n    return err;\n}\n/**\n * @param {?} msg\n * @param {?} context\n * @return {?}\n */\nfunction viewDebugError(msg, context) {\n    /** @type {?} */\n    const err = new Error(msg);\n    _addDebugContext(err, context);\n    return err;\n}\n/**\n * @param {?} err\n * @param {?} context\n * @return {?}\n */\nfunction _addDebugContext(err, context) {\n    (/** @type {?} */ (err))[ERROR_DEBUG_CONTEXT] = context;\n    (/** @type {?} */ (err))[ERROR_LOGGER] = context.logError.bind(context);\n}\n/**\n * @param {?} err\n * @return {?}\n */\nfunction isViewDebugError(err) {\n    return !!getDebugContext(err);\n}\n/**\n * @param {?} action\n * @return {?}\n */\nfunction viewDestroyedError(action) {\n    return new Error(`ViewDestroyedError: Attempt to use a destroyed view: ${action}`);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst NOOP = () => { };\n/** @type {?} */\nconst _tokenKeyCache = new Map();\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenKey(token) {\n    /** @type {?} */\n    let key = _tokenKeyCache.get(token);\n    if (!key) {\n        key = stringify(token) + '_' + _tokenKeyCache.size;\n        _tokenKeyCache.set(token, key);\n    }\n    return key;\n}\n/**\n * @param {?} view\n * @param {?} nodeIdx\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction unwrapValue(view, nodeIdx, bindingIdx, value) {\n    if (WrappedValue.isWrapped(value)) {\n        value = WrappedValue.unwrap(value);\n        /** @type {?} */\n        const globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n        /** @type {?} */\n        const oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n        view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n    }\n    return value;\n}\n/** @type {?} */\nconst UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n/** @type {?} */\nconst EMPTY_RENDERER_TYPE_ID = '$$empty';\n/**\n * @param {?} values\n * @return {?}\n */\nfunction createRendererType2(values) {\n    return {\n        id: UNDEFINED_RENDERER_TYPE_ID,\n        styles: values.styles,\n        encapsulation: values.encapsulation,\n        data: values.data\n    };\n}\n/** @type {?} */\nlet _renderCompCount = 0;\n/**\n * @param {?=} type\n * @return {?}\n */\nfunction resolveRendererType2(type) {\n    if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n        /** @type {?} */\n        const isFilled = ((type.encapsulation != null && type.encapsulation !== ViewEncapsulation.None) ||\n            type.styles.length || Object.keys(type.data).length);\n        if (isFilled) {\n            type.id = `c${_renderCompCount++}`;\n        }\n        else {\n            type.id = EMPTY_RENDERER_TYPE_ID;\n        }\n    }\n    if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n        type = null;\n    }\n    return type || null;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkBinding(view, def, bindingIdx, value) {\n    /** @type {?} */\n    const oldValues = view.oldValues;\n    if ((view.state & 2 /* FirstCheck */) ||\n        !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkAndUpdateBinding(view, def, bindingIdx, value) {\n    if (checkBinding(view, def, bindingIdx, value)) {\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return true;\n    }\n    return false;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkBindingNoChanges(view, def, bindingIdx, value) {\n    /** @type {?} */\n    const oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n    if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n        /** @type {?} */\n        const bindingName = def.bindings[bindingIdx].name;\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), `${bindingName}: ${oldValue}`, `${bindingName}: ${value}`, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction markParentViewsForCheck(view) {\n    /** @type {?} */\n    let currView = view;\n    while (currView) {\n        if (currView.def.flags & 2 /* OnPush */) {\n            currView.state |= 8 /* ChecksEnabled */;\n        }\n        currView = currView.viewContainerParent || currView.parent;\n    }\n}\n/**\n * @param {?} view\n * @param {?} endView\n * @return {?}\n */\nfunction markParentViewsForCheckProjectedViews(view, endView) {\n    /** @type {?} */\n    let currView = view;\n    while (currView && currView !== endView) {\n        currView.state |= 64 /* CheckProjectedViews */;\n        currView = currView.viewContainerParent || currView.parent;\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} eventName\n * @param {?} event\n * @return {?}\n */\nfunction dispatchEvent(view, nodeIndex, eventName, event) {\n    try {\n        /** @type {?} */\n        const nodeDef = view.def.nodes[nodeIndex];\n        /** @type {?} */\n        const startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n            asElementData(view, nodeIndex).componentView :\n            view;\n        markParentViewsForCheck(startView);\n        return Services.handleEvent(view, nodeIndex, eventName, event);\n    }\n    catch (e) {\n        // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n        view.root.errorHandler.handleError(e);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction declaredViewContainer(view) {\n    if (view.parent) {\n        /** @type {?} */\n        const parentView = view.parent;\n        return asElementData(parentView, /** @type {?} */ ((view.parentNodeDef)).nodeIndex);\n    }\n    return null;\n}\n/**\n * for component views, this is the host element.\n * for embedded views, this is the index of the parent node\n * that contains the view container.\n * @param {?} view\n * @return {?}\n */\nfunction viewParentEl(view) {\n    /** @type {?} */\n    const parentView = view.parent;\n    if (parentView) {\n        return /** @type {?} */ ((view.parentNodeDef)).parent;\n    }\n    else {\n        return null;\n    }\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction renderNode(view, def) {\n    switch (def.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return asElementData(view, def.nodeIndex).renderElement;\n        case 2 /* TypeText */:\n            return asTextData(view, def.nodeIndex).renderText;\n    }\n}\n/**\n * @param {?} target\n * @param {?} name\n * @return {?}\n */\nfunction elementEventFullName(target, name) {\n    return target ? `${target}:${name}` : name;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction isComponentView(view) {\n    return !!view.parent && !!(/** @type {?} */ ((view.parentNodeDef)).flags & 32768 /* Component */);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction isEmbeddedView(view) {\n    return !!view.parent && !(/** @type {?} */ ((view.parentNodeDef)).flags & 32768 /* Component */);\n}\n/**\n * @param {?} queryId\n * @return {?}\n */\nfunction filterQueryId(queryId) {\n    return 1 << (queryId % 32);\n}\n/**\n * @param {?} matchedQueriesDsl\n * @return {?}\n */\nfunction splitMatchedQueriesDsl(matchedQueriesDsl) {\n    /** @type {?} */\n    const matchedQueries = {};\n    /** @type {?} */\n    let matchedQueryIds = 0;\n    /** @type {?} */\n    const references = {};\n    if (matchedQueriesDsl) {\n        matchedQueriesDsl.forEach(([queryId, valueType]) => {\n            if (typeof queryId === 'number') {\n                matchedQueries[queryId] = valueType;\n                matchedQueryIds |= filterQueryId(queryId);\n            }\n            else {\n                references[queryId] = valueType;\n            }\n        });\n    }\n    return { matchedQueries, references, matchedQueryIds };\n}\n/**\n * @param {?} deps\n * @param {?=} sourceName\n * @return {?}\n */\nfunction splitDepsDsl(deps, sourceName) {\n    return deps.map(value => {\n        /** @type {?} */\n        let token;\n        /** @type {?} */\n        let flags;\n        if (Array.isArray(value)) {\n            [flags, token] = value;\n        }\n        else {\n            flags = 0 /* None */;\n            token = value;\n        }\n        if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n            Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n        }\n        return { flags, token, tokenKey: tokenKey(token) };\n    });\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction getParentRenderElement(view, renderHost, def) {\n    /** @type {?} */\n    let renderParent = def.renderParent;\n    if (renderParent) {\n        if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n            (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n            (/** @type {?} */ ((renderParent.element)).componentRendererType && /** @type {?} */ ((/** @type {?} */ ((renderParent.element)).componentRendererType)).encapsulation === ViewEncapsulation.Native)) {\n            // only children of non components, or children of components with native encapsulation should\n            // be attached.\n            return asElementData(view, /** @type {?} */ ((def.renderParent)).nodeIndex).renderElement;\n        }\n    }\n    else {\n        return renderHost;\n    }\n}\n/** @type {?} */\nconst DEFINITION_CACHE = new WeakMap();\n/**\n * @template D\n * @param {?} factory\n * @return {?}\n */\nfunction resolveDefinition(factory) {\n    /** @type {?} */\n    let value = /** @type {?} */ (((DEFINITION_CACHE.get(factory))));\n    if (!value) {\n        value = factory(() => NOOP);\n        value.factory = factory;\n        DEFINITION_CACHE.set(factory, value);\n    }\n    return value;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction rootRenderNodes(view) {\n    /** @type {?} */\n    const renderNodes = [];\n    visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n    return renderNodes;\n}\n/**\n * @param {?} view\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n    // We need to re-compute the parent node in case the nodes have been moved around manually\n    if (action === 3 /* RemoveChild */) {\n        parentNode = view.renderer.parentNode(renderNode(view, /** @type {?} */ ((view.def.lastRenderRootNode))));\n    }\n    visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n}\n/**\n * @param {?} view\n * @param {?} action\n * @param {?} startIndex\n * @param {?} endIndex\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n    for (let i = startIndex; i <= endIndex; i++) {\n        /** @type {?} */\n        const nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n            visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n}\n/**\n * @param {?} view\n * @param {?} ngContentIndex\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n    /** @type {?} */\n    let compView = view;\n    while (compView && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    /** @type {?} */\n    const hostView = /** @type {?} */ ((compView)).parent;\n    /** @type {?} */\n    const hostElDef = viewParentEl(/** @type {?} */ ((compView)));\n    /** @type {?} */\n    const startIndex = /** @type {?} */ ((hostElDef)).nodeIndex + 1;\n    /** @type {?} */\n    const endIndex = /** @type {?} */ ((hostElDef)).nodeIndex + /** @type {?} */ ((hostElDef)).childCount;\n    for (let i = startIndex; i <= endIndex; i++) {\n        /** @type {?} */\n        const nodeDef = /** @type {?} */ ((hostView)).def.nodes[i];\n        if (nodeDef.ngContentIndex === ngContentIndex) {\n            visitRenderNode(/** @type {?} */ ((hostView)), nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n    if (!/** @type {?} */ ((hostView)).parent) {\n        /** @type {?} */\n        const projectedNodes = view.root.projectableNodes[ngContentIndex];\n        if (projectedNodes) {\n            for (let i = 0; i < projectedNodes.length; i++) {\n                execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n            }\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n    if (nodeDef.flags & 8 /* TypeNgContent */) {\n        visitProjectedRenderNodes(view, /** @type {?} */ ((nodeDef.ngContent)).index, action, parentNode, nextSibling, target);\n    }\n    else {\n        /** @type {?} */\n        const rn = renderNode(view, nodeDef);\n        if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n            (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n            // Note: we might need to do both actions.\n            if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                /** @type {?} */\n                const compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n            }\n        }\n        else {\n            execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n        }\n        if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n            /** @type {?} */\n            const embeddedViews = /** @type {?} */ ((asElementData(view, nodeDef.nodeIndex).viewContainer))._embeddedViews;\n            for (let k = 0; k < embeddedViews.length; k++) {\n                visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n            }\n        }\n        if (nodeDef.flags & 1 /* TypeElement */ && !/** @type {?} */ ((nodeDef.element)).name) {\n            visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} renderNode\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n    /** @type {?} */\n    const renderer = view.renderer;\n    switch (action) {\n        case 1 /* AppendChild */:\n            renderer.appendChild(parentNode, renderNode);\n            break;\n        case 2 /* InsertBefore */:\n            renderer.insertBefore(parentNode, renderNode, nextSibling);\n            break;\n        case 3 /* RemoveChild */:\n            renderer.removeChild(parentNode, renderNode);\n            break;\n        case 0 /* Collect */:\n            /** @type {?} */ ((target)).push(renderNode);\n            break;\n    }\n}\n/** @type {?} */\nconst NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n/**\n * @param {?} name\n * @return {?}\n */\nfunction splitNamespace(name) {\n    if (name[0] === ':') {\n        /** @type {?} */\n        const match = /** @type {?} */ ((name.match(NS_PREFIX_RE)));\n        return [match[1], match[2]];\n    }\n    return ['', name];\n}\n/**\n * @param {?} bindings\n * @return {?}\n */\nfunction calcBindingFlags(bindings) {\n    /** @type {?} */\n    let flags = 0;\n    for (let i = 0; i < bindings.length; i++) {\n        flags |= bindings[i].flags;\n    }\n    return flags;\n}\n/**\n * @param {?} valueCount\n * @param {?} constAndInterp\n * @return {?}\n */\nfunction interpolate(valueCount, constAndInterp) {\n    /** @type {?} */\n    let result = '';\n    for (let i = 0; i < valueCount * 2; i = i + 2) {\n        result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n    }\n    return result + constAndInterp[valueCount * 2];\n}\n/**\n * @param {?} valueCount\n * @param {?} c0\n * @param {?} a1\n * @param {?} c1\n * @param {?=} a2\n * @param {?=} c2\n * @param {?=} a3\n * @param {?=} c3\n * @param {?=} a4\n * @param {?=} c4\n * @param {?=} a5\n * @param {?=} c5\n * @param {?=} a6\n * @param {?=} c6\n * @param {?=} a7\n * @param {?=} c7\n * @param {?=} a8\n * @param {?=} c8\n * @param {?=} a9\n * @param {?=} c9\n * @return {?}\n */\nfunction inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n    switch (valueCount) {\n        case 1:\n            return c0 + _toStringWithNull(a1) + c1;\n        case 2:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n        case 3:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3;\n        case 4:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4;\n        case 5:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n        case 6:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n        case 7:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7;\n        case 8:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n        case 9:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n        default:\n            throw new Error(`Does not support more than 9 expressions`);\n    }\n}\n/**\n * @param {?} v\n * @return {?}\n */\nfunction _toStringWithNull(v) {\n    return v != null ? v.toString() : '';\n}\n/** @type {?} */\nconst EMPTY_ARRAY$2 = [];\n/** @type {?} */\nconst EMPTY_MAP = {};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} ngContentIndex\n * @param {?} childCount\n * @param {?=} handleEvent\n * @param {?=} templateFactory\n * @return {?}\n */\nfunction anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n    flags |= 1 /* TypeElement */;\n    const { matchedQueries, references, matchedQueryIds } = splitMatchedQueriesDsl(matchedQueriesDsl);\n    /** @type {?} */\n    const template = templateFactory ? resolveDefinition(templateFactory) : null;\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        flags,\n        checkIndex: -1,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries, matchedQueryIds, references, ngContentIndex, childCount,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: {\n            ns: null,\n            name: null,\n            attrs: null, template,\n            componentProvider: null,\n            componentView: null,\n            componentRendererType: null,\n            publicProviders: null,\n            allProviders: null,\n            handleEvent: handleEvent || NOOP\n        },\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\n/**\n * @param {?} checkIndex\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} ngContentIndex\n * @param {?} childCount\n * @param {?} namespaceAndName\n * @param {?=} fixedAttrs\n * @param {?=} bindings\n * @param {?=} outputs\n * @param {?=} handleEvent\n * @param {?=} componentView\n * @param {?=} componentRendererType\n * @return {?}\n */\nfunction elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs = [], bindings, outputs, handleEvent, componentView, componentRendererType) {\n    if (!handleEvent) {\n        handleEvent = NOOP;\n    }\n    const { matchedQueries, references, matchedQueryIds } = splitMatchedQueriesDsl(matchedQueriesDsl);\n    /** @type {?} */\n    let ns = /** @type {?} */ ((null));\n    /** @type {?} */\n    let name = /** @type {?} */ ((null));\n    if (namespaceAndName) {\n        [ns, name] = splitNamespace(namespaceAndName);\n    }\n    bindings = bindings || [];\n    /** @type {?} */\n    const bindingDefs = new Array(bindings.length);\n    for (let i = 0; i < bindings.length; i++) {\n        const [bindingFlags, namespaceAndName, suffixOrSecurityContext] = bindings[i];\n        const [ns, name] = splitNamespace(namespaceAndName);\n        /** @type {?} */\n        let securityContext = /** @type {?} */ ((undefined));\n        /** @type {?} */\n        let suffix = /** @type {?} */ ((undefined));\n        switch (bindingFlags & 15 /* Types */) {\n            case 4 /* TypeElementStyle */:\n                suffix = /** @type {?} */ (suffixOrSecurityContext);\n                break;\n            case 1 /* TypeElementAttribute */:\n            case 8 /* TypeProperty */:\n                securityContext = /** @type {?} */ (suffixOrSecurityContext);\n                break;\n        }\n        bindingDefs[i] =\n            { flags: bindingFlags, ns, name, nonMinifiedName: name, securityContext, suffix };\n    }\n    outputs = outputs || [];\n    /** @type {?} */\n    const outputDefs = new Array(outputs.length);\n    for (let i = 0; i < outputs.length; i++) {\n        const [target, eventName] = outputs[i];\n        outputDefs[i] = {\n            type: 0 /* ElementOutput */,\n            target: /** @type {?} */ (target), eventName,\n            propName: null\n        };\n    }\n    fixedAttrs = fixedAttrs || [];\n    /** @type {?} */\n    const attrs = /** @type {?} */ (fixedAttrs.map(([namespaceAndName, value]) => {\n        const [ns, name] = splitNamespace(namespaceAndName);\n        return [ns, name, value];\n    }));\n    componentRendererType = resolveRendererType2(componentRendererType);\n    if (componentView) {\n        flags |= 33554432 /* ComponentView */;\n    }\n    flags |= 1 /* TypeElement */;\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex,\n        flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries, matchedQueryIds, references, ngContentIndex, childCount,\n        bindings: bindingDefs,\n        bindingFlags: calcBindingFlags(bindingDefs),\n        outputs: outputDefs,\n        element: {\n            ns,\n            name,\n            attrs,\n            template: null,\n            // will bet set by the view definition\n            componentProvider: null,\n            componentView: componentView || null,\n            componentRendererType: componentRendererType,\n            publicProviders: null,\n            allProviders: null,\n            handleEvent: handleEvent || NOOP,\n        },\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction createElement(view, renderHost, def) {\n    /** @type {?} */\n    const elDef = /** @type {?} */ ((def.element));\n    /** @type {?} */\n    const rootSelectorOrNode = view.root.selectorOrNode;\n    /** @type {?} */\n    const renderer = view.renderer;\n    /** @type {?} */\n    let el;\n    if (view.parent || !rootSelectorOrNode) {\n        if (elDef.name) {\n            el = renderer.createElement(elDef.name, elDef.ns);\n        }\n        else {\n            el = renderer.createComment('');\n        }\n        /** @type {?} */\n        const parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, el);\n        }\n    }\n    else {\n        el = renderer.selectRootElement(rootSelectorOrNode);\n    }\n    if (elDef.attrs) {\n        for (let i = 0; i < elDef.attrs.length; i++) {\n            const [ns, name, value] = elDef.attrs[i];\n            renderer.setAttribute(el, name, value, ns);\n        }\n    }\n    return el;\n}\n/**\n * @param {?} view\n * @param {?} compView\n * @param {?} def\n * @param {?} el\n * @return {?}\n */\nfunction listenToElementOutputs(view, compView, def, el) {\n    for (let i = 0; i < def.outputs.length; i++) {\n        /** @type {?} */\n        const output = def.outputs[i];\n        /** @type {?} */\n        const handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n        /** @type {?} */\n        let listenTarget = output.target;\n        /** @type {?} */\n        let listenerView = view;\n        if (output.target === 'component') {\n            listenTarget = null;\n            listenerView = compView;\n        }\n        /** @type {?} */\n        const disposable = /** @type {?} */ (listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure)); /** @type {?} */\n        ((view.disposables))[def.outputIndex + i] = disposable;\n    }\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} eventName\n * @return {?}\n */\nfunction renderEventHandlerClosure(view, index, eventName) {\n    return (event) => dispatchEvent(view, index, eventName, event);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    /** @type {?} */\n    const bindLen = def.bindings.length;\n    /** @type {?} */\n    let changed = false;\n    if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n        changed = true;\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateElementDynamic(view, def, values) {\n    /** @type {?} */\n    let changed = false;\n    for (let i = 0; i < values.length; i++) {\n        if (checkAndUpdateElementValue(view, def, i, values[i]))\n            changed = true;\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkAndUpdateElementValue(view, def, bindingIdx, value) {\n    if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n        return false;\n    }\n    /** @type {?} */\n    const binding = def.bindings[bindingIdx];\n    /** @type {?} */\n    const elData = asElementData(view, def.nodeIndex);\n    /** @type {?} */\n    const renderNode$$1 = elData.renderElement;\n    /** @type {?} */\n    const name = /** @type {?} */ ((binding.name));\n    switch (binding.flags & 15 /* Types */) {\n        case 1 /* TypeElementAttribute */:\n            setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n            break;\n        case 2 /* TypeElementClass */:\n            setElementClass(view, renderNode$$1, name, value);\n            break;\n        case 4 /* TypeElementStyle */:\n            setElementStyle(view, binding, renderNode$$1, name, value);\n            break;\n        case 8 /* TypeProperty */:\n            /** @type {?} */\n            const bindView = (def.flags & 33554432 /* ComponentView */ &&\n                binding.flags & 32 /* SyntheticHostProperty */) ?\n                elData.componentView :\n                view;\n            setElementProperty(bindView, binding, renderNode$$1, name, value);\n            break;\n    }\n    return true;\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} ns\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n    /** @type {?} */\n    const securityContext = binding.securityContext;\n    /** @type {?} */\n    let renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    renderValue = renderValue != null ? renderValue.toString() : null;\n    /** @type {?} */\n    const renderer = view.renderer;\n    if (value != null) {\n        renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n    }\n    else {\n        renderer.removeAttribute(renderNode$$1, name, ns);\n    }\n}\n/**\n * @param {?} view\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementClass(view, renderNode$$1, name, value) {\n    /** @type {?} */\n    const renderer = view.renderer;\n    if (value) {\n        renderer.addClass(renderNode$$1, name);\n    }\n    else {\n        renderer.removeClass(renderNode$$1, name);\n    }\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementStyle(view, binding, renderNode$$1, name, value) {\n    /** @type {?} */\n    let renderValue = view.root.sanitizer.sanitize(SecurityContext.STYLE, /** @type {?} */ (value));\n    if (renderValue != null) {\n        renderValue = renderValue.toString();\n        /** @type {?} */\n        const unit = binding.suffix;\n        if (unit != null) {\n            renderValue = renderValue + unit;\n        }\n    }\n    else {\n        renderValue = null;\n    }\n    /** @type {?} */\n    const renderer = view.renderer;\n    if (renderValue != null) {\n        renderer.setStyle(renderNode$$1, name, renderValue);\n    }\n    else {\n        renderer.removeStyle(renderNode$$1, name);\n    }\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementProperty(view, binding, renderNode$$1, name, value) {\n    /** @type {?} */\n    const securityContext = binding.securityContext;\n    /** @type {?} */\n    let renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    view.renderer.setProperty(renderNode$$1, name, renderValue);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst UNDEFINED_VALUE = new Object();\n/** @type {?} */\nconst InjectorRefTokenKey = tokenKey(Injector);\n/** @type {?} */\nconst INJECTORRefTokenKey = tokenKey(INJECTOR);\n/** @type {?} */\nconst NgModuleRefTokenKey = tokenKey(NgModuleRef);\n/**\n * @param {?} flags\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @return {?}\n */\nfunction moduleProvideDef(flags, token, value, deps) {\n    // Need to resolve forwardRefs as e.g. for `useValue` we\n    // lowered the expression and then stopped evaluating it,\n    // i.e. also didn't unwrap it.\n    value = resolveForwardRef(value);\n    /** @type {?} */\n    const depDefs = splitDepsDsl(deps, stringify(token));\n    return {\n        // will bet set by the module definition\n        index: -1,\n        deps: depDefs, flags, token, value\n    };\n}\n/**\n * @param {?} providers\n * @return {?}\n */\nfunction moduleDef(providers) {\n    /** @type {?} */\n    const providersByKey = {};\n    /** @type {?} */\n    const modules = [];\n    /** @type {?} */\n    let isRoot = false;\n    for (let i = 0; i < providers.length; i++) {\n        /** @type {?} */\n        const provider = providers[i];\n        if (provider.token === APP_ROOT && provider.value === true) {\n            isRoot = true;\n        }\n        if (provider.flags & 1073741824 /* TypeNgModule */) {\n            modules.push(provider.token);\n        }\n        provider.index = i;\n        providersByKey[tokenKey(provider.token)] = provider;\n    }\n    return {\n        // Will be filled later...\n        factory: null,\n        providersByKey,\n        providers,\n        modules,\n        isRoot,\n    };\n}\n/**\n * @param {?} data\n * @return {?}\n */\nfunction initNgModule(data) {\n    /** @type {?} */\n    const def = data._def;\n    /** @type {?} */\n    const providers = data._providers = new Array(def.providers.length);\n    for (let i = 0; i < def.providers.length; i++) {\n        /** @type {?} */\n        const provDef = def.providers[i];\n        if (!(provDef.flags & 4096 /* LazyProvider */)) {\n            // Make sure the provider has not been already initialized outside this loop.\n            if (providers[i] === undefined) {\n                providers[i] = _createProviderInstance(data, provDef);\n            }\n        }\n    }\n}\n/**\n * @param {?} data\n * @param {?} depDef\n * @param {?=} notFoundValue\n * @return {?}\n */\nfunction resolveNgModuleDep(data, depDef, notFoundValue = Injector.THROW_IF_NOT_FOUND) {\n    /** @type {?} */\n    const former = setCurrentInjector(data);\n    try {\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        if (depDef.flags & 1 /* SkipSelf */) {\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        /** @type {?} */\n        const tokenKey$$1 = depDef.tokenKey;\n        switch (tokenKey$$1) {\n            case InjectorRefTokenKey:\n            case INJECTORRefTokenKey:\n            case NgModuleRefTokenKey:\n                return data;\n        }\n        /** @type {?} */\n        const providerDef = data._def.providersByKey[tokenKey$$1];\n        if (providerDef) {\n            /** @type {?} */\n            let providerInstance = data._providers[providerDef.index];\n            if (providerInstance === undefined) {\n                providerInstance = data._providers[providerDef.index] =\n                    _createProviderInstance(data, providerDef);\n            }\n            return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n        }\n        else if (depDef.token.ngInjectableDef && targetsModule(data, depDef.token.ngInjectableDef)) {\n            /** @type {?} */\n            const injectableDef = /** @type {?} */ (depDef.token.ngInjectableDef);\n            /** @type {?} */\n            const index = data._providers.length;\n            data._def.providersByKey[depDef.tokenKey] = {\n                flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                value: injectableDef.factory,\n                deps: [], index,\n                token: depDef.token,\n            };\n            data._providers[index] = UNDEFINED_VALUE;\n            return (data._providers[index] =\n                _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n        }\n        else if (depDef.flags & 4 /* Self */) {\n            return notFoundValue;\n        }\n        return data._parent.get(depDef.token, notFoundValue);\n    }\n    finally {\n        setCurrentInjector(former);\n    }\n}\n/**\n * @param {?} ngModule\n * @param {?} scope\n * @return {?}\n */\nfunction moduleTransitivelyPresent(ngModule, scope) {\n    return ngModule._def.modules.indexOf(scope) > -1;\n}\n/**\n * @param {?} ngModule\n * @param {?} def\n * @return {?}\n */\nfunction targetsModule(ngModule, def) {\n    return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n        def.providedIn === 'root' && ngModule._def.isRoot);\n}\n/**\n * @param {?} ngModule\n * @param {?} providerDef\n * @return {?}\n */\nfunction _createProviderInstance(ngModule, providerDef) {\n    /** @type {?} */\n    let injectable;\n    switch (providerDef.flags & 201347067 /* Types */) {\n        case 512 /* TypeClassProvider */:\n            injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n            break;\n        case 1024 /* TypeFactoryProvider */:\n            injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n            break;\n        case 2048 /* TypeUseExistingProvider */:\n            injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n            break;\n        case 256 /* TypeValueProvider */:\n            injectable = providerDef.value;\n            break;\n    }\n    // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n    // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n    // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n    // set (ngOnDestroy was detected statically).\n    if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n        !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n        providerDef.flags |= 131072 /* OnDestroy */;\n    }\n    return injectable === undefined ? UNDEFINED_VALUE : injectable;\n}\n/**\n * @param {?} ngModule\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction _createClass(ngModule, ctor, deps) {\n    /** @type {?} */\n    const len = deps.length;\n    switch (len) {\n        case 0:\n            return new ctor();\n        case 1:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n        case 2:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n        case 3:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n        default:\n            /** @type {?} */\n            const depValues = new Array(len);\n            for (let i = 0; i < len; i++) {\n                depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n            }\n            return new ctor(...depValues);\n    }\n}\n/**\n * @param {?} ngModule\n * @param {?} factory\n * @param {?} deps\n * @return {?}\n */\nfunction _callFactory(ngModule, factory, deps) {\n    /** @type {?} */\n    const len = deps.length;\n    switch (len) {\n        case 0:\n            return factory();\n        case 1:\n            return factory(resolveNgModuleDep(ngModule, deps[0]));\n        case 2:\n            return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n        case 3:\n            return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n        default:\n            /** @type {?} */\n            const depValues = Array(len);\n            for (let i = 0; i < len; i++) {\n                depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n            }\n            return factory(...depValues);\n    }\n}\n/**\n * @param {?} ngModule\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callNgModuleLifecycle(ngModule, lifecycles) {\n    /** @type {?} */\n    const def = ngModule._def;\n    /** @type {?} */\n    const destroyed = new Set();\n    for (let i = 0; i < def.providers.length; i++) {\n        /** @type {?} */\n        const provDef = def.providers[i];\n        if (provDef.flags & 131072 /* OnDestroy */) {\n            /** @type {?} */\n            const instance = ngModule._providers[i];\n            if (instance && instance !== UNDEFINED_VALUE) {\n                /** @type {?} */\n                const onDestroy = instance.ngOnDestroy;\n                if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                    onDestroy.apply(instance);\n                    destroyed.add(instance);\n                }\n            }\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @param {?} parentView\n * @param {?} elementData\n * @param {?} viewIndex\n * @param {?} view\n * @return {?}\n */\nfunction attachEmbeddedView(parentView, elementData, viewIndex, view) {\n    /** @type {?} */\n    let embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n    if (viewIndex === null || viewIndex === undefined) {\n        viewIndex = embeddedViews.length;\n    }\n    view.viewContainerParent = parentView;\n    addToArray(embeddedViews, /** @type {?} */ ((viewIndex)), view);\n    attachProjectedView(elementData, view);\n    Services.dirtyParentQueries(view);\n    /** @type {?} */\n    const prevView = /** @type {?} */ ((viewIndex)) > 0 ? embeddedViews[/** @type {?} */ ((viewIndex)) - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n}\n/**\n * @param {?} vcElementData\n * @param {?} view\n * @return {?}\n */\nfunction attachProjectedView(vcElementData, view) {\n    /** @type {?} */\n    const dvcElementData = declaredViewContainer(view);\n    if (!dvcElementData || dvcElementData === vcElementData ||\n        view.state & 16 /* IsProjectedView */) {\n        return;\n    }\n    // Note: For performance reasons, we\n    // - add a view to template._projectedViews only 1x throughout its lifetime,\n    //   and remove it not until the view is destroyed.\n    //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n    //    nested projected views as well, even across component boundaries).\n    // - don't track the insertion order of views in the projected views array\n    //   (hard, as when the views of the same template are inserted different view containers)\n    view.state |= 16 /* IsProjectedView */;\n    /** @type {?} */\n    let projectedViews = dvcElementData.template._projectedViews;\n    if (!projectedViews) {\n        projectedViews = dvcElementData.template._projectedViews = [];\n    }\n    projectedViews.push(view);\n    // Note: we are changing the NodeDef here as we cannot calculate\n    // the fact whether a template is used for projection during compilation.\n    markNodeAsProjectedTemplate(/** @type {?} */ ((view.parent)).def, /** @type {?} */ ((view.parentNodeDef)));\n}\n/**\n * @param {?} viewDef\n * @param {?} nodeDef\n * @return {?}\n */\nfunction markNodeAsProjectedTemplate(viewDef, nodeDef) {\n    if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n        return;\n    }\n    viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n    nodeDef.flags |= 4 /* ProjectedTemplate */;\n    /** @type {?} */\n    let parentNodeDef = nodeDef.parent;\n    while (parentNodeDef) {\n        parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n        parentNodeDef = parentNodeDef.parent;\n    }\n}\n/**\n * @param {?} elementData\n * @param {?=} viewIndex\n * @return {?}\n */\nfunction detachEmbeddedView(elementData, viewIndex) {\n    /** @type {?} */\n    const embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n    if (viewIndex == null || viewIndex >= embeddedViews.length) {\n        viewIndex = embeddedViews.length - 1;\n    }\n    if (viewIndex < 0) {\n        return null;\n    }\n    /** @type {?} */\n    const view = embeddedViews[viewIndex];\n    view.viewContainerParent = null;\n    removeFromArray(embeddedViews, viewIndex);\n    // See attachProjectedView for why we don't update projectedViews here.\n    Services.dirtyParentQueries(view);\n    renderDetachView(view);\n    return view;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction detachProjectedView(view) {\n    if (!(view.state & 16 /* IsProjectedView */)) {\n        return;\n    }\n    /** @type {?} */\n    const dvcElementData = declaredViewContainer(view);\n    if (dvcElementData) {\n        /** @type {?} */\n        const projectedViews = dvcElementData.template._projectedViews;\n        if (projectedViews) {\n            removeFromArray(projectedViews, projectedViews.indexOf(view));\n            Services.dirtyParentQueries(view);\n        }\n    }\n}\n/**\n * @param {?} elementData\n * @param {?} oldViewIndex\n * @param {?} newViewIndex\n * @return {?}\n */\nfunction moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n    /** @type {?} */\n    const embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n    /** @type {?} */\n    const view = embeddedViews[oldViewIndex];\n    removeFromArray(embeddedViews, oldViewIndex);\n    if (newViewIndex == null) {\n        newViewIndex = embeddedViews.length;\n    }\n    addToArray(embeddedViews, newViewIndex, view);\n    // Note: Don't need to change projectedViews as the order in there\n    // as always invalid...\n    Services.dirtyParentQueries(view);\n    renderDetachView(view);\n    /** @type {?} */\n    const prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n    return view;\n}\n/**\n * @param {?} elementData\n * @param {?} prevView\n * @param {?} view\n * @return {?}\n */\nfunction renderAttachEmbeddedView(elementData, prevView, view) {\n    /** @type {?} */\n    const prevRenderNode = prevView ? renderNode(prevView, /** @type {?} */ ((prevView.def.lastRenderRootNode))) :\n        elementData.renderElement;\n    /** @type {?} */\n    const parentNode = view.renderer.parentNode(prevRenderNode);\n    /** @type {?} */\n    const nextSibling = view.renderer.nextSibling(prevRenderNode);\n    // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n    // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n    visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction renderDetachView(view) {\n    visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n}\n/**\n * @param {?} arr\n * @param {?} index\n * @param {?} value\n * @return {?}\n */\nfunction addToArray(arr, index, value) {\n    // perf: array.push is faster than array.splice!\n    if (index >= arr.length) {\n        arr.push(value);\n    }\n    else {\n        arr.splice(index, 0, value);\n    }\n}\n/**\n * @param {?} arr\n * @param {?} index\n * @return {?}\n */\nfunction removeFromArray(arr, index) {\n    // perf: array.pop is faster than array.splice!\n    if (index >= arr.length - 1) {\n        arr.pop();\n    }\n    else {\n        arr.splice(index, 1);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst EMPTY_CONTEXT = new Object();\n/**\n * @param {?} selector\n * @param {?} componentType\n * @param {?} viewDefFactory\n * @param {?} inputs\n * @param {?} outputs\n * @param {?} ngContentSelectors\n * @return {?}\n */\nfunction createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n    return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n}\n/**\n * @param {?} componentFactory\n * @return {?}\n */\nfunction getComponentViewDefinitionFactory(componentFactory) {\n    return (/** @type {?} */ (componentFactory)).viewDefFactory;\n}\nclass ComponentFactory_ extends ComponentFactory {\n    /**\n     * @param {?} selector\n     * @param {?} componentType\n     * @param {?} viewDefFactory\n     * @param {?} _inputs\n     * @param {?} _outputs\n     * @param {?} ngContentSelectors\n     */\n    constructor(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n        // Attention: this ctor is called as top level function.\n        // Putting any logic in here will destroy closure tree shaking!\n        super();\n        this.selector = selector;\n        this.componentType = componentType;\n        this._inputs = _inputs;\n        this._outputs = _outputs;\n        this.ngContentSelectors = ngContentSelectors;\n        this.viewDefFactory = viewDefFactory;\n    }\n    /**\n     * @return {?}\n     */\n    get inputs() {\n        /** @type {?} */\n        const inputsArr = [];\n        /** @type {?} */\n        const inputs = /** @type {?} */ ((this._inputs));\n        for (let propName in inputs) {\n            /** @type {?} */\n            const templateName = inputs[propName];\n            inputsArr.push({ propName, templateName });\n        }\n        return inputsArr;\n    }\n    /**\n     * @return {?}\n     */\n    get outputs() {\n        /** @type {?} */\n        const outputsArr = [];\n        for (let propName in this._outputs) {\n            /** @type {?} */\n            const templateName = this._outputs[propName];\n            outputsArr.push({ propName, templateName });\n        }\n        return outputsArr;\n    }\n    /**\n     * Creates a new component.\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    create(injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        if (!ngModule) {\n            throw new Error('ngModule should be provided');\n        }\n        /** @type {?} */\n        const viewDef = resolveDefinition(this.viewDefFactory);\n        /** @type {?} */\n        const componentNodeIndex = /** @type {?} */ ((/** @type {?} */ ((viewDef.nodes[0].element)).componentProvider)).nodeIndex;\n        /** @type {?} */\n        const view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n        /** @type {?} */\n        const component = asProviderData(view, componentNodeIndex).instance;\n        if (rootSelectorOrNode) {\n            view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n        }\n        return new ComponentRef_(view, new ViewRef_(view), component);\n    }\n}\nclass ComponentRef_ extends ComponentRef {\n    /**\n     * @param {?} _view\n     * @param {?} _viewRef\n     * @param {?} _component\n     */\n    constructor(_view, _viewRef, _component) {\n        super();\n        this._view = _view;\n        this._viewRef = _viewRef;\n        this._component = _component;\n        this._elDef = this._view.def.nodes[0];\n        this.hostView = _viewRef;\n        this.changeDetectorRef = _viewRef;\n        this.instance = _component;\n    }\n    /**\n     * @return {?}\n     */\n    get location() {\n        return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n    }\n    /**\n     * @return {?}\n     */\n    get injector() { return new Injector_(this._view, this._elDef); }\n    /**\n     * @return {?}\n     */\n    get componentType() { return /** @type {?} */ (this._component.constructor); }\n    /**\n     * @return {?}\n     */\n    destroy() { this._viewRef.destroy(); }\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    onDestroy(callback) { this._viewRef.onDestroy(callback); }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} elData\n * @return {?}\n */\nfunction createViewContainerData(view, elDef, elData) {\n    return new ViewContainerRef_(view, elDef, elData);\n}\nclass ViewContainerRef_ {\n    /**\n     * @param {?} _view\n     * @param {?} _elDef\n     * @param {?} _data\n     */\n    constructor(_view, _elDef, _data) {\n        this._view = _view;\n        this._elDef = _elDef;\n        this._data = _data;\n        /**\n         * \\@internal\n         */\n        this._embeddedViews = [];\n    }\n    /**\n     * @return {?}\n     */\n    get element() { return new ElementRef(this._data.renderElement); }\n    /**\n     * @return {?}\n     */\n    get injector() { return new Injector_(this._view, this._elDef); }\n    /**\n     * @return {?}\n     */\n    get parentInjector() {\n        /** @type {?} */\n        let view = this._view;\n        /** @type {?} */\n        let elDef = this._elDef.parent;\n        while (!elDef && view) {\n            elDef = viewParentEl(view);\n            view = /** @type {?} */ ((view.parent));\n        }\n        return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n    }\n    /**\n     * @return {?}\n     */\n    clear() {\n        /** @type {?} */\n        const len = this._embeddedViews.length;\n        for (let i = len - 1; i >= 0; i--) {\n            /** @type {?} */\n            const view = /** @type {?} */ ((detachEmbeddedView(this._data, i)));\n            Services.destroyView(view);\n        }\n    }\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    get(index) {\n        /** @type {?} */\n        const view = this._embeddedViews[index];\n        if (view) {\n            /** @type {?} */\n            const ref = new ViewRef_(view);\n            ref.attachToViewContainerRef(this);\n            return ref;\n        }\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    get length() { return this._embeddedViews.length; }\n    /**\n     * @template C\n     * @param {?} templateRef\n     * @param {?=} context\n     * @param {?=} index\n     * @return {?}\n     */\n    createEmbeddedView(templateRef, context, index) {\n        /** @type {?} */\n        const viewRef = templateRef.createEmbeddedView(context || /** @type {?} */ ({}));\n        this.insert(viewRef, index);\n        return viewRef;\n    }\n    /**\n     * @template C\n     * @param {?} componentFactory\n     * @param {?=} index\n     * @param {?=} injector\n     * @param {?=} projectableNodes\n     * @param {?=} ngModuleRef\n     * @return {?}\n     */\n    createComponent(componentFactory, index, injector, projectableNodes, ngModuleRef) {\n        /** @type {?} */\n        const contextInjector = injector || this.parentInjector;\n        if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n            ngModuleRef = contextInjector.get(NgModuleRef);\n        }\n        /** @type {?} */\n        const componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n        this.insert(componentRef.hostView, index);\n        return componentRef;\n    }\n    /**\n     * @param {?} viewRef\n     * @param {?=} index\n     * @return {?}\n     */\n    insert(viewRef, index) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n        }\n        /** @type {?} */\n        const viewRef_ = /** @type {?} */ (viewRef);\n        /** @type {?} */\n        const viewData = viewRef_._view;\n        attachEmbeddedView(this._view, this._data, index, viewData);\n        viewRef_.attachToViewContainerRef(this);\n        return viewRef;\n    }\n    /**\n     * @param {?} viewRef\n     * @param {?} currentIndex\n     * @return {?}\n     */\n    move(viewRef, currentIndex) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot move a destroyed View in a ViewContainer!');\n        }\n        /** @type {?} */\n        const previousIndex = this._embeddedViews.indexOf(viewRef._view);\n        moveEmbeddedView(this._data, previousIndex, currentIndex);\n        return viewRef;\n    }\n    /**\n     * @param {?} viewRef\n     * @return {?}\n     */\n    indexOf(viewRef) {\n        return this._embeddedViews.indexOf((/** @type {?} */ (viewRef))._view);\n    }\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    remove(index) {\n        /** @type {?} */\n        const viewData = detachEmbeddedView(this._data, index);\n        if (viewData) {\n            Services.destroyView(viewData);\n        }\n    }\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    detach(index) {\n        /** @type {?} */\n        const view = detachEmbeddedView(this._data, index);\n        return view ? new ViewRef_(view) : null;\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createChangeDetectorRef(view) {\n    return new ViewRef_(view);\n}\nclass ViewRef_ {\n    /**\n     * @param {?} _view\n     */\n    constructor(_view) {\n        this._view = _view;\n        this._viewContainerRef = null;\n        this._appRef = null;\n    }\n    /**\n     * @return {?}\n     */\n    get rootNodes() { return rootRenderNodes(this._view); }\n    /**\n     * @return {?}\n     */\n    get context() { return this._view.context; }\n    /**\n     * @return {?}\n     */\n    get destroyed() { return (this._view.state & 128 /* Destroyed */) !== 0; }\n    /**\n     * @return {?}\n     */\n    markForCheck() { markParentViewsForCheck(this._view); }\n    /**\n     * @return {?}\n     */\n    detach() { this._view.state &= ~4 /* Attached */; }\n    /**\n     * @return {?}\n     */\n    detectChanges() {\n        /** @type {?} */\n        const fs = this._view.root.rendererFactory;\n        if (fs.begin) {\n            fs.begin();\n        }\n        try {\n            Services.checkAndUpdateView(this._view);\n        }\n        finally {\n            if (fs.end) {\n                fs.end();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    checkNoChanges() { Services.checkNoChangesView(this._view); }\n    /**\n     * @return {?}\n     */\n    reattach() { this._view.state |= 4 /* Attached */; }\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    onDestroy(callback) {\n        if (!this._view.disposables) {\n            this._view.disposables = [];\n        }\n        this._view.disposables.push(/** @type {?} */ (callback));\n    }\n    /**\n     * @return {?}\n     */\n    destroy() {\n        if (this._appRef) {\n            this._appRef.detachView(this);\n        }\n        else if (this._viewContainerRef) {\n            this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n        }\n        Services.destroyView(this._view);\n    }\n    /**\n     * @return {?}\n     */\n    detachFromAppRef() {\n        this._appRef = null;\n        renderDetachView(this._view);\n        Services.dirtyParentQueries(this._view);\n    }\n    /**\n     * @param {?} appRef\n     * @return {?}\n     */\n    attachToAppRef(appRef) {\n        if (this._viewContainerRef) {\n            throw new Error('This view is already attached to a ViewContainer!');\n        }\n        this._appRef = appRef;\n    }\n    /**\n     * @param {?} vcRef\n     * @return {?}\n     */\n    attachToViewContainerRef(vcRef) {\n        if (this._appRef) {\n            throw new Error('This view is already attached directly to the ApplicationRef!');\n        }\n        this._viewContainerRef = vcRef;\n    }\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createTemplateData(view, def) {\n    return new TemplateRef_(view, def);\n}\nclass TemplateRef_ extends TemplateRef {\n    /**\n     * @param {?} _parentView\n     * @param {?} _def\n     */\n    constructor(_parentView, _def) {\n        super();\n        this._parentView = _parentView;\n        this._def = _def;\n    }\n    /**\n     * @param {?} context\n     * @return {?}\n     */\n    createEmbeddedView(context) {\n        return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, /** @type {?} */ ((/** @type {?} */ ((this._def.element)).template)), context));\n    }\n    /**\n     * @return {?}\n     */\n    get elementRef() {\n        return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n    }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @return {?}\n */\nfunction createInjector$1(view, elDef) {\n    return new Injector_(view, elDef);\n}\nclass Injector_ {\n    /**\n     * @param {?} view\n     * @param {?} elDef\n     */\n    constructor(view, elDef) {\n        this.view = view;\n        this.elDef = elDef;\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    get(token, notFoundValue = Injector.THROW_IF_NOT_FOUND) {\n        /** @type {?} */\n        const allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n        return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token, tokenKey: tokenKey(token) }, notFoundValue);\n    }\n}\n/**\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction nodeValue(view, index) {\n    /** @type {?} */\n    const def = view.def.nodes[index];\n    if (def.flags & 1 /* TypeElement */) {\n        /** @type {?} */\n        const elData = asElementData(view, def.nodeIndex);\n        return /** @type {?} */ ((def.element)).template ? elData.template : elData.renderElement;\n    }\n    else if (def.flags & 2 /* TypeText */) {\n        return asTextData(view, def.nodeIndex).renderText;\n    }\n    else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n        return asProviderData(view, def.nodeIndex).instance;\n    }\n    throw new Error(`Illegal state: read nodeValue for node index ${index}`);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createRendererV1(view) {\n    return new RendererAdapter(view.renderer);\n}\nclass RendererAdapter {\n    /**\n     * @param {?} delegate\n     */\n    constructor(delegate) {\n        this.delegate = delegate;\n    }\n    /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    selectRootElement(selectorOrNode) {\n        return this.delegate.selectRootElement(selectorOrNode);\n    }\n    /**\n     * @param {?} parent\n     * @param {?} namespaceAndName\n     * @return {?}\n     */\n    createElement(parent, namespaceAndName) {\n        const [ns, name] = splitNamespace(namespaceAndName);\n        /** @type {?} */\n        const el = this.delegate.createElement(name, ns);\n        if (parent) {\n            this.delegate.appendChild(parent, el);\n        }\n        return el;\n    }\n    /**\n     * @param {?} hostElement\n     * @return {?}\n     */\n    createViewRoot(hostElement) { return hostElement; }\n    /**\n     * @param {?} parentElement\n     * @return {?}\n     */\n    createTemplateAnchor(parentElement) {\n        /** @type {?} */\n        const comment = this.delegate.createComment('');\n        if (parentElement) {\n            this.delegate.appendChild(parentElement, comment);\n        }\n        return comment;\n    }\n    /**\n     * @param {?} parentElement\n     * @param {?} value\n     * @return {?}\n     */\n    createText(parentElement, value) {\n        /** @type {?} */\n        const node = this.delegate.createText(value);\n        if (parentElement) {\n            this.delegate.appendChild(parentElement, node);\n        }\n        return node;\n    }\n    /**\n     * @param {?} parentElement\n     * @param {?} nodes\n     * @return {?}\n     */\n    projectNodes(parentElement, nodes) {\n        for (let i = 0; i < nodes.length; i++) {\n            this.delegate.appendChild(parentElement, nodes[i]);\n        }\n    }\n    /**\n     * @param {?} node\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    attachViewAfter(node, viewRootNodes) {\n        /** @type {?} */\n        const parentElement = this.delegate.parentNode(node);\n        /** @type {?} */\n        const nextSibling = this.delegate.nextSibling(node);\n        for (let i = 0; i < viewRootNodes.length; i++) {\n            this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n        }\n    }\n    /**\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    detachView(viewRootNodes) {\n        for (let i = 0; i < viewRootNodes.length; i++) {\n            /** @type {?} */\n            const node = viewRootNodes[i];\n            /** @type {?} */\n            const parentElement = this.delegate.parentNode(node);\n            this.delegate.removeChild(parentElement, node);\n        }\n    }\n    /**\n     * @param {?} hostElement\n     * @param {?} viewAllNodes\n     * @return {?}\n     */\n    destroyView(hostElement, viewAllNodes) {\n        for (let i = 0; i < viewAllNodes.length; i++) {\n            /** @type {?} */ ((this.delegate.destroyNode))(viewAllNodes[i]);\n        }\n    }\n    /**\n     * @param {?} renderElement\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    listen(renderElement, name, callback) {\n        return this.delegate.listen(renderElement, name, /** @type {?} */ (callback));\n    }\n    /**\n     * @param {?} target\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    listenGlobal(target, name, callback) {\n        return this.delegate.listen(target, name, /** @type {?} */ (callback));\n    }\n    /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    setElementProperty(renderElement, propertyName, propertyValue) {\n        this.delegate.setProperty(renderElement, propertyName, propertyValue);\n    }\n    /**\n     * @param {?} renderElement\n     * @param {?} namespaceAndName\n     * @param {?} attributeValue\n     * @return {?}\n     */\n    setElementAttribute(renderElement, namespaceAndName, attributeValue) {\n        const [ns, name] = splitNamespace(namespaceAndName);\n        if (attributeValue != null) {\n            this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n        }\n        else {\n            this.delegate.removeAttribute(renderElement, name, ns);\n        }\n    }\n    /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    setBindingDebugInfo(renderElement, propertyName, propertyValue) { }\n    /**\n     * @param {?} renderElement\n     * @param {?} className\n     * @param {?} isAdd\n     * @return {?}\n     */\n    setElementClass(renderElement, className, isAdd) {\n        if (isAdd) {\n            this.delegate.addClass(renderElement, className);\n        }\n        else {\n            this.delegate.removeClass(renderElement, className);\n        }\n    }\n    /**\n     * @param {?} renderElement\n     * @param {?} styleName\n     * @param {?} styleValue\n     * @return {?}\n     */\n    setElementStyle(renderElement, styleName, styleValue) {\n        if (styleValue != null) {\n            this.delegate.setStyle(renderElement, styleName, styleValue);\n        }\n        else {\n            this.delegate.removeStyle(renderElement, styleName);\n        }\n    }\n    /**\n     * @param {?} renderElement\n     * @param {?} methodName\n     * @param {?} args\n     * @return {?}\n     */\n    invokeElementMethod(renderElement, methodName, args) {\n        (/** @type {?} */ (renderElement))[methodName].apply(renderElement, args);\n    }\n    /**\n     * @param {?} renderNode\n     * @param {?} text\n     * @return {?}\n     */\n    setText(renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); }\n    /**\n     * @return {?}\n     */\n    animate() { throw new Error('Renderer.animate is no longer supported!'); }\n}\n/**\n * @param {?} moduleType\n * @param {?} parent\n * @param {?} bootstrapComponents\n * @param {?} def\n * @return {?}\n */\nfunction createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n    return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n}\nclass NgModuleRef_ {\n    /**\n     * @param {?} _moduleType\n     * @param {?} _parent\n     * @param {?} _bootstrapComponents\n     * @param {?} _def\n     */\n    constructor(_moduleType, _parent, _bootstrapComponents, _def) {\n        this._moduleType = _moduleType;\n        this._parent = _parent;\n        this._bootstrapComponents = _bootstrapComponents;\n        this._def = _def;\n        this._destroyListeners = [];\n        this._destroyed = false;\n        this.injector = this;\n        initNgModule(this);\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @param {?=} injectFlags\n     * @return {?}\n     */\n    get(token, notFoundValue = Injector.THROW_IF_NOT_FOUND, injectFlags = 0 /* Default */) {\n        /** @type {?} */\n        let flags = 0 /* None */;\n        if (injectFlags & 4 /* SkipSelf */) {\n            flags |= 1 /* SkipSelf */;\n        }\n        else if (injectFlags & 2 /* Self */) {\n            flags |= 4 /* Self */;\n        }\n        return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n    }\n    /**\n     * @return {?}\n     */\n    get instance() { return this.get(this._moduleType); }\n    /**\n     * @return {?}\n     */\n    get componentFactoryResolver() { return this.get(ComponentFactoryResolver); }\n    /**\n     * @return {?}\n     */\n    destroy() {\n        if (this._destroyed) {\n            throw new Error(`The ng module ${stringify(this.instance.constructor)} has already been destroyed.`);\n        }\n        this._destroyed = true;\n        callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n        this._destroyListeners.forEach((listener) => listener());\n    }\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    onDestroy(callback) { this._destroyListeners.push(callback); }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst RendererV1TokenKey = tokenKey(Renderer);\n/** @type {?} */\nconst Renderer2TokenKey = tokenKey(Renderer2);\n/** @type {?} */\nconst ElementRefTokenKey = tokenKey(ElementRef);\n/** @type {?} */\nconst ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n/** @type {?} */\nconst TemplateRefTokenKey = tokenKey(TemplateRef);\n/** @type {?} */\nconst ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n/** @type {?} */\nconst InjectorRefTokenKey$1 = tokenKey(Injector);\n/** @type {?} */\nconst INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n/**\n * @param {?} checkIndex\n * @param {?} flags\n * @param {?} matchedQueries\n * @param {?} childCount\n * @param {?} ctor\n * @param {?} deps\n * @param {?=} props\n * @param {?=} outputs\n * @return {?}\n */\nfunction directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n    /** @type {?} */\n    const bindings = [];\n    if (props) {\n        for (let prop in props) {\n            const [bindingIndex, nonMinifiedName] = props[prop];\n            bindings[bindingIndex] = {\n                flags: 8 /* TypeProperty */,\n                name: prop, nonMinifiedName,\n                ns: null,\n                securityContext: null,\n                suffix: null\n            };\n        }\n    }\n    /** @type {?} */\n    const outputDefs = [];\n    if (outputs) {\n        for (let propName in outputs) {\n            outputDefs.push({ type: 1 /* DirectiveOutput */, propName, target: null, eventName: outputs[propName] });\n        }\n    }\n    flags |= 16384 /* TypeDirective */;\n    return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n}\n/**\n * @param {?} flags\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction pipeDef(flags, ctor, deps) {\n    flags |= 16 /* TypePipe */;\n    return _def(-1, flags, null, 0, ctor, ctor, deps);\n}\n/**\n * @param {?} flags\n * @param {?} matchedQueries\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @return {?}\n */\nfunction providerDef(flags, matchedQueries, token, value, deps) {\n    return _def(-1, flags, matchedQueries, 0, token, value, deps);\n}\n/**\n * @param {?} checkIndex\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} childCount\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @param {?=} bindings\n * @param {?=} outputs\n * @return {?}\n */\nfunction _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n    const { matchedQueries, references, matchedQueryIds } = splitMatchedQueriesDsl(matchedQueriesDsl);\n    if (!outputs) {\n        outputs = [];\n    }\n    if (!bindings) {\n        bindings = [];\n    }\n    // Need to resolve forwardRefs as e.g. for `useValue` we\n    // lowered the expression and then stopped evaluating it,\n    // i.e. also didn't unwrap it.\n    value = resolveForwardRef(value);\n    /** @type {?} */\n    const depDefs = splitDepsDsl(deps, stringify(token));\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex,\n        flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries, matchedQueryIds, references,\n        ngContentIndex: -1, childCount, bindings,\n        bindingFlags: calcBindingFlags(bindings), outputs,\n        element: null,\n        provider: { token, value, deps: depDefs },\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createProviderInstance(view, def) {\n    return _createProviderInstance$1(view, def);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createPipeInstance(view, def) {\n    /** @type {?} */\n    let compView = view;\n    while (compView.parent && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    /** @type {?} */\n    const allowPrivateServices = true;\n    // pipes are always eager and classes!\n    return createClass(/** @type {?} */ ((compView.parent)), /** @type {?} */ ((viewParentEl(compView))), allowPrivateServices, /** @type {?} */ ((def.provider)).value, /** @type {?} */ ((def.provider)).deps);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createDirectiveInstance(view, def) {\n    /** @type {?} */\n    const allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n    /** @type {?} */\n    const instance = createClass(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((def.provider)).value, /** @type {?} */ ((def.provider)).deps);\n    if (def.outputs.length) {\n        for (let i = 0; i < def.outputs.length; i++) {\n            /** @type {?} */\n            const output = def.outputs[i];\n            /** @type {?} */\n            const subscription = instance[/** @type {?} */ ((output.propName))].subscribe(eventHandlerClosure(view, /** @type {?} */ ((def.parent)).nodeIndex, output.eventName)); /** @type {?} */\n            ((view.disposables))[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n        }\n    }\n    return instance;\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} eventName\n * @return {?}\n */\nfunction eventHandlerClosure(view, index, eventName) {\n    return (event) => dispatchEvent(view, index, eventName, event);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    /** @type {?} */\n    const providerData = asProviderData(view, def.nodeIndex);\n    /** @type {?} */\n    const directive = providerData.instance;\n    /** @type {?} */\n    let changed = false;\n    /** @type {?} */\n    let changes = /** @type {?} */ ((undefined));\n    /** @type {?} */\n    const bindLen = def.bindings.length;\n    if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 0, v0, changes);\n    }\n    if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 1, v1, changes);\n    }\n    if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 2, v2, changes);\n    }\n    if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 3, v3, changes);\n    }\n    if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 4, v4, changes);\n    }\n    if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 5, v5, changes);\n    }\n    if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 6, v6, changes);\n    }\n    if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 7, v7, changes);\n    }\n    if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 8, v8, changes);\n    }\n    if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 9, v9, changes);\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((def.flags & 65536 /* OnInit */) &&\n        shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & 262144 /* DoCheck */) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateDirectiveDynamic(view, def, values) {\n    /** @type {?} */\n    const providerData = asProviderData(view, def.nodeIndex);\n    /** @type {?} */\n    const directive = providerData.instance;\n    /** @type {?} */\n    let changed = false;\n    /** @type {?} */\n    let changes = /** @type {?} */ ((undefined));\n    for (let i = 0; i < values.length; i++) {\n        if (checkBinding(view, def, i, values[i])) {\n            changed = true;\n            changes = updateProp(view, providerData, def, i, values[i], changes);\n        }\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((def.flags & 65536 /* OnInit */) &&\n        shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & 262144 /* DoCheck */) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction _createProviderInstance$1(view, def) {\n    /** @type {?} */\n    const allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n    /** @type {?} */\n    const providerDef = def.provider;\n    switch (def.flags & 201347067 /* Types */) {\n        case 512 /* TypeClassProvider */:\n            return createClass(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((providerDef)).value, /** @type {?} */ ((providerDef)).deps);\n        case 1024 /* TypeFactoryProvider */:\n            return callFactory(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((providerDef)).value, /** @type {?} */ ((providerDef)).deps);\n        case 2048 /* TypeUseExistingProvider */:\n            return resolveDep(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((providerDef)).deps[0]);\n        case 256 /* TypeValueProvider */:\n            return /** @type {?} */ ((providerDef)).value;\n    }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction createClass(view, elDef, allowPrivateServices, ctor, deps) {\n    /** @type {?} */\n    const len = deps.length;\n    switch (len) {\n        case 0:\n            return new ctor();\n        case 1:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n        case 2:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n        case 3:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n        default:\n            /** @type {?} */\n            const depValues = new Array(len);\n            for (let i = 0; i < len; i++) {\n                depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n            }\n            return new ctor(...depValues);\n    }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} factory\n * @param {?} deps\n * @return {?}\n */\nfunction callFactory(view, elDef, allowPrivateServices, factory, deps) {\n    /** @type {?} */\n    const len = deps.length;\n    switch (len) {\n        case 0:\n            return factory();\n        case 1:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n        case 2:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n        case 3:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n        default:\n            /** @type {?} */\n            const depValues = Array(len);\n            for (let i = 0; i < len; i++) {\n                depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n            }\n            return factory(...depValues);\n    }\n}\n/** @type {?} */\nconst NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} depDef\n * @param {?=} notFoundValue\n * @return {?}\n */\nfunction resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue = Injector.THROW_IF_NOT_FOUND) {\n    if (depDef.flags & 8 /* Value */) {\n        return depDef.token;\n    }\n    /** @type {?} */\n    const startView = view;\n    if (depDef.flags & 2 /* Optional */) {\n        notFoundValue = null;\n    }\n    /** @type {?} */\n    const tokenKey$$1 = depDef.tokenKey;\n    if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n        // directives on the same element as a component should be able to control the change detector\n        // of that component as well.\n        allowPrivateServices = !!(elDef && /** @type {?} */ ((elDef.element)).componentView);\n    }\n    if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n        allowPrivateServices = false;\n        elDef = /** @type {?} */ ((elDef.parent));\n    }\n    /** @type {?} */\n    let searchView = view;\n    while (searchView) {\n        if (elDef) {\n            switch (tokenKey$$1) {\n                case RendererV1TokenKey: {\n                    /** @type {?} */\n                    const compView = findCompView(searchView, elDef, allowPrivateServices);\n                    return createRendererV1(compView);\n                }\n                case Renderer2TokenKey: {\n                    /** @type {?} */\n                    const compView = findCompView(searchView, elDef, allowPrivateServices);\n                    return compView.renderer;\n                }\n                case ElementRefTokenKey:\n                    return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                case ViewContainerRefTokenKey:\n                    return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                case TemplateRefTokenKey: {\n                    if (/** @type {?} */ ((elDef.element)).template) {\n                        return asElementData(searchView, elDef.nodeIndex).template;\n                    }\n                    break;\n                }\n                case ChangeDetectorRefTokenKey: {\n                    /** @type {?} */\n                    let cdView = findCompView(searchView, elDef, allowPrivateServices);\n                    return createChangeDetectorRef(cdView);\n                }\n                case InjectorRefTokenKey$1:\n                case INJECTORRefTokenKey$1:\n                    return createInjector$1(searchView, elDef);\n                default:\n                    /** @type {?} */\n                    const providerDef = /** @type {?} */ (((allowPrivateServices ? /** @type {?} */ ((elDef.element)).allProviders : /** @type {?} */ ((elDef.element)).publicProviders)))[tokenKey$$1];\n                    if (providerDef) {\n                        /** @type {?} */\n                        let providerData = asProviderData(searchView, providerDef.nodeIndex);\n                        if (!providerData) {\n                            providerData = { instance: _createProviderInstance$1(searchView, providerDef) };\n                            searchView.nodes[providerDef.nodeIndex] = /** @type {?} */ (providerData);\n                        }\n                        return providerData.instance;\n                    }\n            }\n        }\n        allowPrivateServices = isComponentView(searchView);\n        elDef = /** @type {?} */ ((viewParentEl(searchView)));\n        searchView = /** @type {?} */ ((searchView.parent));\n        if (depDef.flags & 4 /* Self */) {\n            searchView = null;\n        }\n    }\n    /** @type {?} */\n    const value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n    if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n        notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n        // Return the value from the root element injector when\n        // - it provides it\n        //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        // - the module injector should not be checked\n        //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        return value;\n    }\n    return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @return {?}\n */\nfunction findCompView(view, elDef, allowPrivateServices) {\n    /** @type {?} */\n    let compView;\n    if (allowPrivateServices) {\n        compView = asElementData(view, elDef.nodeIndex).componentView;\n    }\n    else {\n        compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n    }\n    return compView;\n}\n/**\n * @param {?} view\n * @param {?} providerData\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @param {?} changes\n * @return {?}\n */\nfunction updateProp(view, providerData, def, bindingIdx, value, changes) {\n    if (def.flags & 32768 /* Component */) {\n        /** @type {?} */\n        const compView = asElementData(view, /** @type {?} */ ((def.parent)).nodeIndex).componentView;\n        if (compView.def.flags & 2 /* OnPush */) {\n            compView.state |= 8 /* ChecksEnabled */;\n        }\n    }\n    /** @type {?} */\n    const binding = def.bindings[bindingIdx];\n    /** @type {?} */\n    const propName = /** @type {?} */ ((binding.name));\n    // Note: This is still safe with Closure Compiler as\n    // the user passed in the property name as an object has to `providerDef`,\n    // so Closure Compiler will have renamed the property correctly already.\n    providerData.instance[propName] = value;\n    if (def.flags & 524288 /* OnChanges */) {\n        changes = changes || {};\n        /** @type {?} */\n        const oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n        /** @type {?} */\n        const binding = def.bindings[bindingIdx];\n        changes[/** @type {?} */ ((binding.nonMinifiedName))] =\n            new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n    }\n    view.oldValues[def.bindingIndex + bindingIdx] = value;\n    return changes;\n}\n/**\n * @param {?} view\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callLifecycleHooksChildrenFirst(view, lifecycles) {\n    if (!(view.def.nodeFlags & lifecycles)) {\n        return;\n    }\n    /** @type {?} */\n    const nodes = view.def.nodes;\n    /** @type {?} */\n    let initIndex = 0;\n    for (let i = 0; i < nodes.length; i++) {\n        /** @type {?} */\n        const nodeDef = nodes[i];\n        /** @type {?} */\n        let parent = nodeDef.parent;\n        if (!parent && nodeDef.flags & lifecycles) {\n            // matching root node (e.g. a pipe)\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n        }\n        if ((nodeDef.childFlags & lifecycles) === 0) {\n            // no child matches one of the lifecycles\n            i += nodeDef.childCount;\n        }\n        while (parent && (parent.flags & 1 /* TypeElement */) &&\n            i === parent.nodeIndex + parent.childCount) {\n            // last child of an element\n            if (parent.directChildFlags & lifecycles) {\n                initIndex = callElementProvidersLifecycles(view, parent, lifecycles, initIndex);\n            }\n            parent = parent.parent;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} lifecycles\n * @param {?} initIndex\n * @return {?}\n */\nfunction callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n    for (let i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n        /** @type {?} */\n        const nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & lifecycles) {\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n        }\n        // only visit direct children\n        i += nodeDef.childCount;\n    }\n    return initIndex;\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} lifecycles\n * @param {?} initIndex\n * @return {?}\n */\nfunction callProviderLifecycles(view, index, lifecycles, initIndex) {\n    /** @type {?} */\n    const providerData = asProviderData(view, index);\n    if (!providerData) {\n        return;\n    }\n    /** @type {?} */\n    const provider = providerData.instance;\n    if (!provider) {\n        return;\n    }\n    Services.setCurrentNode(view, index);\n    if (lifecycles & 1048576 /* AfterContentInit */ &&\n        shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n        provider.ngAfterContentInit();\n    }\n    if (lifecycles & 2097152 /* AfterContentChecked */) {\n        provider.ngAfterContentChecked();\n    }\n    if (lifecycles & 4194304 /* AfterViewInit */ &&\n        shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n        provider.ngAfterViewInit();\n    }\n    if (lifecycles & 8388608 /* AfterViewChecked */) {\n        provider.ngAfterViewChecked();\n    }\n    if (lifecycles & 131072 /* OnDestroy */) {\n        provider.ngOnDestroy();\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @param {?} flags\n * @param {?} id\n * @param {?} bindings\n * @return {?}\n */\nfunction queryDef(flags, id, bindings) {\n    /** @type {?} */\n    let bindingDefs = [];\n    for (let propName in bindings) {\n        /** @type {?} */\n        const bindingType = bindings[propName];\n        bindingDefs.push({ propName, bindingType });\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        // TODO(vicb): check\n        checkIndex: -1, flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        ngContentIndex: -1,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {},\n        childCount: 0,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: { id, filterId: filterQueryId(id), bindings: bindingDefs },\n        ngContent: null\n    };\n}\n/**\n * @return {?}\n */\nfunction createQuery() {\n    return new QueryList();\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction dirtyParentQueries(view) {\n    /** @type {?} */\n    const queryIds = view.def.nodeMatchedQueries;\n    while (view.parent && isEmbeddedView(view)) {\n        /** @type {?} */\n        let tplDef = /** @type {?} */ ((view.parentNodeDef));\n        view = view.parent;\n        /** @type {?} */\n        const end = tplDef.nodeIndex + tplDef.childCount;\n        for (let i = 0; i <= end; i++) {\n            /** @type {?} */\n            const nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                (/** @type {?} */ ((nodeDef.query)).filterId & queryIds) === /** @type {?} */ ((nodeDef.query)).filterId) {\n                asQueryList(view, i).setDirty();\n            }\n            if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                // skip elements that don't contain the template element or no query.\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    // view queries\n    if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n        for (let i = 0; i < view.def.nodes.length; i++) {\n            /** @type {?} */\n            const nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                asQueryList(view, i).setDirty();\n            }\n            // only visit the root nodes\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @return {?}\n */\nfunction checkAndUpdateQuery(view, nodeDef) {\n    /** @type {?} */\n    const queryList = asQueryList(view, nodeDef.nodeIndex);\n    if (!queryList.dirty) {\n        return;\n    }\n    /** @type {?} */\n    let directiveInstance;\n    /** @type {?} */\n    let newValues = /** @type {?} */ ((undefined));\n    if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n        /** @type {?} */\n        const elementDef = /** @type {?} */ ((/** @type {?} */ ((nodeDef.parent)).parent));\n        newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, /** @type {?} */ ((nodeDef.query)), []);\n        directiveInstance = asProviderData(view, /** @type {?} */ ((nodeDef.parent)).nodeIndex).instance;\n    }\n    else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n        newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, /** @type {?} */ ((nodeDef.query)), []);\n        directiveInstance = view.component;\n    }\n    queryList.reset(newValues);\n    /** @type {?} */\n    const bindings = /** @type {?} */ ((nodeDef.query)).bindings;\n    /** @type {?} */\n    let notify = false;\n    for (let i = 0; i < bindings.length; i++) {\n        /** @type {?} */\n        const binding = bindings[i];\n        /** @type {?} */\n        let boundValue;\n        switch (binding.bindingType) {\n            case 0 /* First */:\n                boundValue = queryList.first;\n                break;\n            case 1 /* All */:\n                boundValue = queryList;\n                notify = true;\n                break;\n        }\n        directiveInstance[binding.propName] = boundValue;\n    }\n    if (notify) {\n        queryList.notifyOnChanges();\n    }\n}\n/**\n * @param {?} view\n * @param {?} startIndex\n * @param {?} endIndex\n * @param {?} queryDef\n * @param {?} values\n * @return {?}\n */\nfunction calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n    for (let i = startIndex; i <= endIndex; i++) {\n        /** @type {?} */\n        const nodeDef = view.def.nodes[i];\n        /** @type {?} */\n        const valueType = nodeDef.matchedQueries[queryDef.id];\n        if (valueType != null) {\n            values.push(getQueryValue(view, nodeDef, valueType));\n        }\n        if (nodeDef.flags & 1 /* TypeElement */ && /** @type {?} */ ((nodeDef.element)).template &&\n            (/** @type {?} */ ((/** @type {?} */ ((nodeDef.element)).template)).nodeMatchedQueries & queryDef.filterId) ===\n                queryDef.filterId) {\n            /** @type {?} */\n            const elementData = asElementData(view, i);\n            // check embedded views that were attached at the place of their template,\n            // but process child nodes first if some match the query (see issue #16568)\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                i += nodeDef.childCount;\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                /** @type {?} */\n                const embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n                for (let k = 0; k < embeddedViews.length; k++) {\n                    /** @type {?} */\n                    const embeddedView = embeddedViews[k];\n                    /** @type {?} */\n                    const dvc = declaredViewContainer(embeddedView);\n                    if (dvc && dvc === elementData) {\n                        calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            /** @type {?} */\n            const projectedViews = elementData.template._projectedViews;\n            if (projectedViews) {\n                for (let k = 0; k < projectedViews.length; k++) {\n                    /** @type {?} */\n                    const projectedView = projectedViews[k];\n                    calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                }\n            }\n        }\n        if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n            // if no child matches the query, skip the children.\n            i += nodeDef.childCount;\n        }\n    }\n    return values;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} queryValueType\n * @return {?}\n */\nfunction getQueryValue(view, nodeDef, queryValueType) {\n    if (queryValueType != null) {\n        // a match\n        switch (queryValueType) {\n            case 1 /* RenderElement */:\n                return asElementData(view, nodeDef.nodeIndex).renderElement;\n            case 0 /* ElementRef */:\n                return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n            case 2 /* TemplateRef */:\n                return asElementData(view, nodeDef.nodeIndex).template;\n            case 3 /* ViewContainerRef */:\n                return asElementData(view, nodeDef.nodeIndex).viewContainer;\n            case 4 /* Provider */:\n                return asProviderData(view, nodeDef.nodeIndex).instance;\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @param {?} ngContentIndex\n * @param {?} index\n * @return {?}\n */\nfunction ngContentDef(ngContentIndex, index) {\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: -1,\n        flags: 8 /* TypeNgContent */,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {}, ngContentIndex,\n        childCount: 0,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: { index }\n    };\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction appendNgContent(view, renderHost, def) {\n    /** @type {?} */\n    const parentEl = getParentRenderElement(view, renderHost, def);\n    if (!parentEl) {\n        // Nothing to do if there is no parent element.\n        return;\n    }\n    /** @type {?} */\n    const ngContentIndex = /** @type {?} */ ((def.ngContent)).index;\n    visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @param {?} checkIndex\n * @param {?} argCount\n * @return {?}\n */\nfunction purePipeDef(checkIndex, argCount) {\n    // argCount + 1 to include the pipe as first arg\n    return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n}\n/**\n * @param {?} checkIndex\n * @param {?} argCount\n * @return {?}\n */\nfunction pureArrayDef(checkIndex, argCount) {\n    return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n}\n/**\n * @param {?} checkIndex\n * @param {?} propToIndex\n * @return {?}\n */\nfunction pureObjectDef(checkIndex, propToIndex) {\n    /** @type {?} */\n    const keys = Object.keys(propToIndex);\n    /** @type {?} */\n    const nbKeys = keys.length;\n    /** @type {?} */\n    const propertyNames = new Array(nbKeys);\n    for (let i = 0; i < nbKeys; i++) {\n        /** @type {?} */\n        const key = keys[i];\n        /** @type {?} */\n        const index = propToIndex[key];\n        propertyNames[index] = key;\n    }\n    return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n}\n/**\n * @param {?} flags\n * @param {?} checkIndex\n * @param {?} propertyNames\n * @return {?}\n */\nfunction _pureExpressionDef(flags, checkIndex, propertyNames) {\n    /** @type {?} */\n    const bindings = new Array(propertyNames.length);\n    for (let i = 0; i < propertyNames.length; i++) {\n        /** @type {?} */\n        const prop = propertyNames[i];\n        bindings[i] = {\n            flags: 8 /* TypeProperty */,\n            name: prop,\n            ns: null,\n            nonMinifiedName: prop,\n            securityContext: null,\n            suffix: null\n        };\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex,\n        flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {},\n        ngContentIndex: -1,\n        childCount: 0, bindings,\n        bindingFlags: calcBindingFlags(bindings),\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createPureExpression(view, def) {\n    return { value: undefined };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    /** @type {?} */\n    const bindings = def.bindings;\n    /** @type {?} */\n    let changed = false;\n    /** @type {?} */\n    const bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        /** @type {?} */\n        const data = asPureExpressionData(view, def.nodeIndex);\n        /** @type {?} */\n        let value;\n        switch (def.flags & 201347067 /* Types */) {\n            case 32 /* TypePureArray */:\n                value = new Array(bindings.length);\n                if (bindLen > 0)\n                    value[0] = v0;\n                if (bindLen > 1)\n                    value[1] = v1;\n                if (bindLen > 2)\n                    value[2] = v2;\n                if (bindLen > 3)\n                    value[3] = v3;\n                if (bindLen > 4)\n                    value[4] = v4;\n                if (bindLen > 5)\n                    value[5] = v5;\n                if (bindLen > 6)\n                    value[6] = v6;\n                if (bindLen > 7)\n                    value[7] = v7;\n                if (bindLen > 8)\n                    value[8] = v8;\n                if (bindLen > 9)\n                    value[9] = v9;\n                break;\n            case 64 /* TypePureObject */:\n                value = {};\n                if (bindLen > 0)\n                    value[/** @type {?} */ ((bindings[0].name))] = v0;\n                if (bindLen > 1)\n                    value[/** @type {?} */ ((bindings[1].name))] = v1;\n                if (bindLen > 2)\n                    value[/** @type {?} */ ((bindings[2].name))] = v2;\n                if (bindLen > 3)\n                    value[/** @type {?} */ ((bindings[3].name))] = v3;\n                if (bindLen > 4)\n                    value[/** @type {?} */ ((bindings[4].name))] = v4;\n                if (bindLen > 5)\n                    value[/** @type {?} */ ((bindings[5].name))] = v5;\n                if (bindLen > 6)\n                    value[/** @type {?} */ ((bindings[6].name))] = v6;\n                if (bindLen > 7)\n                    value[/** @type {?} */ ((bindings[7].name))] = v7;\n                if (bindLen > 8)\n                    value[/** @type {?} */ ((bindings[8].name))] = v8;\n                if (bindLen > 9)\n                    value[/** @type {?} */ ((bindings[9].name))] = v9;\n                break;\n            case 128 /* TypePurePipe */:\n                /** @type {?} */\n                const pipe = v0;\n                switch (bindLen) {\n                    case 1:\n                        value = pipe.transform(v0);\n                        break;\n                    case 2:\n                        value = pipe.transform(v1);\n                        break;\n                    case 3:\n                        value = pipe.transform(v1, v2);\n                        break;\n                    case 4:\n                        value = pipe.transform(v1, v2, v3);\n                        break;\n                    case 5:\n                        value = pipe.transform(v1, v2, v3, v4);\n                        break;\n                    case 6:\n                        value = pipe.transform(v1, v2, v3, v4, v5);\n                        break;\n                    case 7:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                        break;\n                    case 8:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                        break;\n                    case 9:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                        break;\n                    case 10:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                        break;\n                }\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdatePureExpressionDynamic(view, def, values) {\n    /** @type {?} */\n    const bindings = def.bindings;\n    /** @type {?} */\n    let changed = false;\n    for (let i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        /** @type {?} */\n        const data = asPureExpressionData(view, def.nodeIndex);\n        /** @type {?} */\n        let value;\n        switch (def.flags & 201347067 /* Types */) {\n            case 32 /* TypePureArray */:\n                value = values;\n                break;\n            case 64 /* TypePureObject */:\n                value = {};\n                for (let i = 0; i < values.length; i++) {\n                    value[/** @type {?} */ ((bindings[i].name))] = values[i];\n                }\n                break;\n            case 128 /* TypePurePipe */:\n                /** @type {?} */\n                const pipe = values[0];\n                /** @type {?} */\n                const params = values.slice(1);\n                value = (/** @type {?} */ (pipe.transform))(...params);\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @param {?} checkIndex\n * @param {?} ngContentIndex\n * @param {?} staticText\n * @return {?}\n */\nfunction textDef(checkIndex, ngContentIndex, staticText) {\n    /** @type {?} */\n    const bindings = new Array(staticText.length - 1);\n    for (let i = 1; i < staticText.length; i++) {\n        bindings[i - 1] = {\n            flags: 8 /* TypeProperty */,\n            name: null,\n            ns: null,\n            nonMinifiedName: null,\n            securityContext: null,\n            suffix: staticText[i],\n        };\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex,\n        flags: 2 /* TypeText */,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {}, ngContentIndex,\n        childCount: 0, bindings,\n        bindingFlags: 8 /* TypeProperty */,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: { prefix: staticText[0] },\n        query: null,\n        ngContent: null,\n    };\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction createText(view, renderHost, def) {\n    /** @type {?} */\n    let renderNode$$1;\n    /** @type {?} */\n    const renderer = view.renderer;\n    renderNode$$1 = renderer.createText(/** @type {?} */ ((def.text)).prefix);\n    /** @type {?} */\n    const parentEl = getParentRenderElement(view, renderHost, def);\n    if (parentEl) {\n        renderer.appendChild(parentEl, renderNode$$1);\n    }\n    return { renderText: renderNode$$1 };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    /** @type {?} */\n    let changed = false;\n    /** @type {?} */\n    const bindings = def.bindings;\n    /** @type {?} */\n    const bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        /** @type {?} */\n        let value = /** @type {?} */ ((def.text)).prefix;\n        if (bindLen > 0)\n            value += _addInterpolationPart(v0, bindings[0]);\n        if (bindLen > 1)\n            value += _addInterpolationPart(v1, bindings[1]);\n        if (bindLen > 2)\n            value += _addInterpolationPart(v2, bindings[2]);\n        if (bindLen > 3)\n            value += _addInterpolationPart(v3, bindings[3]);\n        if (bindLen > 4)\n            value += _addInterpolationPart(v4, bindings[4]);\n        if (bindLen > 5)\n            value += _addInterpolationPart(v5, bindings[5]);\n        if (bindLen > 6)\n            value += _addInterpolationPart(v6, bindings[6]);\n        if (bindLen > 7)\n            value += _addInterpolationPart(v7, bindings[7]);\n        if (bindLen > 8)\n            value += _addInterpolationPart(v8, bindings[8]);\n        if (bindLen > 9)\n            value += _addInterpolationPart(v9, bindings[9]);\n        /** @type {?} */\n        const renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n        view.renderer.setValue(renderNode$$1, value);\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateTextDynamic(view, def, values) {\n    /** @type {?} */\n    const bindings = def.bindings;\n    /** @type {?} */\n    let changed = false;\n    for (let i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        /** @type {?} */\n        let value = '';\n        for (let i = 0; i < values.length; i++) {\n            value = value + _addInterpolationPart(values[i], bindings[i]);\n        }\n        value = /** @type {?} */ ((def.text)).prefix + value;\n        /** @type {?} */\n        const renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n        view.renderer.setValue(renderNode$$1, value);\n    }\n    return changed;\n}\n/**\n * @param {?} value\n * @param {?} binding\n * @return {?}\n */\nfunction _addInterpolationPart(value, binding) {\n    /** @type {?} */\n    const valueStr = value != null ? value.toString() : '';\n    return valueStr + binding.suffix;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @param {?} flags\n * @param {?} nodes\n * @param {?=} updateDirectives\n * @param {?=} updateRenderer\n * @return {?}\n */\nfunction viewDef(flags, nodes, updateDirectives, updateRenderer) {\n    /** @type {?} */\n    let viewBindingCount = 0;\n    /** @type {?} */\n    let viewDisposableCount = 0;\n    /** @type {?} */\n    let viewNodeFlags = 0;\n    /** @type {?} */\n    let viewRootNodeFlags = 0;\n    /** @type {?} */\n    let viewMatchedQueries = 0;\n    /** @type {?} */\n    let currentParent = null;\n    /** @type {?} */\n    let currentRenderParent = null;\n    /** @type {?} */\n    let currentElementHasPublicProviders = false;\n    /** @type {?} */\n    let currentElementHasPrivateProviders = false;\n    /** @type {?} */\n    let lastRenderRootNode = null;\n    for (let i = 0; i < nodes.length; i++) {\n        /** @type {?} */\n        const node = nodes[i];\n        node.nodeIndex = i;\n        node.parent = currentParent;\n        node.bindingIndex = viewBindingCount;\n        node.outputIndex = viewDisposableCount;\n        node.renderParent = currentRenderParent;\n        viewNodeFlags |= node.flags;\n        viewMatchedQueries |= node.matchedQueryIds;\n        if (node.element) {\n            /** @type {?} */\n            const elDef = node.element;\n            elDef.publicProviders =\n                currentParent ? /** @type {?} */ ((currentParent.element)).publicProviders : Object.create(null);\n            elDef.allProviders = elDef.publicProviders;\n            // Note: We assume that all providers of an element are before any child element!\n            currentElementHasPublicProviders = false;\n            currentElementHasPrivateProviders = false;\n            if (node.element.template) {\n                viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n            }\n        }\n        validateNode(currentParent, node, nodes.length);\n        viewBindingCount += node.bindings.length;\n        viewDisposableCount += node.outputs.length;\n        if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n            lastRenderRootNode = node;\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            if (!currentElementHasPublicProviders) {\n                currentElementHasPublicProviders = true; /** @type {?} */\n                ((/** @type {?} */ ((currentParent)).element)).publicProviders = Object.create(/** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).publicProviders); /** @type {?} */\n                ((/** @type {?} */ ((currentParent)).element)).allProviders = /** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).publicProviders;\n            }\n            /** @type {?} */\n            const isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n            /** @type {?} */\n            const isComponent = (node.flags & 32768 /* Component */) !== 0;\n            if (!isPrivateService || isComponent) {\n                /** @type {?} */ ((/** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).publicProviders))[tokenKey(/** @type {?} */ ((node.provider)).token)] = node;\n            }\n            else {\n                if (!currentElementHasPrivateProviders) {\n                    currentElementHasPrivateProviders = true; /** @type {?} */\n                    ((/** @type {?} */ ((currentParent)).element)).allProviders = Object.create(/** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).publicProviders);\n                } /** @type {?} */\n                ((/** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).allProviders))[tokenKey(/** @type {?} */ ((node.provider)).token)] = node;\n            }\n            if (isComponent) {\n                /** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).componentProvider = node;\n            }\n        }\n        if (currentParent) {\n            currentParent.childFlags |= node.flags;\n            currentParent.directChildFlags |= node.flags;\n            currentParent.childMatchedQueries |= node.matchedQueryIds;\n            if (node.element && node.element.template) {\n                currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n            }\n        }\n        else {\n            viewRootNodeFlags |= node.flags;\n        }\n        if (node.childCount > 0) {\n            currentParent = node;\n            if (!isNgContainer(node)) {\n                currentRenderParent = node;\n            }\n        }\n        else {\n            // When the current node has no children, check if it is the last children of its parent.\n            // When it is, propagate the flags up.\n            // The loop is required because an element could be the last transitive children of several\n            // elements. We loop to either the root or the highest opened element (= with remaining\n            // children)\n            while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                /** @type {?} */\n                const newParent = currentParent.parent;\n                if (newParent) {\n                    newParent.childFlags |= currentParent.childFlags;\n                    newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                }\n                currentParent = newParent;\n                // We also need to update the render parent & account for ng-container\n                if (currentParent && isNgContainer(currentParent)) {\n                    currentRenderParent = currentParent.renderParent;\n                }\n                else {\n                    currentRenderParent = currentParent;\n                }\n            }\n        }\n    }\n    /** @type {?} */\n    const handleEvent = (view, nodeIndex, eventName, event) => /** @type {?} */ ((/** @type {?} */ ((nodes[nodeIndex].element)).handleEvent))(view, eventName, event);\n    return {\n        // Will be filled later...\n        factory: null,\n        nodeFlags: viewNodeFlags,\n        rootNodeFlags: viewRootNodeFlags,\n        nodeMatchedQueries: viewMatchedQueries, flags,\n        nodes: nodes,\n        updateDirectives: updateDirectives || NOOP,\n        updateRenderer: updateRenderer || NOOP, handleEvent,\n        bindingCount: viewBindingCount,\n        outputCount: viewDisposableCount, lastRenderRootNode\n    };\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction isNgContainer(node) {\n    return (node.flags & 1 /* TypeElement */) !== 0 && /** @type {?} */ ((node.element)).name === null;\n}\n/**\n * @param {?} parent\n * @param {?} node\n * @param {?} nodeCount\n * @return {?}\n */\nfunction validateNode(parent, node, nodeCount) {\n    /** @type {?} */\n    const template = node.element && node.element.template;\n    if (template) {\n        if (!template.lastRenderRootNode) {\n            throw new Error(`Illegal State: Embedded templates without nodes are not allowed!`);\n        }\n        if (template.lastRenderRootNode &&\n            template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n            throw new Error(`Illegal State: Last root node of a template can't have embedded views, at index ${node.nodeIndex}!`);\n        }\n    }\n    if (node.flags & 20224 /* CatProvider */) {\n        /** @type {?} */\n        const parentFlags = parent ? parent.flags : 0;\n        if ((parentFlags & 1 /* TypeElement */) === 0) {\n            throw new Error(`Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index ${node.nodeIndex}!`);\n        }\n    }\n    if (node.query) {\n        if (node.flags & 67108864 /* TypeContentQuery */ &&\n            (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n            throw new Error(`Illegal State: Content Query nodes need to be children of directives, at index ${node.nodeIndex}!`);\n        }\n        if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n            throw new Error(`Illegal State: View Query nodes have to be top level nodes, at index ${node.nodeIndex}!`);\n        }\n    }\n    if (node.childCount) {\n        /** @type {?} */\n        const parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n        if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n            throw new Error(`Illegal State: childCount of node leads outside of parent, at index ${node.nodeIndex}!`);\n        }\n    }\n}\n/**\n * @param {?} parent\n * @param {?} anchorDef\n * @param {?} viewDef\n * @param {?=} context\n * @return {?}\n */\nfunction createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n    /** @type {?} */\n    const view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n    initView(view, parent.component, context);\n    createViewNodes(view);\n    return view;\n}\n/**\n * @param {?} root\n * @param {?} def\n * @param {?=} context\n * @return {?}\n */\nfunction createRootView(root, def, context) {\n    /** @type {?} */\n    const view = createView(root, root.renderer, null, null, def);\n    initView(view, context, context);\n    createViewNodes(view);\n    return view;\n}\n/**\n * @param {?} parentView\n * @param {?} nodeDef\n * @param {?} viewDef\n * @param {?} hostElement\n * @return {?}\n */\nfunction createComponentView(parentView, nodeDef, viewDef, hostElement) {\n    /** @type {?} */\n    const rendererType = /** @type {?} */ ((nodeDef.element)).componentRendererType;\n    /** @type {?} */\n    let compRenderer;\n    if (!rendererType) {\n        compRenderer = parentView.root.renderer;\n    }\n    else {\n        compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n    }\n    return createView(parentView.root, compRenderer, parentView, /** @type {?} */ ((nodeDef.element)).componentProvider, viewDef);\n}\n/**\n * @param {?} root\n * @param {?} renderer\n * @param {?} parent\n * @param {?} parentNodeDef\n * @param {?} def\n * @return {?}\n */\nfunction createView(root, renderer, parent, parentNodeDef, def) {\n    /** @type {?} */\n    const nodes = new Array(def.nodes.length);\n    /** @type {?} */\n    const disposables = def.outputCount ? new Array(def.outputCount) : null;\n    /** @type {?} */\n    const view = {\n        def,\n        parent,\n        viewContainerParent: null, parentNodeDef,\n        context: null,\n        component: null, nodes,\n        state: 13 /* CatInit */, root, renderer,\n        oldValues: new Array(def.bindingCount), disposables,\n        initIndex: -1\n    };\n    return view;\n}\n/**\n * @param {?} view\n * @param {?} component\n * @param {?} context\n * @return {?}\n */\nfunction initView(view, component, context) {\n    view.component = component;\n    view.context = context;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createViewNodes(view) {\n    /** @type {?} */\n    let renderHost;\n    if (isComponentView(view)) {\n        /** @type {?} */\n        const hostDef = view.parentNodeDef;\n        renderHost = asElementData(/** @type {?} */ ((view.parent)), /** @type {?} */ ((/** @type {?} */ ((hostDef)).parent)).nodeIndex).renderElement;\n    }\n    /** @type {?} */\n    const def = view.def;\n    /** @type {?} */\n    const nodes = view.nodes;\n    for (let i = 0; i < def.nodes.length; i++) {\n        /** @type {?} */\n        const nodeDef = def.nodes[i];\n        Services.setCurrentNode(view, i);\n        /** @type {?} */\n        let nodeData;\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                /** @type {?} */\n                const el = /** @type {?} */ (createElement(view, renderHost, nodeDef));\n                /** @type {?} */\n                let componentView = /** @type {?} */ ((undefined));\n                if (nodeDef.flags & 33554432 /* ComponentView */) {\n                    /** @type {?} */\n                    const compViewDef = resolveDefinition(/** @type {?} */ ((/** @type {?} */ ((nodeDef.element)).componentView)));\n                    componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                }\n                listenToElementOutputs(view, componentView, nodeDef, el);\n                nodeData = /** @type {?} */ ({\n                    renderElement: el,\n                    componentView,\n                    viewContainer: null,\n                    template: /** @type {?} */ ((nodeDef.element)).template ? createTemplateData(view, nodeDef) : undefined\n                });\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                }\n                break;\n            case 2 /* TypeText */:\n                nodeData = /** @type {?} */ (createText(view, renderHost, nodeDef));\n                break;\n            case 512 /* TypeClassProvider */:\n            case 1024 /* TypeFactoryProvider */:\n            case 2048 /* TypeUseExistingProvider */:\n            case 256 /* TypeValueProvider */: {\n                nodeData = nodes[i];\n                if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                    /** @type {?} */\n                    const instance = createProviderInstance(view, nodeDef);\n                    nodeData = /** @type {?} */ ({ instance });\n                }\n                break;\n            }\n            case 16 /* TypePipe */: {\n                /** @type {?} */\n                const instance = createPipeInstance(view, nodeDef);\n                nodeData = /** @type {?} */ ({ instance });\n                break;\n            }\n            case 16384 /* TypeDirective */: {\n                nodeData = nodes[i];\n                if (!nodeData) {\n                    /** @type {?} */\n                    const instance = createDirectiveInstance(view, nodeDef);\n                    nodeData = /** @type {?} */ ({ instance });\n                }\n                if (nodeDef.flags & 32768 /* Component */) {\n                    /** @type {?} */\n                    const compView = asElementData(view, /** @type {?} */ ((nodeDef.parent)).nodeIndex).componentView;\n                    initView(compView, nodeData.instance, nodeData.instance);\n                }\n                break;\n            }\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                nodeData = /** @type {?} */ (createPureExpression(view, nodeDef));\n                break;\n            case 67108864 /* TypeContentQuery */:\n            case 134217728 /* TypeViewQuery */:\n                nodeData = /** @type {?} */ (createQuery());\n                break;\n            case 8 /* TypeNgContent */:\n                appendNgContent(view, renderHost, nodeDef);\n                // no runtime data needed for NgContent...\n                nodeData = undefined;\n                break;\n        }\n        nodes[i] = nodeData;\n    }\n    // Create the ViewData.nodes of component views after we created everything else,\n    // so that e.g. ng-content works\n    execComponentViewsAction(view, ViewAction.CreateViewNodes);\n    // fill static content and view queries\n    execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction checkNoChangesView(view) {\n    markProjectedViewsForCheck(view);\n    Services.updateDirectives(view, 1 /* CheckNoChanges */);\n    execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n    Services.updateRenderer(view, 1 /* CheckNoChanges */);\n    execComponentViewsAction(view, ViewAction.CheckNoChanges);\n    // Note: We don't check queries for changes as we didn't do this in v2.x.\n    // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n    view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction checkAndUpdateView(view) {\n    if (view.state & 1 /* BeforeFirstCheck */) {\n        view.state &= ~1 /* BeforeFirstCheck */;\n        view.state |= 2 /* FirstCheck */;\n    }\n    else {\n        view.state &= ~2 /* FirstCheck */;\n    }\n    shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n    markProjectedViewsForCheck(view);\n    Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n    execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n    /** @type {?} */\n    let callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n    callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n    Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n    execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n    callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n    callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n    if (view.def.flags & 2 /* OnPush */) {\n        view.state &= ~8 /* ChecksEnabled */;\n    }\n    view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === 0 /* Inline */) {\n        return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction markProjectedViewsForCheck(view) {\n    /** @type {?} */\n    const def = view.def;\n    if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n        return;\n    }\n    for (let i = 0; i < def.nodes.length; i++) {\n        /** @type {?} */\n        const nodeDef = def.nodes[i];\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            /** @type {?} */\n            const projectedViews = asElementData(view, i).template._projectedViews;\n            if (projectedViews) {\n                for (let i = 0; i < projectedViews.length; i++) {\n                    /** @type {?} */\n                    const projectedView = projectedViews[i];\n                    projectedView.state |= 32 /* CheckProjectedView */;\n                    markParentViewsForCheckProjectedViews(projectedView, view);\n                }\n            }\n        }\n        else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    switch (nodeDef.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 2 /* TypeText */:\n            return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 16384 /* TypeDirective */:\n            return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 32 /* TypePureArray */:\n        case 64 /* TypePureObject */:\n        case 128 /* TypePurePipe */:\n            return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        default:\n            throw 'unreachable';\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateNodeDynamic(view, nodeDef, values) {\n    switch (nodeDef.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return checkAndUpdateElementDynamic(view, nodeDef, values);\n        case 2 /* TypeText */:\n            return checkAndUpdateTextDynamic(view, nodeDef, values);\n        case 16384 /* TypeDirective */:\n            return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n        case 32 /* TypePureArray */:\n        case 64 /* TypePureObject */:\n        case 128 /* TypePurePipe */:\n            return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n        default:\n            throw 'unreachable';\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === 0 /* Inline */) {\n        checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        checkNoChangesNodeDynamic(view, nodeDef, v0);\n    }\n    // Returning false is ok here as we would have thrown in case of a change.\n    return false;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    /** @type {?} */\n    const bindLen = nodeDef.bindings.length;\n    if (bindLen > 0)\n        checkBindingNoChanges(view, nodeDef, 0, v0);\n    if (bindLen > 1)\n        checkBindingNoChanges(view, nodeDef, 1, v1);\n    if (bindLen > 2)\n        checkBindingNoChanges(view, nodeDef, 2, v2);\n    if (bindLen > 3)\n        checkBindingNoChanges(view, nodeDef, 3, v3);\n    if (bindLen > 4)\n        checkBindingNoChanges(view, nodeDef, 4, v4);\n    if (bindLen > 5)\n        checkBindingNoChanges(view, nodeDef, 5, v5);\n    if (bindLen > 6)\n        checkBindingNoChanges(view, nodeDef, 6, v6);\n    if (bindLen > 7)\n        checkBindingNoChanges(view, nodeDef, 7, v7);\n    if (bindLen > 8)\n        checkBindingNoChanges(view, nodeDef, 8, v8);\n    if (bindLen > 9)\n        checkBindingNoChanges(view, nodeDef, 9, v9);\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} values\n * @return {?}\n */\nfunction checkNoChangesNodeDynamic(view, nodeDef, values) {\n    for (let i = 0; i < values.length; i++) {\n        checkBindingNoChanges(view, nodeDef, i, values[i]);\n    }\n}\n/**\n * Workaround https://github.com/angular/tsickle/issues/497\n * @suppress {misplacedTypeAnnotation}\n * @param {?} view\n * @param {?} nodeDef\n * @return {?}\n */\nfunction checkNoChangesQuery(view, nodeDef) {\n    /** @type {?} */\n    const queryList = asQueryList(view, nodeDef.nodeIndex);\n    if (queryList.dirty) {\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), `Query ${(/** @type {?} */ ((nodeDef.query))).id} not dirty`, `Query ${(/** @type {?} */ ((nodeDef.query))).id} dirty`, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction destroyView(view) {\n    if (view.state & 128 /* Destroyed */) {\n        return;\n    }\n    execEmbeddedViewsAction(view, ViewAction.Destroy);\n    execComponentViewsAction(view, ViewAction.Destroy);\n    callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n    if (view.disposables) {\n        for (let i = 0; i < view.disposables.length; i++) {\n            view.disposables[i]();\n        }\n    }\n    detachProjectedView(view);\n    if (view.renderer.destroyNode) {\n        destroyViewNodes(view);\n    }\n    if (isComponentView(view)) {\n        view.renderer.destroy();\n    }\n    view.state |= 128 /* Destroyed */;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction destroyViewNodes(view) {\n    /** @type {?} */\n    const len = view.def.nodes.length;\n    for (let i = 0; i < len; i++) {\n        /** @type {?} */\n        const def = view.def.nodes[i];\n        if (def.flags & 1 /* TypeElement */) {\n            /** @type {?} */ ((view.renderer.destroyNode))(asElementData(view, i).renderElement);\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            /** @type {?} */ ((view.renderer.destroyNode))(asTextData(view, i).renderText);\n        }\n        else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n            asQueryList(view, i).destroy();\n        }\n    }\n}\n/** @enum {number} */\nconst ViewAction = {\n    CreateViewNodes: 0,\n    CheckNoChanges: 1,\n    CheckNoChangesProjectedViews: 2,\n    CheckAndUpdate: 3,\n    CheckAndUpdateProjectedViews: 4,\n    Destroy: 5,\n};\nViewAction[ViewAction.CreateViewNodes] = 'CreateViewNodes';\nViewAction[ViewAction.CheckNoChanges] = 'CheckNoChanges';\nViewAction[ViewAction.CheckNoChangesProjectedViews] = 'CheckNoChangesProjectedViews';\nViewAction[ViewAction.CheckAndUpdate] = 'CheckAndUpdate';\nViewAction[ViewAction.CheckAndUpdateProjectedViews] = 'CheckAndUpdateProjectedViews';\nViewAction[ViewAction.Destroy] = 'Destroy';\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execComponentViewsAction(view, action) {\n    /** @type {?} */\n    const def = view.def;\n    if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n        return;\n    }\n    for (let i = 0; i < def.nodes.length; i++) {\n        /** @type {?} */\n        const nodeDef = def.nodes[i];\n        if (nodeDef.flags & 33554432 /* ComponentView */) {\n            // a leaf\n            callViewAction(asElementData(view, i).componentView, action);\n        }\n        else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execEmbeddedViewsAction(view, action) {\n    /** @type {?} */\n    const def = view.def;\n    if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n        return;\n    }\n    for (let i = 0; i < def.nodes.length; i++) {\n        /** @type {?} */\n        const nodeDef = def.nodes[i];\n        if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n            /** @type {?} */\n            const embeddedViews = /** @type {?} */ ((asElementData(view, i).viewContainer))._embeddedViews;\n            for (let k = 0; k < embeddedViews.length; k++) {\n                callViewAction(embeddedViews[k], action);\n            }\n        }\n        else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction callViewAction(view, action) {\n    /** @type {?} */\n    const viewState = view.state;\n    switch (action) {\n        case ViewAction.CheckNoChanges:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                    checkNoChangesView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                }\n            }\n            break;\n        case ViewAction.CheckNoChangesProjectedViews:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if (viewState & 32 /* CheckProjectedView */) {\n                    checkNoChangesView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, action);\n                }\n            }\n            break;\n        case ViewAction.CheckAndUpdate:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                    checkAndUpdateView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                }\n            }\n            break;\n        case ViewAction.CheckAndUpdateProjectedViews:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if (viewState & 32 /* CheckProjectedView */) {\n                    checkAndUpdateView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, action);\n                }\n            }\n            break;\n        case ViewAction.Destroy:\n            // Note: destroyView recurses over all views,\n            // so we don't need to special case projected views here.\n            destroyView(view);\n            break;\n        case ViewAction.CreateViewNodes:\n            createViewNodes(view);\n            break;\n    }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execProjectedViewsAction(view, action) {\n    execEmbeddedViewsAction(view, action);\n    execComponentViewsAction(view, action);\n}\n/**\n * @param {?} view\n * @param {?} queryFlags\n * @param {?} staticDynamicQueryFlag\n * @param {?} checkType\n * @return {?}\n */\nfunction execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n    if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n        return;\n    }\n    /** @type {?} */\n    const nodeCount = view.def.nodes.length;\n    for (let i = 0; i < nodeCount; i++) {\n        /** @type {?} */\n        const nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n            Services.setCurrentNode(view, nodeDef.nodeIndex);\n            switch (checkType) {\n                case 0 /* CheckAndUpdate */:\n                    checkAndUpdateQuery(view, nodeDef);\n                    break;\n                case 1 /* CheckNoChanges */:\n                    checkNoChangesQuery(view, nodeDef);\n                    break;\n            }\n        }\n        if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n            // no child has a matching query\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet initialized = false;\n/**\n * @return {?}\n */\nfunction initServicesIfNeeded() {\n    if (initialized) {\n        return;\n    }\n    initialized = true;\n    /** @type {?} */\n    const services = isDevMode() ? createDebugServices() : createProdServices();\n    Services.setCurrentNode = services.setCurrentNode;\n    Services.createRootView = services.createRootView;\n    Services.createEmbeddedView = services.createEmbeddedView;\n    Services.createComponentView = services.createComponentView;\n    Services.createNgModuleRef = services.createNgModuleRef;\n    Services.overrideProvider = services.overrideProvider;\n    Services.overrideComponentView = services.overrideComponentView;\n    Services.clearOverrides = services.clearOverrides;\n    Services.checkAndUpdateView = services.checkAndUpdateView;\n    Services.checkNoChangesView = services.checkNoChangesView;\n    Services.destroyView = services.destroyView;\n    Services.resolveDep = resolveDep;\n    Services.createDebugContext = services.createDebugContext;\n    Services.handleEvent = services.handleEvent;\n    Services.updateDirectives = services.updateDirectives;\n    Services.updateRenderer = services.updateRenderer;\n    Services.dirtyParentQueries = dirtyParentQueries;\n}\n/**\n * @return {?}\n */\nfunction createProdServices() {\n    return {\n        setCurrentNode: () => { },\n        createRootView: createProdRootView,\n        createEmbeddedView: createEmbeddedView,\n        createComponentView: createComponentView,\n        createNgModuleRef: createNgModuleRef,\n        overrideProvider: NOOP,\n        overrideComponentView: NOOP,\n        clearOverrides: NOOP,\n        checkAndUpdateView: checkAndUpdateView,\n        checkNoChangesView: checkNoChangesView,\n        destroyView: destroyView,\n        createDebugContext: (view, nodeIndex) => new DebugContext_(view, nodeIndex),\n        handleEvent: (view, nodeIndex, eventName, event) => view.def.handleEvent(view, nodeIndex, eventName, event),\n        updateDirectives: (view, checkType) => view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n            prodCheckNoChangesNode, view),\n        updateRenderer: (view, checkType) => view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n            prodCheckNoChangesNode, view),\n    };\n}\n/**\n * @return {?}\n */\nfunction createDebugServices() {\n    return {\n        setCurrentNode: debugSetCurrentNode,\n        createRootView: debugCreateRootView,\n        createEmbeddedView: debugCreateEmbeddedView,\n        createComponentView: debugCreateComponentView,\n        createNgModuleRef: debugCreateNgModuleRef,\n        overrideProvider: debugOverrideProvider,\n        overrideComponentView: debugOverrideComponentView,\n        clearOverrides: debugClearOverrides,\n        checkAndUpdateView: debugCheckAndUpdateView,\n        checkNoChangesView: debugCheckNoChangesView,\n        destroyView: debugDestroyView,\n        createDebugContext: (view, nodeIndex) => new DebugContext_(view, nodeIndex),\n        handleEvent: debugHandleEvent,\n        updateDirectives: debugUpdateDirectives,\n        updateRenderer: debugUpdateRenderer,\n    };\n}\n/**\n * @param {?} elInjector\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @param {?} def\n * @param {?} ngModule\n * @param {?=} context\n * @return {?}\n */\nfunction createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    /** @type {?} */\n    const rendererFactory = ngModule.injector.get(RendererFactory2);\n    return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n}\n/**\n * @param {?} elInjector\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @param {?} def\n * @param {?} ngModule\n * @param {?=} context\n * @return {?}\n */\nfunction debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    /** @type {?} */\n    const rendererFactory = ngModule.injector.get(RendererFactory2);\n    /** @type {?} */\n    const root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n    /** @type {?} */\n    const defWithOverride = applyProviderOverridesToView(def);\n    return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n}\n/**\n * @param {?} elInjector\n * @param {?} ngModule\n * @param {?} rendererFactory\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @return {?}\n */\nfunction createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n    /** @type {?} */\n    const sanitizer = ngModule.injector.get(Sanitizer);\n    /** @type {?} */\n    const errorHandler = ngModule.injector.get(ErrorHandler);\n    /** @type {?} */\n    const renderer = rendererFactory.createRenderer(null, null);\n    return {\n        ngModule,\n        injector: elInjector, projectableNodes,\n        selectorOrNode: rootSelectorOrNode, sanitizer, rendererFactory, renderer, errorHandler\n    };\n}\n/**\n * @param {?} parentView\n * @param {?} anchorDef\n * @param {?} viewDef\n * @param {?=} context\n * @return {?}\n */\nfunction debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n    /** @type {?} */\n    const defWithOverride = applyProviderOverridesToView(viewDef$$1);\n    return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n}\n/**\n * @param {?} parentView\n * @param {?} nodeDef\n * @param {?} viewDef\n * @param {?} hostElement\n * @return {?}\n */\nfunction debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n    /** @type {?} */\n    const overrideComponentView = viewDefOverrides.get(/** @type {?} */ ((/** @type {?} */ ((/** @type {?} */ ((nodeDef.element)).componentProvider)).provider)).token);\n    if (overrideComponentView) {\n        viewDef$$1 = overrideComponentView;\n    }\n    else {\n        viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n    }\n    return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n}\n/**\n * @param {?} moduleType\n * @param {?} parentInjector\n * @param {?} bootstrapComponents\n * @param {?} def\n * @return {?}\n */\nfunction debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n    /** @type {?} */\n    const defWithOverride = applyProviderOverridesToNgModule(def);\n    return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n}\n/** @type {?} */\nconst providerOverrides = new Map();\n/** @type {?} */\nconst providerOverridesWithScope = new Map();\n/** @type {?} */\nconst viewDefOverrides = new Map();\n/**\n * @param {?} override\n * @return {?}\n */\nfunction debugOverrideProvider(override) {\n    providerOverrides.set(override.token, override);\n    if (typeof override.token === 'function' && override.token.ngInjectableDef &&\n        typeof override.token.ngInjectableDef.providedIn === 'function') {\n        providerOverridesWithScope.set(/** @type {?} */ (override.token), override);\n    }\n}\n/**\n * @param {?} comp\n * @param {?} compFactory\n * @return {?}\n */\nfunction debugOverrideComponentView(comp, compFactory) {\n    /** @type {?} */\n    const hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n    /** @type {?} */\n    const compViewDef = resolveDefinition(/** @type {?} */ ((/** @type {?} */ ((hostViewDef.nodes[0].element)).componentView)));\n    viewDefOverrides.set(comp, compViewDef);\n}\n/**\n * @return {?}\n */\nfunction debugClearOverrides() {\n    providerOverrides.clear();\n    providerOverridesWithScope.clear();\n    viewDefOverrides.clear();\n}\n/**\n * @param {?} def\n * @return {?}\n */\nfunction applyProviderOverridesToView(def) {\n    if (providerOverrides.size === 0) {\n        return def;\n    }\n    /** @type {?} */\n    const elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n    if (elementIndicesWithOverwrittenProviders.length === 0) {\n        return def;\n    }\n    // clone the whole view definition,\n    // as it maintains references between the nodes that are hard to update.\n    def = /** @type {?} */ ((def.factory))(() => NOOP);\n    for (let i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n        applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n    }\n    return def;\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    function findElementIndicesWithOverwrittenProviders(def) {\n        /** @type {?} */\n        const elIndicesWithOverwrittenProviders = [];\n        /** @type {?} */\n        let lastElementDef = null;\n        for (let i = 0; i < def.nodes.length; i++) {\n            /** @type {?} */\n            const nodeDef = def.nodes[i];\n            if (nodeDef.flags & 1 /* TypeElement */) {\n                lastElementDef = nodeDef;\n            }\n            if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                providerOverrides.has(/** @type {?} */ ((nodeDef.provider)).token)) {\n                elIndicesWithOverwrittenProviders.push(/** @type {?} */ ((lastElementDef)).nodeIndex);\n                lastElementDef = null;\n            }\n        }\n        return elIndicesWithOverwrittenProviders;\n    }\n    /**\n     * @param {?} viewDef\n     * @param {?} elIndex\n     * @return {?}\n     */\n    function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n        for (let i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n            /** @type {?} */\n            const nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 1 /* TypeElement */) {\n                // stop at the next element\n                return;\n            }\n            if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                /** @type {?} */\n                const provider = /** @type {?} */ ((nodeDef.provider));\n                /** @type {?} */\n                const override = providerOverrides.get(provider.token);\n                if (override) {\n                    nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n        }\n    }\n}\n/**\n * @param {?} def\n * @return {?}\n */\nfunction applyProviderOverridesToNgModule(def) {\n    const { hasOverrides, hasDeprecatedOverrides } = calcHasOverrides(def);\n    if (!hasOverrides) {\n        return def;\n    }\n    // clone the whole view definition,\n    // as it maintains references between the nodes that are hard to update.\n    def = /** @type {?} */ ((def.factory))(() => NOOP);\n    applyProviderOverrides(def);\n    return def;\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    function calcHasOverrides(def) {\n        /** @type {?} */\n        let hasOverrides = false;\n        /** @type {?} */\n        let hasDeprecatedOverrides = false;\n        if (providerOverrides.size === 0) {\n            return { hasOverrides, hasDeprecatedOverrides };\n        }\n        def.providers.forEach(node => {\n            /** @type {?} */\n            const override = providerOverrides.get(node.token);\n            if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                hasOverrides = true;\n                hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n            }\n        });\n        def.modules.forEach(module => {\n            providerOverridesWithScope.forEach((override, token) => {\n                if (token.ngInjectableDef.providedIn === module) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n        });\n        return { hasOverrides, hasDeprecatedOverrides };\n    }\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    function applyProviderOverrides(def) {\n        for (let i = 0; i < def.providers.length; i++) {\n            /** @type {?} */\n            const provider = def.providers[i];\n            if (hasDeprecatedOverrides) {\n                // We had a bug where me made\n                // all providers lazy. Keep this logic behind a flag\n                // for migrating existing users.\n                provider.flags |= 4096 /* LazyProvider */;\n            }\n            /** @type {?} */\n            const override = providerOverrides.get(provider.token);\n            if (override) {\n                provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                provider.deps = splitDepsDsl(override.deps);\n                provider.value = override.value;\n            }\n        }\n        if (providerOverridesWithScope.size > 0) {\n            /** @type {?} */\n            let moduleSet = new Set(def.modules);\n            providerOverridesWithScope.forEach((override, token) => {\n                if (moduleSet.has(token.ngInjectableDef.providedIn)) {\n                    /** @type {?} */\n                    let provider = {\n                        token: token,\n                        flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                        deps: splitDepsDsl(override.deps),\n                        value: override.value,\n                        index: def.providers.length,\n                    };\n                    def.providers.push(provider);\n                    def.providersByKey[tokenKey(token)] = provider;\n                }\n            });\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} checkIndex\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    /** @type {?} */\n    const nodeDef = view.def.nodes[checkIndex];\n    checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & 224 /* CatPureExpression */) ?\n        asPureExpressionData(view, checkIndex).value :\n        undefined;\n}\n/**\n * @param {?} view\n * @param {?} checkIndex\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    /** @type {?} */\n    const nodeDef = view.def.nodes[checkIndex];\n    checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & 224 /* CatPureExpression */) ?\n        asPureExpressionData(view, checkIndex).value :\n        undefined;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugCheckAndUpdateView(view) {\n    return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugCheckNoChangesView(view) {\n    return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugDestroyView(view) {\n    return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n}\n/** @enum {number} */\nconst DebugAction = {\n    create: 0,\n    detectChanges: 1,\n    checkNoChanges: 2,\n    destroy: 3,\n    handleEvent: 4,\n};\nDebugAction[DebugAction.create] = 'create';\nDebugAction[DebugAction.detectChanges] = 'detectChanges';\nDebugAction[DebugAction.checkNoChanges] = 'checkNoChanges';\nDebugAction[DebugAction.destroy] = 'destroy';\nDebugAction[DebugAction.handleEvent] = 'handleEvent';\n/** @type {?} */\nlet _currentAction;\n/** @type {?} */\nlet _currentView;\n/** @type {?} */\nlet _currentNodeIndex;\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction debugSetCurrentNode(view, nodeIndex) {\n    _currentView = view;\n    _currentNodeIndex = nodeIndex;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} eventName\n * @param {?} event\n * @return {?}\n */\nfunction debugHandleEvent(view, nodeIndex, eventName, event) {\n    debugSetCurrentNode(view, nodeIndex);\n    return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n}\n/**\n * @param {?} view\n * @param {?} checkType\n * @return {?}\n */\nfunction debugUpdateDirectives(view, checkType) {\n    if (view.state & 128 /* Destroyed */) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n    return view.def.updateDirectives(debugCheckDirectivesFn, view);\n    /**\n     * @param {?} view\n     * @param {?} nodeIndex\n     * @param {?} argStyle\n     * @param {...?} values\n     * @return {?}\n     */\n    function debugCheckDirectivesFn(view, nodeIndex, argStyle, ...values) {\n        /** @type {?} */\n        const nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === 0 /* CheckAndUpdate */) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & 16384 /* TypeDirective */) {\n            debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, nodeDef.nodeIndex).value :\n            undefined;\n    }\n}\n/**\n * @param {?} view\n * @param {?} checkType\n * @return {?}\n */\nfunction debugUpdateRenderer(view, checkType) {\n    if (view.state & 128 /* Destroyed */) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n    return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n    /**\n     * @param {?} view\n     * @param {?} nodeIndex\n     * @param {?} argStyle\n     * @param {...?} values\n     * @return {?}\n     */\n    function debugCheckRenderNodeFn(view, nodeIndex, argStyle, ...values) {\n        /** @type {?} */\n        const nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === 0 /* CheckAndUpdate */) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & 3 /* CatRenderNode */) {\n            debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, nodeDef.nodeIndex).value :\n            undefined;\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?} givenValues\n * @return {?}\n */\nfunction debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n    /** @type {?} */\n    const changed = (/** @type {?} */ (checkAndUpdateNode))(view, nodeDef, argStyle, ...givenValues);\n    if (changed) {\n        /** @type {?} */\n        const values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n        if (nodeDef.flags & 16384 /* TypeDirective */) {\n            /** @type {?} */\n            const bindingValues = {};\n            for (let i = 0; i < nodeDef.bindings.length; i++) {\n                /** @type {?} */\n                const binding = nodeDef.bindings[i];\n                /** @type {?} */\n                const value = values[i];\n                if (binding.flags & 8 /* TypeProperty */) {\n                    bindingValues[normalizeDebugBindingName(/** @type {?} */ ((binding.nonMinifiedName)))] =\n                        normalizeDebugBindingValue(value);\n                }\n            }\n            /** @type {?} */\n            const elDef = /** @type {?} */ ((nodeDef.parent));\n            /** @type {?} */\n            const el = asElementData(view, elDef.nodeIndex).renderElement;\n            if (!/** @type {?} */ ((elDef.element)).name) {\n                // a comment.\n                view.renderer.setValue(el, `bindings=${JSON.stringify(bindingValues, null, 2)}`);\n            }\n            else {\n                // a regular element.\n                for (let attr in bindingValues) {\n                    /** @type {?} */\n                    const value = bindingValues[attr];\n                    if (value != null) {\n                        view.renderer.setAttribute(el, attr, value);\n                    }\n                    else {\n                        view.renderer.removeAttribute(el, attr);\n                    }\n                }\n            }\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?} values\n * @return {?}\n */\nfunction debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n    (/** @type {?} */ (checkNoChangesNode))(view, nodeDef, argStyle, ...values);\n}\n/**\n * @param {?} name\n * @return {?}\n */\nfunction normalizeDebugBindingName(name) {\n    // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n    name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n    return `ng-reflect-${name}`;\n}\n/** @type {?} */\nconst CAMEL_CASE_REGEXP = /([A-Z])/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction camelCaseToDashCase(input) {\n    return input.replace(CAMEL_CASE_REGEXP, (...m) => '-' + m[1].toLowerCase());\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction normalizeDebugBindingValue(value) {\n    try {\n        // Limit the size of the value as otherwise the DOM just gets polluted.\n        return value != null ? value.toString().slice(0, 30) : value;\n    }\n    catch (e) {\n        return '[ERROR] Exception while trying to serialize the value';\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction nextDirectiveWithBinding(view, nodeIndex) {\n    for (let i = nodeIndex; i < view.def.nodes.length; i++) {\n        /** @type {?} */\n        const nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction nextRenderNodeWithBinding(view, nodeIndex) {\n    for (let i = nodeIndex; i < view.def.nodes.length; i++) {\n        /** @type {?} */\n        const nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\nclass DebugContext_ {\n    /**\n     * @param {?} view\n     * @param {?} nodeIndex\n     */\n    constructor(view, nodeIndex) {\n        this.view = view;\n        this.nodeIndex = nodeIndex;\n        if (nodeIndex == null) {\n            this.nodeIndex = nodeIndex = 0;\n        }\n        this.nodeDef = view.def.nodes[nodeIndex];\n        /** @type {?} */\n        let elDef = this.nodeDef;\n        /** @type {?} */\n        let elView = view;\n        while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n            elDef = /** @type {?} */ ((elDef.parent));\n        }\n        if (!elDef) {\n            while (!elDef && elView) {\n                elDef = /** @type {?} */ ((viewParentEl(elView)));\n                elView = /** @type {?} */ ((elView.parent));\n            }\n        }\n        this.elDef = elDef;\n        this.elView = elView;\n    }\n    /**\n     * @return {?}\n     */\n    get elOrCompView() {\n        // Has to be done lazily as we use the DebugContext also during creation of elements...\n        return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n    }\n    /**\n     * @return {?}\n     */\n    get injector() { return createInjector$1(this.elView, this.elDef); }\n    /**\n     * @return {?}\n     */\n    get component() { return this.elOrCompView.component; }\n    /**\n     * @return {?}\n     */\n    get context() { return this.elOrCompView.context; }\n    /**\n     * @return {?}\n     */\n    get providerTokens() {\n        /** @type {?} */\n        const tokens = [];\n        if (this.elDef) {\n            for (let i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                /** @type {?} */\n                const childDef = this.elView.def.nodes[i];\n                if (childDef.flags & 20224 /* CatProvider */) {\n                    tokens.push(/** @type {?} */ ((childDef.provider)).token);\n                }\n                i += childDef.childCount;\n            }\n        }\n        return tokens;\n    }\n    /**\n     * @return {?}\n     */\n    get references() {\n        /** @type {?} */\n        const references = {};\n        if (this.elDef) {\n            collectReferences(this.elView, this.elDef, references);\n            for (let i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                /** @type {?} */\n                const childDef = this.elView.def.nodes[i];\n                if (childDef.flags & 20224 /* CatProvider */) {\n                    collectReferences(this.elView, childDef, references);\n                }\n                i += childDef.childCount;\n            }\n        }\n        return references;\n    }\n    /**\n     * @return {?}\n     */\n    get componentRenderElement() {\n        /** @type {?} */\n        const elData = findHostElement(this.elOrCompView);\n        return elData ? elData.renderElement : undefined;\n    }\n    /**\n     * @return {?}\n     */\n    get renderNode() {\n        return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n            renderNode(this.elView, this.elDef);\n    }\n    /**\n     * @param {?} console\n     * @param {...?} values\n     * @return {?}\n     */\n    logError(console, ...values) {\n        /** @type {?} */\n        let logViewDef;\n        /** @type {?} */\n        let logNodeIndex;\n        if (this.nodeDef.flags & 2 /* TypeText */) {\n            logViewDef = this.view.def;\n            logNodeIndex = this.nodeDef.nodeIndex;\n        }\n        else {\n            logViewDef = this.elView.def;\n            logNodeIndex = this.elDef.nodeIndex;\n        }\n        /** @type {?} */\n        const renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n        /** @type {?} */\n        let currRenderNodeIndex = -1;\n        /** @type {?} */\n        let nodeLogger = () => {\n            currRenderNodeIndex++;\n            if (currRenderNodeIndex === renderNodeIndex) {\n                return console.error.bind(console, ...values);\n            }\n            else {\n                return NOOP;\n            }\n        }; /** @type {?} */\n        ((logViewDef.factory))(nodeLogger);\n        if (currRenderNodeIndex < renderNodeIndex) {\n            console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n            (/** @type {?} */ (console.error))(...values);\n        }\n    }\n}\n/**\n * @param {?} viewDef\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction getRenderNodeIndex(viewDef$$1, nodeIndex) {\n    /** @type {?} */\n    let renderNodeIndex = -1;\n    for (let i = 0; i <= nodeIndex; i++) {\n        /** @type {?} */\n        const nodeDef = viewDef$$1.nodes[i];\n        if (nodeDef.flags & 3 /* CatRenderNode */) {\n            renderNodeIndex++;\n        }\n    }\n    return renderNodeIndex;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction findHostElement(view) {\n    while (view && !isComponentView(view)) {\n        view = /** @type {?} */ ((view.parent));\n    }\n    if (view.parent) {\n        return asElementData(view.parent, /** @type {?} */ ((viewParentEl(view))).nodeIndex);\n    }\n    return null;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} references\n * @return {?}\n */\nfunction collectReferences(view, nodeDef, references) {\n    for (let refName in nodeDef.references) {\n        references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n    }\n}\n/**\n * @param {?} action\n * @param {?} fn\n * @param {?} self\n * @param {?} args\n * @return {?}\n */\nfunction callWithDebugContext(action, fn, self, args) {\n    /** @type {?} */\n    const oldAction = _currentAction;\n    /** @type {?} */\n    const oldView = _currentView;\n    /** @type {?} */\n    const oldNodeIndex = _currentNodeIndex;\n    try {\n        _currentAction = action;\n        /** @type {?} */\n        const result = fn.apply(self, args);\n        _currentView = oldView;\n        _currentNodeIndex = oldNodeIndex;\n        _currentAction = oldAction;\n        return result;\n    }\n    catch (e) {\n        if (isViewDebugError(e) || !_currentView) {\n            throw e;\n        }\n        throw viewWrappedDebugError(e, /** @type {?} */ ((getCurrentDebugContext())));\n    }\n}\n/**\n * @return {?}\n */\nfunction getCurrentDebugContext() {\n    return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n}\nclass DebugRendererFactory2 {\n    /**\n     * @param {?} delegate\n     */\n    constructor(delegate) {\n        this.delegate = delegate;\n    }\n    /**\n     * @param {?} element\n     * @param {?} renderData\n     * @return {?}\n     */\n    createRenderer(element, renderData) {\n        return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n    }\n    /**\n     * @return {?}\n     */\n    begin() {\n        if (this.delegate.begin) {\n            this.delegate.begin();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    end() {\n        if (this.delegate.end) {\n            this.delegate.end();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    whenRenderingDone() {\n        if (this.delegate.whenRenderingDone) {\n            return this.delegate.whenRenderingDone();\n        }\n        return Promise.resolve(null);\n    }\n}\nclass DebugRenderer2 {\n    /**\n     * @param {?} delegate\n     */\n    constructor(delegate) {\n        this.delegate = delegate;\n        this.data = this.delegate.data;\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    destroyNode(node) {\n        removeDebugNodeFromIndex(/** @type {?} */ ((getDebugNode(node))));\n        if (this.delegate.destroyNode) {\n            this.delegate.destroyNode(node);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    destroy() { this.delegate.destroy(); }\n    /**\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    createElement(name, namespace) {\n        /** @type {?} */\n        const el = this.delegate.createElement(name, namespace);\n        /** @type {?} */\n        const debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            /** @type {?} */\n            const debugEl = new DebugElement(el, null, debugCtx);\n            debugEl.name = name;\n            indexDebugNode(debugEl);\n        }\n        return el;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    createComment(value) {\n        /** @type {?} */\n        const comment = this.delegate.createComment(value);\n        /** @type {?} */\n        const debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugNode(comment, null, debugCtx));\n        }\n        return comment;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    createText(value) {\n        /** @type {?} */\n        const text = this.delegate.createText(value);\n        /** @type {?} */\n        const debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugNode(text, null, debugCtx));\n        }\n        return text;\n    }\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @return {?}\n     */\n    appendChild(parent, newChild) {\n        /** @type {?} */\n        const debugEl = getDebugNode(parent);\n        /** @type {?} */\n        const debugChildEl = getDebugNode(newChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.addChild(debugChildEl);\n        }\n        this.delegate.appendChild(parent, newChild);\n    }\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @param {?} refChild\n     * @return {?}\n     */\n    insertBefore(parent, newChild, refChild) {\n        /** @type {?} */\n        const debugEl = getDebugNode(parent);\n        /** @type {?} */\n        const debugChildEl = getDebugNode(newChild);\n        /** @type {?} */\n        const debugRefEl = /** @type {?} */ ((getDebugNode(refChild)));\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.insertBefore(debugRefEl, debugChildEl);\n        }\n        this.delegate.insertBefore(parent, newChild, refChild);\n    }\n    /**\n     * @param {?} parent\n     * @param {?} oldChild\n     * @return {?}\n     */\n    removeChild(parent, oldChild) {\n        /** @type {?} */\n        const debugEl = getDebugNode(parent);\n        /** @type {?} */\n        const debugChildEl = getDebugNode(oldChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.removeChild(debugChildEl);\n        }\n        this.delegate.removeChild(parent, oldChild);\n    }\n    /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    selectRootElement(selectorOrNode) {\n        /** @type {?} */\n        const el = this.delegate.selectRootElement(selectorOrNode);\n        /** @type {?} */\n        const debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugElement(el, null, debugCtx));\n        }\n        return el;\n    }\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} namespace\n     * @return {?}\n     */\n    setAttribute(el, name, value, namespace) {\n        /** @type {?} */\n        const debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            /** @type {?} */\n            const fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = value;\n        }\n        this.delegate.setAttribute(el, name, value, namespace);\n    }\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    removeAttribute(el, name, namespace) {\n        /** @type {?} */\n        const debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            /** @type {?} */\n            const fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = null;\n        }\n        this.delegate.removeAttribute(el, name, namespace);\n    }\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    addClass(el, name) {\n        /** @type {?} */\n        const debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.classes[name] = true;\n        }\n        this.delegate.addClass(el, name);\n    }\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    removeClass(el, name) {\n        /** @type {?} */\n        const debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.classes[name] = false;\n        }\n        this.delegate.removeClass(el, name);\n    }\n    /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    setStyle(el, style, value, flags) {\n        /** @type {?} */\n        const debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.styles[style] = value;\n        }\n        this.delegate.setStyle(el, style, value, flags);\n    }\n    /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} flags\n     * @return {?}\n     */\n    removeStyle(el, style, flags) {\n        /** @type {?} */\n        const debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.styles[style] = null;\n        }\n        this.delegate.removeStyle(el, style, flags);\n    }\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    setProperty(el, name, value) {\n        /** @type {?} */\n        const debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.properties[name] = value;\n        }\n        this.delegate.setProperty(el, name, value);\n    }\n    /**\n     * @param {?} target\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    listen(target, eventName, callback) {\n        if (typeof target !== 'string') {\n            /** @type {?} */\n            const debugEl = getDebugNode(target);\n            if (debugEl) {\n                debugEl.listeners.push(new EventListener(eventName, callback));\n            }\n        }\n        return this.delegate.listen(target, eventName, callback);\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    parentNode(node) { return this.delegate.parentNode(node); }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    nextSibling(node) { return this.delegate.nextSibling(node); }\n    /**\n     * @param {?} node\n     * @param {?} value\n     * @return {?}\n     */\n    setValue(node, value) { return this.delegate.setValue(node, value); }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @param {?} override\n * @return {?}\n */\nfunction overrideProvider(override) {\n    initServicesIfNeeded();\n    return Services.overrideProvider(override);\n}\n/**\n * @param {?} comp\n * @param {?} componentFactory\n * @return {?}\n */\nfunction overrideComponentView(comp, componentFactory) {\n    initServicesIfNeeded();\n    return Services.overrideComponentView(comp, componentFactory);\n}\n/**\n * @return {?}\n */\nfunction clearOverrides() {\n    initServicesIfNeeded();\n    return Services.clearOverrides();\n}\n/**\n * @param {?} ngModuleType\n * @param {?} bootstrapComponents\n * @param {?} defFactory\n * @return {?}\n */\nfunction createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n    return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n}\n/**\n * @param {?} def\n * @return {?}\n */\nfunction cloneNgModuleDefinition(def) {\n    /** @type {?} */\n    const providers = Array.from(def.providers);\n    /** @type {?} */\n    const modules = Array.from(def.modules);\n    /** @type {?} */\n    const providersByKey = {};\n    for (const key in def.providersByKey) {\n        providersByKey[key] = def.providersByKey[key];\n    }\n    return {\n        factory: def.factory,\n        isRoot: def.isRoot, providers, modules, providersByKey,\n    };\n}\nclass NgModuleFactory_ extends NgModuleFactory {\n    /**\n     * @param {?} moduleType\n     * @param {?} _bootstrapComponents\n     * @param {?} _ngModuleDefFactory\n     */\n    constructor(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n        // Attention: this ctor is called as top level function.\n        // Putting any logic in here will destroy closure tree shaking!\n        super();\n        this.moduleType = moduleType;\n        this._bootstrapComponents = _bootstrapComponents;\n        this._ngModuleDefFactory = _ngModuleDefFactory;\n    }\n    /**\n     * @param {?} parentInjector\n     * @return {?}\n     */\n    create(parentInjector) {\n        initServicesIfNeeded();\n        /** @type {?} */\n        const def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n        return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @template T\n * @param {?} actual\n * @param {?} expected\n * @param {?} msg\n * @return {?}\n */\nfunction assertEqual(actual, expected, msg) {\n    if (actual != expected) {\n        throwError(msg);\n    }\n}\n/**\n * @template T\n * @param {?} actual\n * @param {?} expected\n * @param {?} msg\n * @return {?}\n */\nfunction assertNotEqual(actual, expected, msg) {\n    if (actual == expected) {\n        throwError(msg);\n    }\n}\n/**\n * @template T\n * @param {?} actual\n * @param {?} expected\n * @param {?} msg\n * @return {?}\n */\nfunction assertLessThan(actual, expected, msg) {\n    if (actual >= expected) {\n        throwError(msg);\n    }\n}\n/**\n * @template T\n * @param {?} actual\n * @param {?} expected\n * @param {?} msg\n * @return {?}\n */\nfunction assertGreaterThan(actual, expected, msg) {\n    if (actual <= expected) {\n        throwError(msg);\n    }\n}\n/**\n * @template T\n * @param {?} actual\n * @param {?} msg\n * @return {?}\n */\nfunction assertNotDefined(actual, msg) {\n    if (actual != null) {\n        throwError(msg);\n    }\n}\n/**\n * @template T\n * @param {?} actual\n * @param {?} msg\n * @return {?}\n */\nfunction assertDefined(actual, msg) {\n    if (actual == null) {\n        throwError(msg);\n    }\n}\n/**\n * @param {?} actual\n * @param {?=} msg\n * @return {?}\n */\nfunction assertComponentType(actual, msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.') {\n    if (!actual.ngComponentDef) {\n        debugger;\n        throwError(msg);\n    }\n}\n/**\n * @param {?} msg\n * @return {?}\n */\nfunction throwError(msg) {\n    debugger; // Left intentionally for better debugger experience.\n    throw new Error(`ASSERTION ERROR: ${msg}`);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** *\n * Size of LViewData's header. Necessary to adjust for it when setting slots.\n  @type {?} */\nconst HEADER_OFFSET = 16;\n/** @type {?} */\nconst TVIEW = 0;\n/** @type {?} */\nconst PARENT = 1;\n/** @type {?} */\nconst NEXT = 2;\n/** @type {?} */\nconst QUERIES = 3;\n/** @type {?} */\nconst FLAGS = 4;\n/** @type {?} */\nconst HOST_NODE = 5;\n/** @type {?} */\nconst BINDING_INDEX = 6;\n/** @type {?} */\nconst DIRECTIVES = 7;\n/** @type {?} */\nconst CLEANUP = 8;\n/** @type {?} */\nconst CONTEXT = 9;\n/** @type {?} */\nconst INJECTOR$1 = 10;\n/** @type {?} */\nconst RENDERER = 11;\n/** @type {?} */\nconst SANITIZER = 12;\n/** @type {?} */\nconst TAIL = 13;\n/** @type {?} */\nconst CONTAINER_INDEX = 14;\n/** @type {?} */\nconst CONTENT_QUERIES = 15;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n * TView.initHooks during directiveCreate.\n *\n * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n * directive index), then saved in the even indices of the initHooks array. The odd indices\n * hold the hook functions themselves.\n *\n * @param {?} index The index of the directive in LViewData[DIRECTIVES]\n * @param {?} onInit\n * @param {?} doCheck\n * @param {?} tView The current TView\n * @return {?}\n */\nfunction queueInitHooks(index, onInit, doCheck, tView) {\n    ngDevMode &&\n        assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n    if (onInit) {\n        (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n    }\n    if (doCheck) {\n        (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n        (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n    }\n}\n/**\n * Loops through the directives on a node and queues all their hooks except ngOnInit\n * and ngDoCheck, which are queued separately in directiveCreate.\n * @param {?} flags\n * @param {?} tView\n * @return {?}\n */\nfunction queueLifecycleHooks(flags, tView) {\n    if (tView.firstTemplatePass) {\n        /** @type {?} */\n        const start = flags >> 14 /* DirectiveStartingIndexShift */;\n        /** @type {?} */\n        const count = flags & 4095 /* DirectiveCountMask */;\n        /** @type {?} */\n        const end = start + count;\n        // It's necessary to loop through the directives at elementEnd() (rather than processing in\n        // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n        // hooks for projected components and directives must be called *before* their hosts.\n        for (let i = start; i < end; i++) {\n            /** @type {?} */\n            const def = /** @type {?} */ ((tView.directives))[i];\n            queueContentHooks(def, tView, i);\n            queueViewHooks(def, tView, i);\n            queueDestroyHooks(def, tView, i);\n        }\n    }\n}\n/**\n * Queues afterContentInit and afterContentChecked hooks on TView\n * @param {?} def\n * @param {?} tView\n * @param {?} i\n * @return {?}\n */\nfunction queueContentHooks(def, tView, i) {\n    if (def.afterContentInit) {\n        (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n    }\n    if (def.afterContentChecked) {\n        (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n        (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n    }\n}\n/**\n * Queues afterViewInit and afterViewChecked hooks on TView\n * @param {?} def\n * @param {?} tView\n * @param {?} i\n * @return {?}\n */\nfunction queueViewHooks(def, tView, i) {\n    if (def.afterViewInit) {\n        (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n    }\n    if (def.afterViewChecked) {\n        (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n        (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n    }\n}\n/**\n * Queues onDestroy hooks on TView\n * @param {?} def\n * @param {?} tView\n * @param {?} i\n * @return {?}\n */\nfunction queueDestroyHooks(def, tView, i) {\n    if (def.onDestroy != null) {\n        (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n    }\n}\n/**\n * Calls onInit and doCheck calls if they haven't already been called.\n *\n * @param {?} currentView The current view\n * @param {?} tView\n * @param {?} creationMode\n * @return {?}\n */\nfunction executeInitHooks(currentView, tView, creationMode) {\n    if (currentView[FLAGS] & 16 /* RunInit */) {\n        executeHooks(/** @type {?} */ ((currentView[DIRECTIVES])), tView.initHooks, tView.checkHooks, creationMode);\n        currentView[FLAGS] &= ~16 /* RunInit */;\n    }\n}\n/**\n * Iterates over afterViewInit and afterViewChecked functions and calls them.\n *\n * @param {?} data\n * @param {?} allHooks\n * @param {?} checkHooks\n * @param {?} creationMode\n * @return {?}\n */\nfunction executeHooks(data, allHooks, checkHooks, creationMode) {\n    /** @type {?} */\n    const hooksToCall = creationMode ? allHooks : checkHooks;\n    if (hooksToCall) {\n        callHooks(data, hooksToCall);\n    }\n}\n/**\n * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n * creation mode.\n *\n * @param {?} data\n * @param {?} arr The array in which the hooks are found\n * @return {?}\n */\nfunction callHooks(data, arr) {\n    for (let i = 0; i < arr.length; i += 2) {\n        (/** @type {?} */ (arr[i + 1])).call(data[/** @type {?} */ (arr[i])]);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @return {?}\n */\nfunction ngDevModeResetPerfCounters() {\n    /** @type {?} */\n    const newCounters = {\n        firstTemplatePass: 0,\n        tNode: 0,\n        tView: 0,\n        rendererCreateTextNode: 0,\n        rendererSetText: 0,\n        rendererCreateElement: 0,\n        rendererAddEventListener: 0,\n        rendererSetAttribute: 0,\n        rendererRemoveAttribute: 0,\n        rendererSetProperty: 0,\n        rendererSetClassName: 0,\n        rendererAddClass: 0,\n        rendererRemoveClass: 0,\n        rendererSetStyle: 0,\n        rendererRemoveStyle: 0,\n        rendererDestroy: 0,\n        rendererDestroyNode: 0,\n        rendererMoveNode: 0,\n        rendererRemoveNode: 0,\n    };\n    // NOTE: Under Ivy we may have both window & global defined in the Node\n    //    environment since ensureDocument() in render3.ts sets global.window.\n    if (typeof window != 'undefined') {\n        // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n        (/** @type {?} */ (window))['ngDevMode'] = newCounters;\n    }\n    if (typeof global != 'undefined') {\n        // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n        (/** @type {?} */ (global))['ngDevMode'] = newCounters;\n    }\n    if (typeof self != 'undefined') {\n        // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n        (/** @type {?} */ (self))['ngDevMode'] = newCounters;\n    }\n    return newCounters;\n}\n/**\n * This checks to see if the `ngDevMode` has been set. If yes,\n * than we honor it, otherwise we default to dev mode with additional checks.\n *\n * The idea is that unless we are doing production build where we explicitly\n * set `ngDevMode == false` we should be helping the developer by providing\n * as much early warning and errors as possible.\n */\nif (typeof ngDevMode === 'undefined' || ngDevMode) {\n    ngDevModeResetPerfCounters();\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Called when directives inject each other (creating a circular dependency)\n * @param {?} token\n * @return {?}\n */\nfunction throwCyclicDependencyError(token) {\n    throw new Error(`Cannot instantiate cyclic dependency! ${token}`);\n}\n/**\n * Called when there are multiple component selectors that match a given node\n * @param {?} tNode\n * @return {?}\n */\nfunction throwMultipleComponentError(tNode) {\n    throw new Error(`Multiple components match node with tagname ${tNode.tagName}`);\n}\n/**\n * Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on.\n * @param {?} creationMode\n * @param {?} checkNoChangesMode\n * @param {?} oldValue\n * @param {?} currValue\n * @return {?}\n */\nfunction throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, oldValue, currValue) {\n    if (checkNoChangesMode) {\n        /** @type {?} */\n        let msg = `ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '${oldValue}'. Current value: '${currValue}'.`;\n        if (creationMode) {\n            msg +=\n                ` It seems like the view has been created after its parent and its children have been dirty checked.` +\n                    ` Has it been created in a change detection hook ?`;\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Below are constants for LContainer indices to help us look up LContainer members\n * without having to remember the specific indices.\n * Uglify will inline these when minifying so there shouldn't be a cost.\n  @type {?} */\nconst ACTIVE_INDEX = 0;\n/** @type {?} */\nconst VIEWS = 4;\n/** @type {?} */\nconst RENDER_PARENT = 5;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nconst RendererStyleFlags3 = {\n    Important: 1,\n    DashCase: 2,\n};\nRendererStyleFlags3[RendererStyleFlags3.Important] = 'Important';\nRendererStyleFlags3[RendererStyleFlags3.DashCase] = 'DashCase';\n/**\n * Returns whether the `renderer` is a `ProceduralRenderer3`\n * @param {?} renderer\n * @return {?}\n */\nfunction isProceduralRenderer(renderer) {\n    return !!((/** @type {?} */ (renderer)).listen);\n}\n/** @type {?} */\nconst domRendererFactory3 = {\n    createRenderer: (hostElement, rendererType) => { return document; }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @param {?} node\n * @param {?} type\n * @return {?}\n */\nfunction assertNodeType(node, type) {\n    assertDefined(node, 'should be called with a node');\n    assertEqual(node.tNode.type, type, `should be a ${typeName(type)}`);\n}\n/**\n * @param {?} node\n * @param {...?} types\n * @return {?}\n */\nfunction assertNodeOfPossibleTypes(node, ...types) {\n    assertDefined(node, 'should be called with a node');\n    /** @type {?} */\n    const found = types.some(type => node.tNode.type === type);\n    assertEqual(found, true, `Should be one of ${types.map(typeName).join(', ')}`);\n}\n/**\n * @param {?} type\n * @return {?}\n */\nfunction typeName(type) {\n    if (type == 1 /* Projection */)\n        return 'Projection';\n    if (type == 0 /* Container */)\n        return 'Container';\n    if (type == 2 /* View */)\n        return 'View';\n    if (type == 3 /* Element */)\n        return 'Element';\n    return '<unknown>';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Must use this method for CD (instead of === ) since NaN !== NaN\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction isDifferent(a, b) {\n    // NaN is the only value that is not equal to itself so the first\n    // test checks if both a and b are not NaN\n    return !(a !== a && b !== b) && a !== b;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction stringify$1(value) {\n    if (typeof value == 'function')\n        return value.name || value;\n    if (typeof value == 'string')\n        return value;\n    if (value == null)\n        return '';\n    return '' + value;\n}\n/**\n * Flattens an array in non-recursive way. Input arrays are not modified.\n * @param {?} list\n * @return {?}\n */\nfunction flatten$1(list) {\n    /** @type {?} */\n    const result = [];\n    /** @type {?} */\n    let i = 0;\n    while (i < list.length) {\n        /** @type {?} */\n        const item = list[i];\n        if (Array.isArray(item)) {\n            if (item.length > 0) {\n                list = item.concat(list.slice(i + 1));\n                i = 0;\n            }\n            else {\n                i++;\n            }\n        }\n        else {\n            result.push(item);\n            i++;\n        }\n    }\n    return result;\n}\n/**\n * Retrieves a value from any `LViewData`.\n * @template T\n * @param {?} index\n * @param {?} arr\n * @return {?}\n */\nfunction loadInternal(index, arr) {\n    ngDevMode && assertDataInRangeInternal(index + HEADER_OFFSET, arr);\n    return arr[index + HEADER_OFFSET];\n}\n/**\n * @param {?} index\n * @param {?} arr\n * @return {?}\n */\nfunction assertDataInRangeInternal(index, arr) {\n    assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n}\n/**\n * Retrieves an element value from the provided `viewData`.\n *\n * Elements that are read may be wrapped in a style context,\n * therefore reading the value may involve unwrapping that.\n * @param {?} index\n * @param {?} arr\n * @return {?}\n */\nfunction loadElementInternal(index, arr) {\n    /** @type {?} */\n    const value = loadInternal(index, arr);\n    return readElementValue(value);\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction readElementValue(value) {\n    return /** @type {?} */ ((Array.isArray(value) ? (/** @type {?} */ ((value)))[0] : value));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Retrieves the sibling node for the given node.\n * @param {?} node\n * @return {?}\n */\nfunction getNextLNode(node) {\n    // View nodes don't have TNodes, so their next must be retrieved through their LView.\n    if (node.tNode.type === 2 /* View */) {\n        /** @type {?} */\n        const viewData = /** @type {?} */ (node.data);\n        return viewData[NEXT] ? (/** @type {?} */ (viewData[NEXT]))[HOST_NODE] : null;\n    }\n    return node.tNode.next ? node.view[node.tNode.next.index] : null;\n}\n/**\n * Retrieves the first child of a given node\n * @param {?} node\n * @return {?}\n */\nfunction getChildLNode(node) {\n    if (node.tNode.child) {\n        /** @type {?} */\n        const viewData = node.tNode.type === 2 /* View */ ? /** @type {?} */ (node.data) : node.view;\n        return readElementValue(viewData[node.tNode.child.index]);\n    }\n    return null;\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction getParentLNode(node) {\n    if (node.tNode.index === -1 && node.tNode.type === 2 /* View */) {\n        /** @type {?} */\n        const containerHostIndex = (/** @type {?} */ (node.data))[CONTAINER_INDEX];\n        return containerHostIndex === -1 ? null : node.view[containerHostIndex].dynamicLContainerNode;\n    }\n    /** @type {?} */\n    const parent = node.tNode.parent;\n    return readElementValue(parent ? node.view[parent.index] : node.view[HOST_NODE]);\n}\n/** *\n * Stack used to keep track of projection nodes in walkLNodeTree.\n *\n * This is deliberately created outside of walkLNodeTree to avoid allocating\n * a new array each time the function is called. Instead the array will be\n * re-used by each invocation. This works because the function is not reentrant.\n  @type {?} */\nconst projectionNodeStack = [];\n/**\n * Walks a tree of LNodes, applying a transformation on the LElement nodes, either only on the first\n * one found, or on all of them.\n *\n * @param {?} startingNode the node from which the walk is started.\n * @param {?} rootNode the root node considered. This prevents walking past that node.\n * @param {?} action identifies the action to be performed on the LElement nodes.\n * @param {?} renderer the current renderer.\n * @param {?=} renderParentNode Optional the render parent node to be set in all LContainerNodes found,\n * required for action modes Insert and Destroy.\n * @param {?=} beforeNode Optional the node before which elements should be added, required for action\n * Insert.\n * @return {?}\n */\nfunction walkLNodeTree(startingNode, rootNode, action, renderer, renderParentNode, beforeNode) {\n    /** @type {?} */\n    let node = startingNode;\n    /** @type {?} */\n    let projectionNodeIndex = -1;\n    while (node) {\n        /** @type {?} */\n        let nextNode = null;\n        /** @type {?} */\n        const parent = renderParentNode ? renderParentNode.native : null;\n        /** @type {?} */\n        const nodeType = node.tNode.type;\n        if (nodeType === 3 /* Element */) {\n            // Execute the action\n            executeNodeAction(action, renderer, parent, /** @type {?} */ ((node.native)), beforeNode);\n            if (node.dynamicLContainerNode) {\n                executeNodeAction(action, renderer, parent, /** @type {?} */ ((node.dynamicLContainerNode.native)), beforeNode);\n            }\n        }\n        else if (nodeType === 0 /* Container */) {\n            executeNodeAction(action, renderer, parent, /** @type {?} */ ((node.native)), beforeNode);\n            /** @type {?} */\n            const lContainerNode = (/** @type {?} */ (node));\n            /** @type {?} */\n            const childContainerData = lContainerNode.dynamicLContainerNode ?\n                lContainerNode.dynamicLContainerNode.data :\n                lContainerNode.data;\n            if (renderParentNode) {\n                childContainerData[RENDER_PARENT] = renderParentNode;\n            }\n            nextNode =\n                childContainerData[VIEWS].length ? getChildLNode(childContainerData[VIEWS][0]) : null;\n            if (nextNode) {\n                // When the walker enters a container, then the beforeNode has to become the local native\n                // comment node.\n                beforeNode = lContainerNode.dynamicLContainerNode ?\n                    lContainerNode.dynamicLContainerNode.native :\n                    lContainerNode.native;\n            }\n        }\n        else if (nodeType === 1 /* Projection */) {\n            /** @type {?} */\n            const componentHost = findComponentHost(node.view);\n            /** @type {?} */\n            const head = (/** @type {?} */ (componentHost.tNode.projection))[/** @type {?} */ (node.tNode.projection)];\n            projectionNodeStack[++projectionNodeIndex] = /** @type {?} */ (node);\n            nextNode = head ? /** @type {?} */ (((/** @type {?} */ (componentHost.data))[PARENT]))[head.index] : null;\n        }\n        else {\n            // Otherwise look at the first child\n            nextNode = getChildLNode(/** @type {?} */ (node));\n        }\n        if (nextNode === null) {\n            nextNode = getNextLNode(node);\n            // this last node was projected, we need to get back down to its projection node\n            if (nextNode === null && (node.tNode.flags & 8192 /* isProjected */)) {\n                nextNode = getNextLNode(/** @type {?} */ (projectionNodeStack[projectionNodeIndex--]));\n            }\n            /**\n                   * Find the next node in the LNode tree, taking into account the place where a node is\n                   * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                   *\n                   * If there is no sibling node, then it goes to the next sibling of the parent node...\n                   * until it reaches rootNode (at which point null is returned).\n                   */\n            while (node && !nextNode) {\n                node = getParentLNode(node);\n                if (node === null || node === rootNode)\n                    return null;\n                // When exiting a container, the beforeNode must be restored to the previous value\n                if (!node.tNode.next && nodeType === 0 /* Container */) {\n                    beforeNode = node.native;\n                }\n                nextNode = getNextLNode(node);\n            }\n        }\n        node = nextNode;\n    }\n}\n/**\n * Given a current view, finds the nearest component's host (LElement).\n *\n * @param {?} lViewData LViewData for which we want a host element node\n * @return {?} The host node\n */\nfunction findComponentHost(lViewData) {\n    /** @type {?} */\n    let viewRootLNode = lViewData[HOST_NODE];\n    while (viewRootLNode.tNode.type === 2 /* View */) {\n        ngDevMode && assertDefined(lViewData[PARENT], 'lViewData.parent');\n        lViewData = /** @type {?} */ ((lViewData[PARENT]));\n        viewRootLNode = lViewData[HOST_NODE];\n    }\n    ngDevMode && assertNodeType(viewRootLNode, 3 /* Element */);\n    ngDevMode && assertDefined(viewRootLNode.data, 'node.data');\n    return /** @type {?} */ (viewRootLNode);\n}\n/**\n * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n * being passed as an argument.\n * @param {?} action\n * @param {?} renderer\n * @param {?} parent\n * @param {?} node\n * @param {?=} beforeNode\n * @return {?}\n */\nfunction executeNodeAction(action, renderer, parent, node, beforeNode) {\n    if (action === 0 /* Insert */) {\n        isProceduralRenderer(/** @type {?} */ ((renderer))) ?\n            (/** @type {?} */ (renderer)).insertBefore(/** @type {?} */ ((parent)), node, /** @type {?} */ (beforeNode)) : /** @type {?} */ ((parent)).insertBefore(node, /** @type {?} */ (beforeNode), true);\n    }\n    else if (action === 1 /* Detach */) {\n        isProceduralRenderer(/** @type {?} */ ((renderer))) ?\n            (/** @type {?} */ (renderer)).removeChild(/** @type {?} */ ((parent)), node) : /** @type {?} */ ((parent)).removeChild(node);\n    }\n    else if (action === 2 /* Destroy */) {\n        ngDevMode && ngDevMode.rendererDestroyNode++; /** @type {?} */\n        (((/** @type {?} */ (renderer)).destroyNode))(node);\n    }\n}\n/**\n * @param {?} value\n * @param {?} renderer\n * @return {?}\n */\nfunction createTextNode(value, renderer) {\n    return isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n        renderer.createTextNode(stringify$1(value));\n}\n/**\n * @param {?} container\n * @param {?} rootNode\n * @param {?} insertMode\n * @param {?=} beforeNode\n * @return {?}\n */\nfunction addRemoveViewFromContainer(container, rootNode, insertMode, beforeNode) {\n    ngDevMode && assertNodeType(container, 0 /* Container */);\n    ngDevMode && assertNodeType(rootNode, 2 /* View */);\n    /** @type {?} */\n    const parentNode = container.data[RENDER_PARENT];\n    /** @type {?} */\n    const parent = parentNode ? parentNode.native : null;\n    if (parent) {\n        /** @type {?} */\n        let node = getChildLNode(rootNode);\n        /** @type {?} */\n        const renderer = container.view[RENDERER];\n        walkLNodeTree(node, rootNode, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, parentNode, beforeNode);\n    }\n}\n/**\n * Traverses down and up the tree of views and containers to remove listeners and\n * call onDestroy callbacks.\n *\n * Notes:\n *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n *  - Must process containers instead of their views to avoid splicing\n *  when views are destroyed and re-added.\n *  - Using a while loop because it's faster than recursion\n *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n *\n * @param {?} rootView The view to destroy\n * @return {?}\n */\nfunction destroyViewTree(rootView) {\n    // If the view has no children, we can clean it up and return early.\n    if (rootView[TVIEW].childIndex === -1) {\n        return cleanUpView(rootView);\n    }\n    /** @type {?} */\n    let viewOrContainer = getLViewChild(rootView);\n    while (viewOrContainer) {\n        /** @type {?} */\n        let next = null;\n        if (viewOrContainer.length >= HEADER_OFFSET) {\n            /** @type {?} */\n            const view = /** @type {?} */ (viewOrContainer);\n            if (view[TVIEW].childIndex > -1)\n                next = getLViewChild(view);\n        }\n        else {\n            /** @type {?} */\n            const container = /** @type {?} */ (viewOrContainer);\n            if (container[VIEWS].length)\n                next = container[VIEWS][0].data;\n        }\n        if (next == null) {\n            // Only clean up view when moving to the side or up, as destroy hooks\n            // should be called in order from the bottom up.\n            while (viewOrContainer && !/** @type {?} */ ((viewOrContainer))[NEXT] && viewOrContainer !== rootView) {\n                cleanUpView(viewOrContainer);\n                viewOrContainer = getParentState(viewOrContainer, rootView);\n            }\n            cleanUpView(viewOrContainer || rootView);\n            next = viewOrContainer && /** @type {?} */ ((viewOrContainer))[NEXT];\n        }\n        viewOrContainer = next;\n    }\n}\n/**\n * Inserts a view into a container.\n *\n * This adds the view to the container's array of active views in the correct\n * position. It also adds the view's elements to the DOM if the container isn't a\n * root node of another view (in that case, the view's elements will be added when\n * the container's parent view is added later).\n *\n * @param {?} container The container into which the view should be inserted\n * @param {?} viewNode The view to insert\n * @param {?} index The index at which to insert the view\n * @return {?} The inserted view\n */\nfunction insertView(container, viewNode, index) {\n    /** @type {?} */\n    const state = container.data;\n    /** @type {?} */\n    const views = state[VIEWS];\n    /** @type {?} */\n    const lView = /** @type {?} */ (viewNode.data);\n    if (index > 0) {\n        // This is a new view, we need to add it to the children.\n        views[index - 1].data[NEXT] = lView;\n    }\n    if (index < views.length) {\n        lView[NEXT] = views[index].data;\n        views.splice(index, 0, viewNode);\n    }\n    else {\n        views.push(viewNode);\n        lView[NEXT] = null;\n    }\n    // Dynamically inserted views need a reference to their parent container'S host so it's\n    // possible to jump from a view to its container's next when walking the node tree.\n    if (viewNode.tNode.index === -1) {\n        lView[CONTAINER_INDEX] = /** @type {?} */ ((container.tNode.parent)).index;\n        (/** @type {?} */ (viewNode)).view = container.view;\n    }\n    // Notify query that a new view has been added\n    if (lView[QUERIES]) {\n        /** @type {?} */ ((lView[QUERIES])).insertView(index);\n    }\n    // Sets the attached flag\n    lView[FLAGS] |= 8 /* Attached */;\n    return viewNode;\n}\n/**\n * Detaches a view from a container.\n *\n * This method splices the view from the container's array of active views. It also\n * removes the view's elements from the DOM.\n *\n * @param {?} container The container from which to detach a view\n * @param {?} removeIndex The index of the view to detach\n * @return {?} The detached view\n */\nfunction detachView(container, removeIndex) {\n    /** @type {?} */\n    const views = container.data[VIEWS];\n    /** @type {?} */\n    const viewNode = views[removeIndex];\n    if (removeIndex > 0) {\n        views[removeIndex - 1].data[NEXT] = /** @type {?} */ (viewNode.data[NEXT]);\n    }\n    views.splice(removeIndex, 1);\n    if (!container.tNode.detached) {\n        addRemoveViewFromContainer(container, viewNode, false);\n    }\n    /** @type {?} */\n    const removedLView = viewNode.data;\n    if (removedLView[QUERIES]) {\n        /** @type {?} */ ((removedLView[QUERIES])).removeView();\n    }\n    removedLView[CONTAINER_INDEX] = -1;\n    (/** @type {?} */ (viewNode)).view = null;\n    // Unsets the attached flag\n    viewNode.data[FLAGS] &= ~8 /* Attached */;\n    return viewNode;\n}\n/**\n * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n *\n * @param {?} container The container from which to remove a view\n * @param {?} removeIndex The index of the view to remove\n * @return {?} The removed view\n */\nfunction removeView(container, removeIndex) {\n    /** @type {?} */\n    const viewNode = container.data[VIEWS][removeIndex];\n    detachView(container, removeIndex);\n    destroyLView(viewNode.data);\n    return viewNode;\n}\n/**\n * Gets the child of the given LViewData\n * @param {?} viewData\n * @return {?}\n */\nfunction getLViewChild(viewData) {\n    if (viewData[TVIEW].childIndex === -1)\n        return null;\n    /** @type {?} */\n    const hostNode = viewData[viewData[TVIEW].childIndex];\n    return hostNode.data ? hostNode.data : (/** @type {?} */ (hostNode.dynamicLContainerNode)).data;\n}\n/**\n * A standalone function which destroys an LView,\n * conducting cleanup (e.g. removing listeners, calling onDestroys).\n *\n * @param {?} view The view to be destroyed.\n * @return {?}\n */\nfunction destroyLView(view) {\n    /** @type {?} */\n    const renderer = view[RENDERER];\n    if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n        walkLNodeTree(view[HOST_NODE], view[HOST_NODE], 2 /* Destroy */, renderer);\n    }\n    destroyViewTree(view);\n    // Sets the destroyed flag\n    view[FLAGS] |= 32 /* Destroyed */;\n}\n/**\n * Determines which LViewOrLContainer to jump to when traversing back up the\n * tree in destroyViewTree.\n *\n * Normally, the view's parent LView should be checked, but in the case of\n * embedded views, the container (which is the view node's parent, but not the\n * LView's parent) needs to be checked for a possible next property.\n *\n * @param {?} state The LViewOrLContainer for which we need a parent state\n * @param {?} rootView The rootView, so we don't propagate too far up the view tree\n * @return {?} The correct parent LViewOrLContainer\n */\nfunction getParentState(state, rootView) {\n    /** @type {?} */\n    let node;\n    if ((node = /** @type {?} */ (((/** @type {?} */ (state))))[HOST_NODE]) && node.tNode.type === 2 /* View */) {\n        // if it's an embedded view, the state needs to go up to the container, in case the\n        // container has a next\n        return /** @type {?} */ (((getParentLNode(node))).data);\n    }\n    else {\n        // otherwise, use parent view for containers or component views\n        return state[PARENT] === rootView ? null : state[PARENT];\n    }\n}\n/**\n * Removes all listeners and call all onDestroys in a given view.\n *\n * @param {?} viewOrContainer\n * @return {?}\n */\nfunction cleanUpView(viewOrContainer) {\n    if ((/** @type {?} */ (viewOrContainer))[TVIEW]) {\n        /** @type {?} */\n        const view = /** @type {?} */ (viewOrContainer);\n        removeListeners(view);\n        executeOnDestroys(view);\n        executePipeOnDestroys(view);\n        // For component views only, the local renderer is destroyed as clean up time.\n        if (view[TVIEW].id === -1 && isProceduralRenderer(view[RENDERER])) {\n            ngDevMode && ngDevMode.rendererDestroy++;\n            (/** @type {?} */ (view[RENDERER])).destroy();\n        }\n    }\n}\n/**\n * Removes listeners and unsubscribes from output subscriptions\n * @param {?} viewData\n * @return {?}\n */\nfunction removeListeners(viewData) {\n    /** @type {?} */\n    const cleanup = /** @type {?} */ ((viewData[TVIEW].cleanup));\n    if (cleanup != null) {\n        for (let i = 0; i < cleanup.length - 1; i += 2) {\n            if (typeof cleanup[i] === 'string') {\n                /** @type {?} */\n                const native = readElementValue(viewData[cleanup[i + 1]]).native;\n                /** @type {?} */\n                const listener = /** @type {?} */ ((viewData[CLEANUP]))[cleanup[i + 2]];\n                native.removeEventListener(cleanup[i], listener, cleanup[i + 3]);\n                i += 2;\n            }\n            else if (typeof cleanup[i] === 'number') {\n                /** @type {?} */\n                const cleanupFn = /** @type {?} */ ((viewData[CLEANUP]))[cleanup[i]];\n                cleanupFn();\n            }\n            else {\n                /** @type {?} */\n                const context = /** @type {?} */ ((viewData[CLEANUP]))[cleanup[i + 1]];\n                cleanup[i].call(context);\n            }\n        }\n        viewData[CLEANUP] = null;\n    }\n}\n/**\n * Calls onDestroy hooks for this view\n * @param {?} view\n * @return {?}\n */\nfunction executeOnDestroys(view) {\n    /** @type {?} */\n    const tView = view[TVIEW];\n    /** @type {?} */\n    let destroyHooks;\n    if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n        callHooks(/** @type {?} */ ((view[DIRECTIVES])), destroyHooks);\n    }\n}\n/**\n * Calls pipe destroy hooks for this view\n * @param {?} viewData\n * @return {?}\n */\nfunction executePipeOnDestroys(viewData) {\n    /** @type {?} */\n    const pipeDestroyHooks = viewData[TVIEW] && viewData[TVIEW].pipeDestroyHooks;\n    if (pipeDestroyHooks) {\n        callHooks(/** @type {?} */ ((viewData)), pipeDestroyHooks);\n    }\n}\n/**\n * Returns whether a native element can be inserted into the given parent.\n *\n * There are two reasons why we may not be able to insert a element immediately.\n * - Projection: When creating a child content element of a component, we have to skip the\n *   insertion because the content of a component will be projected.\n *   `<component><content>delayed due to projection</content></component>`\n * - Parent container is disconnected: This can happen when we are inserting a view into\n *   parent container, which itself is disconnected. For example the parent container is part\n *   of a View which has not be inserted or is mare for projection but has not been inserted\n *   into destination.\n *\n *\n * @param {?} parent The parent where the child will be inserted into.\n * @param {?} currentView Current LView being processed.\n * @return {?} boolean Whether the child should be inserted now (or delayed until later).\n */\nfunction canInsertNativeNode(parent, currentView) {\n    // We can only insert into a Component or View. Any other type should be an Error.\n    ngDevMode && assertNodeOfPossibleTypes(parent, 3 /* Element */, 2 /* View */);\n    if (parent.tNode.type === 3 /* Element */) {\n        // Parent is an element.\n        if (parent.view !== currentView) {\n            // If the Parent view is not the same as current view than we are inserting across\n            // Views. This happens when we insert a root element of the component view into\n            // the component host element and it should always be eager.\n            return true;\n        }\n        // Parent elements can be a component which may have projection.\n        if (parent.data === null) {\n            // Parent is a regular non-component element. We should eagerly insert into it\n            // since we know that this relationship will never be broken.\n            return true;\n        }\n        else {\n            // Parent is a Component. Component's content nodes are not inserted immediately\n            // because they will be projected, and so doing insert at this point would be wasteful.\n            // Since the projection would than move it to its final destination.\n            return false;\n        }\n    }\n    else {\n        // Parent is a View.\n        ngDevMode && assertNodeType(parent, 2 /* View */);\n        /** @type {?} */\n        const grandParentContainer = /** @type {?} */ (getParentLNode(parent));\n        if (grandParentContainer == null) {\n            // The `View` is not inserted into a `Container` we have to delay insertion.\n            return false;\n        }\n        ngDevMode && assertNodeType(grandParentContainer, 0 /* Container */);\n        if (grandParentContainer.data[RENDER_PARENT] == null) {\n            // The parent `Container` itself is disconnected. So we have to delay.\n            return false;\n        }\n        else {\n            // The parent `Container` is in inserted state, so we can eagerly insert into\n            // this location.\n            return true;\n        }\n    }\n}\n/**\n * Appends the `child` element to the `parent`.\n *\n * The element insertion might be delayed {\\@link canInsertNativeNode}.\n *\n * @param {?} parent The parent to which to append the child\n * @param {?} child The child that should be appended\n * @param {?} currentView The current LView\n * @return {?} Whether or not the child was appended\n */\nfunction appendChild(parent, child, currentView) {\n    if (child !== null && canInsertNativeNode(parent, currentView)) {\n        /** @type {?} */\n        const renderer = currentView[RENDERER];\n        if (parent.tNode.type === 2 /* View */) {\n            /** @type {?} */\n            const container = /** @type {?} */ (getParentLNode(parent));\n            /** @type {?} */\n            const renderParent = container.data[RENDER_PARENT];\n            /** @type {?} */\n            const views = container.data[VIEWS];\n            /** @type {?} */\n            const index = views.indexOf(/** @type {?} */ (parent));\n            /** @type {?} */\n            const beforeNode = index + 1 < views.length ? (/** @type {?} */ ((getChildLNode(views[index + 1])))).native : container.native;\n            isProceduralRenderer(renderer) ?\n                renderer.insertBefore(/** @type {?} */ ((renderParent)).native, child, beforeNode) : /** @type {?} */ ((renderParent)).native.insertBefore(child, beforeNode, true);\n        }\n        else {\n            isProceduralRenderer(renderer) ? renderer.appendChild(/** @type {?} */ (((parent.native))), child) : /** @type {?} */ ((parent.native)).appendChild(child);\n        }\n        return true;\n    }\n    return false;\n}\n/**\n * Removes the `child` element of the `parent` from the DOM.\n *\n * @param {?} parent The parent from which to remove the child\n * @param {?} child The child that should be removed\n * @param {?} currentView The current LView\n * @return {?} Whether or not the child was removed\n */\nfunction removeChild(parent, child, currentView) {\n    if (child !== null && canInsertNativeNode(parent, currentView)) {\n        /** @type {?} */\n        const renderer = currentView[RENDERER];\n        isProceduralRenderer(renderer) ? renderer.removeChild(/** @type {?} */ (parent.native), child) : /** @type {?} */ ((parent.native)).removeChild(child);\n        return true;\n    }\n    return false;\n}\n/**\n * Appends a projected node to the DOM, or in the case of a projected container,\n * appends the nodes from all of the container's active views to the DOM.\n *\n * @param {?} node The node to process\n * @param {?} currentParent The last parent element to be processed\n * @param {?} currentView Current LView\n * @param {?} renderParent\n * @return {?}\n */\nfunction appendProjectedNode(node, currentParent, currentView, renderParent) {\n    appendChild(currentParent, node.native, currentView);\n    if (node.tNode.type === 0 /* Container */) {\n        /** @type {?} */\n        const lContainer = (/** @type {?} */ (node)).data;\n        lContainer[RENDER_PARENT] = renderParent;\n        /** @type {?} */\n        const views = lContainer[VIEWS];\n        for (let i = 0; i < views.length; i++) {\n            addRemoveViewFromContainer(/** @type {?} */ (node), views[i], true, node.native);\n        }\n    }\n    if (node.dynamicLContainerNode) {\n        node.dynamicLContainerNode.data[RENDER_PARENT] = renderParent;\n        appendChild(currentParent, node.dynamicLContainerNode.native, currentView);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @param {?} nodeClassAttrVal\n * @param {?} cssClassToMatch\n * @return {?}\n */\nfunction isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n    /** @type {?} */\n    const nodeClassesLen = nodeClassAttrVal.length;\n    /** @type {?} */\n    const matchIndex = /** @type {?} */ ((nodeClassAttrVal)).indexOf(cssClassToMatch);\n    /** @type {?} */\n    const matchEndIdx = matchIndex + cssClassToMatch.length;\n    if (matchIndex === -1 // no match\n        || (matchIndex > 0 && /** @type {?} */ ((nodeClassAttrVal))[matchIndex - 1] !== ' ') // no space before\n        ||\n            (matchEndIdx < nodeClassesLen && /** @type {?} */ ((nodeClassAttrVal))[matchEndIdx] !== ' ')) // no space after\n     {\n        return false;\n    }\n    return true;\n}\n/**\n * A utility function to match an Ivy node static data against a simple CSS selector\n *\n * @param {?} tNode\n * @param {?} selector\n * @return {?} true if node matches the selector.\n */\nfunction isNodeMatchingSelector(tNode, selector) {\n    ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n    /** @type {?} */\n    let mode = 4 /* ELEMENT */;\n    /** @type {?} */\n    const nodeAttrs = /** @type {?} */ ((tNode.attrs));\n    /** @type {?} */\n    const selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(1 /* SelectOnly */) : -1;\n    /** @type {?} */\n    let skipToNextSelector = false;\n    for (let i = 0; i < selector.length; i++) {\n        /** @type {?} */\n        const current = selector[i];\n        if (typeof current === 'number') {\n            // If we finish processing a :not selector and it hasn't failed, return false\n            if (!skipToNextSelector && !isPositive(mode) && !isPositive(/** @type {?} */ (current))) {\n                return false;\n            }\n            // If we are skipping to the next :not() and this mode flag is positive,\n            // it's a part of the current :not() selector, and we should keep skipping\n            if (skipToNextSelector && isPositive(current))\n                continue;\n            skipToNextSelector = false;\n            mode = (/** @type {?} */ (current)) | (mode & 1 /* NOT */);\n            continue;\n        }\n        if (skipToNextSelector)\n            continue;\n        if (mode & 4 /* ELEMENT */) {\n            mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n            if (current !== '' && current !== tNode.tagName) {\n                if (isPositive(mode))\n                    return false;\n                skipToNextSelector = true;\n            }\n        }\n        else {\n            /** @type {?} */\n            const attrName = mode & 8 /* CLASS */ ? 'class' : current;\n            /** @type {?} */\n            const attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n            if (attrIndexInNode === -1) {\n                if (isPositive(mode))\n                    return false;\n                skipToNextSelector = true;\n                continue;\n            }\n            /** @type {?} */\n            const selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n            if (selectorAttrValue !== '') {\n                /** @type {?} */\n                let nodeAttrValue;\n                /** @type {?} */\n                const maybeAttrName = nodeAttrs[attrIndexInNode];\n                if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                    nodeAttrValue = '';\n                }\n                else {\n                    ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                    nodeAttrValue = /** @type {?} */ (nodeAttrs[attrIndexInNode + 1]);\n                }\n                if (mode & 8 /* CLASS */ &&\n                    !isCssClassMatching(/** @type {?} */ (nodeAttrValue), /** @type {?} */ (selectorAttrValue)) ||\n                    mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n        }\n    }\n    return isPositive(mode) || skipToNextSelector;\n}\n/**\n * @param {?} mode\n * @return {?}\n */\nfunction isPositive(mode) {\n    return (mode & 1 /* NOT */) === 0;\n}\n/**\n * Examines an attributes definition array from a node to find the index of the\n * attribute with the specified name.\n *\n * NOTE: Will not find namespaced attributes.\n *\n * @param {?} name the name of the attribute to find\n * @param {?} attrs the attribute array to examine\n * @return {?}\n */\nfunction findAttrIndexInNode(name, attrs) {\n    if (attrs === null)\n        return -1;\n    /** @type {?} */\n    let selectOnlyMode = false;\n    /** @type {?} */\n    let i = 0;\n    while (i < attrs.length) {\n        /** @type {?} */\n        const maybeAttrName = attrs[i];\n        if (maybeAttrName === name) {\n            return i;\n        }\n        else if (maybeAttrName === 0 /* NamespaceURI */) {\n            // NOTE(benlesh): will not find namespaced attributes. This is by design.\n            i += 4;\n        }\n        else {\n            if (maybeAttrName === 1 /* SelectOnly */) {\n                selectOnlyMode = true;\n            }\n            i += selectOnlyMode ? 1 : 2;\n        }\n    }\n    return -1;\n}\n/**\n * @param {?} tNode\n * @param {?} selector\n * @return {?}\n */\nfunction isNodeMatchingSelectorList(tNode, selector) {\n    for (let i = 0; i < selector.length; i++) {\n        if (isNodeMatchingSelector(tNode, selector[i])) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @param {?} tNode\n * @return {?}\n */\nfunction getProjectAsAttrValue(tNode) {\n    /** @type {?} */\n    const nodeAttrs = tNode.attrs;\n    if (nodeAttrs != null) {\n        /** @type {?} */\n        const ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n        // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n        // (attribute names are stored at even indexes)\n        if ((ngProjectAsAttrIdx & 1) === 0) {\n            return /** @type {?} */ (nodeAttrs[ngProjectAsAttrIdx + 1]);\n        }\n    }\n    return null;\n}\n/**\n * Checks a given node against matching selectors and returns\n * selector index (or 0 if none matched).\n *\n * This function takes into account the ngProjectAs attribute: if present its value will be compared\n * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n * @param {?} tNode\n * @param {?} selectors\n * @param {?} textSelectors\n * @return {?}\n */\nfunction matchingSelectorIndex(tNode, selectors, textSelectors) {\n    /** @type {?} */\n    const ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n    for (let i = 0; i < selectors.length; i++) {\n        // if a node has the ngProjectAs attribute match it against unparsed selector\n        // match a node against a parsed selector only if ngProjectAs attribute is not present\n        if (ngProjectAsAttrVal === textSelectors[i] ||\n            ngProjectAsAttrVal === null && isNodeMatchingSelectorList(tNode, selectors[i])) {\n            return i + 1; // first matching selector \"captures\" a given node\n        }\n    }\n    return 0;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Used clone a copy of a pre-computed template of a styling context.\n *\n * A pre-computed template is designed to be computed once for a given element\n * (instructions.ts has logic for caching this).\n * @param {?} lElement\n * @param {?} templateStyleContext\n * @return {?}\n */\nfunction allocStylingContext(lElement, templateStyleContext) {\n    /** @type {?} */\n    const context = /** @type {?} */ ((templateStyleContext.slice()));\n    context[0 /* ElementPosition */] = lElement;\n    return context;\n}\n/**\n * Creates a styling context template where styling information is stored.\n * Any styles that are later referenced using `updateStyleProp` must be\n * passed in within this function. Initial values for those styles are to\n * be declared after all initial style properties are declared (this change in\n * mode between declarations and initial styles is made possible using a special\n * enum value found in `definition.ts`).\n *\n * @param {?=} initialClassDeclarations a list of class declarations and initial class values\n *    that are used later within the styling context.\n *\n *    -> ['foo', 'bar', SPECIAL_ENUM_VAL, 'foo', true]\n *       This implies that `foo` and `bar` will be later styled and that the `foo`\n *       class will be applied to the element as an initial class since it's true\n * @param {?=} initialStyleDeclarations a list of style declarations and initial style values\n *    that are used later within the styling context.\n *\n *    -> ['width', 'height', SPECIAL_ENUM_VAL, 'width', '100px']\n *       This implies that `width` and `height` will be later styled and that the `width`\n *       property has an initial value of `100px`.\n *\n * @param {?=} styleSanitizer\n * @return {?}\n */\nfunction createStylingContextTemplate(initialClassDeclarations, initialStyleDeclarations, styleSanitizer) {\n    /** @type {?} */\n    const initialStylingValues = [null];\n    /** @type {?} */\n    const context = [null, styleSanitizer || null, initialStylingValues, 0, 0, null];\n    /** @type {?} */\n    const stylesLookup = {};\n    /** @type {?} */\n    const classesLookup = {};\n    /** @type {?} */\n    let totalStyleDeclarations = 0;\n    if (initialStyleDeclarations) {\n        /** @type {?} */\n        let hasPassedDeclarations = false;\n        for (let i = 0; i < initialStyleDeclarations.length; i++) {\n            /** @type {?} */\n            const v = /** @type {?} */ (initialStyleDeclarations[i]);\n            // this flag value marks where the declarations end the initial values begin\n            if (v === 1 /* VALUES_MODE */) {\n                hasPassedDeclarations = true;\n            }\n            else {\n                /** @type {?} */\n                const prop = /** @type {?} */ (v);\n                if (hasPassedDeclarations) {\n                    /** @type {?} */\n                    const value = /** @type {?} */ (initialStyleDeclarations[++i]);\n                    initialStylingValues.push(value);\n                    stylesLookup[prop] = initialStylingValues.length - 1;\n                }\n                else {\n                    totalStyleDeclarations++;\n                    stylesLookup[prop] = 0;\n                }\n            }\n        }\n    }\n    // make where the class offsets begin\n    context[4 /* ClassOffsetPosition */] = totalStyleDeclarations;\n    if (initialClassDeclarations) {\n        /** @type {?} */\n        let hasPassedDeclarations = false;\n        for (let i = 0; i < initialClassDeclarations.length; i++) {\n            /** @type {?} */\n            const v = /** @type {?} */ (initialClassDeclarations[i]);\n            // this flag value marks where the declarations end the initial values begin\n            if (v === 1 /* VALUES_MODE */) {\n                hasPassedDeclarations = true;\n            }\n            else {\n                /** @type {?} */\n                const className = /** @type {?} */ (v);\n                if (hasPassedDeclarations) {\n                    /** @type {?} */\n                    const value = /** @type {?} */ (initialClassDeclarations[++i]);\n                    initialStylingValues.push(value);\n                    classesLookup[className] = initialStylingValues.length - 1;\n                }\n                else {\n                    classesLookup[className] = 0;\n                }\n            }\n        }\n    }\n    /** @type {?} */\n    const styleProps = Object.keys(stylesLookup);\n    /** @type {?} */\n    const classNames = Object.keys(classesLookup);\n    /** @type {?} */\n    const classNamesIndexStart = styleProps.length;\n    /** @type {?} */\n    const totalProps = styleProps.length + classNames.length;\n    /** @type {?} */\n    const maxLength = totalProps * 3 /* Size */ * 2 + 6 /* SingleStylesStartPosition */;\n    // we need to fill the array from the start so that we can access\n    // both the multi and the single array positions in the same loop block\n    for (let i = 6 /* SingleStylesStartPosition */; i < maxLength; i++) {\n        context.push(null);\n    }\n    /** @type {?} */\n    const singleStart = 6 /* SingleStylesStartPosition */;\n    /** @type {?} */\n    const multiStart = totalProps * 3 /* Size */ + 6 /* SingleStylesStartPosition */;\n    // fill single and multi-level styles\n    for (let i = 0; i < totalProps; i++) {\n        /** @type {?} */\n        const isClassBased = i >= classNamesIndexStart;\n        /** @type {?} */\n        const prop = isClassBased ? classNames[i - classNamesIndexStart] : styleProps[i];\n        /** @type {?} */\n        const indexForInitial = isClassBased ? classesLookup[prop] : stylesLookup[prop];\n        /** @type {?} */\n        const initialValue = initialStylingValues[indexForInitial];\n        /** @type {?} */\n        const indexForMulti = i * 3 /* Size */ + multiStart;\n        /** @type {?} */\n        const indexForSingle = i * 3 /* Size */ + singleStart;\n        /** @type {?} */\n        const initialFlag = prepareInitialFlag(prop, isClassBased, styleSanitizer || null);\n        setFlag(context, indexForSingle, pointers(initialFlag, indexForInitial, indexForMulti));\n        setProp(context, indexForSingle, prop);\n        setValue(context, indexForSingle, null);\n        /** @type {?} */\n        const flagForMulti = initialFlag | (initialValue !== null ? 1 /* Dirty */ : 0 /* None */);\n        setFlag(context, indexForMulti, pointers(flagForMulti, indexForInitial, indexForSingle));\n        setProp(context, indexForMulti, prop);\n        setValue(context, indexForMulti, null);\n    }\n    // there is no initial value flag for the master index since it doesn't\n    // reference an initial style value\n    setFlag(context, 3 /* MasterFlagPosition */, pointers(0, 0, multiStart));\n    setContextDirty(context, initialStylingValues.length > 1);\n    return context;\n}\n/** @type {?} */\nconst EMPTY_ARR = [];\n/** @type {?} */\nconst EMPTY_OBJ = {};\n/**\n * Sets and resolves all `multi` styling on an `StylingContext` so that they can be\n * applied to the element once `renderStyling` is called.\n *\n * All missing styles/class (any values that are not provided in the new `styles`\n * or `classes` params) will resolve to `null` within their respective positions\n * in the context.\n *\n * @param {?} context The styling context that will be updated with the\n *    newly provided style values.\n * @param {?} classes The key/value map of CSS class names that will be used for the update.\n * @param {?=} styles The key/value map of CSS styles that will be used for the update.\n * @return {?}\n */\nfunction updateStylingMap(context, classes, styles) {\n    /** @type {?} */\n    let classNames = EMPTY_ARR;\n    /** @type {?} */\n    let applyAllClasses = false;\n    /** @type {?} */\n    let ignoreAllClassUpdates = false;\n    // each time a string-based value pops up then it shouldn't require a deep\n    // check of what's changed.\n    if (typeof classes == 'string') {\n        /** @type {?} */\n        const cachedClassString = /** @type {?} */ (context[5 /* CachedCssClassString */]);\n        if (cachedClassString && cachedClassString === classes) {\n            ignoreAllClassUpdates = true;\n        }\n        else {\n            context[5 /* CachedCssClassString */] = classes;\n            classNames = classes.split(/\\s+/);\n            // this boolean is used to avoid having to create a key/value map of `true` values\n            // since a classname string implies that all those classes are added\n            applyAllClasses = true;\n        }\n    }\n    else {\n        classNames = classes ? Object.keys(classes) : EMPTY_ARR;\n        context[5 /* CachedCssClassString */] = null;\n    }\n    classes = /** @type {?} */ ((classes || EMPTY_OBJ));\n    /** @type {?} */\n    const styleProps = styles ? Object.keys(styles) : EMPTY_ARR;\n    styles = styles || EMPTY_OBJ;\n    /** @type {?} */\n    const classesStartIndex = styleProps.length;\n    /** @type {?} */\n    const multiStartIndex = getMultiStartIndex(context);\n    /** @type {?} */\n    let dirty = false;\n    /** @type {?} */\n    let ctxIndex = multiStartIndex;\n    /** @type {?} */\n    let propIndex = 0;\n    /** @type {?} */\n    const propLimit = styleProps.length + classNames.length;\n    // the main loop here will try and figure out how the shape of the provided\n    // styles differ with respect to the context. Later if the context/styles/classes\n    // are off-balance then they will be dealt in another loop after this one\n    while (ctxIndex < context.length && propIndex < propLimit) {\n        /** @type {?} */\n        const isClassBased = propIndex >= classesStartIndex;\n        // when there is a cache-hit for a string-based class then we should\n        // avoid doing any work diffing any of the changes\n        if (!ignoreAllClassUpdates || !isClassBased) {\n            /** @type {?} */\n            const adjustedPropIndex = isClassBased ? propIndex - classesStartIndex : propIndex;\n            /** @type {?} */\n            const newProp = isClassBased ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n            /** @type {?} */\n            const newValue = isClassBased ? (applyAllClasses ? true : classes[newProp]) : styles[newProp];\n            /** @type {?} */\n            const prop = getProp(context, ctxIndex);\n            if (prop === newProp) {\n                /** @type {?} */\n                const value = getValue(context, ctxIndex);\n                /** @type {?} */\n                const flag = getPointers(context, ctxIndex);\n                if (hasValueChanged(flag, value, newValue)) {\n                    setValue(context, ctxIndex, newValue);\n                    /** @type {?} */\n                    const initialValue = getInitialValue(context, flag);\n                    // there is no point in setting this to dirty if the previously\n                    // rendered value was being referenced by the initial style (or null)\n                    if (initialValue !== newValue) {\n                        setDirty(context, ctxIndex, true);\n                        dirty = true;\n                    }\n                }\n            }\n            else {\n                /** @type {?} */\n                const indexOfEntry = findEntryPositionByProp(context, newProp, ctxIndex);\n                if (indexOfEntry > 0) {\n                    /** @type {?} */\n                    const valueToCompare = getValue(context, indexOfEntry);\n                    /** @type {?} */\n                    const flagToCompare = getPointers(context, indexOfEntry);\n                    swapMultiContextEntries(context, ctxIndex, indexOfEntry);\n                    if (valueToCompare !== newValue) {\n                        /** @type {?} */\n                        const initialValue = getInitialValue(context, flagToCompare);\n                        setValue(context, ctxIndex, newValue);\n                        if (initialValue !== newValue) {\n                            setDirty(context, ctxIndex, true);\n                            dirty = true;\n                        }\n                    }\n                }\n                else {\n                    /** @type {?} */\n                    const newFlag = prepareInitialFlag(newProp, isClassBased, getStyleSanitizer(context));\n                    insertNewMultiProperty(context, ctxIndex, isClassBased, newProp, newFlag, newValue);\n                    dirty = true;\n                }\n            }\n        }\n        ctxIndex += 3 /* Size */;\n        propIndex++;\n    }\n    // this means that there are left-over values in the context that\n    // were not included in the provided styles/classes and in this\n    // case the  goal is to \"remove\" them from the context (by nullifying)\n    while (ctxIndex < context.length) {\n        /** @type {?} */\n        const flag = getPointers(context, ctxIndex);\n        /** @type {?} */\n        const isClassBased = (flag & 2 /* Class */) === 2 /* Class */;\n        if (ignoreAllClassUpdates && isClassBased)\n            break;\n        /** @type {?} */\n        const value = getValue(context, ctxIndex);\n        /** @type {?} */\n        const doRemoveValue = valueExists(value, isClassBased);\n        if (doRemoveValue) {\n            setDirty(context, ctxIndex, true);\n            setValue(context, ctxIndex, null);\n            dirty = true;\n        }\n        ctxIndex += 3 /* Size */;\n    }\n    /** @type {?} */\n    const sanitizer = getStyleSanitizer(context);\n    while (propIndex < propLimit) {\n        /** @type {?} */\n        const isClassBased = propIndex >= classesStartIndex;\n        if (ignoreAllClassUpdates && isClassBased)\n            break;\n        /** @type {?} */\n        const adjustedPropIndex = isClassBased ? propIndex - classesStartIndex : propIndex;\n        /** @type {?} */\n        const prop = isClassBased ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n        /** @type {?} */\n        const value = isClassBased ? (applyAllClasses ? true : classes[prop]) : styles[prop];\n        /** @type {?} */\n        const flag = prepareInitialFlag(prop, isClassBased, sanitizer) | 1 /* Dirty */;\n        context.push(flag, prop, value);\n        propIndex++;\n        dirty = true;\n    }\n    if (dirty) {\n        setContextDirty(context, true);\n    }\n}\n/**\n * Sets and resolves a single styling property/value on the provided `StylingContext` so\n * that they can be applied to the element once `renderStyling` is called.\n *\n * Note that prop-level styling values are considered higher priority than any styling that\n * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n * then any styles/classes that have been applied using this function will be considered first\n * (then multi values second and then initial values as a backup).\n *\n * @param {?} context The styling context that will be updated with the\n *    newly provided style value.\n * @param {?} index The index of the property which is being updated.\n * @param {?} value The CSS style value that will be assigned\n * @return {?}\n */\nfunction updateStyleProp(context, index, value) {\n    /** @type {?} */\n    const singleIndex = 6 /* SingleStylesStartPosition */ + index * 3 /* Size */;\n    /** @type {?} */\n    const currValue = getValue(context, singleIndex);\n    /** @type {?} */\n    const currFlag = getPointers(context, singleIndex);\n    // didn't change ... nothing to make a note of\n    if (hasValueChanged(currFlag, currValue, value)) {\n        // the value will always get updated (even if the dirty flag is skipped)\n        setValue(context, singleIndex, value);\n        /** @type {?} */\n        const indexForMulti = getMultiOrSingleIndex(currFlag);\n        /** @type {?} */\n        const valueForMulti = getValue(context, indexForMulti);\n        if (!valueForMulti || valueForMulti !== value) {\n            /** @type {?} */\n            let multiDirty = false;\n            /** @type {?} */\n            let singleDirty = true;\n            /** @type {?} */\n            const isClassBased = (currFlag & 2 /* Class */) === 2 /* Class */;\n            // only when the value is set to `null` should the multi-value get flagged\n            if (!valueExists(value, isClassBased) && valueExists(valueForMulti, isClassBased)) {\n                multiDirty = true;\n                singleDirty = false;\n            }\n            setDirty(context, indexForMulti, multiDirty);\n            setDirty(context, singleIndex, singleDirty);\n            setContextDirty(context, true);\n        }\n    }\n}\n/**\n * This method will toggle the referenced CSS class (by the provided index)\n * within the given context.\n *\n * @param {?} context The styling context that will be updated with the\n *    newly provided class value.\n * @param {?} index The index of the CSS class which is being updated.\n * @param {?} addOrRemove Whether or not to add or remove the CSS class\n * @return {?}\n */\nfunction updateClassProp(context, index, addOrRemove) {\n    /** @type {?} */\n    const adjustedIndex = index + context[4 /* ClassOffsetPosition */];\n    updateStyleProp(context, adjustedIndex, addOrRemove);\n}\n/**\n * Renders all queued styling using a renderer onto the given element.\n *\n * This function works by rendering any styles (that have been applied\n * using `updateStylingMap`) and any classes (that have been applied using\n * `updateStyleProp`) onto the provided element using the provided renderer.\n * Just before the styles/classes are rendered a final key/value style map\n * will be assembled (if `styleStore` or `classStore` are provided).\n *\n * @param {?} context The styling context that will be used to determine\n *      what styles will be rendered\n * @param {?} renderer the renderer that will be used to apply the styling\n * @param {?=} styleStore if provided, the updated style values will be applied\n *    to this key/value map instead of being renderered via the renderer.\n * @param {?=} classStore if provided, the updated class values will be applied\n *    to this key/value map instead of being renderered via the renderer.\n * @return {?}\n */\nfunction renderStyling(context, renderer, styleStore, classStore) {\n    if (isContextDirty(context)) {\n        /** @type {?} */\n        const native = /** @type {?} */ ((context[0 /* ElementPosition */])).native;\n        /** @type {?} */\n        const multiStartIndex = getMultiStartIndex(context);\n        /** @type {?} */\n        const styleSanitizer = getStyleSanitizer(context);\n        for (let i = 6 /* SingleStylesStartPosition */; i < context.length; i += 3 /* Size */) {\n            // there is no point in rendering styles that have not changed on screen\n            if (isDirty(context, i)) {\n                /** @type {?} */\n                const prop = getProp(context, i);\n                /** @type {?} */\n                const value = getValue(context, i);\n                /** @type {?} */\n                const flag = getPointers(context, i);\n                /** @type {?} */\n                const isClassBased = flag & 2 /* Class */ ? true : false;\n                /** @type {?} */\n                const isInSingleRegion = i < multiStartIndex;\n                /** @type {?} */\n                let valueToApply = value;\n                // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                // this check implies that a single value was removed and we\n                // should now defer to a multi value and use that (if set).\n                if (isInSingleRegion && !valueExists(valueToApply, isClassBased)) {\n                    /** @type {?} */\n                    const multiIndex = getMultiOrSingleIndex(flag);\n                    valueToApply = getValue(context, multiIndex);\n                }\n                // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                // the initial value will always be a string or null,\n                // therefore we can safely adopt it incase there's nothing else\n                // note that this should always be a falsy check since `false` is used\n                // for both class and style comparisons (styles can't be false and false\n                // classes are turned off and should therefore defer to their initial values)\n                if (!valueExists(valueToApply, isClassBased)) {\n                    valueToApply = getInitialValue(context, flag);\n                }\n                if (isClassBased) {\n                    setClass(native, prop, valueToApply ? true : false, renderer, classStore);\n                }\n                else {\n                    /** @type {?} */\n                    const sanitizer = (flag & 4 /* Sanitize */) ? styleSanitizer : null;\n                    setStyle(native, prop, /** @type {?} */ (valueToApply), renderer, sanitizer, styleStore);\n                }\n                setDirty(context, i, false);\n            }\n        }\n        setContextDirty(context, false);\n    }\n}\n/**\n * This function renders a given CSS prop/value entry using the\n * provided renderer. If a `store` value is provided then\n * that will be used a render context instead of the provided\n * renderer.\n *\n * @param {?} native the DOM Element\n * @param {?} prop the CSS style property that will be rendered\n * @param {?} value the CSS style value that will be rendered\n * @param {?} renderer\n * @param {?} sanitizer\n * @param {?=} store an optional key/value map that will be used as a context to render styles on\n * @return {?}\n */\nfunction setStyle(native, prop, value, renderer, sanitizer, store) {\n    value = sanitizer && value ? sanitizer(prop, value) : value;\n    if (store) {\n        store[prop] = value;\n    }\n    else if (value) {\n        ngDevMode && ngDevMode.rendererSetStyle++;\n        isProceduralRenderer(renderer) ?\n            renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n            native['style'].setProperty(prop, value);\n    }\n    else {\n        ngDevMode && ngDevMode.rendererRemoveStyle++;\n        isProceduralRenderer(renderer) ?\n            renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n            native['style'].removeProperty(prop);\n    }\n}\n/**\n * This function renders a given CSS class value using the provided\n * renderer (by adding or removing it from the provided element).\n * If a `store` value is provided then that will be used a render\n * context instead of the provided renderer.\n *\n * @param {?} native the DOM Element\n * @param {?} className\n * @param {?} add\n * @param {?} renderer\n * @param {?=} store an optional key/value map that will be used as a context to render styles on\n * @return {?}\n */\nfunction setClass(native, className, add, renderer, store) {\n    if (store) {\n        store[className] = add;\n    }\n    else if (add) {\n        ngDevMode && ngDevMode.rendererAddClass++;\n        isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n            native['classList'].add(className);\n    }\n    else {\n        ngDevMode && ngDevMode.rendererRemoveClass++;\n        isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n            native['classList'].remove(className);\n    }\n}\n/**\n * @param {?} context\n * @param {?} index\n * @param {?} isDirtyYes\n * @return {?}\n */\nfunction setDirty(context, index, isDirtyYes) {\n    /** @type {?} */\n    const adjustedIndex = index >= 6 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n    if (isDirtyYes) {\n        (/** @type {?} */ (context[adjustedIndex])) |= 1 /* Dirty */;\n    }\n    else {\n        (/** @type {?} */ (context[adjustedIndex])) &= ~1 /* Dirty */;\n    }\n}\n/**\n * @param {?} context\n * @param {?} index\n * @return {?}\n */\nfunction isDirty(context, index) {\n    /** @type {?} */\n    const adjustedIndex = index >= 6 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n    return ((/** @type {?} */ (context[adjustedIndex])) & 1 /* Dirty */) == 1 /* Dirty */;\n}\n/**\n * @param {?} context\n * @param {?} index\n * @return {?}\n */\nfunction isClassBased(context, index) {\n    /** @type {?} */\n    const adjustedIndex = index >= 6 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n    return ((/** @type {?} */ (context[adjustedIndex])) & 2 /* Class */) == 2 /* Class */;\n}\n/**\n * @param {?} context\n * @param {?} index\n * @return {?}\n */\nfunction isSanitizable(context, index) {\n    /** @type {?} */\n    const adjustedIndex = index >= 6 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n    return ((/** @type {?} */ (context[adjustedIndex])) & 4 /* Sanitize */) == 4 /* Sanitize */;\n}\n/**\n * @param {?} configFlag\n * @param {?} staticIndex\n * @param {?} dynamicIndex\n * @return {?}\n */\nfunction pointers(configFlag, staticIndex, dynamicIndex) {\n    return (configFlag & 7 /* BitMask */) | (staticIndex << 3 /* BitCountSize */) |\n        (dynamicIndex << (14 /* BitCountSize */ + 3 /* BitCountSize */));\n}\n/**\n * @param {?} context\n * @param {?} flag\n * @return {?}\n */\nfunction getInitialValue(context, flag) {\n    /** @type {?} */\n    const index = getInitialIndex(flag);\n    return /** @type {?} */ (context[2 /* InitialStylesPosition */][index]);\n}\n/**\n * @param {?} flag\n * @return {?}\n */\nfunction getInitialIndex(flag) {\n    return (flag >> 3 /* BitCountSize */) & 16383 /* BitMask */;\n}\n/**\n * @param {?} flag\n * @return {?}\n */\nfunction getMultiOrSingleIndex(flag) {\n    /** @type {?} */\n    const index = (flag >> (14 /* BitCountSize */ + 3 /* BitCountSize */)) & 16383 /* BitMask */;\n    return index >= 6 /* SingleStylesStartPosition */ ? index : -1;\n}\n/**\n * @param {?} context\n * @return {?}\n */\nfunction getMultiStartIndex(context) {\n    return /** @type {?} */ (getMultiOrSingleIndex(context[3 /* MasterFlagPosition */]));\n}\n/**\n * @param {?} context\n * @return {?}\n */\nfunction getStyleSanitizer(context) {\n    return context[1 /* StyleSanitizerPosition */];\n}\n/**\n * @param {?} context\n * @param {?} index\n * @param {?} prop\n * @return {?}\n */\nfunction setProp(context, index, prop) {\n    context[index + 1 /* PropertyOffset */] = prop;\n}\n/**\n * @param {?} context\n * @param {?} index\n * @param {?} value\n * @return {?}\n */\nfunction setValue(context, index, value) {\n    context[index + 2 /* ValueOffset */] = value;\n}\n/**\n * @param {?} context\n * @param {?} index\n * @param {?} flag\n * @return {?}\n */\nfunction setFlag(context, index, flag) {\n    /** @type {?} */\n    const adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n    context[adjustedIndex] = flag;\n}\n/**\n * @param {?} context\n * @param {?} index\n * @return {?}\n */\nfunction getPointers(context, index) {\n    /** @type {?} */\n    const adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n    return /** @type {?} */ (context[adjustedIndex]);\n}\n/**\n * @param {?} context\n * @param {?} index\n * @return {?}\n */\nfunction getValue(context, index) {\n    return /** @type {?} */ (context[index + 2 /* ValueOffset */]);\n}\n/**\n * @param {?} context\n * @param {?} index\n * @return {?}\n */\nfunction getProp(context, index) {\n    return /** @type {?} */ (context[index + 1 /* PropertyOffset */]);\n}\n/**\n * @param {?} context\n * @return {?}\n */\nfunction isContextDirty(context) {\n    return isDirty(context, 3 /* MasterFlagPosition */);\n}\n/**\n * @param {?} context\n * @param {?} isDirtyYes\n * @return {?}\n */\nfunction setContextDirty(context, isDirtyYes) {\n    setDirty(context, 3 /* MasterFlagPosition */, isDirtyYes);\n}\n/**\n * @param {?} context\n * @param {?} prop\n * @param {?=} startIndex\n * @return {?}\n */\nfunction findEntryPositionByProp(context, prop, startIndex) {\n    for (let i = (startIndex || 0) + 1 /* PropertyOffset */; i < context.length; i += 3 /* Size */) {\n        /** @type {?} */\n        const thisProp = context[i];\n        if (thisProp == prop) {\n            return i - 1 /* PropertyOffset */;\n        }\n    }\n    return -1;\n}\n/**\n * @param {?} context\n * @param {?} indexA\n * @param {?} indexB\n * @return {?}\n */\nfunction swapMultiContextEntries(context, indexA, indexB) {\n    /** @type {?} */\n    const tmpValue = getValue(context, indexA);\n    /** @type {?} */\n    const tmpProp = getProp(context, indexA);\n    /** @type {?} */\n    const tmpFlag = getPointers(context, indexA);\n    /** @type {?} */\n    let flagA = tmpFlag;\n    /** @type {?} */\n    let flagB = getPointers(context, indexB);\n    /** @type {?} */\n    const singleIndexA = getMultiOrSingleIndex(flagA);\n    if (singleIndexA >= 0) {\n        /** @type {?} */\n        const _flag = getPointers(context, singleIndexA);\n        /** @type {?} */\n        const _initial = getInitialIndex(_flag);\n        setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n    }\n    /** @type {?} */\n    const singleIndexB = getMultiOrSingleIndex(flagB);\n    if (singleIndexB >= 0) {\n        /** @type {?} */\n        const _flag = getPointers(context, singleIndexB);\n        /** @type {?} */\n        const _initial = getInitialIndex(_flag);\n        setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n    }\n    setValue(context, indexA, getValue(context, indexB));\n    setProp(context, indexA, getProp(context, indexB));\n    setFlag(context, indexA, getPointers(context, indexB));\n    setValue(context, indexB, tmpValue);\n    setProp(context, indexB, tmpProp);\n    setFlag(context, indexB, tmpFlag);\n}\n/**\n * @param {?} context\n * @param {?} indexStartPosition\n * @return {?}\n */\nfunction updateSinglePointerValues(context, indexStartPosition) {\n    for (let i = indexStartPosition; i < context.length; i += 3 /* Size */) {\n        /** @type {?} */\n        const multiFlag = getPointers(context, i);\n        /** @type {?} */\n        const singleIndex = getMultiOrSingleIndex(multiFlag);\n        if (singleIndex > 0) {\n            /** @type {?} */\n            const singleFlag = getPointers(context, singleIndex);\n            /** @type {?} */\n            const initialIndexForSingle = getInitialIndex(singleFlag);\n            /** @type {?} */\n            const flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                (isClassBased(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n            /** @type {?} */\n            const updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n            setFlag(context, singleIndex, updatedFlag);\n        }\n    }\n}\n/**\n * @param {?} context\n * @param {?} index\n * @param {?} classBased\n * @param {?} name\n * @param {?} flag\n * @param {?} value\n * @return {?}\n */\nfunction insertNewMultiProperty(context, index, classBased, name, flag, value) {\n    /** @type {?} */\n    const doShift = index < context.length;\n    // prop does not exist in the list, add it in\n    context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value);\n    if (doShift) {\n        // because the value was inserted midway into the array then we\n        // need to update all the shifted multi values' single value\n        // pointers to point to the newly shifted location\n        updateSinglePointerValues(context, index + 3 /* Size */);\n    }\n}\n/**\n * @param {?} value\n * @param {?=} isClassBased\n * @return {?}\n */\nfunction valueExists(value, isClassBased) {\n    if (isClassBased) {\n        return value ? true : false;\n    }\n    return value !== null;\n}\n/**\n * @param {?} name\n * @param {?} isClassBased\n * @param {?=} sanitizer\n * @return {?}\n */\nfunction prepareInitialFlag(name, isClassBased, sanitizer) {\n    if (isClassBased) {\n        return 2 /* Class */;\n    }\n    else if (sanitizer && sanitizer(name)) {\n        return 4 /* Sanitize */;\n    }\n    return 0 /* None */;\n}\n/**\n * @param {?} flag\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction hasValueChanged(flag, a, b) {\n    /** @type {?} */\n    const isClassBased = flag & 2 /* Class */;\n    /** @type {?} */\n    const hasValues = a && b;\n    /** @type {?} */\n    const usesSanitizer = flag & 4 /* Sanitize */;\n    // the toString() comparison ensures that a value is checked\n    // ... otherwise (during sanitization bypassing) the === comparsion\n    // would fail since a new String() instance is created\n    if (!isClassBased && hasValues && usesSanitizer) {\n        // we know for sure we're dealing with strings at this point\n        return (/** @type {?} */ (a)).toString() !== (/** @type {?} */ (b)).toString();\n    }\n    // everything else is safe to check with a normal equality check\n    return a !== b;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Directive (D) sets a property on all component instances using this constant as a key and the\n * component's host node (LElement) as the value. This is used in methods like detectChanges to\n * facilitate jumping from an instance to the host node.\n  @type {?} */\nconst NG_HOST_SYMBOL = '__ngHostLNode__';\n/** *\n * A permanent marker promise which signifies that the current CD tree is\n * clean.\n  @type {?} */\nconst _CLEAN_PROMISE = Promise.resolve(null);\n/** *\n * Directive and element indices for top-level directive.\n *\n * Saved here to avoid re-instantiating an array on every change detection run.\n *\n * Note: Element is not actually stored at index 0 because of the LViewData\n * header, but the host bindings function expects an index that is NOT adjusted\n * because it will ultimately be fed to instructions like elementProperty.\n  @type {?} */\nconst _ROOT_DIRECTIVE_INDICES = [0, 0];\n/** *\n * TView.data needs to fill the same number of slots as the LViewData header\n * so the indices of nodes are consistent between LViewData and TView.data.\n *\n * It's much faster to keep a blueprint of the pre-filled array and slice it\n * than it is to create a new array and fill it each time a TView is created.\n  @type {?} */\nconst HEADER_FILLER = new Array(HEADER_OFFSET).fill(null);\n/** *\n * Token set in currentMatches while dependencies are being resolved.\n *\n * If we visit a directive that has a value set to CIRCULAR, we know we've\n * already seen it, and thus have a circular dependency.\n  @type {?} */\nconst CIRCULAR$2 = '__CIRCULAR__';\n/** *\n * This property gets set before entering a template.\n *\n * This renderer can be one of two varieties of Renderer3:\n *\n * - ObjectedOrientedRenderer3\n *\n * This is the native browser API style, e.g. operations are methods on individual objects\n * like HTMLElement. With this style, no additional code is needed as a facade (reducing payload\n * size).\n *\n * - ProceduralRenderer3\n *\n * In non-native browser environments (e.g. platforms such as web-workers), this is the facade\n * that enables element manipulation. This also facilitates backwards compatibility with\n * Renderer2.\n  @type {?} */\nlet renderer;\n/** @type {?} */\nlet rendererFactory;\n/** @type {?} */\nlet currentElementNode = null;\n/**\n * @return {?}\n */\nfunction getRenderer() {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return renderer;\n}\n/**\n * @return {?}\n */\nfunction getCurrentSanitizer() {\n    return viewData && viewData[SANITIZER];\n}\n/**\n * @return {?}\n */\nfunction getViewData() {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return viewData;\n}\n/** *\n * Used to set the parent property when nodes are created.\n  @type {?} */\nlet previousOrParentNode;\n/**\n * @return {?}\n */\nfunction getPreviousOrParentNode() {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return previousOrParentNode;\n}\n/** *\n * If `isParent` is:\n *  - `true`: then `previousOrParentNode` points to a parent node.\n *  - `false`: then `previousOrParentNode` points to previous node (sibling).\n  @type {?} */\nlet isParent;\n/** @type {?} */\nlet tView;\n/** @type {?} */\nlet currentQueries;\n/**\n * Query instructions can ask for \"current queries\" in 2 different cases:\n * - when creating view queries (at the root of a component view, before any node is created - in\n * this case currentQueries points to view queries)\n * - when creating content queries (inb this previousOrParentNode points to a node on which we\n * create content queries).\n * @param {?} QueryType\n * @return {?}\n */\nfunction getCurrentQueries(QueryType) {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return currentQueries ||\n        (currentQueries =\n            (previousOrParentNode.queries && previousOrParentNode.queries.clone() ||\n                new QueryType()));\n}\n/** *\n * This property gets set before entering a template.\n  @type {?} */\nlet creationMode;\n/**\n * @return {?}\n */\nfunction getCreationMode() {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return creationMode;\n}\n/** *\n * State of the current view being processed.\n *\n * An array of nodes (text, element, container, etc), pipes, their bindings, and\n * any local variables that need to be stored between invocations.\n  @type {?} */\nlet viewData;\n/** *\n * An array of directive instances in the current view.\n *\n * These must be stored separately from LNodes because their presence is\n * unknown at compile-time and thus space cannot be reserved in data[].\n  @type {?} */\nlet directives;\n/**\n * @param {?} view\n * @return {?}\n */\nfunction getCleanup(view) {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return view[CLEANUP] || (view[CLEANUP] = []);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction getTViewCleanup(view) {\n    return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n}\n/** *\n * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n *\n * Necessary to support ChangeDetectorRef.checkNoChanges().\n  @type {?} */\nlet checkNoChangesMode = false;\n/** *\n * Whether or not this is the first time the current view has been processed.\n  @type {?} */\nlet firstTemplatePass = true;\n/**\n * Swap the current state with a new state.\n *\n * For performance reasons we store the state in the top level of the module.\n * This way we minimize the number of properties to read. Whenever a new view\n * is entered we have to store the state for later, and when the view is\n * exited the state has to be restored\n *\n * @param {?} newView New state to become active\n * @param {?} host Element to which the View is a child of\n * @return {?} the previous state;\n */\nfunction enterView(newView, host) {\n    /** @type {?} */\n    const oldView = viewData;\n    directives = newView && newView[DIRECTIVES];\n    tView = newView && newView[TVIEW];\n    creationMode = newView && (newView[FLAGS] & 1 /* CreationMode */) === 1 /* CreationMode */;\n    firstTemplatePass = newView && tView.firstTemplatePass;\n    renderer = newView && newView[RENDERER];\n    if (host != null) {\n        previousOrParentNode = host;\n        isParent = true;\n    }\n    viewData = newView;\n    currentQueries = newView && newView[QUERIES];\n    return oldView;\n}\n/**\n * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n * the direction of traversal (up or down the view tree) a bit clearer.\n *\n * @param {?} newView New state to become active\n * @param {?=} creationOnly An optional boolean to indicate that the view was processed in creation mode\n * only, i.e. the first update will be done later. Only possible for dynamically created views.\n * @return {?}\n */\nfunction leaveView(newView, creationOnly) {\n    if (!creationOnly) {\n        if (!checkNoChangesMode) {\n            executeHooks(/** @type {?} */ ((directives)), tView.viewHooks, tView.viewCheckHooks, creationMode);\n        }\n        // Views are clean and in update mode after being checked, so these bits are cleared\n        viewData[FLAGS] &= ~(1 /* CreationMode */ | 4 /* Dirty */);\n    }\n    viewData[FLAGS] |= 16 /* RunInit */;\n    viewData[BINDING_INDEX] = -1;\n    enterView(newView, null);\n}\n/**\n * Refreshes the view, executing the following steps in that order:\n * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n * bindings,\n * refreshes child components.\n * Note: view hooks are triggered later when leaving the view.\n * @return {?}\n */\nfunction refreshView() {\n    if (!checkNoChangesMode) {\n        executeInitHooks(viewData, tView, creationMode);\n    }\n    refreshDynamicEmbeddedViews(viewData);\n    if (!checkNoChangesMode) {\n        executeHooks(/** @type {?} */ ((directives)), tView.contentHooks, tView.contentCheckHooks, creationMode);\n    }\n    // This needs to be set before children are processed to support recursive components\n    tView.firstTemplatePass = firstTemplatePass = false;\n    setHostBindings(tView.hostBindings);\n    refreshContentQueries(tView);\n    refreshChildComponents(tView.components);\n}\n/**\n * Sets the host bindings for the current view.\n * @param {?} bindings\n * @return {?}\n */\nfunction setHostBindings(bindings) {\n    if (bindings != null) {\n        /** @type {?} */\n        const defs = /** @type {?} */ ((tView.directives));\n        for (let i = 0; i < bindings.length; i += 2) {\n            /** @type {?} */\n            const dirIndex = bindings[i];\n            /** @type {?} */\n            const def = /** @type {?} */ (defs[dirIndex]);\n            def.hostBindings && def.hostBindings(dirIndex, bindings[i + 1]);\n        }\n    }\n}\n/**\n * Refreshes content queries for all directives in the given view.\n * @param {?} tView\n * @return {?}\n */\nfunction refreshContentQueries(tView) {\n    if (tView.contentQueries != null) {\n        for (let i = 0; i < tView.contentQueries.length; i += 2) {\n            /** @type {?} */\n            const directiveDefIdx = tView.contentQueries[i];\n            /** @type {?} */\n            const directiveDef = /** @type {?} */ ((tView.directives))[directiveDefIdx]; /** @type {?} */\n            ((directiveDef.contentQueriesRefresh))(directiveDefIdx, tView.contentQueries[i + 1]);\n        }\n    }\n}\n/**\n * Refreshes child components in the current view.\n * @param {?} components\n * @return {?}\n */\nfunction refreshChildComponents(components) {\n    if (components != null) {\n        for (let i = 0; i < components.length; i += 2) {\n            componentRefresh(components[i], components[i + 1]);\n        }\n    }\n}\n/**\n * @return {?}\n */\nfunction executeInitAndContentHooks() {\n    if (!checkNoChangesMode) {\n        executeInitHooks(viewData, tView, creationMode);\n        executeHooks(/** @type {?} */ ((directives)), tView.contentHooks, tView.contentCheckHooks, creationMode);\n    }\n}\n/**\n * @template T\n * @param {?} renderer\n * @param {?} tView\n * @param {?} context\n * @param {?} flags\n * @param {?=} sanitizer\n * @return {?}\n */\nfunction createLViewData(renderer, tView, context, flags, sanitizer) {\n    return [\n        tView,\n        viewData,\n        null,\n        null,\n        // queries\n        flags | 1 /* CreationMode */ | 8 /* Attached */ | 16 /* RunInit */,\n        /** @type {?} */ ((null)),\n        // hostNode\n        -1,\n        null,\n        null,\n        context,\n        // context\n        viewData && viewData[INJECTOR$1],\n        renderer,\n        // renderer\n        sanitizer || null,\n        null,\n        // tail\n        -1,\n        null,\n    ];\n}\n/**\n * Creation of LNode object is extracted to a separate function so we always create LNode object\n * with the same shape\n * (same properties assigned in the same order).\n * @param {?} type\n * @param {?} currentView\n * @param {?} parent\n * @param {?} native\n * @param {?} state\n * @param {?} queries\n * @return {?}\n */\nfunction createLNodeObject(type, currentView, parent, native, state, queries) {\n    return {\n        native: /** @type {?} */ (native),\n        view: currentView,\n        nodeInjector: parent ? parent.nodeInjector : null,\n        data: state,\n        queries: queries,\n        tNode: /** @type {?} */ ((null)),\n        dynamicLContainerNode: null\n    };\n}\n/**\n * @param {?} index\n * @param {?} type\n * @param {?} native\n * @param {?} name\n * @param {?} attrs\n * @param {?=} state\n * @return {?}\n */\nfunction createLNode(index, type, native, name, attrs, state) {\n    /** @type {?} */\n    const parent = isParent ? previousOrParentNode :\n        previousOrParentNode && /** @type {?} */ (((getParentLNode(previousOrParentNode))));\n    /** @type {?} */\n    const tParent = parent && parent.view === viewData ? /** @type {?} */ (parent.tNode) : null;\n    /** @type {?} */\n    let queries = (isParent ? currentQueries : previousOrParentNode && previousOrParentNode.queries) ||\n        parent && parent.queries && parent.queries.child();\n    /** @type {?} */\n    const isState = state != null;\n    /** @type {?} */\n    const node = createLNodeObject(type, viewData, parent, native, isState ? /** @type {?} */ (state) : null, queries);\n    if (index === -1 || type === 2 /* View */) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in TView.node.\n        node.tNode = (state ? (/** @type {?} */ (state))[TVIEW].node : null) ||\n            createTNode(type, index, null, null, tParent, null);\n    }\n    else {\n        /** @type {?} */\n        const adjustedIndex = index + HEADER_OFFSET;\n        // This is an element or container or projection node\n        ngDevMode && assertDataNext(adjustedIndex);\n        /** @type {?} */\n        const tData = tView.data;\n        viewData[adjustedIndex] = node;\n        // Every node adds a value to the static data array to avoid a sparse array\n        if (adjustedIndex >= tData.length) {\n            /** @type {?} */\n            const tNode = tData[adjustedIndex] =\n                createTNode(type, adjustedIndex, name, attrs, tParent, null);\n            if (!isParent && previousOrParentNode) {\n                /** @type {?} */\n                const previousTNode = previousOrParentNode.tNode;\n                previousTNode.next = tNode;\n                if (previousTNode.dynamicContainerNode)\n                    previousTNode.dynamicContainerNode.next = tNode;\n            }\n        }\n        node.tNode = /** @type {?} */ (tData[adjustedIndex]);\n        // Now link ourselves into the tree.\n        if (isParent) {\n            currentQueries = null;\n            if (previousOrParentNode.tNode.child == null && previousOrParentNode.view === viewData ||\n                previousOrParentNode.tNode.type === 2 /* View */) {\n                // We are in the same view, which means we are adding content node to the parent View.\n                previousOrParentNode.tNode.child = node.tNode;\n            }\n        }\n    }\n    // View nodes and host elements need to set their host node (components set host nodes later)\n    if ((type & 2 /* ViewOrElement */) === 2 /* ViewOrElement */ && isState) {\n        /** @type {?} */\n        const lViewData = /** @type {?} */ (state);\n        ngDevMode && assertNotDefined(lViewData[HOST_NODE], 'lViewData[HOST_NODE] should not have been initialized');\n        lViewData[HOST_NODE] = node;\n        if (firstTemplatePass)\n            lViewData[TVIEW].node = node.tNode;\n    }\n    previousOrParentNode = node;\n    isParent = true;\n    return node;\n}\n/**\n * Resets the application state.\n * @return {?}\n */\nfunction resetApplicationState() {\n    isParent = false;\n    previousOrParentNode = /** @type {?} */ ((null));\n}\n/**\n * Used for creating the LViewNode of a dynamic embedded view,\n * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n * @template T\n * @param {?} tView\n * @param {?} context\n * @param {?} renderer\n * @param {?=} queries\n * @return {?}\n */\nfunction createEmbeddedViewNode(tView, context, renderer, queries) {\n    /** @type {?} */\n    const _isParent = isParent;\n    /** @type {?} */\n    const _previousOrParentNode = previousOrParentNode;\n    isParent = true;\n    previousOrParentNode = /** @type {?} */ ((null));\n    /** @type {?} */\n    const lView = createLViewData(renderer, tView, context, 2 /* CheckAlways */, getCurrentSanitizer());\n    if (queries) {\n        lView[QUERIES] = queries.createView();\n    }\n    /** @type {?} */\n    const viewNode = createLNode(-1, 2 /* View */, null, null, null, lView);\n    isParent = _isParent;\n    previousOrParentNode = _previousOrParentNode;\n    return viewNode;\n}\n/**\n * Used for rendering embedded views (e.g. dynamically created views)\n *\n * Dynamically created views must store/retrieve their TViews differently from component views\n * because their template functions are nested in the template functions of their hosts, creating\n * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n * TView for dynamically created views on their host TNode, which only has one instance.\n * @template T\n * @param {?} viewNode\n * @param {?} tView\n * @param {?} context\n * @param {?} rf\n * @return {?}\n */\nfunction renderEmbeddedTemplate(viewNode, tView, context, rf) {\n    /** @type {?} */\n    const _isParent = isParent;\n    /** @type {?} */\n    const _previousOrParentNode = previousOrParentNode;\n    /** @type {?} */\n    let oldView;\n    if (/** @type {?} */ ((viewNode.data))[PARENT] == null && /** @type {?} */ ((viewNode.data))[CONTEXT] && !tView.template) {\n        // This is a root view inside the view tree\n        tickRootContext(/** @type {?} */ (((viewNode.data))[CONTEXT]));\n    }\n    else {\n        try {\n            isParent = true;\n            previousOrParentNode = /** @type {?} */ ((null));\n            oldView = enterView(/** @type {?} */ ((viewNode.data)), viewNode);\n            namespaceHTML(); /** @type {?} */\n            ((tView.template))(rf, context);\n            if (rf & 2 /* Update */) {\n                refreshView();\n            }\n            else {\n                /** @type {?} */ ((viewNode.data))[TVIEW].firstTemplatePass = firstTemplatePass = false;\n            }\n        }\n        finally {\n            /** @type {?} */\n            const isCreationOnly = (rf & 1 /* Create */) === 1 /* Create */;\n            leaveView(/** @type {?} */ ((oldView)), isCreationOnly);\n            isParent = _isParent;\n            previousOrParentNode = _previousOrParentNode;\n        }\n    }\n    return viewNode;\n}\n/**\n * @template T\n * @param {?} node\n * @param {?} hostView\n * @param {?} componentOrContext\n * @param {?=} template\n * @return {?}\n */\nfunction renderComponentOrTemplate(node, hostView, componentOrContext, template) {\n    /** @type {?} */\n    const oldView = enterView(hostView, node);\n    try {\n        if (rendererFactory.begin) {\n            rendererFactory.begin();\n        }\n        if (template) {\n            namespaceHTML();\n            template(getRenderFlags(hostView), /** @type {?} */ ((componentOrContext)));\n            refreshView();\n        }\n        else {\n            executeInitAndContentHooks();\n            // Element was stored at 0 in data and directive was stored at 0 in directives\n            // in renderComponent()\n            setHostBindings(_ROOT_DIRECTIVE_INDICES);\n            componentRefresh(0, HEADER_OFFSET);\n        }\n    }\n    finally {\n        if (rendererFactory.end) {\n            rendererFactory.end();\n        }\n        leaveView(oldView);\n    }\n}\n/**\n * This function returns the default configuration of rendering flags depending on when the\n * template is in creation mode or update mode. By default, the update block is run with the\n * creation block when the view is in creation mode. Otherwise, the update block is run\n * alone.\n *\n * Dynamically created views do NOT use this configuration (update block and create block are\n * always run separately).\n * @param {?} view\n * @return {?}\n */\nfunction getRenderFlags(view) {\n    return view[FLAGS] & 1 /* CreationMode */ ? 1 /* Create */ | 2 /* Update */ :\n        2 /* Update */;\n}\n/** @type {?} */\nlet _currentNamespace = null;\n/**\n * @return {?}\n */\nfunction namespaceSVG() {\n    _currentNamespace = 'http://www.w3.org/2000/svg/';\n}\n/**\n * @return {?}\n */\nfunction namespaceMathML() {\n    _currentNamespace = 'http://www.w3.org/1998/MathML/';\n}\n/**\n * @return {?}\n */\nfunction namespaceHTML() {\n    _currentNamespace = null;\n}\n/**\n * Creates an empty element using {\\@link elementStart} and {\\@link elementEnd}\n *\n * @param {?} index Index of the element in the data array\n * @param {?} name Name of the DOM Node\n * @param {?=} attrs Statically bound set of attributes to be written into the DOM element on creation.\n * @param {?=} localRefs A set of local reference bindings on the element.\n * @return {?}\n */\nfunction element(index, name, attrs, localRefs) {\n    elementStart(index, name, attrs, localRefs);\n    elementEnd();\n}\n/**\n * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n *\n * @param {?} index Index of the element in the LViewData array\n * @param {?} name Name of the DOM Node\n * @param {?=} attrs Statically bound set of attributes to be written into the DOM element on creation.\n * @param {?=} localRefs A set of local reference bindings on the element.\n *\n * Attributes and localRefs are passed as an array of strings where elements with an even index\n * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n * ['id', 'warning5', 'class', 'alert']\n * @return {?}\n */\nfunction elementStart(index, name, attrs, localRefs) {\n    ngDevMode &&\n        assertEqual(viewData[BINDING_INDEX], -1, 'elements should be created before any bindings');\n    ngDevMode && ngDevMode.rendererCreateElement++;\n    /** @type {?} */\n    const native = elementCreate(name);\n    ngDevMode && assertDataInRange(index - 1);\n    /** @type {?} */\n    const node = createLNode(index, 3 /* Element */, /** @type {?} */ ((native)), name, attrs || null, null);\n    currentElementNode = node;\n    if (attrs) {\n        setUpAttributes(native, attrs);\n    }\n    appendChild(getParentLNode(node), native, viewData);\n    createDirectivesAndLocals(localRefs);\n    return native;\n}\n/**\n * Creates a native element from a tag name, using a renderer.\n * @param {?} name the tag name\n * @param {?=} overriddenRenderer Optional A renderer to override the default one\n * @return {?} the element created\n */\nfunction elementCreate(name, overriddenRenderer) {\n    /** @type {?} */\n    let native;\n    /** @type {?} */\n    const rendererToUse = overriddenRenderer || renderer;\n    if (isProceduralRenderer(rendererToUse)) {\n        native = rendererToUse.createElement(name, _currentNamespace);\n    }\n    else {\n        if (_currentNamespace === null) {\n            native = rendererToUse.createElement(name);\n        }\n        else {\n            native = rendererToUse.createElementNS(_currentNamespace, name);\n        }\n    }\n    return native;\n}\n/**\n * Creates directive instances and populates local refs.\n *\n * @param {?=} localRefs Local refs of the current node\n * @return {?}\n */\nfunction createDirectivesAndLocals(localRefs) {\n    /** @type {?} */\n    const node = previousOrParentNode;\n    if (firstTemplatePass) {\n        ngDevMode && ngDevMode.firstTemplatePass++;\n        cacheMatchingDirectivesForNode(node.tNode, tView, localRefs || null);\n    }\n    else {\n        instantiateDirectivesDirectly();\n    }\n    saveResolvedLocalsInData();\n}\n/**\n * On first template pass, we match each node against available directive selectors and save\n * the resulting defs in the correct instantiation order for subsequent change detection runs\n * (so dependencies are always created before the directives that inject them).\n * @param {?} tNode\n * @param {?} tView\n * @param {?} localRefs\n * @return {?}\n */\nfunction cacheMatchingDirectivesForNode(tNode, tView, localRefs) {\n    /** @type {?} */\n    const exportsMap = localRefs ? { '': -1 } : null;\n    /** @type {?} */\n    const matches = tView.currentMatches = findDirectiveMatches(tNode);\n    if (matches) {\n        for (let i = 0; i < matches.length; i += 2) {\n            /** @type {?} */\n            const def = /** @type {?} */ (matches[i]);\n            /** @type {?} */\n            const valueIndex = i + 1;\n            resolveDirective(def, valueIndex, matches, tView);\n            saveNameToExportMap(/** @type {?} */ (matches[valueIndex]), def, exportsMap);\n        }\n    }\n    if (exportsMap)\n        cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n}\n/**\n * Matches the current node against all available selectors.\n * @param {?} tNode\n * @return {?}\n */\nfunction findDirectiveMatches(tNode) {\n    /** @type {?} */\n    const registry = tView.directiveRegistry;\n    /** @type {?} */\n    let matches = null;\n    if (registry) {\n        for (let i = 0; i < registry.length; i++) {\n            /** @type {?} */\n            const def = registry[i];\n            if (isNodeMatchingSelectorList(tNode, /** @type {?} */ ((def.selectors)))) {\n                if ((/** @type {?} */ (def)).template) {\n                    if (tNode.flags & 4096 /* isComponent */)\n                        throwMultipleComponentError(tNode);\n                    tNode.flags = 4096 /* isComponent */;\n                }\n                if (def.diPublic)\n                    def.diPublic(def);\n                (matches || (matches = [])).push(def, null);\n            }\n        }\n    }\n    return /** @type {?} */ (matches);\n}\n/**\n * @param {?} def\n * @param {?} valueIndex\n * @param {?} matches\n * @param {?} tView\n * @return {?}\n */\nfunction resolveDirective(def, valueIndex, matches, tView) {\n    if (matches[valueIndex] === null) {\n        matches[valueIndex] = CIRCULAR$2;\n        /** @type {?} */\n        const instance = def.factory();\n        (tView.directives || (tView.directives = [])).push(def);\n        return directiveCreate(matches[valueIndex] = /** @type {?} */ ((tView.directives)).length - 1, instance, def);\n    }\n    else if (matches[valueIndex] === CIRCULAR$2) {\n        // If we revisit this directive before it's resolved, we know it's circular\n        throwCyclicDependencyError(def.type);\n    }\n    return null;\n}\n/**\n * Stores index of component's host element so it will be queued for view refresh during CD.\n * @param {?} dirIndex\n * @return {?}\n */\nfunction queueComponentIndexForCheck(dirIndex) {\n    if (firstTemplatePass) {\n        (tView.components || (tView.components = [])).push(dirIndex, viewData.length - 1);\n    }\n}\n/**\n * Stores index of directive and host element so it will be queued for binding refresh during CD.\n * @param {?} dirIndex\n * @return {?}\n */\nfunction queueHostBindingForCheck(dirIndex) {\n    // Must subtract the header offset because hostBindings functions are generated with\n    // instructions that expect element indices that are NOT adjusted (e.g. elementProperty).\n    ngDevMode &&\n        assertEqual(firstTemplatePass, true, 'Should only be called in first template pass.');\n    (tView.hostBindings || (tView.hostBindings = [])).push(dirIndex, viewData.length - 1 - HEADER_OFFSET);\n}\n/**\n * Sets the context for a ChangeDetectorRef to the given instance.\n * @param {?} injector\n * @param {?} instance\n * @param {?} view\n * @return {?}\n */\nfunction initChangeDetectorIfExisting(injector, instance, view) {\n    if (injector && injector.changeDetectorRef != null) {\n        (/** @type {?} */ (injector.changeDetectorRef))._setComponentContext(view, instance);\n    }\n}\n/**\n * @param {?} tNode\n * @return {?}\n */\nfunction isComponent(tNode) {\n    return (tNode.flags & 4096 /* isComponent */) === 4096 /* isComponent */;\n}\n/**\n * This function instantiates the given directives.\n * @return {?}\n */\nfunction instantiateDirectivesDirectly() {\n    /** @type {?} */\n    const tNode = previousOrParentNode.tNode;\n    /** @type {?} */\n    const count = tNode.flags & 4095 /* DirectiveCountMask */;\n    if (count > 0) {\n        /** @type {?} */\n        const start = tNode.flags >> 14 /* DirectiveStartingIndexShift */;\n        /** @type {?} */\n        const end = start + count;\n        /** @type {?} */\n        const tDirectives = /** @type {?} */ ((tView.directives));\n        for (let i = start; i < end; i++) {\n            /** @type {?} */\n            const def = tDirectives[i];\n            directiveCreate(i, def.factory(), def);\n        }\n    }\n}\n/**\n * Caches local names and their matching directive indices for query and template lookups.\n * @param {?} tNode\n * @param {?} localRefs\n * @param {?} exportsMap\n * @return {?}\n */\nfunction cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n    if (localRefs) {\n        /** @type {?} */\n        const localNames = tNode.localNames = [];\n        // Local names must be stored in tNode in the same order that localRefs are defined\n        // in the template to ensure the data is loaded in the same slots as their refs\n        // in the template (for template queries).\n        for (let i = 0; i < localRefs.length; i += 2) {\n            /** @type {?} */\n            const index = exportsMap[localRefs[i + 1]];\n            if (index == null)\n                throw new Error(`Export of name '${localRefs[i + 1]}' not found!`);\n            localNames.push(localRefs[i], index);\n        }\n    }\n}\n/**\n * Builds up an export map as directives are created, so local refs can be quickly mapped\n * to their directive instances.\n * @param {?} index\n * @param {?} def\n * @param {?} exportsMap\n * @return {?}\n */\nfunction saveNameToExportMap(index, def, exportsMap) {\n    if (exportsMap) {\n        if (def.exportAs)\n            exportsMap[def.exportAs] = index;\n        if ((/** @type {?} */ (def)).template)\n            exportsMap[''] = index;\n    }\n}\n/**\n * Takes a list of local names and indices and pushes the resolved local variable values\n * to LViewData in the same order as they are loaded in the template with load().\n * @return {?}\n */\nfunction saveResolvedLocalsInData() {\n    /** @type {?} */\n    const localNames = previousOrParentNode.tNode.localNames;\n    if (localNames) {\n        for (let i = 0; i < localNames.length; i += 2) {\n            /** @type {?} */\n            const index = /** @type {?} */ (localNames[i + 1]);\n            /** @type {?} */\n            const value = index === -1 ? previousOrParentNode.native : /** @type {?} */ ((directives))[index];\n            viewData.push(value);\n        }\n    }\n}\n/**\n * Gets TView from a template function or creates a new TView\n * if it doesn't already exist.\n *\n * @param {?} template The template from which to get static data\n * @param {?} directives Directive defs that should be saved on TView\n * @param {?} pipes Pipe defs that should be saved on TView\n * @param {?} viewQuery\n * @return {?} TView\n */\nfunction getOrCreateTView(template, directives, pipes, viewQuery) {\n    // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n    // 1. It is a megamorphic call on each invocation.\n    // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n    //    outer template invocation, which means that no such property will exist\n    // Correct solution is to only put `ngPrivateData` on the Component template\n    // and not on embedded templates.\n    return template.ngPrivateData ||\n        (template.ngPrivateData = /** @type {?} */ (createTView(-1, template, directives, pipes, viewQuery)));\n}\n/**\n * Creates a TView instance\n *\n * @param {?} viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n * @param {?} template\n * @param {?} directives Registry of directives for this view\n * @param {?} pipes Registry of pipes for this view\n * @param {?} viewQuery\n * @return {?}\n */\nfunction createTView(viewIndex, template, directives, pipes, viewQuery) {\n    ngDevMode && ngDevMode.tView++;\n    return {\n        id: viewIndex,\n        template: template,\n        viewQuery: viewQuery,\n        node: /** @type {?} */ ((null)),\n        data: HEADER_FILLER.slice(),\n        // Fill in to match HEADER_OFFSET in LViewData\n        childIndex: -1,\n        // Children set in addToViewTree(), if any\n        bindingStartIndex: -1,\n        // Set in initBindings()\n        directives: null,\n        firstTemplatePass: true,\n        initHooks: null,\n        checkHooks: null,\n        contentHooks: null,\n        contentCheckHooks: null,\n        viewHooks: null,\n        viewCheckHooks: null,\n        destroyHooks: null,\n        pipeDestroyHooks: null,\n        cleanup: null,\n        hostBindings: null,\n        contentQueries: null,\n        components: null,\n        directiveRegistry: typeof directives === 'function' ? directives() : directives,\n        pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n        currentMatches: null\n    };\n}\n/**\n * @param {?} native\n * @param {?} attrs\n * @return {?}\n */\nfunction setUpAttributes(native, attrs) {\n    /** @type {?} */\n    const isProc = isProceduralRenderer(renderer);\n    /** @type {?} */\n    let i = 0;\n    while (i < attrs.length) {\n        /** @type {?} */\n        const attrName = attrs[i];\n        if (attrName === 1 /* SelectOnly */)\n            break;\n        if (attrName === NG_PROJECT_AS_ATTR_NAME) {\n            i += 2;\n        }\n        else {\n            ngDevMode && ngDevMode.rendererSetAttribute++;\n            if (attrName === 0 /* NamespaceURI */) {\n                /** @type {?} */\n                const namespaceURI = /** @type {?} */ (attrs[i + 1]);\n                /** @type {?} */\n                const attrName = /** @type {?} */ (attrs[i + 2]);\n                /** @type {?} */\n                const attrVal = /** @type {?} */ (attrs[i + 3]);\n                isProc ?\n                    (/** @type {?} */ (renderer))\n                        .setAttribute(native, attrName, attrVal, namespaceURI) :\n                    native.setAttributeNS(namespaceURI, attrName, attrVal);\n                i += 4;\n            }\n            else {\n                /** @type {?} */\n                const attrVal = attrs[i + 1];\n                isProc ?\n                    (/** @type {?} */ (renderer))\n                        .setAttribute(native, /** @type {?} */ (attrName), /** @type {?} */ (attrVal)) :\n                    native.setAttribute(/** @type {?} */ (attrName), /** @type {?} */ (attrVal));\n                i += 2;\n            }\n        }\n    }\n}\n/**\n * @param {?} text\n * @param {?} token\n * @return {?}\n */\nfunction createError(text, token) {\n    return new Error(`Renderer: ${text} [${stringify$1(token)}]`);\n}\n/**\n * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n *\n * @param {?} factory\n * @param {?} elementOrSelector Render element or CSS selector to locate the element.\n * @return {?}\n */\nfunction locateHostElement(factory, elementOrSelector) {\n    ngDevMode && assertDataInRange(-1);\n    rendererFactory = factory;\n    /** @type {?} */\n    const defaultRenderer = factory.createRenderer(null, null);\n    /** @type {?} */\n    const rNode = typeof elementOrSelector === 'string' ?\n        (isProceduralRenderer(defaultRenderer) ?\n            defaultRenderer.selectRootElement(elementOrSelector) :\n            defaultRenderer.querySelector(elementOrSelector)) :\n        elementOrSelector;\n    if (ngDevMode && !rNode) {\n        if (typeof elementOrSelector === 'string') {\n            throw createError('Host node with selector not found:', elementOrSelector);\n        }\n        else {\n            throw createError('Host node is required:', elementOrSelector);\n        }\n    }\n    return rNode;\n}\n/**\n * Creates the host LNode.\n *\n * @param {?} tag\n * @param {?} rNode Render host element.\n * @param {?} def ComponentDef\n *\n * @param {?=} sanitizer\n * @return {?} LElementNode created\n */\nfunction hostElement(tag, rNode, def, sanitizer) {\n    resetApplicationState();\n    /** @type {?} */\n    const node = createLNode(0, 3 /* Element */, rNode, null, null, createLViewData(renderer, getOrCreateTView(def.template, def.directiveDefs, def.pipeDefs, def.viewQuery), null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, sanitizer));\n    if (firstTemplatePass) {\n        node.tNode.flags = 4096 /* isComponent */;\n        if (def.diPublic)\n            def.diPublic(def);\n        tView.directives = [def];\n    }\n    return node;\n}\n/**\n * Adds an event listener to the current node.\n *\n * If an output exists on one of the node's directives, it also subscribes to the output\n * and saves the subscription for later cleanup.\n *\n * @param {?} eventName Name of the event\n * @param {?} listenerFn The function to be called when event emits\n * @param {?=} useCapture Whether or not to use capture in event listener.\n * @return {?}\n */\nfunction listener(eventName, listenerFn, useCapture = false) {\n    ngDevMode && assertPreviousIsParent();\n    /** @type {?} */\n    const node = previousOrParentNode;\n    /** @type {?} */\n    const native = /** @type {?} */ (node.native);\n    ngDevMode && ngDevMode.rendererAddEventListener++;\n    // In order to match current behavior, native DOM event listeners must be added for all\n    // events (including outputs).\n    if (isProceduralRenderer(renderer)) {\n        /** @type {?} */\n        const wrappedListener = wrapListenerWithDirtyLogic(viewData, listenerFn);\n        /** @type {?} */\n        const cleanupFn = renderer.listen(native, eventName, wrappedListener);\n        storeCleanupFn(viewData, cleanupFn);\n    }\n    else {\n        /** @type {?} */\n        const wrappedListener = wrapListenerWithDirtyAndDefault(viewData, listenerFn);\n        native.addEventListener(eventName, wrappedListener, useCapture);\n        /** @type {?} */\n        const cleanupInstances = getCleanup(viewData);\n        cleanupInstances.push(wrappedListener);\n        if (firstTemplatePass) {\n            getTViewCleanup(viewData).push(eventName, node.tNode.index, /** @type {?} */ ((cleanupInstances)).length - 1, useCapture);\n        }\n    }\n    /** @type {?} */\n    let tNode = node.tNode;\n    if (tNode.outputs === undefined) {\n        // if we create TNode here, inputs must be undefined so we know they still need to be\n        // checked\n        tNode.outputs = generatePropertyAliases(node.tNode.flags, 1 /* Output */);\n    }\n    /** @type {?} */\n    const outputs = tNode.outputs;\n    /** @type {?} */\n    let outputData;\n    if (outputs && (outputData = outputs[eventName])) {\n        createOutput(outputData, listenerFn);\n    }\n}\n/**\n * Iterates through the outputs associated with a particular event name and subscribes to\n * each output.\n * @param {?} outputs\n * @param {?} listener\n * @return {?}\n */\nfunction createOutput(outputs, listener) {\n    for (let i = 0; i < outputs.length; i += 2) {\n        ngDevMode && assertDataInRange(/** @type {?} */ (outputs[i]), /** @type {?} */ ((directives)));\n        /** @type {?} */\n        const subscription = /** @type {?} */ ((directives))[/** @type {?} */ (outputs[i])][outputs[i + 1]].subscribe(listener);\n        storeCleanupWithContext(viewData, subscription, subscription.unsubscribe);\n    }\n}\n/**\n * Saves context for this cleanup function in LView.cleanupInstances.\n *\n * On the first template pass, saves in TView:\n * - Cleanup function\n * - Index of context we just saved in LView.cleanupInstances\n * @param {?} view\n * @param {?} context\n * @param {?} cleanupFn\n * @return {?}\n */\nfunction storeCleanupWithContext(view, context, cleanupFn) {\n    if (!view)\n        view = viewData;\n    getCleanup(view).push(context);\n    if (view[TVIEW].firstTemplatePass) {\n        getTViewCleanup(view).push(cleanupFn, /** @type {?} */ ((view[CLEANUP])).length - 1);\n    }\n}\n/**\n * Saves the cleanup function itself in LView.cleanupInstances.\n *\n * This is necessary for functions that are wrapped with their contexts, like in renderer2\n * listeners.\n *\n * On the first template pass, the index of the cleanup function is saved in TView.\n * @param {?} view\n * @param {?} cleanupFn\n * @return {?}\n */\nfunction storeCleanupFn(view, cleanupFn) {\n    getCleanup(view).push(cleanupFn);\n    if (view[TVIEW].firstTemplatePass) {\n        getTViewCleanup(view).push(/** @type {?} */ ((view[CLEANUP])).length - 1, null);\n    }\n}\n/**\n * Mark the end of the element.\n * @return {?}\n */\nfunction elementEnd() {\n    if (isParent) {\n        isParent = false;\n    }\n    else {\n        ngDevMode && assertHasParent();\n        previousOrParentNode = /** @type {?} */ (getParentLNode(previousOrParentNode));\n    }\n    ngDevMode && assertNodeType(previousOrParentNode, 3 /* Element */);\n    /** @type {?} */\n    const queries = previousOrParentNode.queries;\n    queries && queries.addNode(previousOrParentNode);\n    queueLifecycleHooks(previousOrParentNode.tNode.flags, tView);\n    currentElementNode = null;\n}\n/**\n * Updates the value of removes an attribute on an Element.\n *\n * @param {?} index\n * @param {?} name name The name of the attribute.\n * @param {?} value value The attribute is removed when value is `null` or `undefined`.\n *                  Otherwise the attribute value is set to the stringified value.\n * @param {?=} sanitizer An optional function used to sanitize the value.\n * @return {?}\n */\nfunction elementAttribute(index, name, value, sanitizer) {\n    if (value !== NO_CHANGE) {\n        /** @type {?} */\n        const element = loadElement(index);\n        if (value == null) {\n            ngDevMode && ngDevMode.rendererRemoveAttribute++;\n            isProceduralRenderer(renderer) ? renderer.removeAttribute(element.native, name) :\n                element.native.removeAttribute(name);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererSetAttribute++;\n            /** @type {?} */\n            const strValue = sanitizer == null ? stringify$1(value) : sanitizer(value);\n            isProceduralRenderer(renderer) ? renderer.setAttribute(element.native, name, strValue) :\n                element.native.setAttribute(name, strValue);\n        }\n    }\n}\n/**\n * Update a property on an Element.\n *\n * If the property name also exists as an input property on one of the element's directives,\n * the component property will be set instead of the element property. This check must\n * be conducted at runtime so child components that add new \\@Inputs don't have to be re-compiled.\n *\n * @template T\n * @param {?} index The index of the element to update in the data array\n * @param {?} propName Name of property. Because it is going to DOM, this is not subject to\n *        renaming as part of minification.\n * @param {?} value New value to write.\n * @param {?=} sanitizer An optional function used to sanitize the value.\n * @return {?}\n */\nfunction elementProperty(index, propName, value, sanitizer) {\n    if (value === NO_CHANGE)\n        return;\n    /** @type {?} */\n    const node = /** @type {?} */ (loadElement(index));\n    /** @type {?} */\n    const tNode = node.tNode;\n    // if tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n    // yet been checked\n    if (tNode && tNode.inputs === undefined) {\n        // mark inputs as checked\n        tNode.inputs = generatePropertyAliases(node.tNode.flags, 0 /* Input */);\n    }\n    /** @type {?} */\n    const inputData = tNode && tNode.inputs;\n    /** @type {?} */\n    let dataValue;\n    if (inputData && (dataValue = inputData[propName])) {\n        setInputsForProperty(dataValue, value);\n        markDirtyIfOnPush(node);\n    }\n    else {\n        // It is assumed that the sanitizer is only added when the compiler determines that the property\n        // is risky, so sanitization can be done without further checks.\n        value = sanitizer != null ? (/** @type {?} */ (sanitizer(value))) : value;\n        /** @type {?} */\n        const native = node.native;\n        ngDevMode && ngDevMode.rendererSetProperty++;\n        isProceduralRenderer(renderer) ? renderer.setProperty(native, propName, value) :\n            (native.setProperty ? native.setProperty(propName, value) :\n                (/** @type {?} */ (native))[propName] = value);\n    }\n}\n/**\n * Constructs a TNode object from the arguments.\n *\n * @param {?} type The type of the node\n * @param {?} adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n * @param {?} tagName The tag name of the node\n * @param {?} attrs The attributes defined on this node\n * @param {?} parent The parent of this node\n * @param {?} tViews Any TViews attached to this node\n * @return {?} the TNode object\n */\nfunction createTNode(type, adjustedIndex, tagName, attrs, parent, tViews) {\n    ngDevMode && ngDevMode.tNode++;\n    return {\n        type: type,\n        index: adjustedIndex,\n        flags: 0,\n        tagName: tagName,\n        attrs: attrs,\n        localNames: null,\n        initialInputs: undefined,\n        inputs: undefined,\n        outputs: undefined,\n        tViews: tViews,\n        next: null,\n        child: null,\n        parent: parent,\n        dynamicContainerNode: null,\n        detached: null,\n        stylingTemplate: null,\n        projection: null\n    };\n}\n/**\n * Given a list of directive indices and minified input names, sets the\n * input properties on the corresponding directives.\n * @param {?} inputs\n * @param {?} value\n * @return {?}\n */\nfunction setInputsForProperty(inputs, value) {\n    for (let i = 0; i < inputs.length; i += 2) {\n        ngDevMode && assertDataInRange(/** @type {?} */ (inputs[i]), /** @type {?} */ ((directives))); /** @type {?} */\n        ((directives))[/** @type {?} */ (inputs[i])][inputs[i + 1]] = value;\n    }\n}\n/**\n * Consolidates all inputs or outputs of all directives on this logical node.\n *\n * @param {?} tNodeFlags\n * @param {?} direction\n * @return {?} PropertyAliases|null aggregate of all properties if any, `null` otherwise\n */\nfunction generatePropertyAliases(tNodeFlags, direction) {\n    /** @type {?} */\n    const count = tNodeFlags & 4095 /* DirectiveCountMask */;\n    /** @type {?} */\n    let propStore = null;\n    if (count > 0) {\n        /** @type {?} */\n        const start = tNodeFlags >> 14 /* DirectiveStartingIndexShift */;\n        /** @type {?} */\n        const end = start + count;\n        /** @type {?} */\n        const isInput = direction === 0 /* Input */;\n        /** @type {?} */\n        const defs = /** @type {?} */ ((tView.directives));\n        for (let i = start; i < end; i++) {\n            /** @type {?} */\n            const directiveDef = /** @type {?} */ (defs[i]);\n            /** @type {?} */\n            const propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n            for (let publicName in propertyAliasMap) {\n                if (propertyAliasMap.hasOwnProperty(publicName)) {\n                    propStore = propStore || {};\n                    /** @type {?} */\n                    const internalName = propertyAliasMap[publicName];\n                    /** @type {?} */\n                    const hasProperty = propStore.hasOwnProperty(publicName);\n                    hasProperty ? propStore[publicName].push(i, internalName) :\n                        (propStore[publicName] = [i, internalName]);\n                }\n            }\n        }\n    }\n    return propStore;\n}\n/**\n * Add or remove a class in a `classList` on a DOM element.\n *\n * This instruction is meant to handle the [class.foo]=\"exp\" case\n *\n * @template T\n * @param {?} index The index of the element to update in the data array\n * @param {?} stylingIndex\n * @param {?} value A value indicating if a given class should be added or removed.\n * @return {?}\n */\nfunction elementClassProp(index, stylingIndex, value) {\n    updateClassProp(getStylingContext(index), stylingIndex, value ? true : false);\n}\n/**\n * Assign any inline style values to the element during creation mode.\n *\n * This instruction is meant to be called during creation mode to apply all styling\n * (e.g. `style=\"...\"`) values to the element. This is also where the provided index\n * value is allocated for the styling details for its corresponding element (the element\n * index is the previous index value from this one).\n *\n * (Note this function calls `elementStylingApply` immediately when called.)\n *\n *\n * @template T\n * @param {?=} classDeclarations A key/value array of CSS classes that will be registered on the element.\n *   Each individual style will be used on the element as long as it is not overridden\n *   by any classes placed on the element by multiple (`[class]`) or singular (`[class.named]`)\n *   bindings. If a class binding changes its value to a falsy value then the matching initial\n *   class value that are passed in here will be applied to the element (if matched).\n * @param {?=} styleDeclarations A key/value array of CSS styles that will be registered on the element.\n *   Each individual style will be used on the element as long as it is not overridden\n *   by any styles placed on the element by multiple (`[style]`) or singular (`[style.prop]`)\n *   bindings. If a style binding changes its value to null then the initial styling\n *   values that are passed in here will be applied to the element (if matched).\n * @param {?=} styleSanitizer An optional sanitizer function that will be used (if provided)\n *   to sanitize the any CSS property values that are applied to the element (during rendering).\n * @return {?}\n */\nfunction elementStyling(classDeclarations, styleDeclarations, styleSanitizer) {\n    /** @type {?} */\n    const lElement = /** @type {?} */ ((currentElementNode));\n    /** @type {?} */\n    const tNode = lElement.tNode;\n    if (!tNode.stylingTemplate) {\n        // initialize the styling template.\n        tNode.stylingTemplate =\n            createStylingContextTemplate(classDeclarations, styleDeclarations, styleSanitizer);\n    }\n    if (styleDeclarations && styleDeclarations.length ||\n        classDeclarations && classDeclarations.length) {\n        elementStylingApply(tNode.index - HEADER_OFFSET);\n    }\n}\n/**\n * Retrieve the `StylingContext` at a given index.\n *\n * This method lazily creates the `StylingContext`. This is because in most cases\n * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n * which would create unnecessary memory pressure.\n *\n * @param {?} index Index of the style allocation. See: `elementStyling`.\n * @return {?}\n */\nfunction getStylingContext(index) {\n    /** @type {?} */\n    let stylingContext = load(index);\n    if (!Array.isArray(stylingContext)) {\n        /** @type {?} */\n        const lElement = /** @type {?} */ ((stylingContext));\n        /** @type {?} */\n        const tNode = lElement.tNode;\n        ngDevMode &&\n            assertDefined(tNode.stylingTemplate, 'getStylingContext() called before elementStyling()');\n        stylingContext = viewData[index + HEADER_OFFSET] =\n            allocStylingContext(lElement, /** @type {?} */ ((tNode.stylingTemplate)));\n    }\n    return stylingContext;\n}\n/**\n * Apply all styling values to the element which have been queued by any styling instructions.\n *\n * This instruction is meant to be run once one or more `elementStyle` and/or `elementStyleProp`\n * have been issued against the element. This function will also determine if any styles have\n * changed and will then skip the operation if there is nothing new to render.\n *\n * Once called then all queued styles will be flushed.\n *\n * @template T\n * @param {?} index Index of the element's styling storage that will be rendered.\n *        (Note that this is not the element index, but rather an index value allocated\n *        specifically for element styling--the index must be the next index after the element\n *        index.)\n * @return {?}\n */\nfunction elementStylingApply(index) {\n    renderStyling(getStylingContext(index), renderer);\n}\n/**\n * Queue a given style to be rendered on an Element.\n *\n * If the style value is `null` then it will be removed from the element\n * (or assigned a different value depending if there are any styles placed\n * on the element with `elementStyle` or any styles that are present\n * from when the element was created (with `elementStyling`).\n *\n * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n *\n * @template T\n * @param {?} index Index of the element's styling storage to change in the data array.\n *        (Note that this is not the element index, but rather an index value allocated\n *        specifically for element styling--the index must be the next index after the element\n *        index.)\n * @param {?} styleIndex Index of the style property on this element. (Monotonically increasing.)\n * @param {?} value New value to write (null to remove).\n * @param {?=} suffix Optional suffix. Used with scalar values to add unit such as `px`.\n *        Note that when a suffix is provided then the underlying sanitizer will\n *        be ignored.\n * @return {?}\n */\nfunction elementStyleProp(index, styleIndex, value, suffix) {\n    /** @type {?} */\n    let valueToAdd = null;\n    if (value) {\n        if (suffix) {\n            // when a suffix is applied then it will bypass\n            // sanitization entirely (b/c a new string is created)\n            valueToAdd = stringify$1(value) + suffix;\n        }\n        else {\n            // sanitization happens by dealing with a String value\n            // this means that the string value will be passed through\n            // into the style rendering later (which is where the value\n            // will be sanitized before it is applied)\n            valueToAdd = /** @type {?} */ ((value));\n        }\n    }\n    updateStyleProp(getStylingContext(index), styleIndex, valueToAdd);\n}\n/**\n * Queue a key/value map of styles to be rendered on an Element.\n *\n * This instruction is meant to handle the `[style]=\"exp\"` usage. When styles are applied to\n * the Element they will then be placed with respect to any styles set with `elementStyleProp`.\n * If any styles are set to `null` then they will be removed from the element (unless the same\n * style properties have been assigned to the element during creation using `elementStyling`).\n *\n * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n *\n * @template T\n * @param {?} index Index of the element's styling storage to change in the data array.\n *        (Note that this is not the element index, but rather an index value allocated\n *        specifically for element styling--the index must be the next index after the element\n *        index.)\n * @param {?} classes A key/value style map of CSS classes that will be added to the given element.\n *        Any missing classes (that have already been applied to the element beforehand) will be\n *        removed (unset) from the element's list of CSS classes.\n * @param {?=} styles A key/value style map of the styles that will be applied to the given element.\n *        Any missing styles (that have already been applied to the element beforehand) will be\n *        removed (unset) from the element's styling.\n * @return {?}\n */\nfunction elementStylingMap(index, classes, styles) {\n    updateStylingMap(getStylingContext(index), classes, styles);\n}\n/**\n * Create static text node\n *\n * @param {?} index Index of the node in the data array\n * @param {?=} value Value to write. This value will be stringified.\n * @return {?}\n */\nfunction text(index, value) {\n    ngDevMode &&\n        assertEqual(viewData[BINDING_INDEX], -1, 'text nodes should be created before bindings');\n    ngDevMode && ngDevMode.rendererCreateTextNode++;\n    /** @type {?} */\n    const textNode = createTextNode(value, renderer);\n    /** @type {?} */\n    const node = createLNode(index, 3 /* Element */, textNode, null, null);\n    // Text nodes are self closing.\n    isParent = false;\n    appendChild(getParentLNode(node), textNode, viewData);\n}\n/**\n * Create text node with binding\n * Bindings should be handled externally with the proper interpolation(1-8) method\n *\n * @template T\n * @param {?} index Index of the node in the data array.\n * @param {?} value Stringified value to write.\n * @return {?}\n */\nfunction textBinding(index, value) {\n    if (value !== NO_CHANGE) {\n        ngDevMode && assertDataInRange(index + HEADER_OFFSET);\n        /** @type {?} */\n        const existingNode = /** @type {?} */ ((loadElement(index)));\n        ngDevMode && assertDefined(existingNode, 'LNode should exist');\n        ngDevMode && assertDefined(existingNode.native, 'native element should exist');\n        ngDevMode && ngDevMode.rendererSetText++;\n        isProceduralRenderer(renderer) ? renderer.setValue(existingNode.native, stringify$1(value)) :\n            existingNode.native.textContent = stringify$1(value);\n    }\n}\n/**\n * Create a directive and their associated content queries.\n *\n * NOTE: directives can be created in order other than the index order. They can also\n *       be retrieved before they are created in which case the value will be null.\n *\n * @template T\n * @param {?} directiveDefIdx\n * @param {?} directive The directive instance.\n * @param {?} directiveDef DirectiveDef object which contains information about the template.\n * @return {?}\n */\nfunction directiveCreate(directiveDefIdx, directive, directiveDef) {\n    /** @type {?} */\n    const instance = baseDirectiveCreate(directiveDefIdx, directive, directiveDef);\n    ngDevMode && assertDefined(previousOrParentNode.tNode, 'previousOrParentNode.tNode');\n    /** @type {?} */\n    const tNode = previousOrParentNode.tNode;\n    /** @type {?} */\n    const isComponent = (/** @type {?} */ (directiveDef)).template;\n    if (isComponent) {\n        addComponentLogic(directiveDefIdx, directive, /** @type {?} */ (directiveDef));\n    }\n    if (firstTemplatePass) {\n        // Init hooks are queued now so ngOnInit is called in host components before\n        // any projected components.\n        queueInitHooks(directiveDefIdx, directiveDef.onInit, directiveDef.doCheck, tView);\n        if (directiveDef.hostBindings)\n            queueHostBindingForCheck(directiveDefIdx);\n    }\n    if (tNode && tNode.attrs) {\n        setInputsFromAttrs(directiveDefIdx, instance, directiveDef.inputs, tNode);\n    }\n    if (directiveDef.contentQueries) {\n        directiveDef.contentQueries();\n    }\n    return instance;\n}\n/**\n * @template T\n * @param {?} directiveIndex\n * @param {?} instance\n * @param {?} def\n * @return {?}\n */\nfunction addComponentLogic(directiveIndex, instance, def) {\n    /** @type {?} */\n    const tView = getOrCreateTView(def.template, def.directiveDefs, def.pipeDefs, def.viewQuery);\n    /** @type {?} */\n    const componentView = addToViewTree(viewData, /** @type {?} */ (previousOrParentNode.tNode.index), createLViewData(rendererFactory.createRenderer(/** @type {?} */ (previousOrParentNode.native), def.rendererType), tView, null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, getCurrentSanitizer()));\n    // We need to set the host node/data here because when the component LNode was created,\n    // we didn't yet know it was a component (just an element).\n    (/** @type {?} */ (previousOrParentNode)).data = componentView;\n    (/** @type {?} */ (componentView))[HOST_NODE] = /** @type {?} */ (previousOrParentNode);\n    initChangeDetectorIfExisting(previousOrParentNode.nodeInjector, instance, componentView);\n    if (firstTemplatePass)\n        queueComponentIndexForCheck(directiveIndex);\n}\n/**\n * A lighter version of directiveCreate() that is used for the root component\n *\n * This version does not contain features that we don't already support at root in\n * current Angular. Example: local refs and inputs on root component.\n * @template T\n * @param {?} index\n * @param {?} directive\n * @param {?} directiveDef\n * @return {?}\n */\nfunction baseDirectiveCreate(index, directive, directiveDef) {\n    ngDevMode &&\n        assertEqual(viewData[BINDING_INDEX], -1, 'directives should be created before any bindings');\n    ngDevMode && assertPreviousIsParent();\n    Object.defineProperty(directive, NG_HOST_SYMBOL, { enumerable: false, value: previousOrParentNode });\n    if (directives == null)\n        viewData[DIRECTIVES] = directives = [];\n    ngDevMode && assertDataNext(index, directives);\n    directives[index] = directive;\n    if (firstTemplatePass) {\n        /** @type {?} */\n        const flags = previousOrParentNode.tNode.flags;\n        if ((flags & 4095 /* DirectiveCountMask */) === 0) {\n            // When the first directive is created:\n            // - save the index,\n            // - set the number of directives to 1\n            previousOrParentNode.tNode.flags =\n                index << 14 /* DirectiveStartingIndexShift */ | flags & 4096 /* isComponent */ | 1;\n        }\n        else {\n            // Only need to bump the size when subsequent directives are created\n            ngDevMode && assertNotEqual(flags & 4095 /* DirectiveCountMask */, 4095 /* DirectiveCountMask */, 'Reached the max number of directives');\n            previousOrParentNode.tNode.flags++;\n        }\n    }\n    else {\n        /** @type {?} */\n        const diPublic = /** @type {?} */ ((directiveDef)).diPublic;\n        if (diPublic)\n            diPublic(/** @type {?} */ ((directiveDef)));\n    }\n    if (/** @type {?} */ ((directiveDef)).attributes != null && previousOrParentNode.tNode.type == 3 /* Element */) {\n        setUpAttributes((/** @type {?} */ (previousOrParentNode)).native, /** @type {?} */ (((directiveDef)).attributes));\n    }\n    return directive;\n}\n/**\n * Sets initial input properties on directive instances from attribute data\n *\n * @template T\n * @param {?} directiveIndex Index of the directive in directives array\n * @param {?} instance Instance of the directive on which to set the initial inputs\n * @param {?} inputs The list of inputs from the directive def\n * @param {?} tNode The static data for this node\n * @return {?}\n */\nfunction setInputsFromAttrs(directiveIndex, instance, inputs, tNode) {\n    /** @type {?} */\n    let initialInputData = /** @type {?} */ (tNode.initialInputs);\n    if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n        initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n    }\n    /** @type {?} */\n    const initialInputs = initialInputData[directiveIndex];\n    if (initialInputs) {\n        for (let i = 0; i < initialInputs.length; i += 2) {\n            (/** @type {?} */ (instance))[initialInputs[i]] = initialInputs[i + 1];\n        }\n    }\n}\n/**\n * Generates initialInputData for a node and stores it in the template's static storage\n * so subsequent template invocations don't have to recalculate it.\n *\n * initialInputData is an array containing values that need to be set as input properties\n * for directives on this node, but only once on creation. We need this array to support\n * the case where you set an \\@Input property of a directive using attribute-like syntax.\n * e.g. if you have a `name` \\@Input, you can set it once like this:\n *\n * <my-component name=\"Bess\"></my-component>\n *\n * @param {?} directiveIndex Index to store the initial input data\n * @param {?} inputs The list of inputs from the directive def\n * @param {?} tNode The static data on this node\n * @return {?}\n */\nfunction generateInitialInputs(directiveIndex, inputs, tNode) {\n    /** @type {?} */\n    const initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n    initialInputData[directiveIndex] = null;\n    /** @type {?} */\n    const attrs = /** @type {?} */ ((tNode.attrs));\n    /** @type {?} */\n    let i = 0;\n    while (i < attrs.length) {\n        /** @type {?} */\n        const attrName = attrs[i];\n        if (attrName === 1 /* SelectOnly */)\n            break;\n        if (attrName === 0 /* NamespaceURI */) {\n            // We do not allow inputs on namespaced attributes.\n            i += 4;\n            continue;\n        }\n        /** @type {?} */\n        const minifiedInputName = inputs[attrName];\n        /** @type {?} */\n        const attrValue = attrs[i + 1];\n        if (minifiedInputName !== undefined) {\n            /** @type {?} */\n            const inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n            inputsToStore.push(minifiedInputName, /** @type {?} */ (attrValue));\n        }\n        i += 2;\n    }\n    return initialInputData;\n}\n/**\n * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n *\n * @param {?} parentLNode the LNode in which the container's content will be rendered\n * @param {?} currentView The parent view of the LContainer\n * @param {?=} isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n * @return {?} LContainer\n */\nfunction createLContainer(parentLNode, currentView, isForViewContainerRef) {\n    ngDevMode && assertDefined(parentLNode, 'containers should have a parent');\n    /** @type {?} */\n    let renderParent = canInsertNativeNode(parentLNode, currentView) ? /** @type {?} */ (parentLNode) :\n        null;\n    if (renderParent && renderParent.tNode.type === 2 /* View */) {\n        renderParent = /** @type {?} */ ((getParentLNode(/** @type {?} */ (renderParent)))).data[RENDER_PARENT];\n    }\n    return [\n        isForViewContainerRef ? null : 0,\n        currentView,\n        null,\n        null,\n        // queries\n        [],\n        /** @type {?} */ (renderParent)\n    ];\n}\n/**\n * Creates an LContainerNode.\n *\n * Only `LViewNodes` can go into `LContainerNodes`.\n *\n * @param {?} index The index of the container in the data array\n * @param {?=} template Optional inline template\n * @param {?=} tagName The name of the container element, if applicable\n * @param {?=} attrs The attrs attached to the container, if applicable\n * @param {?=} localRefs A set of local reference bindings on the element.\n * @return {?}\n */\nfunction container(index, template, tagName, attrs, localRefs) {\n    ngDevMode &&\n        assertEqual(viewData[BINDING_INDEX], -1, 'container nodes should be created before any bindings');\n    /** @type {?} */\n    const currentParent = isParent ? previousOrParentNode : /** @type {?} */ ((getParentLNode(previousOrParentNode)));\n    /** @type {?} */\n    const lContainer = createLContainer(currentParent, viewData);\n    /** @type {?} */\n    const comment = renderer.createComment(ngDevMode ? 'container' : '');\n    /** @type {?} */\n    const node = createLNode(index, 0 /* Container */, comment, tagName || null, attrs || null, lContainer);\n    appendChild(getParentLNode(node), comment, viewData);\n    if (firstTemplatePass) {\n        node.tNode.tViews = template ?\n            createTView(-1, template, tView.directiveRegistry, tView.pipeRegistry, null) :\n            [];\n    }\n    // Containers are added to the current view tree instead of their embedded views\n    // because views can be removed and re-inserted.\n    addToViewTree(viewData, index + HEADER_OFFSET, node.data);\n    /** @type {?} */\n    const queries = node.queries;\n    if (queries) {\n        // prepare place for matching nodes from views inserted into a given container\n        lContainer[QUERIES] = queries.container();\n    }\n    createDirectivesAndLocals(localRefs);\n    isParent = false;\n    ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n    queries && queries.addNode(node); // check if a given container node matches\n    queueLifecycleHooks(node.tNode.flags, tView);\n}\n/**\n * Sets a container up to receive views.\n *\n * @param {?} index The index of the container in the data array\n * @return {?}\n */\nfunction containerRefreshStart(index) {\n    previousOrParentNode = /** @type {?} */ (loadElement(index));\n    ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n    isParent = true;\n    (/** @type {?} */ (previousOrParentNode)).data[ACTIVE_INDEX] = 0;\n    if (!checkNoChangesMode) {\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        executeInitHooks(viewData, tView, creationMode);\n    }\n}\n/**\n * Marks the end of the LContainerNode.\n *\n * Marking the end of LContainerNode is the time when to child Views get inserted or removed.\n * @return {?}\n */\nfunction containerRefreshEnd() {\n    if (isParent) {\n        isParent = false;\n    }\n    else {\n        ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n        ngDevMode && assertHasParent();\n        previousOrParentNode = /** @type {?} */ ((getParentLNode(previousOrParentNode)));\n    }\n    ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n    /** @type {?} */\n    const container = /** @type {?} */ (previousOrParentNode);\n    ngDevMode && assertNodeType(container, 0 /* Container */);\n    /** @type {?} */\n    const nextIndex = /** @type {?} */ ((container.data[ACTIVE_INDEX]));\n    // remove extra views at the end of the container\n    while (nextIndex < container.data[VIEWS].length) {\n        removeView(container, nextIndex);\n    }\n}\n/**\n * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n * by executing an associated template function.\n * @param {?} lViewData\n * @return {?}\n */\nfunction refreshDynamicEmbeddedViews(lViewData) {\n    for (let current = getLViewChild(lViewData); current !== null; current = current[NEXT]) {\n        // Note: current can be an LViewData or an LContainer instance, but here we are only interested\n        // in LContainer. We can tell it's an LContainer because its length is less than the LViewData\n        // header.\n        if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === null) {\n            /** @type {?} */\n            const container = /** @type {?} */ (current);\n            for (let i = 0; i < container[VIEWS].length; i++) {\n                /** @type {?} */\n                const lViewNode = container[VIEWS][i];\n                /** @type {?} */\n                const dynamicViewData = lViewNode.data;\n                ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                renderEmbeddedTemplate(lViewNode, dynamicViewData[TVIEW], /** @type {?} */ ((dynamicViewData[CONTEXT])), 2 /* Update */);\n            }\n        }\n    }\n}\n/**\n * Looks for a view with a given view block id inside a provided LContainer.\n * Removes views that need to be deleted in the process.\n *\n * @param {?} containerNode where to search for views\n * @param {?} startIdx starting index in the views array to search from\n * @param {?} viewBlockId exact view block id to look for\n * @return {?} index of a found view or -1 if not found\n */\nfunction scanForView(containerNode, startIdx, viewBlockId) {\n    /** @type {?} */\n    const views = containerNode.data[VIEWS];\n    for (let i = startIdx; i < views.length; i++) {\n        /** @type {?} */\n        const viewAtPositionId = views[i].data[TVIEW].id;\n        if (viewAtPositionId === viewBlockId) {\n            return views[i];\n        }\n        else if (viewAtPositionId < viewBlockId) {\n            // found a view that should not be at this position - remove\n            removeView(containerNode, i);\n        }\n        else {\n            // found a view with id greater than the one we are searching for\n            // which means that required view doesn't exist and can't be found at\n            // later positions in the views array - stop the search here\n            break;\n        }\n    }\n    return null;\n}\n/**\n * Marks the start of an embedded view.\n *\n * @param {?} viewBlockId The ID of this view\n * @return {?} boolean Whether or not this view is in creation mode\n */\nfunction embeddedViewStart(viewBlockId) {\n    /** @type {?} */\n    const container = /** @type {?} */ ((isParent ? previousOrParentNode : getParentLNode(previousOrParentNode)));\n    ngDevMode && assertNodeType(container, 0 /* Container */);\n    /** @type {?} */\n    const lContainer = container.data;\n    /** @type {?} */\n    let viewNode = scanForView(container, /** @type {?} */ ((lContainer[ACTIVE_INDEX])), viewBlockId);\n    if (viewNode) {\n        previousOrParentNode = viewNode;\n        ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n        isParent = true;\n        enterView(viewNode.data, viewNode);\n    }\n    else {\n        /** @type {?} */\n        const newView = createLViewData(renderer, getOrCreateEmbeddedTView(viewBlockId, container), null, 2 /* CheckAlways */, getCurrentSanitizer());\n        if (lContainer[QUERIES]) {\n            newView[QUERIES] = /** @type {?} */ ((lContainer[QUERIES])).createView();\n        }\n        enterView(newView, viewNode = createLNode(viewBlockId, 2 /* View */, null, null, null, newView));\n    }\n    if (container) {\n        if (creationMode) {\n            // it is a new view, insert it into collection of views for a given container\n            insertView(container, viewNode, /** @type {?} */ ((lContainer[ACTIVE_INDEX])));\n        } /** @type {?} */\n        ((lContainer[ACTIVE_INDEX]))++;\n    }\n    return getRenderFlags(viewNode.data);\n}\n/**\n * Initialize the TView (e.g. static data) for the active embedded view.\n *\n * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n * static data for a particular node would overwrite the static data for a node in the view above\n * it with the same index (since it's in the same template).\n *\n * @param {?} viewIndex The index of the TView in TNode.tViews\n * @param {?} parent The parent container in which to look for the view's static data\n * @return {?} TView\n */\nfunction getOrCreateEmbeddedTView(viewIndex, parent) {\n    ngDevMode && assertNodeType(parent, 0 /* Container */);\n    /** @type {?} */\n    const containerTViews = /** @type {?} */ ((/** @type {?} */ (((parent)).tNode)).tViews);\n    ngDevMode && assertDefined(containerTViews, 'TView expected');\n    ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n    if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n        containerTViews[viewIndex] =\n            createTView(viewIndex, null, tView.directiveRegistry, tView.pipeRegistry, null);\n    }\n    return containerTViews[viewIndex];\n}\n/**\n * Marks the end of an embedded view.\n * @return {?}\n */\nfunction embeddedViewEnd() {\n    refreshView();\n    isParent = false;\n    previousOrParentNode = /** @type {?} */ (viewData[HOST_NODE]);\n    leaveView(/** @type {?} */ ((viewData[PARENT])));\n    ngDevMode && assertEqual(isParent, false, 'isParent');\n    ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n}\n/**\n * Refreshes components by entering the component view and processing its bindings, queries, etc.\n *\n * @template T\n * @param {?} directiveIndex Directive index in LViewData[DIRECTIVES]\n * @param {?} adjustedElementIndex  Element index in LViewData[] (adjusted for HEADER_OFFSET)\n * @return {?}\n */\nfunction componentRefresh(directiveIndex, adjustedElementIndex) {\n    ngDevMode && assertDataInRange(adjustedElementIndex);\n    /** @type {?} */\n    const element = /** @type {?} */ (viewData[adjustedElementIndex]);\n    ngDevMode && assertNodeType(element, 3 /* Element */);\n    ngDevMode &&\n        assertDefined(element.data, `Component's host node should have an LViewData attached.`);\n    /** @type {?} */\n    const hostView = /** @type {?} */ ((element.data));\n    // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n    if (viewAttached(hostView) && hostView[FLAGS] & (2 /* CheckAlways */ | 4 /* Dirty */)) {\n        ngDevMode && assertDataInRange(directiveIndex, /** @type {?} */ ((directives)));\n        detectChangesInternal(hostView, element, /** @type {?} */ ((directives))[directiveIndex]);\n    }\n}\n/**\n * Returns a boolean for whether the view is attached\n * @param {?} view\n * @return {?}\n */\nfunction viewAttached(view) {\n    return (view[FLAGS] & 8 /* Attached */) === 8 /* Attached */;\n}\n/**\n * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n * It takes all the selectors from the entire component's template and decides where\n * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n * backed by a selector).\n *\n * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n * un-parsed form.\n *\n * The parsed form is needed for efficient matching of a node against a given CSS selector.\n * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n *\n * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n * drawbacks:\n * - having only a textual form would require runtime parsing of CSS selectors;\n * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n * template author).\n *\n * @param {?=} selectors A collection of parsed CSS selectors\n * @param {?=} textSelectors\n * @return {?}\n */\nfunction projectionDef(selectors, textSelectors) {\n    /** @type {?} */\n    const componentNode = findComponentHost(viewData);\n    if (!componentNode.tNode.projection) {\n        /** @type {?} */\n        const noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n        /** @type {?} */\n        const pData = componentNode.tNode.projection =\n            new Array(noOfNodeBuckets).fill(null);\n        /** @type {?} */\n        const tails = pData.slice();\n        /** @type {?} */\n        let componentChild = componentNode.tNode.child;\n        while (componentChild !== null) {\n            /** @type {?} */\n            const bucketIndex = selectors ? matchingSelectorIndex(componentChild, selectors, /** @type {?} */ ((textSelectors))) : 0;\n            /** @type {?} */\n            const nextNode = componentChild.next;\n            if (tails[bucketIndex]) {\n                /** @type {?} */ ((tails[bucketIndex])).next = componentChild;\n            }\n            else {\n                pData[bucketIndex] = componentChild;\n                componentChild.next = null;\n            }\n            tails[bucketIndex] = componentChild;\n            componentChild = nextNode;\n        }\n    }\n}\n/** *\n * Stack used to keep track of projection nodes in projection() instruction.\n *\n * This is deliberately created outside of projection() to avoid allocating\n * a new array each time the function is called. Instead the array will be\n * re-used by each invocation. This works because the function is not reentrant.\n  @type {?} */\nconst projectionNodeStack$1 = [];\n/**\n * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n * to the projectionDef instruction.\n *\n * @param {?} nodeIndex\n * @param {?=} selectorIndex\n * @param {?=} attrs\n * @return {?}\n */\nfunction projection(nodeIndex, selectorIndex = 0, attrs) {\n    /** @type {?} */\n    const node = createLNode(nodeIndex, 1 /* Projection */, null, null, attrs || null, null);\n    // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n    if (node.tNode.projection === null)\n        node.tNode.projection = selectorIndex;\n    // `<ng-content>` has no content\n    isParent = false;\n    /** @type {?} */\n    const parent = getParentLNode(node);\n    if (canInsertNativeNode(parent, viewData)) {\n        /** @type {?} */\n        const componentNode = findComponentHost(viewData);\n        /** @type {?} */\n        let nodeToProject = (/** @type {?} */ (componentNode.tNode.projection))[selectorIndex];\n        /** @type {?} */\n        let projectedView = componentNode.view;\n        /** @type {?} */\n        let projectionNodeIndex = -1;\n        /** @type {?} */\n        let grandparent;\n        /** @type {?} */\n        const renderParent = parent.tNode.type === 2 /* View */ ?\n            (grandparent = /** @type {?} */ (getParentLNode(parent))) &&\n                /** @type {?} */ ((grandparent.data[RENDER_PARENT])) : /** @type {?} */ (parent);\n        while (nodeToProject) {\n            if (nodeToProject.type === 1 /* Projection */) {\n                /** @type {?} */\n                const currentComponentHost = findComponentHost(projectedView);\n                /** @type {?} */\n                const firstProjectedNode = (/** @type {?} */ (currentComponentHost.tNode.projection))[/** @type {?} */ (nodeToProject.projection)];\n                if (firstProjectedNode) {\n                    projectionNodeStack$1[++projectionNodeIndex] = projectedView[nodeToProject.index];\n                    nodeToProject = firstProjectedNode;\n                    projectedView = currentComponentHost.view;\n                    continue;\n                }\n            }\n            else {\n                /** @type {?} */\n                const lNode = projectedView[nodeToProject.index];\n                lNode.tNode.flags |= 8192 /* isProjected */;\n                appendProjectedNode(/** @type {?} */ (lNode), parent, viewData, renderParent);\n            }\n            // If we are finished with a list of re-projected nodes, we need to get\n            // back to the root projection node that was re-projected.\n            if (nodeToProject.next === null && projectedView !== componentNode.view) {\n                /** @type {?} */\n                const lNode = projectionNodeStack$1[projectionNodeIndex--];\n                nodeToProject = lNode.tNode;\n                projectedView = lNode.view;\n            }\n            nodeToProject = nodeToProject.next;\n        }\n    }\n}\n/**\n * Adds LViewData or LContainer to the end of the current view tree.\n *\n * This structure will be used to traverse through nested views to remove listeners\n * and call onDestroy callbacks.\n *\n * @template T\n * @param {?} currentView The view where LViewData or LContainer should be added\n * @param {?} adjustedHostIndex Index of the view's host node in LViewData[], adjusted for header\n * @param {?} state The LViewData or LContainer to add to the view tree\n * @return {?} The state passed in\n */\nfunction addToViewTree(currentView, adjustedHostIndex, state) {\n    if (currentView[TAIL]) {\n        /** @type {?} */ ((currentView[TAIL]))[NEXT] = state;\n    }\n    else if (firstTemplatePass) {\n        tView.childIndex = adjustedHostIndex;\n    }\n    currentView[TAIL] = state;\n    return state;\n}\n/**\n * If node is an OnPush component, marks its LViewData dirty.\n * @param {?} node\n * @return {?}\n */\nfunction markDirtyIfOnPush(node) {\n    // Because data flows down the component tree, ancestors do not need to be marked dirty\n    if (node.data && !(node.data[FLAGS] & 2 /* CheckAlways */)) {\n        node.data[FLAGS] |= 4 /* Dirty */;\n    }\n}\n/**\n * Wraps an event listener so its host view and its ancestor views will be marked dirty\n * whenever the event fires. Necessary to support OnPush components.\n * @param {?} view\n * @param {?} listenerFn\n * @return {?}\n */\nfunction wrapListenerWithDirtyLogic(view, listenerFn) {\n    return function (e) {\n        markViewDirty(view);\n        return listenerFn(e);\n    };\n}\n/**\n * Wraps an event listener so its host view and its ancestor views will be marked dirty\n * whenever the event fires. Also wraps with preventDefault behavior.\n * @param {?} view\n * @param {?} listenerFn\n * @return {?}\n */\nfunction wrapListenerWithDirtyAndDefault(view, listenerFn) {\n    return function wrapListenerIn_markViewDirty(e) {\n        markViewDirty(view);\n        if (listenerFn(e) === false) {\n            e.preventDefault();\n            // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n            e.returnValue = false;\n        }\n    };\n}\n/**\n * Marks current view and all ancestors dirty\n * @param {?} view\n * @return {?}\n */\nfunction markViewDirty(view) {\n    /** @type {?} */\n    let currentView = view;\n    while (currentView[PARENT] != null) {\n        currentView[FLAGS] |= 4 /* Dirty */;\n        currentView = /** @type {?} */ ((currentView[PARENT]));\n    }\n    currentView[FLAGS] |= 4 /* Dirty */;\n    ngDevMode && assertDefined(currentView[CONTEXT], 'rootContext');\n    scheduleTick(/** @type {?} */ (currentView[CONTEXT]));\n}\n/**\n * Used to schedule change detection on the whole application.\n *\n * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n * It is usually called indirectly by calling `markDirty` when the view needs to be\n * re-rendered.\n *\n * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n * `scheduleTick` requests. The scheduling function can be overridden in\n * `renderComponent`'s `scheduler` option.\n * @template T\n * @param {?} rootContext\n * @return {?}\n */\nfunction scheduleTick(rootContext) {\n    if (rootContext.clean == _CLEAN_PROMISE) {\n        /** @type {?} */\n        let res;\n        rootContext.clean = new Promise((r) => res = r);\n        rootContext.scheduler(() => {\n            tickRootContext(rootContext); /** @type {?} */\n            ((res))(null);\n            rootContext.clean = _CLEAN_PROMISE;\n        });\n    }\n}\n/**\n * @param {?} rootContext\n * @return {?}\n */\nfunction tickRootContext(rootContext) {\n    for (let i = 0; i < rootContext.components.length; i++) {\n        /** @type {?} */\n        const rootComponent = rootContext.components[i];\n        /** @type {?} */\n        const hostNode = _getComponentHostLElementNode(rootComponent);\n        ngDevMode && assertDefined(hostNode.data, 'Component host node should be attached to an LView');\n        renderComponentOrTemplate(hostNode, getRootView(rootComponent), rootComponent);\n    }\n}\n/**\n * Retrieve the root view from any component by walking the parent `LViewData` until\n * reaching the root `LViewData`.\n *\n * @param {?} component any component\n * @return {?}\n */\nfunction getRootView(component) {\n    ngDevMode && assertDefined(component, 'component');\n    /** @type {?} */\n    const lElementNode = _getComponentHostLElementNode(component);\n    /** @type {?} */\n    let lViewData = lElementNode.view;\n    while (lViewData[PARENT]) {\n        lViewData = /** @type {?} */ ((lViewData[PARENT]));\n    }\n    return lViewData;\n}\n/**\n * Synchronously perform change detection on a component (and possibly its sub-components).\n *\n * This function triggers change detection in a synchronous way on a component. There should\n * be very little reason to call this function directly since a preferred way to do change\n * detection is to {\\@link markDirty} the component and wait for the scheduler to call this method\n * at some future point in time. This is because a single user action often results in many\n * components being invalidated and calling change detection on each component synchronously\n * would be inefficient. It is better to wait until all components are marked as dirty and\n * then perform single change detection across all of the components\n *\n * @template T\n * @param {?} component The component which the change detection should be performed on.\n * @return {?}\n */\nfunction detectChanges(component) {\n    /** @type {?} */\n    const hostNode = _getComponentHostLElementNode(component);\n    ngDevMode &&\n        assertDefined(hostNode.data, 'Component host node should be attached to an LViewData instance.');\n    detectChangesInternal(/** @type {?} */ (hostNode.data), hostNode, component);\n}\n/**\n * Checks the change detector and its children, and throws if any changes are detected.\n *\n * This is used in development mode to verify that running change detection doesn't\n * introduce other changes.\n * @template T\n * @param {?} component\n * @return {?}\n */\nfunction checkNoChanges(component) {\n    checkNoChangesMode = true;\n    try {\n        detectChanges(component);\n    }\n    finally {\n        checkNoChangesMode = false;\n    }\n}\n/**\n * Checks the view of the component provided. Does not gate on dirty checks or execute doCheck.\n * @template T\n * @param {?} hostView\n * @param {?} hostNode\n * @param {?} component\n * @return {?}\n */\nfunction detectChangesInternal(hostView, hostNode, component) {\n    /** @type {?} */\n    const oldView = enterView(hostView, hostNode);\n    /** @type {?} */\n    const hostTView = hostView[TVIEW];\n    /** @type {?} */\n    const template = /** @type {?} */ ((hostTView.template));\n    /** @type {?} */\n    const viewQuery = hostTView.viewQuery;\n    try {\n        namespaceHTML();\n        createViewQuery(viewQuery, hostView[FLAGS], component);\n        template(getRenderFlags(hostView), component);\n        refreshView();\n        updateViewQuery(viewQuery, component);\n    }\n    finally {\n        leaveView(oldView);\n    }\n}\n/**\n * @template T\n * @param {?} viewQuery\n * @param {?} flags\n * @param {?} component\n * @return {?}\n */\nfunction createViewQuery(viewQuery, flags, component) {\n    if (viewQuery && (flags & 1 /* CreationMode */)) {\n        viewQuery(1 /* Create */, component);\n    }\n}\n/**\n * @template T\n * @param {?} viewQuery\n * @param {?} component\n * @return {?}\n */\nfunction updateViewQuery(viewQuery, component) {\n    if (viewQuery) {\n        viewQuery(2 /* Update */, component);\n    }\n}\n/**\n * Mark the component as dirty (needing change detection).\n *\n * Marking a component dirty will schedule a change detection on this\n * component at some point in the future. Marking an already dirty\n * component as dirty is a noop. Only one outstanding change detection\n * can be scheduled per component tree. (Two components bootstrapped with\n * separate `renderComponent` will have separate schedulers)\n *\n * When the root component is bootstrapped with `renderComponent`, a scheduler\n * can be provided.\n *\n * @template T\n * @param {?} component Component to mark as dirty.\n * @return {?}\n */\nfunction markDirty(component) {\n    ngDevMode && assertDefined(component, 'component');\n    /** @type {?} */\n    const lElementNode = _getComponentHostLElementNode(component);\n    markViewDirty(lElementNode.view);\n}\n/** *\n * A special value which designates that a value has not changed.\n  @type {?} */\nconst NO_CHANGE = /** @type {?} */ ({});\n/**\n *  Initializes the binding start index. Will get inlined.\n *\n *  This function must be called before any binding related function is called\n *  (ie `bind()`, `interpolationX()`, `pureFunctionX()`)\n * @return {?}\n */\nfunction initBindings() {\n    ngDevMode && assertEqual(viewData[BINDING_INDEX], -1, 'Binding index should not yet be set ' + viewData[BINDING_INDEX]);\n    if (tView.bindingStartIndex === -1) {\n        tView.bindingStartIndex = viewData.length;\n    }\n    viewData[BINDING_INDEX] = tView.bindingStartIndex;\n}\n/**\n * Creates a single value binding.\n *\n * @template T\n * @param {?} value Value to diff\n * @return {?}\n */\nfunction bind(value) {\n    return bindingUpdated(value) ? value : NO_CHANGE;\n}\n/**\n * Reserves slots for pure functions (`pureFunctionX` instructions)\n *\n * Bindings for pure functions are stored after the LNodes in the data array but before the binding.\n *\n *  ----------------------------------------------------------------------------\n *  |  LNodes ... | pure function bindings | regular bindings / interpolations |\n *  ----------------------------------------------------------------------------\n *                                         ^\n *                                         TView.bindingStartIndex\n *\n * Pure function instructions are given an offset from TView.bindingStartIndex.\n * Subtracting the offset from TView.bindingStartIndex gives the first index where the bindings\n * are stored.\n *\n * NOTE: reserveSlots instructions are only ever allowed at the very end of the creation block\n * @param {?} numSlots\n * @return {?}\n */\nfunction reserveSlots(numSlots) {\n    // Init the slots with a unique `NO_CHANGE` value so that the first change is always detected\n    // whether it happens or not during the first change detection pass - pure functions checks\n    // might be skipped when short-circuited.\n    viewData.length += numSlots;\n    viewData.fill(NO_CHANGE, -numSlots);\n    // We need to initialize the binding in case a `pureFunctionX` kind of binding instruction is\n    // called first in the update section.\n    initBindings();\n}\n/**\n * Sets up the binding index before executing any `pureFunctionX` instructions.\n *\n * The index must be restored after the pure function is executed\n *\n * {\\@link reserveSlots}\n * @param {?} offset\n * @return {?}\n */\nfunction moveBindingIndexToReservedSlot(offset) {\n    /** @type {?} */\n    const currentSlot = viewData[BINDING_INDEX];\n    viewData[BINDING_INDEX] = tView.bindingStartIndex - offset;\n    return currentSlot;\n}\n/**\n * Restores the binding index to the given value.\n *\n * This function is typically used to restore the index after a `pureFunctionX` has\n * been executed.\n * @param {?} index\n * @return {?}\n */\nfunction restoreBindingIndex(index) {\n    viewData[BINDING_INDEX] = index;\n}\n/**\n * Create interpolation bindings with a variable number of expressions.\n *\n * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n * Those are faster because there is no need to create an array of expressions and iterate over it.\n *\n * `values`:\n * - has static text at even indexes,\n * - has evaluated expressions at odd indexes.\n *\n * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n * @param {?} values\n * @return {?}\n */\nfunction interpolationV(values) {\n    ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n    ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n    /** @type {?} */\n    let different = false;\n    for (let i = 1; i < values.length; i += 2) {\n        // Check if bindings (odd indexes) have changed\n        bindingUpdated(values[i]) && (different = true);\n    }\n    if (!different) {\n        return NO_CHANGE;\n    }\n    /** @type {?} */\n    let content = values[0];\n    for (let i = 1; i < values.length; i += 2) {\n        content += stringify$1(values[i]) + values[i + 1];\n    }\n    return content;\n}\n/**\n * Creates an interpolation binding with 1 expression.\n *\n * @param {?} prefix static value used for concatenation only.\n * @param {?} v0 value checked for change.\n * @param {?} suffix static value used for concatenation only.\n * @return {?}\n */\nfunction interpolation1(prefix, v0, suffix) {\n    /** @type {?} */\n    const different = bindingUpdated(v0);\n    return different ? prefix + stringify$1(v0) + suffix : NO_CHANGE;\n}\n/**\n * Creates an interpolation binding with 2 expressions.\n * @param {?} prefix\n * @param {?} v0\n * @param {?} i0\n * @param {?} v1\n * @param {?} suffix\n * @return {?}\n */\nfunction interpolation2(prefix, v0, i0, v1, suffix) {\n    /** @type {?} */\n    const different = bindingUpdated2(v0, v1);\n    return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n}\n/**\n * Creates an interpolation binding with 3 expressions.\n * @param {?} prefix\n * @param {?} v0\n * @param {?} i0\n * @param {?} v1\n * @param {?} i1\n * @param {?} v2\n * @param {?} suffix\n * @return {?}\n */\nfunction interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n    /** @type {?} */\n    let different = bindingUpdated2(v0, v1);\n    different = bindingUpdated(v2) || different;\n    return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n        NO_CHANGE;\n}\n/**\n * Create an interpolation binding with 4 expressions.\n * @param {?} prefix\n * @param {?} v0\n * @param {?} i0\n * @param {?} v1\n * @param {?} i1\n * @param {?} v2\n * @param {?} i2\n * @param {?} v3\n * @param {?} suffix\n * @return {?}\n */\nfunction interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n    /** @type {?} */\n    const different = bindingUpdated4(v0, v1, v2, v3);\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n            suffix :\n        NO_CHANGE;\n}\n/**\n * Creates an interpolation binding with 5 expressions.\n * @param {?} prefix\n * @param {?} v0\n * @param {?} i0\n * @param {?} v1\n * @param {?} i1\n * @param {?} v2\n * @param {?} i2\n * @param {?} v3\n * @param {?} i3\n * @param {?} v4\n * @param {?} suffix\n * @return {?}\n */\nfunction interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n    /** @type {?} */\n    let different = bindingUpdated4(v0, v1, v2, v3);\n    different = bindingUpdated(v4) || different;\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n            stringify$1(v4) + suffix :\n        NO_CHANGE;\n}\n/**\n * Creates an interpolation binding with 6 expressions.\n * @param {?} prefix\n * @param {?} v0\n * @param {?} i0\n * @param {?} v1\n * @param {?} i1\n * @param {?} v2\n * @param {?} i2\n * @param {?} v3\n * @param {?} i3\n * @param {?} v4\n * @param {?} i4\n * @param {?} v5\n * @param {?} suffix\n * @return {?}\n */\nfunction interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n    /** @type {?} */\n    let different = bindingUpdated4(v0, v1, v2, v3);\n    different = bindingUpdated2(v4, v5) || different;\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n            stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n        NO_CHANGE;\n}\n/**\n * Creates an interpolation binding with 7 expressions.\n * @param {?} prefix\n * @param {?} v0\n * @param {?} i0\n * @param {?} v1\n * @param {?} i1\n * @param {?} v2\n * @param {?} i2\n * @param {?} v3\n * @param {?} i3\n * @param {?} v4\n * @param {?} i4\n * @param {?} v5\n * @param {?} i5\n * @param {?} v6\n * @param {?} suffix\n * @return {?}\n */\nfunction interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n    /** @type {?} */\n    let different = bindingUpdated4(v0, v1, v2, v3);\n    different = bindingUpdated2(v4, v5) || different;\n    different = bindingUpdated(v6) || different;\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n            stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n        NO_CHANGE;\n}\n/**\n * Creates an interpolation binding with 8 expressions.\n * @param {?} prefix\n * @param {?} v0\n * @param {?} i0\n * @param {?} v1\n * @param {?} i1\n * @param {?} v2\n * @param {?} i2\n * @param {?} v3\n * @param {?} i3\n * @param {?} v4\n * @param {?} i4\n * @param {?} v5\n * @param {?} i5\n * @param {?} v6\n * @param {?} i6\n * @param {?} v7\n * @param {?} suffix\n * @return {?}\n */\nfunction interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n    /** @type {?} */\n    let different = bindingUpdated4(v0, v1, v2, v3);\n    different = bindingUpdated4(v4, v5, v6, v7) || different;\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n            stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n        NO_CHANGE;\n}\n/**\n * Store a value in the `data` at a given `index`.\n * @template T\n * @param {?} index\n * @param {?} value\n * @return {?}\n */\nfunction store(index, value) {\n    /** @type {?} */\n    const adjustedIndex = index + HEADER_OFFSET;\n    if (adjustedIndex >= tView.data.length) {\n        tView.data[adjustedIndex] = null;\n    }\n    viewData[adjustedIndex] = value;\n}\n/**\n * Retrieves a value from the `directives` array.\n * @template T\n * @param {?} index\n * @return {?}\n */\nfunction loadDirective(index) {\n    ngDevMode && assertDefined(directives, 'Directives array should be defined if reading a dir.');\n    ngDevMode && assertDataInRange(index, /** @type {?} */ ((directives)));\n    return /** @type {?} */ ((directives))[index];\n}\n/**\n * @template T\n * @param {?} queryListIdx\n * @return {?}\n */\nfunction loadQueryList(queryListIdx) {\n    ngDevMode && assertDefined(viewData[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n    ngDevMode && assertDataInRange(queryListIdx, /** @type {?} */ ((viewData[CONTENT_QUERIES])));\n    return /** @type {?} */ ((viewData[CONTENT_QUERIES]))[queryListIdx];\n}\n/**\n * Retrieves a value from current `viewData`.\n * @template T\n * @param {?} index\n * @return {?}\n */\nfunction load(index) {\n    return loadInternal(index, viewData);\n}\n/**\n * @param {?} index\n * @return {?}\n */\nfunction loadElement(index) {\n    return loadElementInternal(index, viewData);\n}\n/**\n * Gets the current binding value and increments the binding index.\n * @return {?}\n */\nfunction consumeBinding() {\n    ngDevMode && assertDataInRange(viewData[BINDING_INDEX]);\n    ngDevMode &&\n        assertNotEqual(viewData[viewData[BINDING_INDEX]], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n    return viewData[viewData[BINDING_INDEX]++];\n}\n/**\n * Updates binding if changed, then returns whether it was updated.\n * @param {?} value\n * @return {?}\n */\nfunction bindingUpdated(value) {\n    ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n    if (viewData[BINDING_INDEX] === -1)\n        initBindings();\n    /** @type {?} */\n    const bindingIndex = viewData[BINDING_INDEX];\n    if (bindingIndex >= viewData.length) {\n        viewData[viewData[BINDING_INDEX]++] = value;\n    }\n    else if (isDifferent(viewData[bindingIndex], value)) {\n        throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, viewData[bindingIndex], value);\n        viewData[viewData[BINDING_INDEX]++] = value;\n    }\n    else {\n        viewData[BINDING_INDEX]++;\n        return false;\n    }\n    return true;\n}\n/**\n * Updates binding if changed, then returns the latest value.\n * @param {?} value\n * @return {?}\n */\nfunction checkAndUpdateBinding$1(value) {\n    bindingUpdated(value);\n    return value;\n}\n/**\n * Updates 2 bindings if changed, then returns whether either was updated.\n * @param {?} exp1\n * @param {?} exp2\n * @return {?}\n */\nfunction bindingUpdated2(exp1, exp2) {\n    /** @type {?} */\n    const different = bindingUpdated(exp1);\n    return bindingUpdated(exp2) || different;\n}\n/**\n * Updates 4 bindings if changed, then returns whether any was updated.\n * @param {?} exp1\n * @param {?} exp2\n * @param {?} exp3\n * @param {?} exp4\n * @return {?}\n */\nfunction bindingUpdated4(exp1, exp2, exp3, exp4) {\n    /** @type {?} */\n    const different = bindingUpdated2(exp1, exp2);\n    return bindingUpdated2(exp3, exp4) || different;\n}\n/**\n * @return {?}\n */\nfunction getTView() {\n    return tView;\n}\n/**\n * Registers a QueryList, associated with a content query, for later refresh (part of a view\n * refresh).\n * @template Q\n * @param {?} queryList\n * @return {?}\n */\nfunction registerContentQuery(queryList) {\n    /** @type {?} */\n    const savedContentQueriesLength = (viewData[CONTENT_QUERIES] || (viewData[CONTENT_QUERIES] = [])).push(queryList);\n    if (firstTemplatePass) {\n        /** @type {?} */\n        const currentDirectiveIndex = /** @type {?} */ ((directives)).length - 1;\n        /** @type {?} */\n        const tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n        /** @type {?} */\n        const lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 2] : -1;\n        if (currentDirectiveIndex !== lastSavedDirectiveIndex) {\n            tViewContentQueries.push(currentDirectiveIndex, savedContentQueriesLength - 1);\n        }\n    }\n}\n/**\n * @return {?}\n */\nfunction assertPreviousIsParent() {\n    assertEqual(isParent, true, 'previousOrParentNode should be a parent');\n}\n/**\n * @return {?}\n */\nfunction assertHasParent() {\n    assertDefined(getParentLNode(previousOrParentNode), 'previousOrParentNode should have a parent');\n}\n/**\n * @param {?} index\n * @param {?=} arr\n * @return {?}\n */\nfunction assertDataInRange(index, arr) {\n    if (arr == null)\n        arr = viewData;\n    assertDataInRangeInternal(index, arr || viewData);\n}\n/**\n * @param {?} index\n * @param {?=} arr\n * @return {?}\n */\nfunction assertDataNext(index, arr) {\n    if (arr == null)\n        arr = viewData;\n    assertEqual(arr.length, index, `index ${index} expected to be at the end of arr (length ${arr.length})`);\n}\n/**\n * On the first template pass, the reserved slots should be set `NO_CHANGE`.\n *\n * If not, they might not have been actually reserved.\n * @param {?} slotOffset\n * @param {?} numSlots\n * @return {?}\n */\nfunction assertReservedSlotInitialized(slotOffset, numSlots) {\n    if (firstTemplatePass) {\n        /** @type {?} */\n        const startIndex = tView.bindingStartIndex - slotOffset;\n        for (let i = 0; i < numSlots; i++) {\n            assertEqual(viewData[startIndex + i], NO_CHANGE, 'The reserved slots should be set to `NO_CHANGE` on first template pass');\n        }\n    }\n}\n/**\n * @template T\n * @param {?} component\n * @return {?}\n */\nfunction _getComponentHostLElementNode(component) {\n    ngDevMode && assertDefined(component, 'expecting component got null');\n    /** @type {?} */\n    const lElementNode = /** @type {?} */ ((/** @type {?} */ (component))[NG_HOST_SYMBOL]);\n    ngDevMode && assertDefined(component, 'object is not a component');\n    return lElementNode;\n}\n/** @type {?} */\nconst CLEAN_PROMISE = _CLEAN_PROMISE;\n/** @type {?} */\nconst ROOT_DIRECTIVE_INDICES = _ROOT_DIRECTIVE_INDICES;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Bootstraps a Component into an existing host element and returns an instance\n * of the component.\n *\n * Use this function to bootstrap a component into the DOM tree. Each invocation\n * of this function will create a separate tree of components, injectors and\n * change detection cycles and lifetimes. To dynamically insert a new component\n * into an existing tree such that it shares the same injection, change detection\n * and object lifetime, use {\\@link ViewContainer#createComponent}.\n *\n * @template T\n * @param {?} componentType Component to bootstrap\n * @param {?=} opts\n * @return {?}\n */\nfunction renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts = {}) {\n    ngDevMode && assertComponentType(componentType);\n    /** @type {?} */\n    const rendererFactory = opts.rendererFactory || domRendererFactory3;\n    /** @type {?} */\n    const sanitizer = opts.sanitizer || null;\n    /** @type {?} */\n    const componentDef = /** @type {?} */ ((/** @type {?} */ (componentType)).ngComponentDef);\n    if (componentDef.type != componentType)\n        componentDef.type = componentType;\n    /** @type {?} */\n    let component;\n    /** @type {?} */\n    const componentTag = /** @type {?} */ (((/** @type {?} */ ((componentDef.selectors))[0]))[0]);\n    /** @type {?} */\n    const hostNode = locateHostElement(rendererFactory, opts.host || componentTag);\n    /** @type {?} */\n    const rootContext = createRootContext(opts.scheduler || requestAnimationFrame.bind(window));\n    /** @type {?} */\n    const rootView = createLViewData(rendererFactory.createRenderer(hostNode, componentDef.rendererType), createTView(-1, null, null, null, null), rootContext, componentDef.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */);\n    rootView[INJECTOR$1] = opts.injector || null;\n    /** @type {?} */\n    const oldView = enterView(rootView, /** @type {?} */ ((null)));\n    /** @type {?} */\n    let elementNode;\n    try {\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        // Create element node at index 0 in data array\n        elementNode = hostElement(componentTag, hostNode, componentDef, sanitizer);\n        // Create directive instance with factory() and store at index 0 in directives array\n        rootContext.components.push(component = /** @type {?} */ (baseDirectiveCreate(0, componentDef.factory(), componentDef)));\n        initChangeDetectorIfExisting(elementNode.nodeInjector, component, /** @type {?} */ ((elementNode.data)));\n        opts.hostFeatures && opts.hostFeatures.forEach((feature) => feature(component, componentDef));\n        executeInitAndContentHooks();\n        setHostBindings(ROOT_DIRECTIVE_INDICES);\n        detectChangesInternal(/** @type {?} */ (elementNode.data), elementNode, component);\n    }\n    finally {\n        leaveView(oldView);\n        if (rendererFactory.end)\n            rendererFactory.end();\n    }\n    return component;\n}\n/**\n * @param {?} scheduler\n * @return {?}\n */\nfunction createRootContext(scheduler) {\n    return {\n        components: [],\n        scheduler: scheduler,\n        clean: CLEAN_PROMISE,\n    };\n}\n/**\n * Used to enable lifecycle hooks on the root component.\n *\n * Include this feature when calling `renderComponent` if the root component\n * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n * be called properly.\n *\n * Example:\n *\n * ```\n * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n * ```\n * @param {?} component\n * @param {?} def\n * @return {?}\n */\nfunction LifecycleHooksFeature(component, def) {\n    /** @type {?} */\n    const elementNode = _getComponentHostLElementNode(component);\n    /** @type {?} */\n    const tView = elementNode.view[TVIEW];\n    queueInitHooks(0, def.onInit, def.doCheck, tView);\n    queueLifecycleHooks(elementNode.tNode.flags, tView);\n}\n/**\n * Retrieve the root context for any component by walking the parent `LView` until\n * reaching the root `LView`.\n *\n * @param {?} component any component\n * @return {?}\n */\nfunction getRootContext(component) {\n    /** @type {?} */\n    const rootContext = /** @type {?} */ (getRootView(component)[CONTEXT]);\n    ngDevMode && assertDefined(rootContext, 'rootContext');\n    return rootContext;\n}\n/**\n * Wait on component until it is rendered.\n *\n * This function returns a `Promise` which is resolved when the component's\n * change detection is executed. This is determined by finding the scheduler\n * associated with the `component`'s render tree and waiting until the scheduler\n * flushes. If nothing is scheduled, the function returns a resolved promise.\n *\n * Example:\n * ```\n * await whenRendered(myComponent);\n * ```\n *\n * @param {?} component Component to wait upon\n * @return {?} Promise which resolves when the component is rendered.\n */\nfunction whenRendered(component) {\n    return getRootContext(component).clean;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Create a component definition object.\n *\n *\n * # Example\n * ```\n * class MyDirective {\n *   // Generated by Angular Template Compiler\n *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n *   static ngComponentDef = defineComponent({\n *     ...\n *   });\n * }\n * ```\n * @template T\n * @param {?} componentDefinition\n * @return {?}\n */\nfunction defineComponent(componentDefinition) {\n    /** @type {?} */\n    const type = componentDefinition.type;\n    /** @type {?} */\n    const pipeTypes = /** @type {?} */ ((componentDefinition.pipes));\n    /** @type {?} */\n    const directiveTypes = /** @type {?} */ ((componentDefinition.directives));\n    /** @type {?} */\n    const declaredInputs = /** @type {?} */ ({});\n    /** @type {?} */\n    const def = {\n        type: type,\n        diPublic: null,\n        factory: componentDefinition.factory,\n        template: componentDefinition.template || /** @type {?} */ ((null)),\n        hostBindings: componentDefinition.hostBindings || null,\n        contentQueries: componentDefinition.contentQueries || null,\n        contentQueriesRefresh: componentDefinition.contentQueriesRefresh || null,\n        attributes: componentDefinition.attributes || null,\n        inputs: invertObject(componentDefinition.inputs, declaredInputs),\n        declaredInputs: declaredInputs,\n        outputs: invertObject(componentDefinition.outputs),\n        rendererType: resolveRendererType2(componentDefinition.rendererType) || null,\n        exportAs: componentDefinition.exportAs || null,\n        onInit: type.prototype.ngOnInit || null,\n        doCheck: type.prototype.ngDoCheck || null,\n        afterContentInit: type.prototype.ngAfterContentInit || null,\n        afterContentChecked: type.prototype.ngAfterContentChecked || null,\n        afterViewInit: type.prototype.ngAfterViewInit || null,\n        afterViewChecked: type.prototype.ngAfterViewChecked || null,\n        onDestroy: type.prototype.ngOnDestroy || null,\n        onPush: componentDefinition.changeDetection === ChangeDetectionStrategy.OnPush,\n        directiveDefs: directiveTypes ?\n            () => (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                .map(extractDirectiveDef) :\n            null,\n        pipeDefs: pipeTypes ?\n            () => (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef) :\n            null,\n        selectors: componentDefinition.selectors,\n        viewQuery: componentDefinition.viewQuery || null,\n        features: componentDefinition.features || null,\n    };\n    /** @type {?} */\n    const feature = componentDefinition.features;\n    feature && feature.forEach((fn) => fn(def));\n    return /** @type {?} */ (def);\n}\n/**\n * @param {?} type\n * @return {?}\n */\nfunction extractDirectiveDef(type) {\n    /** @type {?} */\n    const def = type.ngComponentDef || type.ngDirectiveDef;\n    if (ngDevMode && !def) {\n        throw new Error(`'${type.name}' is neither 'ComponentType' or 'DirectiveType'.`);\n    }\n    return def;\n}\n/**\n * @param {?} type\n * @return {?}\n */\nfunction extractPipeDef(type) {\n    /** @type {?} */\n    const def = type.ngPipeDef;\n    if (ngDevMode && !def) {\n        throw new Error(`'${type.name}' is not a 'PipeType'.`);\n    }\n    return def;\n}\n/**\n * @template T\n * @param {?} def\n * @return {?}\n */\nfunction defineNgModule(def) {\n    /** @type {?} */\n    const res = {\n        type: def.type,\n        bootstrap: def.bootstrap || [],\n        declarations: def.declarations || [],\n        imports: def.imports || [],\n        exports: def.exports || [],\n        transitiveCompileScopes: null,\n    };\n    return /** @type {?} */ (res);\n}\n/** @type {?} */\nconst EMPTY$1 = {};\n/**\n * Inverts an inputs or outputs lookup such that the keys, which were the\n * minified keys, are part of the values, and the values are parsed so that\n * the publicName of the property is the new key\n *\n * e.g. for\n *\n * ```\n * class Comp {\n * \\@Input()\n *   propName1: string;\n *\n * \\@Input('publicName')\n *   propName2: number;\n * }\n * ```\n *\n * will be serialized as\n *\n * ```\n * {\n *   a0: 'propName1',\n *   b1: ['publicName', 'propName2'],\n * }\n * ```\n *\n * becomes\n *\n * ```\n * {\n *  'propName1': 'a0',\n *  'publicName': 'b1'\n * }\n * ```\n *\n * Optionally the function can take `secondary` which will result in:\n *\n * ```\n * {\n *  'propName1': 'a0',\n *  'propName2': 'b1'\n * }\n * ```\n *\n * @param {?} obj\n * @param {?=} secondary\n * @return {?}\n */\nfunction invertObject(obj, secondary) {\n    if (obj == null)\n        return EMPTY$1;\n    /** @type {?} */\n    const newLookup = {};\n    for (const minifiedKey in obj) {\n        if (obj.hasOwnProperty(minifiedKey)) {\n            /** @type {?} */\n            let publicName = obj[minifiedKey];\n            /** @type {?} */\n            let declaredName = publicName;\n            if (Array.isArray(publicName)) {\n                declaredName = publicName[1];\n                publicName = publicName[0];\n            }\n            newLookup[publicName] = minifiedKey;\n            if (secondary) {\n                (secondary[declaredName] = minifiedKey);\n            }\n        }\n    }\n    return newLookup;\n}\n/** *\n * Create a directive definition object.\n *\n * # Example\n * ```\n * class MyDirective {\n *   // Generated by Angular Template Compiler\n *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n *   static ngDirectiveDef = defineDirective({\n *     ...\n *   });\n * }\n * ```\n  @type {?} */\nconst defineDirective = /** @type {?} */ ((defineComponent));\n/**\n * Create a pipe definition object.\n *\n * # Example\n * ```\n * class MyPipe implements PipeTransform {\n *   // Generated by Angular Template Compiler\n *   static ngPipeDef = definePipe({\n *     ...\n *   });\n * }\n * ```\n * @template T\n * @param {?} pipeDef Pipe definition generated by the compiler\n * @return {?}\n */\nfunction definePipe(pipeDef) {\n    return /** @type {?} */ ((/** @type {?} */ ({\n        name: pipeDef.name,\n        factory: pipeDef.factory,\n        pure: pipeDef.pure !== false,\n        onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n    })));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Sets properties on a target object from a source object, but only if\n * the property doesn't already exist on the target object.\n * @param {?} target The target to set properties on\n * @param {?} source The source of the property keys and values to set\n * @return {?}\n */\nfunction fillProperties(target, source) {\n    for (const key in source) {\n        if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n            target[key] = source[key];\n        }\n    }\n}\n/**\n * Determines if a definition is a {\\@link ComponentDefInternal} or a {\\@link DirectiveDefInternal}\n * @template T\n * @param {?} definition The definition to examine\n * @return {?}\n */\nfunction isComponentDef(definition) {\n    /** @type {?} */\n    const def = /** @type {?} */ (definition);\n    return typeof def.template === 'function';\n}\n/**\n * @param {?} type\n * @return {?}\n */\nfunction getSuperType(type) {\n    return Object.getPrototypeOf(type.prototype).constructor;\n}\n/**\n * Merges the definition from a super class to a sub class.\n * @param {?} definition The definition that is a SubClass of another directive of component\n * @return {?}\n */\nfunction InheritDefinitionFeature(definition) {\n    /** @type {?} */\n    let superType = getSuperType(definition.type);\n    /** @type {?} */\n    let superDef = undefined;\n    while (superType && !superDef) {\n        if (isComponentDef(definition)) {\n            superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n        }\n        else {\n            if (superType.ngComponentDef) {\n                throw new Error('Directives cannot inherit Components');\n            }\n            superDef = superType.ngDirectiveDef;\n        }\n        if (superDef) {\n            // Merge inputs and outputs\n            fillProperties(definition.inputs, superDef.inputs);\n            fillProperties(definition.declaredInputs, superDef.declaredInputs);\n            fillProperties(definition.outputs, superDef.outputs);\n            /** @type {?} */\n            const prevHostBindings = definition.hostBindings;\n            /** @type {?} */\n            const superHostBindings = superDef.hostBindings;\n            if (superHostBindings) {\n                if (prevHostBindings) {\n                    definition.hostBindings = (directiveIndex, elementIndex) => {\n                        superHostBindings(directiveIndex, elementIndex);\n                        prevHostBindings(directiveIndex, elementIndex);\n                    };\n                }\n                else {\n                    definition.hostBindings = superHostBindings;\n                }\n            }\n            // Inherit hooks\n            // Assume super class inheritance feature has already run.\n            definition.afterContentChecked =\n                definition.afterContentChecked || superDef.afterContentChecked;\n            definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n            definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n            definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n            definition.doCheck = definition.doCheck || superDef.doCheck;\n            definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n            definition.onInit = definition.onInit || superDef.onInit;\n            /** @type {?} */\n            const features = superDef.features;\n            if (features) {\n                for (const feature of features) {\n                    if (feature && feature !== InheritDefinitionFeature) {\n                        (/** @type {?} */ (feature))(definition);\n                    }\n                }\n            }\n        }\n        else {\n            /** @type {?} */\n            const superPrototype = superType.prototype;\n            if (superPrototype) {\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superPrototype.afterContentChecked;\n                definition.afterContentInit =\n                    definition.afterContentInit || superPrototype.afterContentInit;\n                definition.afterViewChecked =\n                    definition.afterViewChecked || superPrototype.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superPrototype.afterViewInit;\n                definition.doCheck = definition.doCheck || superPrototype.doCheck;\n                definition.onDestroy = definition.onDestroy || superPrototype.onDestroy;\n                definition.onInit = definition.onInit || superPrototype.onInit;\n            }\n        }\n        superType = Object.getPrototypeOf(superType);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst PRIVATE_PREFIX = '__ngOnChanges_';\n/**\n * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n * lifecycle hook, so it should be included in any component that implements\n * that hook.\n *\n * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n * be included as a feature AFTER {\\@link InheritDefinitionFeature}, otherwise\n * inherited properties will not be propagated to the ngOnChanges lifecycle\n * hook.\n *\n * Example usage:\n *\n * ```\n * static ngComponentDef = defineComponent({\n *   ...\n *   inputs: {name: 'publicName'},\n *   features: [NgOnChangesFeature]\n * });\n * ```\n * @template T\n * @param {?} definition\n * @return {?}\n */\nfunction NgOnChangesFeature(definition) {\n    /** @type {?} */\n    const declaredToMinifiedInputs = definition.declaredInputs;\n    /** @type {?} */\n    const proto = definition.type.prototype;\n    for (const declaredName in declaredToMinifiedInputs) {\n        if (declaredToMinifiedInputs.hasOwnProperty(declaredName)) {\n            /** @type {?} */\n            const minifiedKey = declaredToMinifiedInputs[declaredName];\n            /** @type {?} */\n            const privateMinKey = PRIVATE_PREFIX + minifiedKey;\n            /** @type {?} */\n            let originalProperty = undefined;\n            /** @type {?} */\n            let checkProto = proto;\n            while (!originalProperty && checkProto &&\n                Object.getPrototypeOf(checkProto) !== Object.getPrototypeOf(Object.prototype)) {\n                originalProperty = Object.getOwnPropertyDescriptor(checkProto, minifiedKey);\n                checkProto = Object.getPrototypeOf(checkProto);\n            }\n            /** @type {?} */\n            const getter = originalProperty && originalProperty.get;\n            /** @type {?} */\n            const setter = originalProperty && originalProperty.set;\n            // create a getter and setter for property\n            Object.defineProperty(proto, minifiedKey, {\n                get: getter ||\n                    (setter ? undefined : function () { return this[privateMinKey]; }),\n                /**\n                 * @template T\n                 * @this {?}\n                 * @param {?} value\n                 * @return {?}\n                 */\n                set(value) {\n                    /** @type {?} */\n                    let simpleChanges = this[PRIVATE_PREFIX];\n                    if (!simpleChanges) {\n                        simpleChanges = {};\n                        // Place where we will store SimpleChanges if there is a change\n                        Object.defineProperty(this, PRIVATE_PREFIX, { value: simpleChanges, writable: true });\n                    }\n                    /** @type {?} */\n                    const isFirstChange = !this.hasOwnProperty(privateMinKey);\n                    /** @type {?} */\n                    const currentChange = simpleChanges[declaredName];\n                    if (currentChange) {\n                        currentChange.currentValue = value;\n                    }\n                    else {\n                        simpleChanges[declaredName] =\n                            new SimpleChange(this[privateMinKey], value, isFirstChange);\n                    }\n                    if (isFirstChange) {\n                        // Create a place where the actual value will be stored and make it non-enumerable\n                        Object.defineProperty(this, privateMinKey, { value, writable: true });\n                    }\n                    else {\n                        this[privateMinKey] = value;\n                    }\n                    if (setter)\n                        setter.call(this, value);\n                }\n            });\n        }\n    }\n    // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n    // so the call order is changes-init-check in creation mode. In subsequent\n    // change detection runs, only the check wrapper will be called.\n    if (definition.onInit != null) {\n        definition.onInit = onChangesWrapper(definition.onInit);\n    }\n    definition.doCheck = onChangesWrapper(definition.doCheck);\n}\n/**\n * @param {?} delegateHook\n * @return {?}\n */\nfunction onChangesWrapper(delegateHook) {\n    return function () {\n        /** @type {?} */\n        const simpleChanges = this[PRIVATE_PREFIX];\n        if (simpleChanges != null) {\n            this.ngOnChanges(simpleChanges);\n            this[PRIVATE_PREFIX] = null;\n        }\n        if (delegateHook)\n            delegateHook.apply(this);\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @template T\n */\nclass ViewRef$1 {\n    /**\n     * @param {?} _view\n     * @param {?} context\n     */\n    constructor(_view, context) {\n        this._view = _view;\n        this._appRef = null;\n        this._viewContainerRef = null;\n        /**\n         * \\@internal\n         */\n        this._lViewNode = null;\n        this.context = /** @type {?} */ ((context));\n    }\n    /**\n     * \\@internal\n     * @param {?} view\n     * @param {?} context\n     * @return {?}\n     */\n    _setComponentContext(view, context) {\n        this._view = view;\n        this.context = context;\n    }\n    /**\n     * @return {?}\n     */\n    get destroyed() {\n        return (this._view[FLAGS] & 32 /* Destroyed */) === 32 /* Destroyed */;\n    }\n    /**\n     * @return {?}\n     */\n    destroy() {\n        if (this._viewContainerRef && viewAttached(this._view)) {\n            this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            this._viewContainerRef = null;\n        }\n        destroyLView(this._view);\n    }\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    onDestroy(callback) { storeCleanupFn(this._view, callback); }\n    /**\n     * Marks a view and all of its ancestors dirty.\n     *\n     * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n     * multiple `markForCheck` calls to into one change detection run.\n     *\n     * This can be used to ensure an {\\@link ChangeDetectionStrategy#OnPush OnPush} component is\n     * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n     * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n     *\n     * <!-- TODO: Add a link to a chapter on OnPush components -->\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * \\@Component({\n     *   selector: 'my-app',\n     *   template: `Number of ticks: {{numberOfTicks}}`\n     *   changeDetection: ChangeDetectionStrategy.OnPush,\n     * })\n     * class AppComponent {\n     *   numberOfTicks = 0;\n     *\n     *   constructor(private ref: ChangeDetectorRef) {\n     *     setInterval(() => {\n     *       this.numberOfTicks++;\n     *       // the following is required, otherwise the view will not be updated\n     *       this.ref.markForCheck();\n     *     }, 1000);\n     *   }\n     * }\n     * ```\n     * @return {?}\n     */\n    markForCheck() { markViewDirty(this._view); }\n    /**\n     * Detaches the view from the change detection tree.\n     *\n     * Detached views will not be checked during change detection runs until they are\n     * re-attached, even if they are dirty. `detach` can be used in combination with\n     * {\\@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n     * detection checks.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * The following example defines a component with a large list of readonly data.\n     * Imagine the data changes constantly, many times per second. For performance reasons,\n     * we want to check and update the list every five seconds. We can do that by detaching\n     * the component's change detector and doing a local check every five seconds.\n     *\n     * ```typescript\n     * class DataProvider {\n     *   // in a real application the returned data will be different every time\n     *   get data() {\n     *     return [1,2,3,4,5];\n     *   }\n     * }\n     *\n     * \\@Component({\n     *   selector: 'giant-list',\n     *   template: `\n     *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n     *   `,\n     * })\n     * class GiantList {\n     *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n     *     ref.detach();\n     *     setInterval(() => {\n     *       this.ref.detectChanges();\n     *     }, 5000);\n     *   }\n     * }\n     *\n     * \\@Component({\n     *   selector: 'app',\n     *   providers: [DataProvider],\n     *   template: `\n     *     <giant-list><giant-list>\n     *   `,\n     * })\n     * class App {\n     * }\n     * ```\n     * @return {?}\n     */\n    detach() { this._view[FLAGS] &= ~8 /* Attached */; }\n    /**\n     * Re-attaches a view to the change detection tree.\n     *\n     * This can be used to re-attach views that were previously detached from the tree\n     * using {\\@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * The following example creates a component displaying `live` data. The component will detach\n     * its change detector from the main change detector tree when the component's live property\n     * is set to false.\n     *\n     * ```typescript\n     * class DataProvider {\n     *   data = 1;\n     *\n     *   constructor() {\n     *     setInterval(() => {\n     *       this.data = this.data * 2;\n     *     }, 500);\n     *   }\n     * }\n     *\n     * \\@Component({\n     *   selector: 'live-data',\n     *   inputs: ['live'],\n     *   template: 'Data: {{dataProvider.data}}'\n     * })\n     * class LiveData {\n     *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n     *\n     *   set live(value) {\n     *     if (value) {\n     *       this.ref.reattach();\n     *     } else {\n     *       this.ref.detach();\n     *     }\n     *   }\n     * }\n     *\n     * \\@Component({\n     *   selector: 'my-app',\n     *   providers: [DataProvider],\n     *   template: `\n     *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n     *     <live-data [live]=\"live\"><live-data>\n     *   `,\n     * })\n     * class AppComponent {\n     *   live = true;\n     * }\n     * ```\n     * @return {?}\n     */\n    reattach() { this._view[FLAGS] |= 8 /* Attached */; }\n    /**\n     * Checks the view and its children.\n     *\n     * This can also be used in combination with {\\@link ChangeDetectorRef#detach detach} to implement\n     * local change detection checks.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * The following example defines a component with a large list of readonly data.\n     * Imagine, the data changes constantly, many times per second. For performance reasons,\n     * we want to check and update the list every five seconds.\n     *\n     * We can do that by detaching the component's change detector and doing a local change detection\n     * check every five seconds.\n     *\n     * See {\\@link ChangeDetectorRef#detach detach} for more information.\n     * @return {?}\n     */\n    detectChanges() { detectChanges(this.context); }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     * @return {?}\n     */\n    checkNoChanges() { checkNoChanges(this.context); }\n    /**\n     * @param {?} vcRef\n     * @return {?}\n     */\n    attachToViewContainerRef(vcRef) { this._viewContainerRef = vcRef; }\n    /**\n     * @return {?}\n     */\n    detachFromAppRef() { this._appRef = null; }\n    /**\n     * @param {?} appRef\n     * @return {?}\n     */\n    attachToAppRef(appRef) { this._appRef = appRef; }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass ComponentFactoryResolver$1 extends ComponentFactoryResolver {\n    /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    resolveComponentFactory(component) {\n        ngDevMode && assertComponentType(component);\n        /** @type {?} */\n        const componentDef = (/** @type {?} */ (component)).ngComponentDef;\n        return new ComponentFactory$1(componentDef);\n    }\n}\n/**\n * @param {?} map\n * @return {?}\n */\nfunction toRefArray(map) {\n    /** @type {?} */\n    const array = [];\n    for (let nonMinified in map) {\n        if (map.hasOwnProperty(nonMinified)) {\n            /** @type {?} */\n            const minified = map[nonMinified];\n            array.push({ propName: minified, templateName: nonMinified });\n        }\n    }\n    return array;\n}\n/** *\n * Default {\\@link RootContext} for all components rendered with {\\@link renderComponent}.\n  @type {?} */\nconst ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: () => createRootContext(inject(SCHEDULER)) });\n/** *\n * A change detection scheduler token for {\\@link RootContext}. This token is the default value used\n * for the default `RootContext` found in the {\\@link ROOT_CONTEXT} token.\n  @type {?} */\nconst SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', { providedIn: 'root', factory: () => requestAnimationFrame.bind(window) });\n/**\n * Render3 implementation of {\\@link viewEngine_ComponentFactory}.\n * @template T\n */\nclass ComponentFactory$1 extends ComponentFactory {\n    /**\n     * @param {?} componentDef\n     */\n    constructor(componentDef) {\n        super();\n        this.componentDef = componentDef;\n        this.componentType = componentDef.type;\n        this.selector = /** @type {?} */ (componentDef.selectors[0][0]);\n        this.ngContentSelectors = [];\n    }\n    /**\n     * @return {?}\n     */\n    get inputs() {\n        return toRefArray(this.componentDef.inputs);\n    }\n    /**\n     * @return {?}\n     */\n    get outputs() {\n        return toRefArray(this.componentDef.outputs);\n    }\n    /**\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    create(injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        /** @type {?} */\n        const isInternalRootView = rootSelectorOrNode === undefined;\n        /** @type {?} */\n        const rendererFactory = ngModule ? ngModule.injector.get(RendererFactory2) : domRendererFactory3;\n        /** @type {?} */\n        const hostNode = isInternalRootView ?\n            elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef.rendererType)) :\n            locateHostElement(rendererFactory, rootSelectorOrNode);\n        /** @type {?} */\n        const componentTag = /** @type {?} */ (((/** @type {?} */ ((this.componentDef.selectors))[0]))[0]);\n        /** @type {?} */\n        const rootContext = ngModule && !isInternalRootView ?\n            ngModule.injector.get(ROOT_CONTEXT) :\n            createRootContext(requestAnimationFrame.bind(window));\n        /** @type {?} */\n        const rootView = createLViewData(rendererFactory.createRenderer(hostNode, this.componentDef.rendererType), createTView(-1, null, null, null, null), rootContext, this.componentDef.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */);\n        rootView[INJECTOR$1] = ngModule && ngModule.injector || null;\n        /** @type {?} */\n        const oldView = enterView(rootView, /** @type {?} */ ((null)));\n        /** @type {?} */\n        let component;\n        /** @type {?} */\n        let elementNode;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            // Create element node at index 0 in data array\n            elementNode = hostElement(componentTag, hostNode, this.componentDef);\n            // Create directive instance with factory() and store at index 0 in directives array\n            rootContext.components.push(component = /** @type {?} */ (baseDirectiveCreate(0, this.componentDef.factory(), this.componentDef)));\n            initChangeDetectorIfExisting(elementNode.nodeInjector, component, /** @type {?} */ ((elementNode.data)));\n            // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n            // executed here?\n            // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n            LifecycleHooksFeature(component, this.componentDef);\n            // Transform the arrays of native nodes into a LNode structure that can be consumed by the\n            // projection instruction. This is needed to support the reprojection of these nodes.\n            if (projectableNodes) {\n                /** @type {?} */\n                let index = 0;\n                /** @type {?} */\n                const projection$$1 = elementNode.tNode.projection = [];\n                for (let i = 0; i < projectableNodes.length; i++) {\n                    /** @type {?} */\n                    const nodeList = projectableNodes[i];\n                    /** @type {?} */\n                    let firstTNode = null;\n                    /** @type {?} */\n                    let previousTNode = null;\n                    for (let j = 0; j < nodeList.length; j++) {\n                        /** @type {?} */\n                        const lNode = createLNode(++index, 3 /* Element */, /** @type {?} */ (nodeList[j]), null, null);\n                        if (previousTNode) {\n                            previousTNode.next = lNode.tNode;\n                        }\n                        else {\n                            firstTNode = lNode.tNode;\n                        }\n                        previousTNode = lNode.tNode;\n                    }\n                    projection$$1.push(/** @type {?} */ ((firstTNode)));\n                }\n            }\n            // Execute the template in creation mode only, and then turn off the CreationMode flag\n            renderEmbeddedTemplate(elementNode, /** @type {?} */ ((elementNode.data))[TVIEW], component, 1 /* Create */); /** @type {?} */\n            ((elementNode.data))[FLAGS] &= ~1 /* CreationMode */;\n        }\n        finally {\n            enterView(oldView, null);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        /** @type {?} */\n        const componentRef = new ComponentRef$1(this.componentType, component, rootView, injector, /** @type {?} */ ((hostNode)));\n        if (isInternalRootView) {\n            /** @type {?} */ ((\n            // The host element of the internal root view is attached to the component's host view node\n            componentRef.hostView._lViewNode)).tNode.child = elementNode.tNode;\n        }\n        return componentRef;\n    }\n}\n/**\n * Represents an instance of a Component created via a {\\@link ComponentFactory}.\n *\n * `ComponentRef` provides access to the Component Instance as well other objects related to this\n * Component Instance and allows you to destroy the Component Instance via the {\\@link #destroy}\n * method.\n *\n * @template T\n */\nclass ComponentRef$1 extends ComponentRef {\n    /**\n     * @param {?} componentType\n     * @param {?} instance\n     * @param {?} rootView\n     * @param {?} injector\n     * @param {?} hostNode\n     */\n    constructor(componentType, instance, rootView, injector, hostNode) {\n        super();\n        this.destroyCbs = [];\n        this.instance = instance;\n        /* TODO(jasonaden): This is incomplete, to be adjusted in follow-up PR. Notes from Kara:When\n             * ViewRef.detectChanges is called from ApplicationRef.tick, it will call detectChanges at the\n             * component instance level. I suspect this means that lifecycle hooks and host bindings on the\n             * given component won't work (as these are always called at the level above a component).\n             *\n             * In render2, ViewRef.detectChanges uses the root view instance for view checks, not the\n             * component instance. So passing in the root view (1 level above the component) is sufficient.\n             * We might  want to think about creating a fake component for the top level? Or overwrite\n             * detectChanges with a function that calls tickRootContext? */\n        this.hostView = this.changeDetectorRef = new ViewRef$1(rootView, instance);\n        this.hostView._lViewNode = createLNode(-1, 2 /* View */, null, null, null, rootView);\n        this.injector = injector;\n        this.location = new ElementRef(hostNode);\n        this.componentType = componentType;\n    }\n    /**\n     * @return {?}\n     */\n    destroy() {\n        ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed'); /** @type {?} */\n        ((this.destroyCbs)).forEach(fn => fn());\n        this.destroyCbs = null;\n    }\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    onDestroy(callback) {\n        ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed'); /** @type {?} */\n        ((this.destroyCbs)).push(callback);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * If a directive is diPublic, bloomAdd sets a property on the instance with this constant as\n * the key and the directive's unique ID as the value. This allows us to map directives to their\n * bloom filter bit for DI.\n  @type {?} */\nconst NG_ELEMENT_ID = '__NG_ELEMENT_ID__';\n/** *\n * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n * directives that will share slots, and thus, the fewer false positives when checking for\n * the existence of a directive.\n  @type {?} */\nconst BLOOM_SIZE = 256;\n/** *\n * Counter used to generate unique IDs for directives.\n  @type {?} */\nlet nextNgElementId = 0;\n/**\n * Registers this directive as present in its node's injector by flipping the directive's\n * corresponding bit in the injector's bloom filter.\n *\n * @param {?} injector The node injector in which the directive should be registered\n * @param {?} type The directive to register\n * @return {?}\n */\nfunction bloomAdd(injector, type) {\n    /** @type {?} */\n    let id = (/** @type {?} */ (type))[NG_ELEMENT_ID];\n    // Set a unique ID on the directive type, so if something tries to inject the directive,\n    // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n    if (id == null) {\n        id = (/** @type {?} */ (type))[NG_ELEMENT_ID] = nextNgElementId++;\n    }\n    /** @type {?} */\n    const bloomBit = id % BLOOM_SIZE;\n    /** @type {?} */\n    const mask = 1 << bloomBit;\n    // Use the raw bloomBit number to determine which bloom filter bucket we should check\n    // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n    if (bloomBit < 128) {\n        // Then use the mask to flip on the bit (0-31) associated with the directive in that bucket\n        bloomBit < 64 ? (bloomBit < 32 ? (injector.bf0 |= mask) : (injector.bf1 |= mask)) :\n            (bloomBit < 96 ? (injector.bf2 |= mask) : (injector.bf3 |= mask));\n    }\n    else {\n        bloomBit < 192 ? (bloomBit < 160 ? (injector.bf4 |= mask) : (injector.bf5 |= mask)) :\n            (bloomBit < 224 ? (injector.bf6 |= mask) : (injector.bf7 |= mask));\n    }\n}\n/**\n * @return {?}\n */\nfunction getOrCreateNodeInjector() {\n    ngDevMode && assertPreviousIsParent();\n    return getOrCreateNodeInjectorForNode(/** @type {?} */ (getPreviousOrParentNode()));\n}\n/**\n * Creates (or gets an existing) injector for a given element or container.\n *\n * @param {?} node for which an injector should be retrieved / created.\n * @return {?} Node injector\n */\nfunction getOrCreateNodeInjectorForNode(node) {\n    /** @type {?} */\n    const nodeInjector = node.nodeInjector;\n    /** @type {?} */\n    const parent = getParentLNode(node);\n    /** @type {?} */\n    const parentInjector = parent && parent.nodeInjector;\n    if (nodeInjector != parentInjector) {\n        return /** @type {?} */ ((nodeInjector));\n    }\n    return node.nodeInjector = {\n        parent: parentInjector,\n        node: node,\n        bf0: 0,\n        bf1: 0,\n        bf2: 0,\n        bf3: 0,\n        bf4: 0,\n        bf5: 0,\n        bf6: 0,\n        bf7: 0,\n        cbf0: parentInjector == null ? 0 : parentInjector.cbf0 | parentInjector.bf0,\n        cbf1: parentInjector == null ? 0 : parentInjector.cbf1 | parentInjector.bf1,\n        cbf2: parentInjector == null ? 0 : parentInjector.cbf2 | parentInjector.bf2,\n        cbf3: parentInjector == null ? 0 : parentInjector.cbf3 | parentInjector.bf3,\n        cbf4: parentInjector == null ? 0 : parentInjector.cbf4 | parentInjector.bf4,\n        cbf5: parentInjector == null ? 0 : parentInjector.cbf5 | parentInjector.bf5,\n        cbf6: parentInjector == null ? 0 : parentInjector.cbf6 | parentInjector.bf6,\n        cbf7: parentInjector == null ? 0 : parentInjector.cbf7 | parentInjector.bf7,\n        templateRef: null,\n        viewContainerRef: null,\n        elementRef: null,\n        changeDetectorRef: null,\n    };\n}\n/**\n * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n *\n * @param {?} di The node injector in which a directive will be added\n * @param {?} def The definition of the directive to be made public\n * @return {?}\n */\nfunction diPublicInInjector(di, def) {\n    bloomAdd(di, def.type);\n}\n/**\n * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n *\n * @param {?} def The definition of the directive to be made public\n * @return {?}\n */\nfunction diPublic(def) {\n    diPublicInInjector(getOrCreateNodeInjector(), def);\n}\n/**\n * @template T\n * @param {?} token\n * @param {?=} flags\n * @return {?}\n */\nfunction directiveInject(token, flags = 0 /* Default */) {\n    return getOrCreateInjectable(getOrCreateNodeInjector(), token, flags);\n}\n/**\n * Creates an ElementRef and stores it on the injector.\n * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n *\n * @return {?} The ElementRef instance to use\n */\nfunction injectElementRef() {\n    return getOrCreateElementRef(getOrCreateNodeInjector());\n}\n/**\n * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n * exists, retrieves the existing TemplateRef.\n *\n * @template T\n * @return {?} The TemplateRef instance to use\n */\nfunction injectTemplateRef() {\n    return getOrCreateTemplateRef(getOrCreateNodeInjector());\n}\n/**\n * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n * already exists, retrieves the existing ViewContainerRef.\n *\n * @return {?} The ViewContainerRef instance to use\n */\nfunction injectViewContainerRef() {\n    return getOrCreateContainerRef(getOrCreateNodeInjector());\n}\n/**\n * Returns a ChangeDetectorRef (a.k.a. a ViewRef)\n * @return {?}\n */\nfunction injectChangeDetectorRef() {\n    return getOrCreateChangeDetectorRef(getOrCreateNodeInjector(), null);\n}\n/**\n * Inject static attribute value into directive constructor.\n *\n * This method is used with `factory` functions which are generated as part of\n * `defineDirective` or `defineComponent`. The method retrieves the static value\n * of an attribute. (Dynamic attributes are not supported since they are not resolved\n *  at the time of injection and can change over time.)\n *\n * # Example\n * Given:\n * ```\n * \\@Component(...)\n * class MyComponent {\n *   constructor(\\@Attribute('title') title: string) { ... }\n * }\n * ```\n * When instantiated with\n * ```\n * <my-component title=\"Hello\"></my-component>\n * ```\n *\n * Then factory method generated is:\n * ```\n * MyComponent.ngComponentDef = defineComponent({\n *   factory: () => new MyComponent(injectAttribute('title'))\n *   ...\n * })\n * ```\n *\n * \\@experimental\n * @param {?} attrNameToInject\n * @return {?}\n */\nfunction injectAttribute(attrNameToInject) {\n    ngDevMode && assertPreviousIsParent();\n    /** @type {?} */\n    const lElement = /** @type {?} */ (getPreviousOrParentNode());\n    ngDevMode && assertNodeType(lElement, 3 /* Element */);\n    /** @type {?} */\n    const tElement = lElement.tNode;\n    ngDevMode && assertDefined(tElement, 'expecting tNode');\n    /** @type {?} */\n    const attrs = tElement.attrs;\n    if (attrs) {\n        for (let i = 0; i < attrs.length; i = i + 2) {\n            /** @type {?} */\n            const attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName == attrNameToInject) {\n                return /** @type {?} */ (attrs[i + 1]);\n            }\n        }\n    }\n    return undefined;\n}\n/**\n * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n * Or, if it already exists, retrieves the existing instance.\n *\n * @param {?} di\n * @param {?} context\n * @return {?} The ChangeDetectorRef to use\n */\nfunction getOrCreateChangeDetectorRef(di, context) {\n    if (di.changeDetectorRef)\n        return di.changeDetectorRef;\n    /** @type {?} */\n    const currentNode = di.node;\n    if (isComponent(currentNode.tNode)) {\n        return di.changeDetectorRef = new ViewRef$1(/** @type {?} */ (currentNode.data), context);\n    }\n    else if (currentNode.tNode.type === 3 /* Element */) {\n        return di.changeDetectorRef = getOrCreateHostChangeDetector(currentNode.view[HOST_NODE]);\n    }\n    return /** @type {?} */ ((null));\n}\n/**\n * Gets or creates ChangeDetectorRef for the closest host component\n * @param {?} currentNode\n * @return {?}\n */\nfunction getOrCreateHostChangeDetector(currentNode) {\n    /** @type {?} */\n    const hostNode = getClosestComponentAncestor(currentNode);\n    /** @type {?} */\n    const hostInjector = hostNode.nodeInjector;\n    /** @type {?} */\n    const existingRef = hostInjector && hostInjector.changeDetectorRef;\n    return existingRef ?\n        existingRef :\n        new ViewRef$1(/** @type {?} */ (hostNode.data), /** @type {?} */ ((hostNode\n            .view[DIRECTIVES]))[hostNode.tNode.flags >> 14 /* DirectiveStartingIndexShift */]);\n}\n/**\n * If the node is an embedded view, traverses up the view tree to return the closest\n * ancestor view that is attached to a component. If it's already a component node,\n * returns itself.\n * @param {?} node\n * @return {?}\n */\nfunction getClosestComponentAncestor(node) {\n    while (node.tNode.type === 2 /* View */) {\n        node = node.view[HOST_NODE];\n    }\n    return /** @type {?} */ (node);\n}\n/**\n * Searches for an instance of the given directive type up the injector tree and returns\n * that instance if found.\n *\n * Specifically, it gets the bloom filter bit associated with the directive (see bloomHashBit),\n * checks that bit against the bloom filter structure to identify an injector that might have\n * the directive (see bloomFindPossibleInjector), then searches the directives on that injector\n * for a match.\n *\n * If not found, it will propagate up to the next parent injector until the token\n * is found or the top is reached.\n *\n * @template T\n * @param {?} di Node injector where the search should start\n * @param {?} token The directive type to search for\n * @param {?=} flags Injection flags (e.g. CheckParent)\n * @return {?} The instance found\n */\nfunction getOrCreateInjectable(di, token, flags = 0 /* Default */) {\n    /** @type {?} */\n    const bloomHash = bloomHashBit(token);\n    // If the token has a bloom hash, then it is a directive that is public to the injection system\n    // (diPublic). If there is no hash, fall back to the module injector.\n    if (bloomHash === null) {\n        /** @type {?} */\n        const moduleInjector = getPreviousOrParentNode().view[INJECTOR$1];\n        /** @type {?} */\n        const formerInjector = setCurrentInjector(moduleInjector);\n        try {\n            return inject(token, flags);\n        }\n        finally {\n            setCurrentInjector(formerInjector);\n        }\n    }\n    else {\n        /** @type {?} */\n        let injector = di;\n        while (injector) {\n            // Get the closest potential matching injector (upwards in the injector tree) that\n            // *potentially* has the token.\n            injector = bloomFindPossibleInjector(injector, bloomHash, flags);\n            // If no injector is found, we *know* that there is no ancestor injector that contains the\n            // token, so we abort.\n            if (!injector) {\n                break;\n            }\n            /** @type {?} */\n            const node = injector.node;\n            /** @type {?} */\n            const nodeFlags = node.tNode.flags;\n            /** @type {?} */\n            const count = nodeFlags & 4095 /* DirectiveCountMask */;\n            if (count !== 0) {\n                /** @type {?} */\n                const start = nodeFlags >> 14 /* DirectiveStartingIndexShift */;\n                /** @type {?} */\n                const end = start + count;\n                /** @type {?} */\n                const defs = /** @type {?} */ ((node.view[TVIEW].directives));\n                for (let i = start; i < end; i++) {\n                    /** @type {?} */\n                    const directiveDef = /** @type {?} */ (defs[i]);\n                    if (directiveDef.type === token && directiveDef.diPublic) {\n                        return /** @type {?} */ ((node.view[DIRECTIVES]))[i];\n                    }\n                }\n            }\n            /** @type {?} */\n            let instance;\n            if (injector === di && (instance = searchMatchesQueuedForCreation(node, token))) {\n                return instance;\n            }\n            // The def wasn't found anywhere on this node, so it was a false positive.\n            // If flags permit, traverse up the tree and continue searching.\n            if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n                injector = null;\n            }\n            else {\n                injector = injector.parent;\n            }\n        }\n    }\n    // No directive was found for the given token.\n    if (flags & 8 /* Optional */)\n        return null;\n    throw new Error(`Injector: NOT_FOUND [${stringify$1(token)}]`);\n}\n/**\n * @template T\n * @param {?} node\n * @param {?} token\n * @return {?}\n */\nfunction searchMatchesQueuedForCreation(node, token) {\n    /** @type {?} */\n    const matches = node.view[TVIEW].currentMatches;\n    if (matches) {\n        for (let i = 0; i < matches.length; i += 2) {\n            /** @type {?} */\n            const def = /** @type {?} */ (matches[i]);\n            if (def.type === token) {\n                return resolveDirective(def, i + 1, matches, node.view[TVIEW]);\n            }\n        }\n    }\n    return null;\n}\n/**\n * Given a directive type, this function returns the bit in an injector's bloom filter\n * that should be used to determine whether or not the directive is present.\n *\n * When the directive was added to the bloom filter, it was given a unique ID that can be\n * retrieved on the class. Since there are only BLOOM_SIZE slots per bloom filter, the directive's\n * ID must be modulo-ed by BLOOM_SIZE to get the correct bloom bit (directives share slots after\n * BLOOM_SIZE is reached).\n *\n * @param {?} type The directive type\n * @return {?} The bloom bit to check for the directive\n */\nfunction bloomHashBit(type) {\n    /** @type {?} */\n    let id = (/** @type {?} */ (type))[NG_ELEMENT_ID];\n    return typeof id === 'number' ? id % BLOOM_SIZE : null;\n}\n/**\n * Finds the closest injector that might have a certain directive.\n *\n * Each directive corresponds to a bit in an injector's bloom filter. Given the bloom bit to\n * check and a starting injector, this function traverses up injectors until it finds an\n * injector that contains a 1 for that bit in its bloom filter. A 1 indicates that the\n * injector may have that directive. It only *may* have the directive because directives begin\n * to share bloom filter bits after the BLOOM_SIZE is reached, and it could correspond to a\n * different directive sharing the bit.\n *\n * Note: We can skip checking further injectors up the tree if an injector's cbf structure\n * has a 0 for that bloom bit. Since cbf contains the merged value of all the parent\n * injectors, a 0 in the bloom bit indicates that the parents definitely do not contain\n * the directive and do not need to be checked.\n *\n * @param {?} startInjector\n * @param {?} bloomBit The bit to check in each injector's bloom filter\n * @param {?} flags The injection flags for this injection site (e.g. Optional or SkipSelf)\n * @return {?} An injector that might have the directive\n */\nfunction bloomFindPossibleInjector(startInjector, bloomBit, flags) {\n    /** @type {?} */\n    const mask = 1 << bloomBit;\n    /** @type {?} */\n    let injector = flags & 4 /* SkipSelf */ ? /** @type {?} */ ((startInjector.parent)) : startInjector;\n    while (injector) {\n        /** @type {?} */\n        let value;\n        if (bloomBit < 128) {\n            value = bloomBit < 64 ? (bloomBit < 32 ? injector.bf0 : injector.bf1) :\n                (bloomBit < 96 ? injector.bf2 : injector.bf3);\n        }\n        else {\n            value = bloomBit < 192 ? (bloomBit < 160 ? injector.bf4 : injector.bf5) :\n                (bloomBit < 224 ? injector.bf6 : injector.bf7);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        if ((value & mask) === mask) {\n            return injector;\n        }\n        else if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n            return null;\n        }\n        // If the current injector does not have the directive, check the bloom filters for the ancestor\n        // injectors (cbf0 - cbf7). These filters capture *all* ancestor injectors.\n        if (bloomBit < 128) {\n            value = bloomBit < 64 ? (bloomBit < 32 ? injector.cbf0 : injector.cbf1) :\n                (bloomBit < 96 ? injector.cbf2 : injector.cbf3);\n        }\n        else {\n            value = bloomBit < 192 ? (bloomBit < 160 ? injector.cbf4 : injector.cbf5) :\n                (bloomBit < 224 ? injector.cbf6 : injector.cbf7);\n        }\n        // If the ancestor bloom filter value has the bit corresponding to the directive, traverse up to\n        // find the specific injector. If the ancestor bloom filter does not have the bit, we can abort.\n        injector = (value & mask) ? injector.parent : null;\n    }\n    return null;\n}\n/**\n * Checks whether the current injector and its parent are in the same host view.\n *\n * This is necessary to support \\@Host() decorators. If \\@Host() is set, we should stop searching once\n * the injector and its parent view don't match because it means we'd cross the view boundary.\n * @param {?} injector\n * @return {?}\n */\nfunction sameHostView(injector) {\n    return !!injector.parent && injector.parent.node.view === injector.node.view;\n}\n/**\n * @template T\n */\nclass ReadFromInjectorFn {\n    /**\n     * @param {?} read\n     */\n    constructor(read) {\n        this.read = read;\n    }\n}\n/**\n * Creates an ElementRef for a given node injector and stores it on the injector.\n * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n *\n * @param {?} di The node injector where we should store a created ElementRef\n * @return {?} The ElementRef instance to use\n */\nfunction getOrCreateElementRef(di) {\n    return di.elementRef || (di.elementRef = new ElementRef$1(di.node.native));\n}\n/**\n * A ref to a node's native element.\n */\nclass ElementRef$1 {\n    /**\n     * @param {?} nativeElement\n     */\n    constructor(nativeElement) { this.nativeElement = nativeElement; }\n}\n/**\n * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n * already exists, retrieves the existing ViewContainerRef.\n *\n * @param {?} di\n * @return {?} The ViewContainerRef instance to use\n */\nfunction getOrCreateContainerRef(di) {\n    if (!di.viewContainerRef) {\n        /** @type {?} */\n        const vcRefHost = di.node;\n        ngDevMode && assertNodeOfPossibleTypes(vcRefHost, 0 /* Container */, 3 /* Element */);\n        /** @type {?} */\n        const hostParent = /** @type {?} */ ((getParentLNode(vcRefHost)));\n        /** @type {?} */\n        const lContainer = createLContainer(hostParent, vcRefHost.view, true);\n        /** @type {?} */\n        const comment = vcRefHost.view[RENDERER].createComment(ngDevMode ? 'container' : '');\n        /** @type {?} */\n        const lContainerNode = createLNodeObject(0 /* Container */, vcRefHost.view, hostParent, comment, lContainer, null);\n        appendChild(hostParent, comment, vcRefHost.view);\n        if (vcRefHost.queries) {\n            lContainerNode.queries = vcRefHost.queries.container();\n        }\n        /** @type {?} */\n        const hostTNode = /** @type {?} */ (vcRefHost.tNode);\n        if (!hostTNode.dynamicContainerNode) {\n            hostTNode.dynamicContainerNode =\n                createTNode(0 /* Container */, -1, null, null, hostTNode, null);\n        }\n        lContainerNode.tNode = hostTNode.dynamicContainerNode;\n        vcRefHost.dynamicLContainerNode = lContainerNode;\n        addToViewTree(vcRefHost.view, /** @type {?} */ (hostTNode.index), lContainer);\n        di.viewContainerRef = new ViewContainerRef$1(lContainerNode);\n    }\n    return di.viewContainerRef;\n}\n/**\n * A ref to a container that enables adding and removing views from that container\n * imperatively.\n */\nclass ViewContainerRef$1 {\n    /**\n     * @param {?} _lContainerNode\n     */\n    constructor(_lContainerNode) {\n        this._lContainerNode = _lContainerNode;\n        this._viewRefs = [];\n    }\n    /**\n     * @return {?}\n     */\n    clear() {\n        /** @type {?} */\n        const lContainer = this._lContainerNode.data;\n        while (lContainer[VIEWS].length) {\n            this.remove(0);\n        }\n    }\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    get(index) { return this._viewRefs[index] || null; }\n    /**\n     * @return {?}\n     */\n    get length() {\n        /** @type {?} */\n        const lContainer = this._lContainerNode.data;\n        return lContainer[VIEWS].length;\n    }\n    /**\n     * @template C\n     * @param {?} templateRef\n     * @param {?=} context\n     * @param {?=} index\n     * @return {?}\n     */\n    createEmbeddedView(templateRef, context, index) {\n        /** @type {?} */\n        const adjustedIdx = this._adjustIndex(index);\n        /** @type {?} */\n        const viewRef = (/** @type {?} */ (templateRef))\n            .createEmbeddedView(context || /** @type {?} */ ({}), this._lContainerNode, adjustedIdx);\n        (/** @type {?} */ (viewRef)).attachToViewContainerRef(this);\n        this._viewRefs.splice(adjustedIdx, 0, viewRef);\n        return viewRef;\n    }\n    /**\n     * @template C\n     * @param {?} componentFactory\n     * @param {?=} index\n     * @param {?=} injector\n     * @param {?=} projectableNodes\n     * @param {?=} ngModuleRef\n     * @return {?}\n     */\n    createComponent(componentFactory, index, injector, projectableNodes, ngModuleRef) {\n        /** @type {?} */\n        const contextInjector = injector || this.parentInjector;\n        if (!ngModuleRef && contextInjector) {\n            ngModuleRef = contextInjector.get(NgModuleRef);\n        }\n        /** @type {?} */\n        const componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n        this.insert(componentRef.hostView, index);\n        return componentRef;\n    }\n    /**\n     * @param {?} viewRef\n     * @param {?=} index\n     * @return {?}\n     */\n    insert(viewRef, index) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n        }\n        /** @type {?} */\n        const lViewNode = /** @type {?} */ (((/** @type {?} */ (viewRef))._lViewNode));\n        /** @type {?} */\n        const adjustedIdx = this._adjustIndex(index);\n        insertView(this._lContainerNode, lViewNode, adjustedIdx);\n        /** @type {?} */\n        const views = this._lContainerNode.data[VIEWS];\n        /** @type {?} */\n        const beforeNode = adjustedIdx + 1 < views.length ?\n            (/** @type {?} */ ((getChildLNode(views[adjustedIdx + 1])))).native :\n            this._lContainerNode.native;\n        addRemoveViewFromContainer(this._lContainerNode, lViewNode, true, beforeNode);\n        (/** @type {?} */ (viewRef)).attachToViewContainerRef(this);\n        this._viewRefs.splice(adjustedIdx, 0, viewRef);\n        return viewRef;\n    }\n    /**\n     * @param {?} viewRef\n     * @param {?} newIndex\n     * @return {?}\n     */\n    move(viewRef, newIndex) {\n        /** @type {?} */\n        const index = this.indexOf(viewRef);\n        this.detach(index);\n        this.insert(viewRef, this._adjustIndex(newIndex));\n        return viewRef;\n    }\n    /**\n     * @param {?} viewRef\n     * @return {?}\n     */\n    indexOf(viewRef) { return this._viewRefs.indexOf(viewRef); }\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    remove(index) {\n        /** @type {?} */\n        const adjustedIdx = this._adjustIndex(index, -1);\n        removeView(this._lContainerNode, adjustedIdx);\n        this._viewRefs.splice(adjustedIdx, 1);\n    }\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    detach(index) {\n        /** @type {?} */\n        const adjustedIdx = this._adjustIndex(index, -1);\n        /** @type {?} */\n        const lViewNode = detachView(this._lContainerNode, adjustedIdx);\n        return this._viewRefs.splice(adjustedIdx, 1)[0] || null;\n    }\n    /**\n     * @param {?=} index\n     * @param {?=} shift\n     * @return {?}\n     */\n    _adjustIndex(index, shift = 0) {\n        if (index == null) {\n            return this._lContainerNode.data[VIEWS].length + shift;\n        }\n        if (ngDevMode) {\n            assertGreaterThan(index, -1, 'index must be positive');\n            // +1 because it's legal to insert at the end.\n            assertLessThan(index, this._lContainerNode.data[VIEWS].length + 1 + shift, 'index');\n        }\n        return index;\n    }\n}\n/**\n * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n * exists, retrieves the existing TemplateRef.\n *\n * @template T\n * @param {?} di The node injector where we should store a created TemplateRef\n * @return {?} The TemplateRef instance to use\n */\nfunction getOrCreateTemplateRef(di) {\n    if (!di.templateRef) {\n        ngDevMode && assertNodeType(di.node, 0 /* Container */);\n        /** @type {?} */\n        const hostNode = /** @type {?} */ (di.node);\n        /** @type {?} */\n        const hostTNode = hostNode.tNode;\n        ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n        di.templateRef = new TemplateRef$1(getOrCreateElementRef(di), /** @type {?} */ (hostTNode.tViews), getRenderer(), hostNode.data[QUERIES]);\n    }\n    return di.templateRef;\n}\n/**\n * @template T\n */\nclass TemplateRef$1 {\n    /**\n     * @param {?} elementRef\n     * @param {?} _tView\n     * @param {?} _renderer\n     * @param {?} _queries\n     */\n    constructor(elementRef, _tView, _renderer, _queries) {\n        this._tView = _tView;\n        this._renderer = _renderer;\n        this._queries = _queries;\n        this.elementRef = elementRef;\n    }\n    /**\n     * @param {?} context\n     * @param {?=} containerNode\n     * @param {?=} index\n     * @return {?}\n     */\n    createEmbeddedView(context, containerNode, index) {\n        /** @type {?} */\n        const viewNode = createEmbeddedViewNode(this._tView, context, this._renderer, this._queries);\n        if (containerNode) {\n            insertView(containerNode, viewNode, /** @type {?} */ ((index)));\n        }\n        renderEmbeddedTemplate(viewNode, this._tView, context, 1 /* Create */);\n        /** @type {?} */\n        const viewRef = new ViewRef$1(viewNode.data, context);\n        viewRef._lViewNode = viewNode;\n        return viewRef;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * This feature publishes the directive (or component) into the DI system, making it visible to\n * others for injection.\n *\n * @template T\n * @param {?} definition\n * @return {?}\n */\nfunction PublicFeature(definition) {\n    definition.diPublic = diPublic;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst i18nTagRegex = /{\\$([^}]+)}/g;\n/**\n * Takes a translation string, the initial list of placeholders (elements and expressions) and the\n * indexes of their corresponding expression nodes to return a list of instructions for each\n * template function.\n *\n * Because embedded templates have different indexes for each placeholder, each parameter (except\n * the translation) is an array, where each value corresponds to a different template, by order of\n * appearance.\n *\n * @param {?} translation A translation string where placeholders are represented by `{$name}`\n * @param {?} elements An array containing, for each template, the maps of element placeholders and\n * their indexes.\n * @param {?=} expressions An array containing, for each template, the maps of expression placeholders\n * and their indexes.\n * @param {?=} templateRoots An array of template roots whose content should be ignored when\n * generating the instructions for their parent template.\n * @param {?=} lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n * an ng-container.\n *\n * @return {?} A list of instructions used to translate each template.\n */\nfunction i18nMapping(translation, elements, expressions, templateRoots, lastChildIndex) {\n    /** @type {?} */\n    const translationParts = translation.split(i18nTagRegex);\n    /** @type {?} */\n    const nbTemplates = templateRoots ? templateRoots.length + 1 : 1;\n    /** @type {?} */\n    const instructions = (new Array(nbTemplates)).fill(undefined);\n    generateMappingInstructions(0, 0, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex);\n    return instructions;\n}\n/**\n * Internal function that reads the translation parts and generates a set of instructions for each\n * template.\n *\n * See `i18nMapping()` for more details.\n *\n * @param {?} tmplIndex The order of appearance of the template.\n * 0 for the root template, following indexes match the order in `templateRoots`.\n * @param {?} partIndex The current index in `translationParts`.\n * @param {?} translationParts The translation string split into an array of placeholders and text\n * elements.\n * @param {?} instructions The current list of instructions to update.\n * @param {?} elements An array containing, for each template, the maps of element placeholders and\n * their indexes.\n * @param {?=} expressions An array containing, for each template, the maps of expression placeholders\n * and their indexes.\n * @param {?=} templateRoots An array of template roots whose content should be ignored when\n * generating the instructions for their parent template.\n * @param {?=} lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n * an ng-container.\n *\n * @return {?} the current index in `translationParts`\n */\nfunction generateMappingInstructions(tmplIndex, partIndex, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex) {\n    /** @type {?} */\n    const tmplInstructions = [];\n    /** @type {?} */\n    const phVisited = [];\n    /** @type {?} */\n    let openedTagCount = 0;\n    /** @type {?} */\n    let maxIndex = 0;\n    /** @type {?} */\n    let currentElements = elements && elements[tmplIndex] ? elements[tmplIndex] : null;\n    /** @type {?} */\n    let currentExpressions = expressions && expressions[tmplIndex] ? expressions[tmplIndex] : null;\n    instructions[tmplIndex] = tmplInstructions;\n    for (; partIndex < translationParts.length; partIndex++) {\n        /** @type {?} */\n        const value = translationParts[partIndex];\n        // Odd indexes are placeholders\n        if (partIndex & 1) {\n            /** @type {?} */\n            let phIndex;\n            if (currentElements && currentElements[value] !== undefined) {\n                phIndex = currentElements[value];\n                /** @type {?} */\n                let templateRootIndex = templateRoots ? templateRoots.indexOf(value) : -1;\n                if (templateRootIndex !== -1 && (templateRootIndex + 1) !== tmplIndex) {\n                    // This is a template root, it has no closing tag, not treating it as an element\n                    tmplInstructions.push(phIndex | -2147483648 /* TemplateRoot */);\n                }\n                else {\n                    tmplInstructions.push(phIndex | 1073741824 /* Element */);\n                    openedTagCount++;\n                }\n                phVisited.push(value);\n            }\n            else if (currentExpressions && currentExpressions[value] !== undefined) {\n                phIndex = currentExpressions[value];\n                // The placeholder represents an expression, add an instruction to move it\n                tmplInstructions.push(phIndex | 1610612736 /* Expression */);\n                phVisited.push(value);\n            }\n            else {\n                // It is a closing tag\n                tmplInstructions.push(-1073741824 /* CloseNode */);\n                if (tmplIndex > 0) {\n                    openedTagCount--;\n                    // If we have reached the closing tag for this template, exit the loop\n                    if (openedTagCount === 0) {\n                        break;\n                    }\n                }\n            }\n            if (phIndex !== undefined && phIndex > maxIndex) {\n                maxIndex = phIndex;\n            }\n            if (templateRoots) {\n                /** @type {?} */\n                const newTmplIndex = templateRoots.indexOf(value) + 1;\n                if (newTmplIndex !== 0 && newTmplIndex !== tmplIndex) {\n                    partIndex = generateMappingInstructions(newTmplIndex, partIndex, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex);\n                }\n            }\n        }\n        else if (value) {\n            // It's a non-empty string, create a text node\n            tmplInstructions.push(536870912 /* Text */, value);\n        }\n    }\n    // Add instructions to remove elements that are not used in the translation\n    if (elements) {\n        /** @type {?} */\n        const tmplElements = elements[tmplIndex];\n        if (tmplElements) {\n            /** @type {?} */\n            const phKeys = Object.keys(tmplElements);\n            for (let i = 0; i < phKeys.length; i++) {\n                /** @type {?} */\n                const ph = phKeys[i];\n                if (phVisited.indexOf(ph) === -1) {\n                    /** @type {?} */\n                    let index = tmplElements[ph];\n                    // Add an instruction to remove the element\n                    tmplInstructions.push(index | -536870912 /* RemoveNode */);\n                    if (index > maxIndex) {\n                        maxIndex = index;\n                    }\n                }\n            }\n        }\n    }\n    // Add instructions to remove expressions that are not used in the translation\n    if (expressions) {\n        /** @type {?} */\n        const tmplExpressions = expressions[tmplIndex];\n        if (tmplExpressions) {\n            /** @type {?} */\n            const phKeys = Object.keys(tmplExpressions);\n            for (let i = 0; i < phKeys.length; i++) {\n                /** @type {?} */\n                const ph = phKeys[i];\n                if (phVisited.indexOf(ph) === -1) {\n                    /** @type {?} */\n                    let index = tmplExpressions[ph];\n                    if (ngDevMode) {\n                        assertLessThan(index.toString(2).length, 28, `Index ${index} is too big and will overflow`);\n                    }\n                    // Add an instruction to remove the expression\n                    tmplInstructions.push(index | -536870912 /* RemoveNode */);\n                    if (index > maxIndex) {\n                        maxIndex = index;\n                    }\n                }\n            }\n        }\n    }\n    if (tmplIndex === 0 && typeof lastChildIndex === 'number') {\n        // The current parent is an ng-container and it has more children after the translation that we\n        // need to append to keep the order of the DOM nodes correct\n        for (let i = maxIndex + 1; i <= lastChildIndex; i++) {\n            if (ngDevMode) {\n                assertLessThan(i.toString(2).length, 28, `Index ${i} is too big and will overflow`);\n            }\n            tmplInstructions.push(i | -1610612736 /* Any */);\n        }\n    }\n    return partIndex;\n}\n/**\n * @param {?} node\n * @param {?} parentNode\n * @param {?} previousNode\n * @return {?}\n */\nfunction appendI18nNode(node, parentNode, previousNode) {\n    if (ngDevMode) {\n        ngDevMode.rendererMoveNode++;\n    }\n    /** @type {?} */\n    const viewData = getViewData();\n    appendChild(parentNode, node.native || null, viewData);\n    /** @type {?} */\n    const firstTemplatePass = node.view[TVIEW].firstTemplatePass;\n    if (firstTemplatePass) {\n        if (previousNode === parentNode && node.tNode !== parentNode.tNode.child) {\n            node.tNode.next = parentNode.tNode.child;\n            parentNode.tNode.child = node.tNode;\n        }\n        else if (previousNode !== parentNode && node.tNode !== previousNode.tNode.next) {\n            node.tNode.next = previousNode.tNode.next;\n            previousNode.tNode.next = node.tNode;\n        }\n        else {\n            node.tNode.next = null;\n        }\n        if (parentNode.view === node.view)\n            node.tNode.parent = /** @type {?} */ (parentNode.tNode);\n    }\n    // Template containers also have a comment node for the `ViewContainerRef` that should be moved\n    if (node.tNode.type === 0 /* Container */ && node.dynamicLContainerNode) {\n        appendChild(parentNode, node.dynamicLContainerNode.native || null, viewData);\n        if (firstTemplatePass) {\n            node.tNode.dynamicContainerNode = node.dynamicLContainerNode.tNode;\n            node.dynamicLContainerNode.tNode.parent = /** @type {?} */ (node.tNode);\n        }\n        return node.dynamicLContainerNode;\n    }\n    return node;\n}\n/**\n * Takes a list of instructions generated by `i18nMapping()` to transform the template accordingly.\n *\n * @param {?} startIndex Index of the first element to translate (for instance the first child of the\n * element with the i18n attribute).\n * @param {?} instructions The list of instructions to apply on the current view.\n * @return {?}\n */\nfunction i18nApply(startIndex, instructions) {\n    /** @type {?} */\n    const viewData = getViewData();\n    if (ngDevMode) {\n        assertEqual(viewData[BINDING_INDEX], -1, 'i18nApply should be called before any binding');\n    }\n    if (!instructions) {\n        return;\n    }\n    /** @type {?} */\n    const renderer = getRenderer();\n    /** @type {?} */\n    let localParentNode = getParentLNode(load(startIndex)) || getPreviousOrParentNode();\n    /** @type {?} */\n    let localPreviousNode = localParentNode;\n    resetApplicationState(); // We don't want to add to the tree with the wrong previous node\n    for (let i = 0; i < instructions.length; i++) {\n        /** @type {?} */\n        const instruction = /** @type {?} */ (instructions[i]);\n        switch (instruction & -536870912 /* InstructionMask */) {\n            case 1073741824 /* Element */:\n                /** @type {?} */\n                const element$$1 = load(instruction & 536870911 /* IndexMask */);\n                localPreviousNode = appendI18nNode(element$$1, localParentNode, localPreviousNode);\n                localParentNode = element$$1;\n                break;\n            case 1610612736 /* Expression */:\n            case -2147483648 /* TemplateRoot */:\n            case -1610612736 /* Any */:\n                /** @type {?} */\n                const node = load(instruction & 536870911 /* IndexMask */);\n                localPreviousNode = appendI18nNode(node, localParentNode, localPreviousNode);\n                break;\n            case 536870912 /* Text */:\n                if (ngDevMode) {\n                    ngDevMode.rendererCreateTextNode++;\n                }\n                /** @type {?} */\n                const value = instructions[++i];\n                /** @type {?} */\n                const textRNode = createTextNode(value, renderer);\n                /** @type {?} */\n                const textLNode = createLNode(viewData.length - HEADER_OFFSET, 3 /* Element */, textRNode, null, null);\n                localPreviousNode = appendI18nNode(textLNode, localParentNode, localPreviousNode);\n                resetApplicationState();\n                break;\n            case -1073741824 /* CloseNode */:\n                localPreviousNode = localParentNode;\n                localParentNode = /** @type {?} */ ((getParentLNode(localParentNode)));\n                break;\n            case -536870912 /* RemoveNode */:\n                if (ngDevMode) {\n                    ngDevMode.rendererRemoveNode++;\n                }\n                /** @type {?} */\n                const index = instruction & 536870911 /* IndexMask */;\n                /** @type {?} */\n                const removedNode = load(index);\n                /** @type {?} */\n                const parentNode = /** @type {?} */ ((getParentLNode(removedNode)));\n                removeChild(parentNode, removedNode.native || null, viewData);\n                // For template containers we also need to remove their `ViewContainerRef` from the DOM\n                if (removedNode.tNode.type === 0 /* Container */ && removedNode.dynamicLContainerNode) {\n                    removeChild(parentNode, removedNode.dynamicLContainerNode.native || null, viewData);\n                    removedNode.dynamicLContainerNode.tNode.detached = true;\n                    removedNode.dynamicLContainerNode.data[RENDER_PARENT] = null;\n                }\n                break;\n        }\n    }\n}\n/**\n * Takes a translation string and the initial list of expressions and returns a list of instructions\n * that will be used to translate an attribute.\n * Even indexes contain static strings, while odd indexes contain the index of the expression whose\n * value will be concatenated into the final translation.\n * @param {?} translation\n * @param {?} placeholders\n * @return {?}\n */\nfunction i18nExpMapping(translation, placeholders) {\n    /** @type {?} */\n    const staticText = translation.split(i18nTagRegex);\n    // odd indexes are placeholders\n    for (let i = 1; i < staticText.length; i += 2) {\n        staticText[i] = placeholders[staticText[i]];\n    }\n    return staticText;\n}\n/**\n * Checks if the value of an expression has changed and replaces it by its value in a translation,\n * or returns NO_CHANGE.\n *\n * @param {?} instructions A list of instructions that will be used to translate an attribute.\n * @param {?} v0 value checked for change.\n *\n * @return {?} The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n */\nfunction i18nInterpolation1(instructions, v0) {\n    /** @type {?} */\n    const different = bindingUpdated(v0);\n    if (!different) {\n        return NO_CHANGE;\n    }\n    /** @type {?} */\n    let res = '';\n    for (let i = 0; i < instructions.length; i++) {\n        // Odd indexes are bindings\n        if (i & 1) {\n            res += stringify$1(v0);\n        }\n        else {\n            res += instructions[i];\n        }\n    }\n    return res;\n}\n/**\n * Checks if the values of up to 2 expressions have changed and replaces them by their values in a\n * translation, or returns NO_CHANGE.\n *\n * @param {?} instructions A list of instructions that will be used to translate an attribute.\n * @param {?} v0 value checked for change.\n * @param {?} v1 value checked for change.\n *\n * @return {?} The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n */\nfunction i18nInterpolation2(instructions, v0, v1) {\n    /** @type {?} */\n    const different = bindingUpdated2(v0, v1);\n    if (!different) {\n        return NO_CHANGE;\n    }\n    /** @type {?} */\n    let res = '';\n    for (let i = 0; i < instructions.length; i++) {\n        // Odd indexes are bindings\n        if (i & 1) {\n            /** @type {?} */\n            const idx = /** @type {?} */ (instructions[i]);\n            /** @type {?} */\n            const b1 = idx & 1;\n            /** @type {?} */\n            const value = b1 ? v1 : v0;\n            res += stringify$1(value);\n        }\n        else {\n            res += instructions[i];\n        }\n    }\n    return res;\n}\n/**\n * Checks if the values of up to 3 expressions have changed and replaces them by their values in a\n * translation, or returns NO_CHANGE.\n *\n * @param {?} instructions A list of instructions that will be used to translate an attribute.\n * @param {?} v0 value checked for change.\n * @param {?} v1 value checked for change.\n * @param {?} v2 value checked for change.\n *\n * @return {?} The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n */\nfunction i18nInterpolation3(instructions, v0, v1, v2) {\n    /** @type {?} */\n    let different = bindingUpdated2(v0, v1);\n    different = bindingUpdated(v2) || different;\n    if (!different) {\n        return NO_CHANGE;\n    }\n    /** @type {?} */\n    let res = '';\n    for (let i = 0; i < instructions.length; i++) {\n        // Odd indexes are bindings\n        if (i & 1) {\n            /** @type {?} */\n            const idx = /** @type {?} */ (instructions[i]);\n            /** @type {?} */\n            const b2 = idx & 2;\n            /** @type {?} */\n            const b1 = idx & 1;\n            /** @type {?} */\n            const value = b2 ? v2 : (b1 ? v1 : v0);\n            res += stringify$1(value);\n        }\n        else {\n            res += instructions[i];\n        }\n    }\n    return res;\n}\n/**\n * Checks if the values of up to 4 expressions have changed and replaces them by their values in a\n * translation, or returns NO_CHANGE.\n *\n * @param {?} instructions A list of instructions that will be used to translate an attribute.\n * @param {?} v0 value checked for change.\n * @param {?} v1 value checked for change.\n * @param {?} v2 value checked for change.\n * @param {?} v3 value checked for change.\n *\n * @return {?} The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n */\nfunction i18nInterpolation4(instructions, v0, v1, v2, v3) {\n    /** @type {?} */\n    const different = bindingUpdated4(v0, v1, v2, v3);\n    if (!different) {\n        return NO_CHANGE;\n    }\n    /** @type {?} */\n    let res = '';\n    for (let i = 0; i < instructions.length; i++) {\n        // Odd indexes are bindings\n        if (i & 1) {\n            /** @type {?} */\n            const idx = /** @type {?} */ (instructions[i]);\n            /** @type {?} */\n            const b2 = idx & 2;\n            /** @type {?} */\n            const b1 = idx & 1;\n            /** @type {?} */\n            const value = b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0);\n            res += stringify$1(value);\n        }\n        else {\n            res += instructions[i];\n        }\n    }\n    return res;\n}\n/**\n * Checks if the values of up to 5 expressions have changed and replaces them by their values in a\n * translation, or returns NO_CHANGE.\n *\n * @param {?} instructions A list of instructions that will be used to translate an attribute.\n * @param {?} v0 value checked for change.\n * @param {?} v1 value checked for change.\n * @param {?} v2 value checked for change.\n * @param {?} v3 value checked for change.\n * @param {?} v4 value checked for change.\n *\n * @return {?} The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n */\nfunction i18nInterpolation5(instructions, v0, v1, v2, v3, v4) {\n    /** @type {?} */\n    let different = bindingUpdated4(v0, v1, v2, v3);\n    different = bindingUpdated(v4) || different;\n    if (!different) {\n        return NO_CHANGE;\n    }\n    /** @type {?} */\n    let res = '';\n    for (let i = 0; i < instructions.length; i++) {\n        // Odd indexes are bindings\n        if (i & 1) {\n            /** @type {?} */\n            const idx = /** @type {?} */ (instructions[i]);\n            /** @type {?} */\n            const b4 = idx & 4;\n            /** @type {?} */\n            const b2 = idx & 2;\n            /** @type {?} */\n            const b1 = idx & 1;\n            /** @type {?} */\n            const value = b4 ? v4 : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n            res += stringify$1(value);\n        }\n        else {\n            res += instructions[i];\n        }\n    }\n    return res;\n}\n/**\n * Checks if the values of up to 6 expressions have changed and replaces them by their values in a\n * translation, or returns NO_CHANGE.\n *\n * @param {?} instructions A list of instructions that will be used to translate an attribute.\n * @param {?} v0 value checked for change.\n * @param {?} v1 value checked for change.\n * @param {?} v2 value checked for change.\n * @param {?} v3 value checked for change.\n * @param {?} v4 value checked for change.\n * @param {?} v5 value checked for change.\n *\n * @return {?} The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n */\nfunction i18nInterpolation6(instructions, v0, v1, v2, v3, v4, v5) {\n    /** @type {?} */\n    let different = bindingUpdated4(v0, v1, v2, v3);\n    different = bindingUpdated2(v4, v5) || different;\n    if (!different) {\n        return NO_CHANGE;\n    }\n    /** @type {?} */\n    let res = '';\n    for (let i = 0; i < instructions.length; i++) {\n        // Odd indexes are bindings\n        if (i & 1) {\n            /** @type {?} */\n            const idx = /** @type {?} */ (instructions[i]);\n            /** @type {?} */\n            const b4 = idx & 4;\n            /** @type {?} */\n            const b2 = idx & 2;\n            /** @type {?} */\n            const b1 = idx & 1;\n            /** @type {?} */\n            const value = b4 ? (b1 ? v5 : v4) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n            res += stringify$1(value);\n        }\n        else {\n            res += instructions[i];\n        }\n    }\n    return res;\n}\n/**\n * Checks if the values of up to 7 expressions have changed and replaces them by their values in a\n * translation, or returns NO_CHANGE.\n *\n * @param {?} instructions A list of instructions that will be used to translate an attribute.\n * @param {?} v0 value checked for change.\n * @param {?} v1 value checked for change.\n * @param {?} v2 value checked for change.\n * @param {?} v3 value checked for change.\n * @param {?} v4 value checked for change.\n * @param {?} v5 value checked for change.\n * @param {?} v6 value checked for change.\n *\n * @return {?} The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n */\nfunction i18nInterpolation7(instructions, v0, v1, v2, v3, v4, v5, v6) {\n    /** @type {?} */\n    let different = bindingUpdated4(v0, v1, v2, v3);\n    different = bindingUpdated2(v4, v5) || different;\n    different = bindingUpdated(v6) || different;\n    if (!different) {\n        return NO_CHANGE;\n    }\n    /** @type {?} */\n    let res = '';\n    for (let i = 0; i < instructions.length; i++) {\n        // Odd indexes are bindings\n        if (i & 1) {\n            /** @type {?} */\n            const idx = /** @type {?} */ (instructions[i]);\n            /** @type {?} */\n            const b4 = idx & 4;\n            /** @type {?} */\n            const b2 = idx & 2;\n            /** @type {?} */\n            const b1 = idx & 1;\n            /** @type {?} */\n            const value = b4 ? (b2 ? v6 : (b1 ? v5 : v4)) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n            res += stringify$1(value);\n        }\n        else {\n            res += instructions[i];\n        }\n    }\n    return res;\n}\n/**\n * Checks if the values of up to 8 expressions have changed and replaces them by their values in a\n * translation, or returns NO_CHANGE.\n *\n * @param {?} instructions A list of instructions that will be used to translate an attribute.\n * @param {?} v0 value checked for change.\n * @param {?} v1 value checked for change.\n * @param {?} v2 value checked for change.\n * @param {?} v3 value checked for change.\n * @param {?} v4 value checked for change.\n * @param {?} v5 value checked for change.\n * @param {?} v6 value checked for change.\n * @param {?} v7 value checked for change.\n *\n * @return {?} The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n */\nfunction i18nInterpolation8(instructions, v0, v1, v2, v3, v4, v5, v6, v7) {\n    /** @type {?} */\n    let different = bindingUpdated4(v0, v1, v2, v3);\n    different = bindingUpdated4(v4, v5, v6, v7) || different;\n    if (!different) {\n        return NO_CHANGE;\n    }\n    /** @type {?} */\n    let res = '';\n    for (let i = 0; i < instructions.length; i++) {\n        // Odd indexes are bindings\n        if (i & 1) {\n            /** @type {?} */\n            const idx = /** @type {?} */ (instructions[i]);\n            /** @type {?} */\n            const b4 = idx & 4;\n            /** @type {?} */\n            const b2 = idx & 2;\n            /** @type {?} */\n            const b1 = idx & 1;\n            /** @type {?} */\n            const value = b4 ? (b2 ? (b1 ? v7 : v6) : (b1 ? v5 : v4)) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n            res += stringify$1(value);\n        }\n        else {\n            res += instructions[i];\n        }\n    }\n    return res;\n}\n/**\n * Create a translated interpolation binding with a variable number of expressions.\n *\n * If there are 1 to 8 expressions then `i18nInterpolation()` should be used instead. It is faster\n * because there is no need to create an array of expressions and iterate over it.\n *\n * @param {?} instructions\n * @param {?} values\n * @return {?} The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n */\nfunction i18nInterpolationV(instructions, values) {\n    /** @type {?} */\n    let different = false;\n    for (let i = 0; i < values.length; i++) {\n        // Check if bindings have changed\n        bindingUpdated(values[i]) && (different = true);\n    }\n    if (!different) {\n        return NO_CHANGE;\n    }\n    /** @type {?} */\n    let res = '';\n    for (let i = 0; i < instructions.length; i++) {\n        // Odd indexes are placeholders\n        if (i & 1) {\n            res += stringify$1(values[/** @type {?} */ (instructions[i])]);\n        }\n        else {\n            res += instructions[i];\n        }\n    }\n    return res;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst COMPONENT_FACTORY_RESOLVER = {\n    provide: ComponentFactoryResolver,\n    useFactory: () => new ComponentFactoryResolver$1(),\n    deps: [],\n};\n/**\n * @template T\n */\nclass NgModuleRef$1 extends NgModuleRef {\n    /**\n     * @param {?} ngModuleType\n     * @param {?} parentInjector\n     */\n    constructor(ngModuleType, parentInjector) {\n        super();\n        // tslint:disable-next-line:require-internal-with-underscore\n        this._bootstrapComponents = [];\n        this.destroyCbs = [];\n        /** @type {?} */\n        const ngModuleDef = (/** @type {?} */ ((ngModuleType))).ngModuleDef;\n        ngDevMode && assertDefined(ngModuleDef, `NgModule '${stringify(ngModuleType)}' is not a subtype of 'NgModuleType'.`);\n        this._bootstrapComponents = ngModuleDef.bootstrap;\n        /** @type {?} */\n        const additionalProviders = [\n            COMPONENT_FACTORY_RESOLVER, {\n                provide: NgModuleRef,\n                useValue: this,\n            }\n        ];\n        this.injector = createInjector(ngModuleType, parentInjector, additionalProviders);\n        this.instance = this.injector.get(ngModuleType);\n        this.componentFactoryResolver = new ComponentFactoryResolver$1();\n    }\n    /**\n     * @return {?}\n     */\n    destroy() {\n        ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed'); /** @type {?} */\n        ((this.destroyCbs)).forEach(fn => fn());\n        this.destroyCbs = null;\n    }\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    onDestroy(callback) {\n        ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed'); /** @type {?} */\n        ((this.destroyCbs)).push(callback);\n    }\n}\n/**\n * @template T\n */\nclass NgModuleFactory$1 extends NgModuleFactory {\n    /**\n     * @param {?} moduleType\n     */\n    constructor(moduleType) {\n        super();\n        this.moduleType = moduleType;\n    }\n    /**\n     * @param {?} parentInjector\n     * @return {?}\n     */\n    create(parentInjector) {\n        return new NgModuleRef$1(this.moduleType, parentInjector);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * If the value hasn't been saved, calls the pure function to store and return the\n * value. If it has been saved, returns the saved value.\n *\n * @template T\n * @param {?} slotOffset the offset in the reserved slot space {\\@link reserveSlots}\n * @param {?} pureFn Function that returns a value\n * @param {?=} thisArg Optional calling context of pureFn\n * @return {?} value\n */\nfunction pureFunction0(slotOffset, pureFn, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 1);\n    /** @type {?} */\n    const index = moveBindingIndexToReservedSlot(slotOffset);\n    /** @type {?} */\n    const value = getCreationMode() ?\n        checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg) : pureFn()) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of the provided exp has changed, calls the pure function to return\n * an updated value. Or if the value has not changed, returns cached value.\n *\n * @param {?} slotOffset the offset in the reserved slot space {\\@link reserveSlots}\n * @param {?} pureFn Function that returns an updated value\n * @param {?} exp Updated expression value\n * @param {?=} thisArg Optional calling context of pureFn\n * @return {?} Updated or cached value\n */\nfunction pureFunction1(slotOffset, pureFn, exp, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 2);\n    /** @type {?} */\n    const index = moveBindingIndexToReservedSlot(slotOffset);\n    /** @type {?} */\n    const value = bindingUpdated(exp) ?\n        checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param {?} slotOffset the offset in the reserved slot space {\\@link reserveSlots}\n * @param {?} pureFn\n * @param {?} exp1\n * @param {?} exp2\n * @param {?=} thisArg Optional calling context of pureFn\n * @return {?} Updated or cached value\n */\nfunction pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 3);\n    /** @type {?} */\n    const index = moveBindingIndexToReservedSlot(slotOffset);\n    /** @type {?} */\n    const value = bindingUpdated2(exp1, exp2) ?\n        checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param {?} slotOffset the offset in the reserved slot space {\\@link reserveSlots}\n * @param {?} pureFn\n * @param {?} exp1\n * @param {?} exp2\n * @param {?} exp3\n * @param {?=} thisArg Optional calling context of pureFn\n * @return {?} Updated or cached value\n */\nfunction pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 4);\n    /** @type {?} */\n    const index = moveBindingIndexToReservedSlot(slotOffset);\n    /** @type {?} */\n    const different = bindingUpdated2(exp1, exp2);\n    /** @type {?} */\n    const value = bindingUpdated(exp3) || different ?\n        checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param {?} slotOffset the offset in the reserved slot space {\\@link reserveSlots}\n * @param {?} pureFn\n * @param {?} exp1\n * @param {?} exp2\n * @param {?} exp3\n * @param {?} exp4\n * @param {?=} thisArg Optional calling context of pureFn\n * @return {?} Updated or cached value\n */\nfunction pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 5);\n    /** @type {?} */\n    const index = moveBindingIndexToReservedSlot(slotOffset);\n    /** @type {?} */\n    const value = bindingUpdated4(exp1, exp2, exp3, exp4) ?\n        checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param {?} slotOffset the offset in the reserved slot space {\\@link reserveSlots}\n * @param {?} pureFn\n * @param {?} exp1\n * @param {?} exp2\n * @param {?} exp3\n * @param {?} exp4\n * @param {?} exp5\n * @param {?=} thisArg Optional calling context of pureFn\n * @return {?} Updated or cached value\n */\nfunction pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 6);\n    /** @type {?} */\n    const index = moveBindingIndexToReservedSlot(slotOffset);\n    /** @type {?} */\n    const different = bindingUpdated4(exp1, exp2, exp3, exp4);\n    /** @type {?} */\n    const value = bindingUpdated(exp5) || different ?\n        checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n            pureFn(exp1, exp2, exp3, exp4, exp5)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param {?} slotOffset the offset in the reserved slot space {\\@link reserveSlots}\n * @param {?} pureFn\n * @param {?} exp1\n * @param {?} exp2\n * @param {?} exp3\n * @param {?} exp4\n * @param {?} exp5\n * @param {?} exp6\n * @param {?=} thisArg Optional calling context of pureFn\n * @return {?} Updated or cached value\n */\nfunction pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 7);\n    /** @type {?} */\n    const index = moveBindingIndexToReservedSlot(slotOffset);\n    /** @type {?} */\n    const different = bindingUpdated4(exp1, exp2, exp3, exp4);\n    /** @type {?} */\n    const value = bindingUpdated2(exp5, exp6) || different ?\n        checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n            pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param {?} slotOffset the offset in the reserved slot space {\\@link reserveSlots}\n * @param {?} pureFn\n * @param {?} exp1\n * @param {?} exp2\n * @param {?} exp3\n * @param {?} exp4\n * @param {?} exp5\n * @param {?} exp6\n * @param {?} exp7\n * @param {?=} thisArg Optional calling context of pureFn\n * @return {?} Updated or cached value\n */\nfunction pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 8);\n    /** @type {?} */\n    const index = moveBindingIndexToReservedSlot(slotOffset);\n    /** @type {?} */\n    let different = bindingUpdated4(exp1, exp2, exp3, exp4);\n    different = bindingUpdated2(exp5, exp6) || different;\n    /** @type {?} */\n    const value = bindingUpdated(exp7) || different ?\n        checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n            pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param {?} slotOffset the offset in the reserved slot space {\\@link reserveSlots}\n * @param {?} pureFn\n * @param {?} exp1\n * @param {?} exp2\n * @param {?} exp3\n * @param {?} exp4\n * @param {?} exp5\n * @param {?} exp6\n * @param {?} exp7\n * @param {?} exp8\n * @param {?=} thisArg Optional calling context of pureFn\n * @return {?} Updated or cached value\n */\nfunction pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 9);\n    /** @type {?} */\n    const index = moveBindingIndexToReservedSlot(slotOffset);\n    /** @type {?} */\n    const different = bindingUpdated4(exp1, exp2, exp3, exp4);\n    /** @type {?} */\n    const value = bindingUpdated4(exp5, exp6, exp7, exp8) || different ?\n        checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n            pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * pureFunction instruction that can support any number of bindings.\n *\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param {?} slotOffset the offset in the reserved slot space {\\@link reserveSlots}\n * @param {?} pureFn A pure function that takes binding values and builds an object or array\n * containing those values.\n * @param {?} exps An array of binding values\n * @param {?=} thisArg Optional calling context of pureFn\n * @return {?} Updated or cached value\n */\nfunction pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, exps.length + 1);\n    /** @type {?} */\n    const index = moveBindingIndexToReservedSlot(slotOffset);\n    /** @type {?} */\n    let different = false;\n    for (let i = 0; i < exps.length; i++) {\n        bindingUpdated(exps[i]) && (different = true);\n    }\n    /** @type {?} */\n    const value = different ? checkAndUpdateBinding$1(pureFn.apply(thisArg, exps)) : consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Create a pipe.\n *\n * @param {?} index Pipe index where the pipe will be stored.\n * @param {?} pipeName The name of the pipe\n * @return {?} T the instance of the pipe.\n */\nfunction pipe(index, pipeName) {\n    /** @type {?} */\n    const tView = getTView();\n    /** @type {?} */\n    let pipeDef;\n    /** @type {?} */\n    const adjustedIndex = index + HEADER_OFFSET;\n    if (tView.firstTemplatePass) {\n        pipeDef = getPipeDef(pipeName, tView.pipeRegistry);\n        tView.data[adjustedIndex] = pipeDef;\n        if (pipeDef.onDestroy) {\n            (tView.pipeDestroyHooks || (tView.pipeDestroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n        }\n    }\n    else {\n        pipeDef = /** @type {?} */ (tView.data[adjustedIndex]);\n    }\n    /** @type {?} */\n    const pipeInstance = pipeDef.factory();\n    store(index, pipeInstance);\n    return pipeInstance;\n}\n/**\n * Searches the pipe registry for a pipe with the given name. If one is found,\n * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n *\n * @param {?} name Name of pipe to resolve\n * @param {?} registry Full list of available pipes\n * @return {?} Matching PipeDef\n */\nfunction getPipeDef(name, registry) {\n    if (registry) {\n        for (let i = 0; i < registry.length; i++) {\n            /** @type {?} */\n            const pipeDef = registry[i];\n            if (name === pipeDef.name) {\n                return pipeDef;\n            }\n        }\n    }\n    throw new Error(`Pipe with name '${name}' not found!`);\n}\n/**\n * Invokes a pipe with 1 arguments.\n *\n * This instruction acts as a guard to {\\@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param {?} index Pipe index where the pipe was stored on creation.\n * @param {?} slotOffset the offset in the reserved slot space {\\@link reserveSlots}\n * @param {?} v1 1st argument to {\\@link PipeTransform#transform}.\n * @return {?}\n */\nfunction pipeBind1(index, slotOffset, v1) {\n    /** @type {?} */\n    const pipeInstance = load(index);\n    return isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n        pipeInstance.transform(v1);\n}\n/**\n * Invokes a pipe with 2 arguments.\n *\n * This instruction acts as a guard to {\\@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param {?} index Pipe index where the pipe was stored on creation.\n * @param {?} slotOffset the offset in the reserved slot space {\\@link reserveSlots}\n * @param {?} v1 1st argument to {\\@link PipeTransform#transform}.\n * @param {?} v2 2nd argument to {\\@link PipeTransform#transform}.\n * @return {?}\n */\nfunction pipeBind2(index, slotOffset, v1, v2) {\n    /** @type {?} */\n    const pipeInstance = load(index);\n    return isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n        pipeInstance.transform(v1, v2);\n}\n/**\n * Invokes a pipe with 3 arguments.\n *\n * This instruction acts as a guard to {\\@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param {?} index Pipe index where the pipe was stored on creation.\n * @param {?} slotOffset the offset in the reserved slot space {\\@link reserveSlots}\n * @param {?} v1 1st argument to {\\@link PipeTransform#transform}.\n * @param {?} v2 2nd argument to {\\@link PipeTransform#transform}.\n * @param {?} v3 4rd argument to {\\@link PipeTransform#transform}.\n * @return {?}\n */\nfunction pipeBind3(index, slotOffset, v1, v2, v3) {\n    /** @type {?} */\n    const pipeInstance = load(index);\n    return isPure(index) ?\n        pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n        pipeInstance.transform(v1, v2, v3);\n}\n/**\n * Invokes a pipe with 4 arguments.\n *\n * This instruction acts as a guard to {\\@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param {?} index Pipe index where the pipe was stored on creation.\n * @param {?} slotOffset the offset in the reserved slot space {\\@link reserveSlots}\n * @param {?} v1 1st argument to {\\@link PipeTransform#transform}.\n * @param {?} v2 2nd argument to {\\@link PipeTransform#transform}.\n * @param {?} v3 3rd argument to {\\@link PipeTransform#transform}.\n * @param {?} v4 4th argument to {\\@link PipeTransform#transform}.\n * @return {?}\n */\nfunction pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n    /** @type {?} */\n    const pipeInstance = load(index);\n    return isPure(index) ?\n        pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n        pipeInstance.transform(v1, v2, v3, v4);\n}\n/**\n * Invokes a pipe with variable number of arguments.\n *\n * This instruction acts as a guard to {\\@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param {?} index Pipe index where the pipe was stored on creation.\n * @param {?} slotOffset the offset in the reserved slot space {\\@link reserveSlots}\n * @param {?} values Array of arguments to pass to {\\@link PipeTransform#transform} method.\n * @return {?}\n */\nfunction pipeBindV(index, slotOffset, values) {\n    /** @type {?} */\n    const pipeInstance = load(index);\n    return isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n        pipeInstance.transform.apply(pipeInstance, values);\n}\n/**\n * @param {?} index\n * @return {?}\n */\nfunction isPure(index) {\n    return (/** @type {?} */ (getTView().data[index + HEADER_OFFSET])).pure;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass LQueries_ {\n    /**\n     * @param {?=} deep\n     */\n    constructor(deep) {\n        this.shallow = null;\n        this.deep = null;\n        this.deep = deep == null ? null : deep;\n    }\n    /**\n     * @template T\n     * @param {?} queryList\n     * @param {?} predicate\n     * @param {?=} descend\n     * @param {?=} read\n     * @return {?}\n     */\n    track(queryList, predicate, descend, read) {\n        if (descend) {\n            this.deep = createQuery$1(this.deep, queryList, predicate, read != null ? read : null);\n        }\n        else {\n            this.shallow = createQuery$1(this.shallow, queryList, predicate, read != null ? read : null);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    clone() { return this.deep ? new LQueries_(this.deep) : null; }\n    /**\n     * @return {?}\n     */\n    child() {\n        if (this.deep === null) {\n            // if we don't have any deep queries then no need to track anything more.\n            return null;\n        }\n        if (this.shallow === null) {\n            // DeepQuery: We can reuse the current state if the child state would be same as current\n            // state.\n            return this;\n        }\n        else {\n            // We need to create new state\n            return new LQueries_(this.deep);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    container() {\n        /** @type {?} */\n        let result = null;\n        /** @type {?} */\n        let query = this.deep;\n        while (query) {\n            /** @type {?} */\n            const containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            /** @type {?} */\n            const clonedQuery = {\n                next: null,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            clonedQuery.next = result;\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result ? new LQueries_(result) : null;\n    }\n    /**\n     * @return {?}\n     */\n    createView() {\n        /** @type {?} */\n        let result = null;\n        /** @type {?} */\n        let query = this.deep;\n        while (query) {\n            /** @type {?} */\n            const clonedQuery = {\n                next: null,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            clonedQuery.next = result;\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result ? new LQueries_(result) : null;\n    }\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    insertView(index) {\n        /** @type {?} */\n        let query = this.deep;\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.'); /** @type {?} */\n            ((query.containerValues)).splice(index, 0, query.values);\n            query = query.next;\n        }\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    addNode(node) {\n        add(this.shallow, node);\n        add(this.deep, node);\n    }\n    /**\n     * @return {?}\n     */\n    removeView() {\n        /** @type {?} */\n        let query = this.deep;\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            /** @type {?} */\n            const containerValues = /** @type {?} */ ((query.containerValues));\n            /** @type {?} */\n            const viewValuesIdx = containerValues.indexOf(query.values);\n            /** @type {?} */\n            const removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n}\n/**\n * Iterates over local names for a given node and returns directive index\n * (or -1 if a local name points to an element).\n *\n * @param {?} tNode static data of a node to check\n * @param {?} selector selector to match\n * @return {?} directive index, -1 or null if a selector didn't match any of the local names\n */\nfunction getIdxOfMatchingSelector(tNode, selector) {\n    /** @type {?} */\n    const localNames = tNode.localNames;\n    if (localNames) {\n        for (let i = 0; i < localNames.length; i += 2) {\n            if (localNames[i] === selector) {\n                return /** @type {?} */ (localNames[i + 1]);\n            }\n        }\n    }\n    return null;\n}\n/**\n * Iterates over all the directives for a node and returns index of a directive for a given type.\n *\n * @param {?} node Node on which directives are present.\n * @param {?} type Type of a directive to look for.\n * @return {?} Index of a found directive or null when none found.\n */\nfunction getIdxOfMatchingDirective(node, type) {\n    /** @type {?} */\n    const defs = /** @type {?} */ ((node.view[TVIEW].directives));\n    /** @type {?} */\n    const flags = node.tNode.flags;\n    /** @type {?} */\n    const count = flags & 4095 /* DirectiveCountMask */;\n    /** @type {?} */\n    const start = flags >> 14 /* DirectiveStartingIndexShift */;\n    /** @type {?} */\n    const end = start + count;\n    for (let i = start; i < end; i++) {\n        /** @type {?} */\n        const def = /** @type {?} */ (defs[i]);\n        if (def.type === type && def.diPublic) {\n            return i;\n        }\n    }\n    return null;\n}\n/**\n * @param {?} nodeInjector\n * @param {?} node\n * @param {?} read\n * @param {?} directiveIdx\n * @return {?}\n */\nfunction readFromNodeInjector(nodeInjector, node, read, directiveIdx) {\n    if (read instanceof ReadFromInjectorFn) {\n        return read.read(nodeInjector, node, directiveIdx);\n    }\n    else {\n        /** @type {?} */\n        const matchingIdx = getIdxOfMatchingDirective(node, /** @type {?} */ (read));\n        if (matchingIdx !== null) {\n            return /** @type {?} */ ((node.view[DIRECTIVES]))[matchingIdx];\n        }\n    }\n    return null;\n}\n/**\n * @param {?} query\n * @param {?} node\n * @return {?}\n */\nfunction add(query, node) {\n    /** @type {?} */\n    const nodeInjector = getOrCreateNodeInjectorForNode(/** @type {?} */ (node));\n    while (query) {\n        /** @type {?} */\n        const predicate = query.predicate;\n        /** @type {?} */\n        const type = predicate.type;\n        if (type) {\n            /** @type {?} */\n            const directiveIdx = getIdxOfMatchingDirective(node, type);\n            if (directiveIdx !== null) {\n                /** @type {?} */\n                const result = readFromNodeInjector(nodeInjector, node, predicate.read || type, directiveIdx);\n                if (result !== null) {\n                    addMatch(query, result);\n                }\n            }\n        }\n        else {\n            /** @type {?} */\n            const selector = /** @type {?} */ ((predicate.selector));\n            for (let i = 0; i < selector.length; i++) {\n                /** @type {?} */\n                const directiveIdx = getIdxOfMatchingSelector(node.tNode, selector[i]);\n                if (directiveIdx !== null) {\n                    // a node is matching a predicate - determine what to read\n                    // note that queries using name selector must specify read strategy\n                    ngDevMode && assertDefined(predicate.read, 'the node should have a predicate');\n                    /** @type {?} */\n                    const result = readFromNodeInjector(nodeInjector, node, /** @type {?} */ ((predicate.read)), directiveIdx);\n                    if (result !== null) {\n                        addMatch(query, result);\n                    }\n                }\n            }\n        }\n        query = query.next;\n    }\n}\n/**\n * @param {?} query\n * @param {?} matchingValue\n * @return {?}\n */\nfunction addMatch(query, matchingValue) {\n    query.values.push(matchingValue);\n    query.list.setDirty();\n}\n/**\n * @template T\n * @param {?} predicate\n * @param {?} read\n * @return {?}\n */\nfunction createPredicate(predicate, read) {\n    /** @type {?} */\n    const isArray = Array.isArray(predicate);\n    return {\n        type: isArray ? null : /** @type {?} */ (predicate),\n        selector: isArray ? /** @type {?} */ (predicate) : null,\n        read: read\n    };\n}\n/**\n * @template T\n * @param {?} previous\n * @param {?} queryList\n * @param {?} predicate\n * @param {?} read\n * @return {?}\n */\nfunction createQuery$1(previous, queryList, predicate, read) {\n    return {\n        next: previous,\n        list: queryList,\n        predicate: createPredicate(predicate, read),\n        values: (/** @type {?} */ ((queryList)))._valuesTree,\n        containerValues: null\n    };\n}\n/**\n * @template T\n */\nclass QueryList_ {\n    constructor() {\n        this.dirty = true;\n        this.changes = new EventEmitter();\n        this._values = [];\n        /**\n         * \\@internal\n         */\n        this._valuesTree = [];\n    }\n    /**\n     * @return {?}\n     */\n    get length() { return this._values.length; }\n    /**\n     * @return {?}\n     */\n    get first() {\n        /** @type {?} */\n        let values = this._values;\n        return values.length ? values[0] : null;\n    }\n    /**\n     * @return {?}\n     */\n    get last() {\n        /** @type {?} */\n        let values = this._values;\n        return values.length ? values[values.length - 1] : null;\n    }\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     * @template U\n     * @param {?} fn\n     * @return {?}\n     */\n    map(fn) { return this._values.map(fn); }\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     * @param {?} fn\n     * @return {?}\n     */\n    filter(fn) {\n        return this._values.filter(fn);\n    }\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     * @param {?} fn\n     * @return {?}\n     */\n    find(fn) {\n        return this._values.find(fn);\n    }\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     * @template U\n     * @param {?} fn\n     * @param {?} init\n     * @return {?}\n     */\n    reduce(fn, init) {\n        return this._values.reduce(fn, init);\n    }\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     * @param {?} fn\n     * @return {?}\n     */\n    forEach(fn) { this._values.forEach(fn); }\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     * @param {?} fn\n     * @return {?}\n     */\n    some(fn) {\n        return this._values.some(fn);\n    }\n    /**\n     * @return {?}\n     */\n    toArray() { return this._values.slice(0); }\n    /**\n     * @return {?}\n     */\n    [getSymbolIterator()]() { return (/** @type {?} */ (this._values))[getSymbolIterator()](); }\n    /**\n     * @return {?}\n     */\n    toString() { return this._values.toString(); }\n    /**\n     * @param {?} res\n     * @return {?}\n     */\n    reset(res) {\n        this._values = flatten$1(res);\n        (/** @type {?} */ (this)).dirty = false;\n    }\n    /**\n     * @return {?}\n     */\n    notifyOnChanges() { (/** @type {?} */ (this.changes)).emit(this); }\n    /**\n     * @return {?}\n     */\n    setDirty() { (/** @type {?} */ (this)).dirty = true; }\n    /**\n     * @return {?}\n     */\n    destroy() {\n        (/** @type {?} */ (this.changes)).complete();\n        (/** @type {?} */ (this.changes)).unsubscribe();\n    }\n}\n/** @type {?} */\nconst QueryList$1 = /** @type {?} */ (QueryList_);\n/**\n * Creates and returns a QueryList.\n *\n * @template T\n * @param {?} memoryIndex The index in memory where the QueryList should be saved. If null,\n * this is is a content query and the QueryList will be saved later through directiveCreate.\n * @param {?} predicate The type for which the query will search\n * @param {?=} descend Whether or not to descend into children\n * @param {?=} read What to save in the query\n * @return {?} QueryList<T>\n */\nfunction query(memoryIndex, predicate, descend, read) {\n    ngDevMode && assertPreviousIsParent();\n    /** @type {?} */\n    const queryList = new QueryList$1();\n    /** @type {?} */\n    const queries = getCurrentQueries(LQueries_);\n    queries.track(queryList, predicate, descend, read);\n    storeCleanupWithContext(null, queryList, queryList.destroy);\n    if (memoryIndex != null) {\n        store(memoryIndex, queryList);\n    }\n    return queryList;\n}\n/**\n * Refreshes a query by combining matches from all active views and removing matches from deleted\n * views.\n * Returns true if a query got dirty during change detection, false otherwise.\n * @param {?} queryList\n * @return {?}\n */\nfunction queryRefresh(queryList) {\n    /** @type {?} */\n    const queryListImpl = (/** @type {?} */ ((queryList)));\n    if (queryList.dirty) {\n        queryList.reset(queryListImpl._valuesTree);\n        queryList.notifyOnChanges();\n        return true;\n    }\n    return false;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @type {?} */\nconst BRAND = '__SANITIZER_TRUSTED_BRAND__';\n/**\n * @param {?} value\n * @param {?} type\n * @return {?}\n */\nfunction allowSanitizationBypass(value, type) {\n    return (value instanceof String && (/** @type {?} */ (value))[BRAND] === type) ? true : false;\n}\n/**\n * Mark `html` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {\\@link htmlSanitizer} to be trusted implicitly.\n *\n * @param {?} trustedHtml `html` string which needs to be implicitly trusted.\n * @return {?} a `html` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustHtml(trustedHtml) {\n    return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n}\n/**\n * Mark `style` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {\\@link styleSanitizer} to be trusted implicitly.\n *\n * @param {?} trustedStyle `style` string which needs to be implicitly trusted.\n * @return {?} a `style` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustStyle(trustedStyle) {\n    return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n}\n/**\n * Mark `script` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {\\@link scriptSanitizer} to be trusted implicitly.\n *\n * @param {?} trustedScript `script` string which needs to be implicitly trusted.\n * @return {?} a `script` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustScript(trustedScript) {\n    return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n}\n/**\n * Mark `url` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {\\@link urlSanitizer} to be trusted implicitly.\n *\n * @param {?} trustedUrl `url` string which needs to be implicitly trusted.\n * @return {?} a `url` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustUrl(trustedUrl) {\n    return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n}\n/**\n * Mark `url` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {\\@link resourceUrlSanitizer} to be trusted implicitly.\n *\n * @param {?} trustedResourceUrl `url` string which needs to be implicitly trusted.\n * @return {?} a `url` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n    return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n}\n/**\n * @param {?} trustedString\n * @param {?} mode\n * @return {?}\n */\nfunction bypassSanitizationTrustString(trustedString, mode) {\n    /** @type {?} */\n    const trusted = /** @type {?} */ (new String(trustedString));\n    trusted[BRAND] = mode;\n    return trusted;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n * dangerous content.\n *\n * This method parses the `html` and locates potentially dangerous content (such as urls and\n * javascript) and removes it.\n *\n * It is possible to mark a string as trusted by calling {\\@link bypassSanitizationTrustHtml}.\n *\n * @param {?} unsafeHtml untrusted `html`, typically from the user.\n * @return {?} `html` string which is safe to display to user, because all of the dangerous javascript\n * and urls have been removed.\n */\nfunction sanitizeHtml(unsafeHtml) {\n    /** @type {?} */\n    const s = getCurrentSanitizer();\n    if (s) {\n        return s.sanitize(SecurityContext.HTML, unsafeHtml) || '';\n    }\n    if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n        return unsafeHtml.toString();\n    }\n    return _sanitizeHtml(document, stringify$1(unsafeHtml));\n}\n/**\n * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n * dangerous content.\n *\n * This method parses the `style` and locates potentially dangerous content (such as urls and\n * javascript) and removes it.\n *\n * It is possible to mark a string as trusted by calling {\\@link bypassSanitizationTrustStyle}.\n *\n * @param {?} unsafeStyle untrusted `style`, typically from the user.\n * @return {?} `style` string which is safe to bind to the `style` properties, because all of the\n * dangerous javascript and urls have been removed.\n */\nfunction sanitizeStyle(unsafeStyle) {\n    /** @type {?} */\n    const s = getCurrentSanitizer();\n    if (s) {\n        return s.sanitize(SecurityContext.STYLE, unsafeStyle) || '';\n    }\n    if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n        return unsafeStyle.toString();\n    }\n    return _sanitizeStyle(stringify$1(unsafeStyle));\n}\n/**\n * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n * dangerous\n * content.\n *\n * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n * removes it.\n *\n * It is possible to mark a string as trusted by calling {\\@link bypassSanitizationTrustUrl}.\n *\n * @param {?} unsafeUrl untrusted `url`, typically from the user.\n * @return {?} `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n * all of the dangerous javascript has been removed.\n */\nfunction sanitizeUrl(unsafeUrl) {\n    /** @type {?} */\n    const s = getCurrentSanitizer();\n    if (s) {\n        return s.sanitize(SecurityContext.URL, unsafeUrl) || '';\n    }\n    if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n        return unsafeUrl.toString();\n    }\n    return _sanitizeUrl(stringify$1(unsafeUrl));\n}\n/**\n * A `url` sanitizer which only lets trusted `url`s through.\n *\n * This passes only `url`s marked trusted by calling {\\@link bypassSanitizationTrustResourceUrl}.\n *\n * @param {?} unsafeResourceUrl untrusted `url`, typically from the user.\n * @return {?} `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n * only trusted `url`s have been allowed to pass.\n */\nfunction sanitizeResourceUrl(unsafeResourceUrl) {\n    /** @type {?} */\n    const s = getCurrentSanitizer();\n    if (s) {\n        return s.sanitize(SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n    }\n    if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n        return unsafeResourceUrl.toString();\n    }\n    throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n// clang-format on\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { APPLICATION_MODULE_PROVIDERS as Éµangular_packages_core_core_l, _iterableDiffersFactory as Éµangular_packages_core_core_i, _keyValueDiffersFactory as Éµangular_packages_core_core_j, _localeFactory as Éµangular_packages_core_core_k, _appIdRandomProviderFactory as Éµangular_packages_core_core_f, DefaultIterableDifferFactory as Éµangular_packages_core_core_g, DefaultKeyValueDifferFactory as Éµangular_packages_core_core_h, ReflectiveInjector_ as Éµangular_packages_core_core_c, ReflectiveDependency as Éµangular_packages_core_core_d, resolveReflectiveProviders as Éµangular_packages_core_core_e, wtfEnabled as Éµangular_packages_core_core_m, createScope as Éµangular_packages_core_core_o, detectWTF as Éµangular_packages_core_core_n, endTimeRange as Éµangular_packages_core_core_r, leave as Éµangular_packages_core_core_p, startTimeRange as Éµangular_packages_core_core_q, getOrCreateChangeDetectorRef as Éµangular_packages_core_core_v, getOrCreateContainerRef as Éµangular_packages_core_core_y, getOrCreateElementRef as Éµangular_packages_core_core_x, getOrCreateInjectable as Éµangular_packages_core_core_w, getOrCreateNodeInjector as Éµangular_packages_core_core_u, getOrCreateTemplateRef as Éµangular_packages_core_core_z, bindingUpdated as Éµangular_packages_core_core_ba, loadInternal as Éµangular_packages_core_core_bb, makeParamDecorator as Éµangular_packages_core_core_a, makePropDecorator as Éµangular_packages_core_core_b, _def as Éµangular_packages_core_core_s, DebugContext as Éµangular_packages_core_core_t, createPlatform, assertPlatform, destroyPlatform, getPlatform, PlatformRef, ApplicationRef, enableProdMode, isDevMode, createPlatformFactory, NgProbeToken, APP_ID, PACKAGE_ROOT_URL, PLATFORM_INITIALIZER, PLATFORM_ID, APP_BOOTSTRAP_LISTENER, APP_INITIALIZER, ApplicationInitStatus, DebugElement, DebugNode, asNativeElements, getDebugNode, Testability, TestabilityRegistry, setTestabilityGetter, TRANSLATIONS, TRANSLATIONS_FORMAT, LOCALE_ID, MissingTranslationStrategy, ApplicationModule, wtfCreateScope, wtfLeave, wtfStartTimeRange, wtfEndTimeRange, Type, EventEmitter, ErrorHandler, Sanitizer, SecurityContext, ANALYZE_FOR_ENTRY_COMPONENTS, Attribute, ContentChild, ContentChildren, Query, ViewChild, ViewChildren, Component, Directive, HostBinding, HostListener, Input, Output, Pipe, CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA, NgModule, ViewEncapsulation, Version, VERSION, defineInjectable, defineInjector, forwardRef, resolveForwardRef, Injectable, inject, INJECTOR, Injector, ReflectiveInjector, createInjector, ResolvedReflectiveFactory, ReflectiveKey, InjectionToken, Inject, Optional, Self, SkipSelf, Host, NgZone, NoopNgZone as ÉµNoopNgZone, RenderComponentType, Renderer, Renderer2, RendererFactory2, RendererStyleFlags2, RootRenderer, COMPILER_OPTIONS, Compiler, CompilerFactory, ModuleWithComponentFactories, ComponentFactory, ComponentRef, ComponentFactoryResolver, ElementRef, NgModuleFactory, NgModuleRef, NgModuleFactoryLoader, getModuleFactory, QueryList, SystemJsNgModuleLoader, SystemJsNgModuleLoaderConfig, TemplateRef, ViewContainerRef, EmbeddedViewRef, ViewRef, ChangeDetectionStrategy, ChangeDetectorRef, DefaultIterableDiffer, IterableDiffers, KeyValueDiffers, SimpleChange, WrappedValue, platformCore, ALLOW_MULTIPLE_PLATFORMS as ÉµALLOW_MULTIPLE_PLATFORMS, APP_ID_RANDOM_PROVIDER as ÉµAPP_ID_RANDOM_PROVIDER, defaultIterableDiffers as ÉµdefaultIterableDiffers, defaultKeyValueDiffers as ÉµdefaultKeyValueDiffers, devModeEqual as ÉµdevModeEqual, isListLikeIterable as ÉµisListLikeIterable, ChangeDetectorStatus as ÉµChangeDetectorStatus, isDefaultChangeDetectionStrategy as ÉµisDefaultChangeDetectionStrategy, Console as ÉµConsole, inject as Éµinject, setCurrentInjector as ÉµsetCurrentInjector, APP_ROOT as ÉµAPP_ROOT, ivyEnabled as ÉµivyEnabled, ComponentFactory as ÉµComponentFactory, CodegenComponentFactoryResolver as ÉµCodegenComponentFactoryResolver, resolveComponentResources as ÉµresolveComponentResources, ReflectionCapabilities as ÉµReflectionCapabilities, RenderDebugInfo as ÉµRenderDebugInfo, _sanitizeHtml as Éµ_sanitizeHtml, _sanitizeStyle as Éµ_sanitizeStyle, _sanitizeUrl as Éµ_sanitizeUrl, _global as Éµglobal, looseIdentical as ÉµlooseIdentical, stringify as Éµstringify, makeDecorator as ÉµmakeDecorator, isObservable as ÉµisObservable, isPromise as ÉµisPromise, clearOverrides as ÉµclearOverrides, initServicesIfNeeded as ÉµinitServicesIfNeeded, overrideComponentView as ÉµoverrideComponentView, overrideProvider as ÉµoverrideProvider, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR as ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR, defineComponent as ÉµdefineComponent, defineDirective as ÉµdefineDirective, definePipe as ÉµdefinePipe, defineNgModule as ÉµdefineNgModule, detectChanges as ÉµdetectChanges, renderComponent as ÉµrenderComponent, directiveInject as ÉµdirectiveInject, injectElementRef as ÉµinjectElementRef, injectTemplateRef as ÉµinjectTemplateRef, injectViewContainerRef as ÉµinjectViewContainerRef, injectChangeDetectorRef as ÉµinjectChangeDetectorRef, injectAttribute as ÉµinjectAttribute, PublicFeature as ÉµPublicFeature, InheritDefinitionFeature as ÉµInheritDefinitionFeature, NgOnChangesFeature as ÉµNgOnChangesFeature, markDirty as ÉµmarkDirty, NgModuleFactory$1 as ÉµNgModuleFactory, NO_CHANGE as ÉµNC, container as ÉµC, elementStart as ÉµE, namespaceHTML as ÉµNH, namespaceMathML as ÉµNM, namespaceSVG as ÉµNS, element as ÉµEe, listener as ÉµL, text as ÉµT, embeddedViewStart as ÉµV, query as ÉµQ, registerContentQuery as ÉµQr, loadDirective as Éµd, projection as ÉµP, bind as Éµb, interpolation1 as Éµi1, interpolation2 as Éµi2, interpolation3 as Éµi3, interpolation4 as Éµi4, interpolation5 as Éµi5, interpolation6 as Éµi6, interpolation7 as Éµi7, interpolation8 as Éµi8, interpolationV as ÉµiV, pipeBind1 as Éµpb1, pipeBind2 as Éµpb2, pipeBind3 as Éµpb3, pipeBind4 as Éµpb4, pipeBindV as ÉµpbV, pureFunction0 as Éµf0, pureFunction1 as Éµf1, pureFunction2 as Éµf2, pureFunction3 as Éµf3, pureFunction4 as Éµf4, pureFunction5 as Éµf5, pureFunction6 as Éµf6, pureFunction7 as Éµf7, pureFunction8 as Éµf8, pureFunctionV as ÉµfV, containerRefreshStart as ÉµcR, containerRefreshEnd as Éµcr, queryRefresh as ÉµqR, loadQueryList as Éµql, elementEnd as Éµe, elementProperty as Éµp, projectionDef as ÉµpD, reserveSlots as ÉµrS, elementAttribute as Éµa, elementStyling as Éµs, elementStylingMap as Éµsm, elementStyleProp as Éµsp, elementStylingApply as Éµsa, elementClassProp as Éµcp, textBinding as Éµt, embeddedViewEnd as Éµv, store as Éµst, load as Éµld, pipe as ÉµPp, whenRendered as ÉµwhenRendered, i18nApply as ÉµiA, i18nExpMapping as ÉµiEM, i18nInterpolation1 as ÉµiI1, i18nInterpolation2 as ÉµiI2, i18nInterpolation3 as ÉµiI3, i18nInterpolation4 as ÉµiI4, i18nInterpolation5 as ÉµiI5, i18nInterpolation6 as ÉµiI6, i18nInterpolation7 as ÉµiI7, i18nInterpolation8 as ÉµiI8, i18nInterpolationV as ÉµIV, i18nMapping as ÉµiM, sanitizeHtml as ÉµsanitizeHtml, sanitizeStyle as ÉµsanitizeStyle, sanitizeUrl as ÉµsanitizeUrl, sanitizeResourceUrl as ÉµsanitizeResourceUrl, bypassSanitizationTrustHtml as ÉµbypassSanitizationTrustHtml, bypassSanitizationTrustStyle as ÉµbypassSanitizationTrustStyle, bypassSanitizationTrustScript as ÉµbypassSanitizationTrustScript, bypassSanitizationTrustUrl as ÉµbypassSanitizationTrustUrl, bypassSanitizationTrustResourceUrl as ÉµbypassSanitizationTrustResourceUrl, registerModuleFactory as ÉµregisterModuleFactory, EMPTY_ARRAY$2 as ÉµEMPTY_ARRAY, EMPTY_MAP as ÉµEMPTY_MAP, anchorDef as Éµand, createComponentFactory as Éµccf, createNgModuleFactory as Éµcmf, createRendererType2 as Éµcrt, directiveDef as Éµdid, elementDef as Éµeld, elementEventFullName as ÉµelementEventFullName, getComponentViewDefinitionFactory as ÉµgetComponentViewDefinitionFactory, inlineInterpolate as ÉµinlineInterpolate, interpolate as Éµinterpolate, moduleDef as Éµmod, moduleProvideDef as Éµmpd, ngContentDef as Éµncd, nodeValue as Éµnov, pipeDef as Éµpid, providerDef as Éµprd, pureArrayDef as Éµpad, pureObjectDef as Éµpod, purePipeDef as Éµppd, queryDef as Éµqud, textDef as Éµted, unwrapValue as Éµunv, viewDef as Éµvid };\n//# sourceMappingURL=core.js.map\n"]}