{"version":3,"sources":["core-testing.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","testing","_global","window","asyncFallback","fn","jasmine","done","fail","e","runInTestZone","err","Error","_this","Promise","finishCallback","failCallback","context","currentZone","Zone","current","AsyncTestZoneSpec","undefined","ProxyZoneSpec","proxyZoneSpec","get","assertPresent","proxyZone","getZoneWith","previousDelegate","getDelegate","parent","run","testZoneSpec","setDelegate","error","runGuarded","async","_Zone","reject","asyncTest","__symbol__","ComponentFixture","componentRef","ngZone","_autoDetect","_isStable","_isDestroyed","_resolve","_promise","_onUnstableSubscription","_onStableSubscription","_onMicrotaskEmptySubscription","_onErrorSubscription","changeDetectorRef","elementRef","location","debugElement","getDebugNode","nativeElement","componentInstance","instance","runOutsideAngular","onUnstable","subscribe","next","onMicrotaskEmpty","detectChanges","onStable","scheduleMicroTask","hasPendingMacrotasks","onError","prototype","_tick","checkNoChanges","autoDetectChanges","autoDetect","isStable","whenStable","resolve","res","_getRenderer","_renderer","injector","RendererFactory2","whenRenderingDone","renderer","destroy","unsubscribe","FakeAsyncTestZoneSpec","_fakeAsyncTestZoneSpec","resetFakeAsyncZoneFallback","resetDelegate","_inFakeAsyncCall","fakeAsyncFallback","args","_i","arguments","length","lastProxyZoneSpec","apply","flushMicrotasksFallback","pendingPeriodicTimers","pendingTimers","_getFakeAsyncZoneSpec","tickFallback","millis","tick","flushFallback","maxTurns","flush","discardPeriodicTasksFallback","zoneSpec","flushMicrotasks","_Zone$1","fakeAsyncTestModule","resetFakeAsyncZone","fakeAsync","discardPeriodicTasks","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","create","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__values","o","m","Symbol","iterator","call","value","__read","n","ar","push","__spread","concat","AsyncTestCompleter","rej","_reject","stackTrace","enumerable","configurable","unimplemented","TestingCompiler","_super","overrideModule","overrides","overrideDirective","directive","overrideComponent","component","overridePipe","loadAotSummaries","summaries","getComponentFactory","getComponentFromError","Injectable","Compiler","TestingCompilerFactory","UNDEFINED","TestComponentRenderer","insertRootElement","rootElementId","_nextRootElementId","ComponentFixtureAutoDetect","InjectionToken","ComponentFixtureNoNgZone","TestBed","_instantiated","_compiler","_moduleRef","_moduleFactory","_compilerOptions","_moduleOverrides","_componentOverrides","_directiveOverrides","_pipeOverrides","_providers","_declarations","_imports","_schemas","_activeFixtures","_testEnvAotSummaries","_aotSummaries","_templateOverrides","_isRoot","_rootProviderOverrides","platform","ngModule","initTestEnvironment","aotSummaries","testBed","getTestBed","resetTestEnvironment","resetTestingModule","configureCompiler","config","configureTestingModule","moduleDef","compileComponents","override","pipe","overrideTemplate","template","set","templateUrl","overrideTemplateUsingTestingModule","overrideProvider","token","provider","deprecatedOverrideProvider","notFoundValue","Injector","THROW_IF_NOT_FOUND","createComponent","ɵclearOverrides","forEach","fixture","console","stacktrace","_assertNotInstantiated","_a","_b","_c","_d","providers","declarations","imports","schemas","moduleType","_createCompilerAndModule","compileModuleAndAllComponentsAsync","then","moduleAndComponentFactories","ngModuleFactory","_initIfNeeded","e_1","compileModuleAndAllComponentsSync","errorCompType","ɵstringify","templateOf","compFactory","ɵoverrideComponentView","e_1_1","return","NgZone","enableLongStackTrace","provide","useValue","ngZoneInjector","name","ApplicationInitStatus","runInitializers","e_2","map","entry","rootScopeImports","rootProviderOverrides","RootScopeModule","NgModule","jit","ɵAPP_ROOT","DynamicTestModule","compilerFactory","createTestingCompiler","summary","e_2_1","methodName","methodDescription","result","execute","tokens","params","t","overrideProviderImpl","deprecated","ngInjectableDef","providedIn","useFactory","deps","flags","dep","depFlags","depToken","isArray","Optional","SkipSelf","ɵoverrideProvider","deprecatedBehavior","OverrideComponent","Component","selector","componentFactory","noNgZone","testComponentRenderer","rootElId","initComponent","NULL","_testBed","inject","indexOf","completer","promise","InjectSetupWrapper","_moduleDef","_addModule","self","withModule","_global$1","beforeEach","__core_private_testing_placeholder__","ɵTestingCompiler","ɵTestingCompilerFactory"],"mappings":"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","file":"core-testing.umd.js","sourcesContent":["/**\n * @license Angular v6.1.10\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core')) :\n    typeof define === 'function' && define.amd ? define('@angular/core/testing', ['exports', '@angular/core'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.core = global.ng.core || {}, global.ng.core.testing = {}),global.ng.core));\n}(this, (function (exports,core) { 'use strict';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _global = (typeof window === 'undefined' ? global : window);\n    /**\n     * Wraps a test function in an asynchronous test zone. The test will automatically\n     * complete when all asynchronous calls within this zone are done. Can be used\n     * to wrap an {@link inject} call.\n     *\n     * Example:\n     *\n     * ```\n     * it('...', async(inject([AClass], (object) => {\n     *   object.doSomething.then(() => {\n     *     expect(...);\n     *   })\n     * });\n     * ```\n     *\n     *\n     */\n    function asyncFallback(fn) {\n        // If we're running using the Jasmine test framework, adapt to call the 'done'\n        // function when asynchronous activity is finished.\n        if (_global.jasmine) {\n            // Not using an arrow function to preserve context passed from call site\n            return function (done) {\n                if (!done) {\n                    // if we run beforeEach in @angular/core/testing/testing_internal then we get no done\n                    // fake it here and assume sync.\n                    done = function () { };\n                    done.fail = function (e) { throw e; };\n                }\n                runInTestZone(fn, this, done, function (err) {\n                    if (typeof err === 'string') {\n                        return done.fail(new Error(err));\n                    }\n                    else {\n                        done.fail(err);\n                    }\n                });\n            };\n        }\n        // Otherwise, return a promise which will resolve when asynchronous activity\n        // is finished. This will be correctly consumed by the Mocha framework with\n        // it('...', async(myFn)); or can be used in a custom framework.\n        // Not using an arrow function to preserve context passed from call site\n        return function () {\n            var _this = this;\n            return new Promise(function (finishCallback, failCallback) {\n                runInTestZone(fn, _this, finishCallback, failCallback);\n            });\n        };\n    }\n    function runInTestZone(fn, context, finishCallback, failCallback) {\n        var currentZone = Zone.current;\n        var AsyncTestZoneSpec = Zone['AsyncTestZoneSpec'];\n        if (AsyncTestZoneSpec === undefined) {\n            throw new Error('AsyncTestZoneSpec is needed for the async() test helper but could not be found. ' +\n                'Please make sure that your environment includes zone.js/dist/async-test.js');\n        }\n        var ProxyZoneSpec = Zone['ProxyZoneSpec'];\n        if (ProxyZoneSpec === undefined) {\n            throw new Error('ProxyZoneSpec is needed for the async() test helper but could not be found. ' +\n                'Please make sure that your environment includes zone.js/dist/proxy.js');\n        }\n        var proxyZoneSpec = ProxyZoneSpec.get();\n        ProxyZoneSpec.assertPresent();\n        // We need to create the AsyncTestZoneSpec outside the ProxyZone.\n        // If we do it in ProxyZone then we will get to infinite recursion.\n        var proxyZone = Zone.current.getZoneWith('ProxyZoneSpec');\n        var previousDelegate = proxyZoneSpec.getDelegate();\n        proxyZone.parent.run(function () {\n            var testZoneSpec = new AsyncTestZoneSpec(function () {\n                // Need to restore the original zone.\n                currentZone.run(function () {\n                    if (proxyZoneSpec.getDelegate() == testZoneSpec) {\n                        // Only reset the zone spec if it's sill this one. Otherwise, assume it's OK.\n                        proxyZoneSpec.setDelegate(previousDelegate);\n                    }\n                    finishCallback();\n                });\n            }, function (error) {\n                // Need to restore the original zone.\n                currentZone.run(function () {\n                    if (proxyZoneSpec.getDelegate() == testZoneSpec) {\n                        // Only reset the zone spec if it's sill this one. Otherwise, assume it's OK.\n                        proxyZoneSpec.setDelegate(previousDelegate);\n                    }\n                    failCallback(error);\n                });\n            }, 'test');\n            proxyZoneSpec.setDelegate(testZoneSpec);\n        });\n        return Zone.current.runGuarded(fn, context);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Wraps a test function in an asynchronous test zone. The test will automatically\n     * complete when all asynchronous calls within this zone are done. Can be used\n     * to wrap an {@link inject} call.\n     *\n     * Example:\n     *\n     * ```\n     * it('...', async(inject([AClass], (object) => {\n     *   object.doSomething.then(() => {\n     *     expect(...);\n     *   })\n     * });\n     * ```\n     *\n     *\n     */\n    function async(fn) {\n        var _Zone = typeof Zone !== 'undefined' ? Zone : null;\n        if (!_Zone) {\n            return function () {\n                return Promise.reject('Zone is needed for the async() test helper but could not be found. ' +\n                    'Please make sure that your environment includes zone.js/dist/zone.js');\n            };\n        }\n        var asyncTest = _Zone && _Zone[_Zone.__symbol__('asyncTest')];\n        if (typeof asyncTest === 'function') {\n            return asyncTest(fn);\n        }\n        // not using new version of zone.js\n        // TODO @JiaLiPassion, remove this after all library updated to\n        // newest version of zone.js(0.8.25)\n        return asyncFallback(fn);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Fixture for debugging and testing a component.\n     *\n     *\n     */\n    var ComponentFixture = /** @class */ (function () {\n        function ComponentFixture(componentRef, ngZone, _autoDetect) {\n            var _this = this;\n            this.componentRef = componentRef;\n            this.ngZone = ngZone;\n            this._autoDetect = _autoDetect;\n            this._isStable = true;\n            this._isDestroyed = false;\n            this._resolve = null;\n            this._promise = null;\n            this._onUnstableSubscription = null;\n            this._onStableSubscription = null;\n            this._onMicrotaskEmptySubscription = null;\n            this._onErrorSubscription = null;\n            this.changeDetectorRef = componentRef.changeDetectorRef;\n            this.elementRef = componentRef.location;\n            this.debugElement = core.getDebugNode(this.elementRef.nativeElement);\n            this.componentInstance = componentRef.instance;\n            this.nativeElement = this.elementRef.nativeElement;\n            this.componentRef = componentRef;\n            this.ngZone = ngZone;\n            if (ngZone) {\n                // Create subscriptions outside the NgZone so that the callbacks run oustide\n                // of NgZone.\n                ngZone.runOutsideAngular(function () {\n                    _this._onUnstableSubscription =\n                        ngZone.onUnstable.subscribe({ next: function () { _this._isStable = false; } });\n                    _this._onMicrotaskEmptySubscription = ngZone.onMicrotaskEmpty.subscribe({\n                        next: function () {\n                            if (_this._autoDetect) {\n                                // Do a change detection run with checkNoChanges set to true to check\n                                // there are no changes on the second run.\n                                _this.detectChanges(true);\n                            }\n                        }\n                    });\n                    _this._onStableSubscription = ngZone.onStable.subscribe({\n                        next: function () {\n                            _this._isStable = true;\n                            // Check whether there is a pending whenStable() completer to resolve.\n                            if (_this._promise !== null) {\n                                // If so check whether there are no pending macrotasks before resolving.\n                                // Do this check in the next tick so that ngZone gets a chance to update the state of\n                                // pending macrotasks.\n                                scheduleMicroTask(function () {\n                                    if (!ngZone.hasPendingMacrotasks) {\n                                        if (_this._promise !== null) {\n                                            _this._resolve(true);\n                                            _this._resolve = null;\n                                            _this._promise = null;\n                                        }\n                                    }\n                                });\n                            }\n                        }\n                    });\n                    _this._onErrorSubscription =\n                        ngZone.onError.subscribe({ next: function (error) { throw error; } });\n                });\n            }\n        }\n        ComponentFixture.prototype._tick = function (checkNoChanges) {\n            this.changeDetectorRef.detectChanges();\n            if (checkNoChanges) {\n                this.checkNoChanges();\n            }\n        };\n        /**\n         * Trigger a change detection cycle for the component.\n         */\n        ComponentFixture.prototype.detectChanges = function (checkNoChanges) {\n            var _this = this;\n            if (checkNoChanges === void 0) { checkNoChanges = true; }\n            if (this.ngZone != null) {\n                // Run the change detection inside the NgZone so that any async tasks as part of the change\n                // detection are captured by the zone and can be waited for in isStable.\n                this.ngZone.run(function () { _this._tick(checkNoChanges); });\n            }\n            else {\n                // Running without zone. Just do the change detection.\n                this._tick(checkNoChanges);\n            }\n        };\n        /**\n         * Do a change detection run to make sure there were no changes.\n         */\n        ComponentFixture.prototype.checkNoChanges = function () { this.changeDetectorRef.checkNoChanges(); };\n        /**\n         * Set whether the fixture should autodetect changes.\n         *\n         * Also runs detectChanges once so that any existing change is detected.\n         */\n        ComponentFixture.prototype.autoDetectChanges = function (autoDetect) {\n            if (autoDetect === void 0) { autoDetect = true; }\n            if (this.ngZone == null) {\n                throw new Error('Cannot call autoDetectChanges when ComponentFixtureNoNgZone is set');\n            }\n            this._autoDetect = autoDetect;\n            this.detectChanges();\n        };\n        /**\n         * Return whether the fixture is currently stable or has async tasks that have not been completed\n         * yet.\n         */\n        ComponentFixture.prototype.isStable = function () { return this._isStable && !this.ngZone.hasPendingMacrotasks; };\n        /**\n         * Get a promise that resolves when the fixture is stable.\n         *\n         * This can be used to resume testing after events have triggered asynchronous activity or\n         * asynchronous change detection.\n         */\n        ComponentFixture.prototype.whenStable = function () {\n            var _this = this;\n            if (this.isStable()) {\n                return Promise.resolve(false);\n            }\n            else if (this._promise !== null) {\n                return this._promise;\n            }\n            else {\n                this._promise = new Promise(function (res) { _this._resolve = res; });\n                return this._promise;\n            }\n        };\n        ComponentFixture.prototype._getRenderer = function () {\n            if (this._renderer === undefined) {\n                this._renderer = this.componentRef.injector.get(core.RendererFactory2, null);\n            }\n            return this._renderer;\n        };\n        /**\n          * Get a promise that resolves when the ui state is stable following animations.\n          */\n        ComponentFixture.prototype.whenRenderingDone = function () {\n            var renderer = this._getRenderer();\n            if (renderer && renderer.whenRenderingDone) {\n                return renderer.whenRenderingDone();\n            }\n            return this.whenStable();\n        };\n        /**\n         * Trigger component destruction.\n         */\n        ComponentFixture.prototype.destroy = function () {\n            if (!this._isDestroyed) {\n                this.componentRef.destroy();\n                if (this._onUnstableSubscription != null) {\n                    this._onUnstableSubscription.unsubscribe();\n                    this._onUnstableSubscription = null;\n                }\n                if (this._onStableSubscription != null) {\n                    this._onStableSubscription.unsubscribe();\n                    this._onStableSubscription = null;\n                }\n                if (this._onMicrotaskEmptySubscription != null) {\n                    this._onMicrotaskEmptySubscription.unsubscribe();\n                    this._onMicrotaskEmptySubscription = null;\n                }\n                if (this._onErrorSubscription != null) {\n                    this._onErrorSubscription.unsubscribe();\n                    this._onErrorSubscription = null;\n                }\n                this._isDestroyed = true;\n            }\n        };\n        return ComponentFixture;\n    }());\n    function scheduleMicroTask(fn) {\n        Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * fakeAsync has been moved to zone.js\n     * this file is for fallback in case old version of zone.js is used\n     */\n    var _Zone = typeof Zone !== 'undefined' ? Zone : null;\n    var FakeAsyncTestZoneSpec = _Zone && _Zone['FakeAsyncTestZoneSpec'];\n    var ProxyZoneSpec = _Zone && _Zone['ProxyZoneSpec'];\n    var _fakeAsyncTestZoneSpec = null;\n    /**\n     * Clears out the shared fake async zone for a test.\n     * To be called in a global `beforeEach`.\n     *\n     * @experimental\n     */\n    function resetFakeAsyncZoneFallback() {\n        _fakeAsyncTestZoneSpec = null;\n        // in node.js testing we may not have ProxyZoneSpec in which case there is nothing to reset.\n        ProxyZoneSpec && ProxyZoneSpec.assertPresent().resetDelegate();\n    }\n    var _inFakeAsyncCall = false;\n    /**\n     * Wraps a function to be executed in the fakeAsync zone:\n     * - microtasks are manually executed by calling `flushMicrotasks()`,\n     * - timers are synchronous, `tick()` simulates the asynchronous passage of time.\n     *\n     * If there are any pending timers at the end of the function, an exception will be thrown.\n     *\n     * Can be used to wrap inject() calls.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/testing/ts/fake_async.ts region='basic'}\n     *\n     * @param fn\n     * @returns The function wrapped to be executed in the fakeAsync zone\n     *\n     * @experimental\n     */\n    function fakeAsyncFallback(fn) {\n        // Not using an arrow function to preserve context passed from call site\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var proxyZoneSpec = ProxyZoneSpec.assertPresent();\n            if (_inFakeAsyncCall) {\n                throw new Error('fakeAsync() calls can not be nested');\n            }\n            _inFakeAsyncCall = true;\n            try {\n                if (!_fakeAsyncTestZoneSpec) {\n                    if (proxyZoneSpec.getDelegate() instanceof FakeAsyncTestZoneSpec) {\n                        throw new Error('fakeAsync() calls can not be nested');\n                    }\n                    _fakeAsyncTestZoneSpec = new FakeAsyncTestZoneSpec();\n                }\n                var res = void 0;\n                var lastProxyZoneSpec = proxyZoneSpec.getDelegate();\n                proxyZoneSpec.setDelegate(_fakeAsyncTestZoneSpec);\n                try {\n                    res = fn.apply(this, args);\n                    flushMicrotasksFallback();\n                }\n                finally {\n                    proxyZoneSpec.setDelegate(lastProxyZoneSpec);\n                }\n                if (_fakeAsyncTestZoneSpec.pendingPeriodicTimers.length > 0) {\n                    throw new Error(_fakeAsyncTestZoneSpec.pendingPeriodicTimers.length + \" \" +\n                        \"periodic timer(s) still in the queue.\");\n                }\n                if (_fakeAsyncTestZoneSpec.pendingTimers.length > 0) {\n                    throw new Error(_fakeAsyncTestZoneSpec.pendingTimers.length + \" timer(s) still in the queue.\");\n                }\n                return res;\n            }\n            finally {\n                _inFakeAsyncCall = false;\n                resetFakeAsyncZoneFallback();\n            }\n        };\n    }\n    function _getFakeAsyncZoneSpec() {\n        if (_fakeAsyncTestZoneSpec == null) {\n            throw new Error('The code should be running in the fakeAsync zone to call this function');\n        }\n        return _fakeAsyncTestZoneSpec;\n    }\n    /**\n     * Simulates the asynchronous passage of time for the timers in the fakeAsync zone.\n     *\n     * The microtasks queue is drained at the very start of this function and after any timer callback\n     * has been executed.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/testing/ts/fake_async.ts region='basic'}\n     *\n     * @experimental\n     */\n    function tickFallback(millis) {\n        if (millis === void 0) { millis = 0; }\n        _getFakeAsyncZoneSpec().tick(millis);\n    }\n    /**\n     * Simulates the asynchronous passage of time for the timers in the fakeAsync zone by\n     * draining the macrotask queue until it is empty. The returned value is the milliseconds\n     * of time that would have been elapsed.\n     *\n     * @param maxTurns\n     * @returns The simulated time elapsed, in millis.\n     *\n     * @experimental\n     */\n    function flushFallback(maxTurns) {\n        return _getFakeAsyncZoneSpec().flush(maxTurns);\n    }\n    /**\n     * Discard all remaining periodic tasks.\n     *\n     * @experimental\n     */\n    function discardPeriodicTasksFallback() {\n        var zoneSpec = _getFakeAsyncZoneSpec();\n        zoneSpec.pendingPeriodicTimers.length = 0;\n    }\n    /**\n     * Flush any pending microtasks.\n     *\n     * @experimental\n     */\n    function flushMicrotasksFallback() {\n        _getFakeAsyncZoneSpec().flushMicrotasks();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _Zone$1 = typeof Zone !== 'undefined' ? Zone : null;\n    var fakeAsyncTestModule = _Zone$1 && _Zone$1[_Zone$1.__symbol__('fakeAsyncTest')];\n    /**\n     * Clears out the shared fake async zone for a test.\n     * To be called in a global `beforeEach`.\n     *\n     * @experimental\n     */\n    function resetFakeAsyncZone() {\n        if (fakeAsyncTestModule) {\n            return fakeAsyncTestModule.resetFakeAsyncZone();\n        }\n        else {\n            return resetFakeAsyncZoneFallback();\n        }\n    }\n    /**\n     * Wraps a function to be executed in the fakeAsync zone:\n     * - microtasks are manually executed by calling `flushMicrotasks()`,\n     * - timers are synchronous, `tick()` simulates the asynchronous passage of time.\n     *\n     * If there are any pending timers at the end of the function, an exception will be thrown.\n     *\n     * Can be used to wrap inject() calls.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/testing/ts/fake_async.ts region='basic'}\n     *\n     * @param fn\n     * @returns The function wrapped to be executed in the fakeAsync zone\n     *\n     * @experimental\n     */\n    function fakeAsync(fn) {\n        if (fakeAsyncTestModule) {\n            return fakeAsyncTestModule.fakeAsync(fn);\n        }\n        else {\n            return fakeAsyncFallback(fn);\n        }\n    }\n    /**\n     * Simulates the asynchronous passage of time for the timers in the fakeAsync zone.\n     *\n     * The microtasks queue is drained at the very start of this function and after any timer callback\n     * has been executed.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/testing/ts/fake_async.ts region='basic'}\n     *\n     * @experimental\n     */\n    function tick(millis) {\n        if (millis === void 0) { millis = 0; }\n        if (fakeAsyncTestModule) {\n            return fakeAsyncTestModule.tick(millis);\n        }\n        else {\n            return tickFallback(millis);\n        }\n    }\n    /**\n     * Simulates the asynchronous passage of time for the timers in the fakeAsync zone by\n     * draining the macrotask queue until it is empty. The returned value is the milliseconds\n     * of time that would have been elapsed.\n     *\n     * @param maxTurns\n     * @returns The simulated time elapsed, in millis.\n     *\n     * @experimental\n     */\n    function flush(maxTurns) {\n        if (fakeAsyncTestModule) {\n            return fakeAsyncTestModule.flush(maxTurns);\n        }\n        else {\n            return flushFallback(maxTurns);\n        }\n    }\n    /**\n     * Discard all remaining periodic tasks.\n     *\n     * @experimental\n     */\n    function discardPeriodicTasks() {\n        if (fakeAsyncTestModule) {\n            return fakeAsyncTestModule.discardPeriodicTasks();\n        }\n        else {\n            discardPeriodicTasksFallback();\n        }\n    }\n    /**\n     * Flush any pending microtasks.\n     *\n     * @experimental\n     */\n    function flushMicrotasks() {\n        if (fakeAsyncTestModule) {\n            return fakeAsyncTestModule.flushMicrotasks();\n        }\n        else {\n            return flushMicrotasksFallback();\n        }\n    }\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Injectable completer that allows signaling completion of an asynchronous test. Used internally.\n     */\n    var AsyncTestCompleter = /** @class */ (function () {\n        function AsyncTestCompleter() {\n            var _this = this;\n            this._promise = new Promise(function (res, rej) {\n                _this._resolve = res;\n                _this._reject = rej;\n            });\n        }\n        AsyncTestCompleter.prototype.done = function (value) { this._resolve(value); };\n        AsyncTestCompleter.prototype.fail = function (error, stackTrace) { this._reject(error); };\n        Object.defineProperty(AsyncTestCompleter.prototype, \"promise\", {\n            get: function () { return this._promise; },\n            enumerable: true,\n            configurable: true\n        });\n        return AsyncTestCompleter;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function unimplemented() {\n        throw Error('unimplemented');\n    }\n    /**\n     * Special interface to the compiler only used by testing\n     *\n     * @experimental\n     */\n    var TestingCompiler = /** @class */ (function (_super) {\n        __extends(TestingCompiler, _super);\n        function TestingCompiler() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Object.defineProperty(TestingCompiler.prototype, \"injector\", {\n            get: function () { throw unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        TestingCompiler.prototype.overrideModule = function (module, overrides) {\n            throw unimplemented();\n        };\n        TestingCompiler.prototype.overrideDirective = function (directive, overrides) {\n            throw unimplemented();\n        };\n        TestingCompiler.prototype.overrideComponent = function (component, overrides) {\n            throw unimplemented();\n        };\n        TestingCompiler.prototype.overridePipe = function (directive, overrides) {\n            throw unimplemented();\n        };\n        /**\n         * Allows to pass the compile summary from AOT compilation to the JIT compiler,\n         * so that it can use the code generated by AOT.\n         */\n        TestingCompiler.prototype.loadAotSummaries = function (summaries) { throw unimplemented(); };\n        /**\n         * Gets the component factory for the given component.\n         * This assumes that the component has been compiled before calling this call using\n         * `compileModuleAndAllComponents*`.\n         */\n        TestingCompiler.prototype.getComponentFactory = function (component) { throw unimplemented(); };\n        /**\n         * Returns the component type that is stored in the given error.\n         * This can be used for errors created by compileModule...\n         */\n        TestingCompiler.prototype.getComponentFromError = function (error) { throw unimplemented(); };\n        TestingCompiler = __decorate([\n            core.Injectable()\n        ], TestingCompiler);\n        return TestingCompiler;\n    }(core.Compiler));\n    /**\n     * A factory for creating a Compiler\n     *\n     * @experimental\n     */\n    var TestingCompilerFactory = /** @class */ (function () {\n        function TestingCompilerFactory() {\n        }\n        return TestingCompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED = new Object();\n    /**\n     * An abstract class for inserting the root test component element in a platform independent way.\n     *\n     * @experimental\n     */\n    var TestComponentRenderer = /** @class */ (function () {\n        function TestComponentRenderer() {\n        }\n        TestComponentRenderer.prototype.insertRootElement = function (rootElementId) { };\n        return TestComponentRenderer;\n    }());\n    var _nextRootElementId = 0;\n    /**\n     * @experimental\n     */\n    var ComponentFixtureAutoDetect = new core.InjectionToken('ComponentFixtureAutoDetect');\n    /**\n     * @experimental\n     */\n    var ComponentFixtureNoNgZone = new core.InjectionToken('ComponentFixtureNoNgZone');\n    /**\n     * @description\n     * Configures and initializes environment for unit testing and provides methods for\n     * creating components and services in unit tests.\n     *\n     * TestBed is the primary api for writing unit tests for Angular applications and libraries.\n     *\n     *\n     */\n    var TestBed = /** @class */ (function () {\n        function TestBed() {\n            this._instantiated = false;\n            this._compiler = null;\n            this._moduleRef = null;\n            this._moduleFactory = null;\n            this._compilerOptions = [];\n            this._moduleOverrides = [];\n            this._componentOverrides = [];\n            this._directiveOverrides = [];\n            this._pipeOverrides = [];\n            this._providers = [];\n            this._declarations = [];\n            this._imports = [];\n            this._schemas = [];\n            this._activeFixtures = [];\n            this._testEnvAotSummaries = function () { return []; };\n            this._aotSummaries = [];\n            this._templateOverrides = [];\n            this._isRoot = true;\n            this._rootProviderOverrides = [];\n            this.platform = null;\n            this.ngModule = null;\n        }\n        /**\n         * Initialize the environment for testing with a compiler factory, a PlatformRef, and an\n         * angular module. These are common to every test in the suite.\n         *\n         * This may only be called once, to set up the common providers for the current test\n         * suite on the current platform. If you absolutely need to change the providers,\n         * first use `resetTestEnvironment`.\n         *\n         * Test modules and platforms for individual platforms are available from\n         * '@angular/<platform_name>/testing'.\n         *\n         * @experimental\n         */\n        TestBed.initTestEnvironment = function (ngModule, platform, aotSummaries) {\n            var testBed = getTestBed();\n            testBed.initTestEnvironment(ngModule, platform, aotSummaries);\n            return testBed;\n        };\n        /**\n         * Reset the providers for the test injector.\n         *\n         * @experimental\n         */\n        TestBed.resetTestEnvironment = function () { getTestBed().resetTestEnvironment(); };\n        TestBed.resetTestingModule = function () {\n            getTestBed().resetTestingModule();\n            return TestBed;\n        };\n        /**\n         * Allows overriding default compiler providers and settings\n         * which are defined in test_injector.js\n         */\n        TestBed.configureCompiler = function (config) {\n            getTestBed().configureCompiler(config);\n            return TestBed;\n        };\n        /**\n         * Allows overriding default providers, directives, pipes, modules of the test injector,\n         * which are defined in test_injector.js\n         */\n        TestBed.configureTestingModule = function (moduleDef) {\n            getTestBed().configureTestingModule(moduleDef);\n            return TestBed;\n        };\n        /**\n         * Compile components with a `templateUrl` for the test's NgModule.\n         * It is necessary to call this function\n         * as fetching urls is asynchronous.\n         */\n        TestBed.compileComponents = function () { return getTestBed().compileComponents(); };\n        TestBed.overrideModule = function (ngModule, override) {\n            getTestBed().overrideModule(ngModule, override);\n            return TestBed;\n        };\n        TestBed.overrideComponent = function (component, override) {\n            getTestBed().overrideComponent(component, override);\n            return TestBed;\n        };\n        TestBed.overrideDirective = function (directive, override) {\n            getTestBed().overrideDirective(directive, override);\n            return TestBed;\n        };\n        TestBed.overridePipe = function (pipe, override) {\n            getTestBed().overridePipe(pipe, override);\n            return TestBed;\n        };\n        TestBed.overrideTemplate = function (component, template) {\n            getTestBed().overrideComponent(component, { set: { template: template, templateUrl: null } });\n            return TestBed;\n        };\n        /**\n         * Overrides the template of the given component, compiling the template\n         * in the context of the TestingModule.\n         *\n         * Note: This works for JIT and AOTed components as well.\n         */\n        TestBed.overrideTemplateUsingTestingModule = function (component, template) {\n            getTestBed().overrideTemplateUsingTestingModule(component, template);\n            return TestBed;\n        };\n        TestBed.overrideProvider = function (token, provider) {\n            getTestBed().overrideProvider(token, provider);\n            return TestBed;\n        };\n        TestBed.deprecatedOverrideProvider = function (token, provider) {\n            getTestBed().deprecatedOverrideProvider(token, provider);\n            return TestBed;\n        };\n        TestBed.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = core.Injector.THROW_IF_NOT_FOUND; }\n            return getTestBed().get(token, notFoundValue);\n        };\n        TestBed.createComponent = function (component) {\n            return getTestBed().createComponent(component);\n        };\n        /**\n         * Initialize the environment for testing with a compiler factory, a PlatformRef, and an\n         * angular module. These are common to every test in the suite.\n         *\n         * This may only be called once, to set up the common providers for the current test\n         * suite on the current platform. If you absolutely need to change the providers,\n         * first use `resetTestEnvironment`.\n         *\n         * Test modules and platforms for individual platforms are available from\n         * '@angular/<platform_name>/testing'.\n         *\n         * @experimental\n         */\n        TestBed.prototype.initTestEnvironment = function (ngModule, platform, aotSummaries) {\n            if (this.platform || this.ngModule) {\n                throw new Error('Cannot set base providers because it has already been called');\n            }\n            this.platform = platform;\n            this.ngModule = ngModule;\n            if (aotSummaries) {\n                this._testEnvAotSummaries = aotSummaries;\n            }\n        };\n        /**\n         * Reset the providers for the test injector.\n         *\n         * @experimental\n         */\n        TestBed.prototype.resetTestEnvironment = function () {\n            this.resetTestingModule();\n            this.platform = null;\n            this.ngModule = null;\n            this._testEnvAotSummaries = function () { return []; };\n        };\n        TestBed.prototype.resetTestingModule = function () {\n            core.ɵclearOverrides();\n            this._aotSummaries = [];\n            this._templateOverrides = [];\n            this._compiler = null;\n            this._moduleOverrides = [];\n            this._componentOverrides = [];\n            this._directiveOverrides = [];\n            this._pipeOverrides = [];\n            this._isRoot = true;\n            this._rootProviderOverrides = [];\n            this._moduleRef = null;\n            this._moduleFactory = null;\n            this._compilerOptions = [];\n            this._providers = [];\n            this._declarations = [];\n            this._imports = [];\n            this._schemas = [];\n            this._instantiated = false;\n            this._activeFixtures.forEach(function (fixture) {\n                try {\n                    fixture.destroy();\n                }\n                catch (e) {\n                    console.error('Error during cleanup of component', {\n                        component: fixture.componentInstance,\n                        stacktrace: e,\n                    });\n                }\n            });\n            this._activeFixtures = [];\n        };\n        TestBed.prototype.configureCompiler = function (config) {\n            this._assertNotInstantiated('TestBed.configureCompiler', 'configure the compiler');\n            this._compilerOptions.push(config);\n        };\n        TestBed.prototype.configureTestingModule = function (moduleDef) {\n            var _a, _b, _c, _d;\n            this._assertNotInstantiated('TestBed.configureTestingModule', 'configure the test module');\n            if (moduleDef.providers) {\n                (_a = this._providers).push.apply(_a, __spread(moduleDef.providers));\n            }\n            if (moduleDef.declarations) {\n                (_b = this._declarations).push.apply(_b, __spread(moduleDef.declarations));\n            }\n            if (moduleDef.imports) {\n                (_c = this._imports).push.apply(_c, __spread(moduleDef.imports));\n            }\n            if (moduleDef.schemas) {\n                (_d = this._schemas).push.apply(_d, __spread(moduleDef.schemas));\n            }\n            if (moduleDef.aotSummaries) {\n                this._aotSummaries.push(moduleDef.aotSummaries);\n            }\n        };\n        TestBed.prototype.compileComponents = function () {\n            var _this = this;\n            if (this._moduleFactory || this._instantiated) {\n                return Promise.resolve(null);\n            }\n            var moduleType = this._createCompilerAndModule();\n            return this._compiler.compileModuleAndAllComponentsAsync(moduleType)\n                .then(function (moduleAndComponentFactories) {\n                _this._moduleFactory = moduleAndComponentFactories.ngModuleFactory;\n            });\n        };\n        TestBed.prototype._initIfNeeded = function () {\n            var e_1, _a;\n            if (this._instantiated) {\n                return;\n            }\n            if (!this._moduleFactory) {\n                try {\n                    var moduleType = this._createCompilerAndModule();\n                    this._moduleFactory =\n                        this._compiler.compileModuleAndAllComponentsSync(moduleType).ngModuleFactory;\n                }\n                catch (e) {\n                    var errorCompType = this._compiler.getComponentFromError(e);\n                    if (errorCompType) {\n                        throw new Error(\"This test module uses the component \" + core.ɵstringify(errorCompType) + \" which is using a \\\"templateUrl\\\" or \\\"styleUrls\\\", but they were never compiled. \" +\n                            \"Please call \\\"TestBed.compileComponents\\\" before your test.\");\n                    }\n                    else {\n                        throw e;\n                    }\n                }\n            }\n            try {\n                for (var _b = __values(this._templateOverrides), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var _d = _c.value, component = _d.component, templateOf = _d.templateOf;\n                    var compFactory = this._compiler.getComponentFactory(templateOf);\n                    core.ɵoverrideComponentView(component, compFactory);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            var ngZone = new core.NgZone({ enableLongStackTrace: true });\n            var providers = [{ provide: core.NgZone, useValue: ngZone }];\n            var ngZoneInjector = core.Injector.create({\n                providers: providers,\n                parent: this.platform.injector,\n                name: this._moduleFactory.moduleType.name\n            });\n            this._moduleRef = this._moduleFactory.create(ngZoneInjector);\n            // ApplicationInitStatus.runInitializers() is marked @internal to core. So casting to any\n            // before accessing it.\n            this._moduleRef.injector.get(core.ApplicationInitStatus).runInitializers();\n            this._instantiated = true;\n        };\n        TestBed.prototype._createCompilerAndModule = function () {\n            var _this = this;\n            var e_2, _a;\n            var providers = this._providers.concat([{ provide: TestBed, useValue: this }]);\n            var declarations = __spread(this._declarations, this._templateOverrides.map(function (entry) { return entry.templateOf; }));\n            var rootScopeImports = [];\n            var rootProviderOverrides = this._rootProviderOverrides;\n            if (this._isRoot) {\n                var RootScopeModule = /** @class */ (function () {\n                    function RootScopeModule() {\n                    }\n                    RootScopeModule = __decorate([\n                        core.NgModule({\n                            providers: __spread(rootProviderOverrides),\n                            jit: true,\n                        })\n                    ], RootScopeModule);\n                    return RootScopeModule;\n                }());\n                rootScopeImports.push(RootScopeModule);\n            }\n            providers.push({ provide: core.ɵAPP_ROOT, useValue: this._isRoot });\n            var imports = [rootScopeImports, this.ngModule, this._imports];\n            var schemas = this._schemas;\n            var DynamicTestModule = /** @class */ (function () {\n                function DynamicTestModule() {\n                }\n                DynamicTestModule = __decorate([\n                    core.NgModule({ providers: providers, declarations: declarations, imports: imports, schemas: schemas, jit: true })\n                ], DynamicTestModule);\n                return DynamicTestModule;\n            }());\n            var compilerFactory = this.platform.injector.get(TestingCompilerFactory);\n            this._compiler = compilerFactory.createTestingCompiler(this._compilerOptions);\n            try {\n                for (var _b = __values(__spread([this._testEnvAotSummaries], this._aotSummaries)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var summary = _c.value;\n                    this._compiler.loadAotSummaries(summary);\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n            this._moduleOverrides.forEach(function (entry) { return _this._compiler.overrideModule(entry[0], entry[1]); });\n            this._componentOverrides.forEach(function (entry) { return _this._compiler.overrideComponent(entry[0], entry[1]); });\n            this._directiveOverrides.forEach(function (entry) { return _this._compiler.overrideDirective(entry[0], entry[1]); });\n            this._pipeOverrides.forEach(function (entry) { return _this._compiler.overridePipe(entry[0], entry[1]); });\n            return DynamicTestModule;\n        };\n        TestBed.prototype._assertNotInstantiated = function (methodName, methodDescription) {\n            if (this._instantiated) {\n                throw new Error(\"Cannot \" + methodDescription + \" when the test module has already been instantiated. \" +\n                    (\"Make sure you are not using `inject` before `\" + methodName + \"`.\"));\n            }\n        };\n        TestBed.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = core.Injector.THROW_IF_NOT_FOUND; }\n            this._initIfNeeded();\n            if (token === TestBed) {\n                return this;\n            }\n            // Tests can inject things from the ng module and from the compiler,\n            // but the ng module can't inject things from the compiler and vice versa.\n            var result = this._moduleRef.injector.get(token, UNDEFINED);\n            return result === UNDEFINED ? this._compiler.injector.get(token, notFoundValue) : result;\n        };\n        TestBed.prototype.execute = function (tokens, fn, context) {\n            var _this = this;\n            this._initIfNeeded();\n            var params = tokens.map(function (t) { return _this.get(t); });\n            return fn.apply(context, params);\n        };\n        TestBed.prototype.overrideModule = function (ngModule, override) {\n            this._assertNotInstantiated('overrideModule', 'override module metadata');\n            this._moduleOverrides.push([ngModule, override]);\n        };\n        TestBed.prototype.overrideComponent = function (component, override) {\n            this._assertNotInstantiated('overrideComponent', 'override component metadata');\n            this._componentOverrides.push([component, override]);\n        };\n        TestBed.prototype.overrideDirective = function (directive, override) {\n            this._assertNotInstantiated('overrideDirective', 'override directive metadata');\n            this._directiveOverrides.push([directive, override]);\n        };\n        TestBed.prototype.overridePipe = function (pipe, override) {\n            this._assertNotInstantiated('overridePipe', 'override pipe metadata');\n            this._pipeOverrides.push([pipe, override]);\n        };\n        TestBed.prototype.overrideProvider = function (token, provider) {\n            this.overrideProviderImpl(token, provider);\n        };\n        TestBed.prototype.deprecatedOverrideProvider = function (token, provider) {\n            this.overrideProviderImpl(token, provider, /* deprecated */ true);\n        };\n        TestBed.prototype.overrideProviderImpl = function (token, provider, deprecated) {\n            if (deprecated === void 0) { deprecated = false; }\n            if (typeof token !== 'string' && token.ngInjectableDef &&\n                token.ngInjectableDef.providedIn === 'root') {\n                if (provider.useFactory) {\n                    this._rootProviderOverrides.push({ provide: token, useFactory: provider.useFactory, deps: provider.deps || [] });\n                }\n                else {\n                    this._rootProviderOverrides.push({ provide: token, useValue: provider.useValue });\n                }\n            }\n            var flags = 0;\n            var value;\n            if (provider.useFactory) {\n                flags |= 1024 /* TypeFactoryProvider */;\n                value = provider.useFactory;\n            }\n            else {\n                flags |= 256 /* TypeValueProvider */;\n                value = provider.useValue;\n            }\n            var deps = (provider.deps || []).map(function (dep) {\n                var depFlags = 0 /* None */;\n                var depToken;\n                if (Array.isArray(dep)) {\n                    dep.forEach(function (entry) {\n                        if (entry instanceof core.Optional) {\n                            depFlags |= 2 /* Optional */;\n                        }\n                        else if (entry instanceof core.SkipSelf) {\n                            depFlags |= 1 /* SkipSelf */;\n                        }\n                        else {\n                            depToken = entry;\n                        }\n                    });\n                }\n                else {\n                    depToken = dep;\n                }\n                return [depFlags, depToken];\n            });\n            core.ɵoverrideProvider({ token: token, flags: flags, deps: deps, value: value, deprecatedBehavior: deprecated });\n        };\n        TestBed.prototype.overrideTemplateUsingTestingModule = function (component, template) {\n            this._assertNotInstantiated('overrideTemplateUsingTestingModule', 'override template');\n            var OverrideComponent = /** @class */ (function () {\n                function OverrideComponent() {\n                }\n                OverrideComponent = __decorate([\n                    core.Component({ selector: 'empty', template: template, jit: true })\n                ], OverrideComponent);\n                return OverrideComponent;\n            }());\n            this._templateOverrides.push({ component: component, templateOf: OverrideComponent });\n        };\n        TestBed.prototype.createComponent = function (component) {\n            var _this = this;\n            this._initIfNeeded();\n            var componentFactory = this._compiler.getComponentFactory(component);\n            if (!componentFactory) {\n                throw new Error(\"Cannot create the component \" + core.ɵstringify(component) + \" as it was not imported into the testing module!\");\n            }\n            var noNgZone = this.get(ComponentFixtureNoNgZone, false);\n            var autoDetect = this.get(ComponentFixtureAutoDetect, false);\n            var ngZone = noNgZone ? null : this.get(core.NgZone, null);\n            var testComponentRenderer = this.get(TestComponentRenderer);\n            var rootElId = \"root\" + _nextRootElementId++;\n            testComponentRenderer.insertRootElement(rootElId);\n            var initComponent = function () {\n                var componentRef = componentFactory.create(core.Injector.NULL, [], \"#\" + rootElId, _this._moduleRef);\n                return new ComponentFixture(componentRef, ngZone, autoDetect);\n            };\n            var fixture = !ngZone ? initComponent() : ngZone.run(initComponent);\n            this._activeFixtures.push(fixture);\n            return fixture;\n        };\n        return TestBed;\n    }());\n    var _testBed = null;\n    /**\n     * @experimental\n     */\n    function getTestBed() {\n        return _testBed = _testBed || new TestBed();\n    }\n    /**\n     * Allows injecting dependencies in `beforeEach()` and `it()`.\n     *\n     * Example:\n     *\n     * ```\n     * beforeEach(inject([Dependency, AClass], (dep, object) => {\n     *   // some code that uses `dep` and `object`\n     *   // ...\n     * }));\n     *\n     * it('...', inject([AClass], (object) => {\n     *   object.doSomething();\n     *   expect(...);\n     * })\n     * ```\n     *\n     * Notes:\n     * - inject is currently a function because of some Traceur limitation the syntax should\n     * eventually\n     *   becomes `it('...', @Inject (object: AClass, async: AsyncTestCompleter) => { ... });`\n     *\n     *\n     */\n    function inject(tokens, fn) {\n        var testBed = getTestBed();\n        if (tokens.indexOf(AsyncTestCompleter) >= 0) {\n            // Not using an arrow function to preserve context passed from call site\n            return function () {\n                var _this = this;\n                // Return an async test method that returns a Promise if AsyncTestCompleter is one of\n                // the injected tokens.\n                return testBed.compileComponents().then(function () {\n                    var completer = testBed.get(AsyncTestCompleter);\n                    testBed.execute(tokens, fn, _this);\n                    return completer.promise;\n                });\n            };\n        }\n        else {\n            // Not using an arrow function to preserve context passed from call site\n            return function () { return testBed.execute(tokens, fn, this); };\n        }\n    }\n    /**\n     * @experimental\n     */\n    var InjectSetupWrapper = /** @class */ (function () {\n        function InjectSetupWrapper(_moduleDef) {\n            this._moduleDef = _moduleDef;\n        }\n        InjectSetupWrapper.prototype._addModule = function () {\n            var moduleDef = this._moduleDef();\n            if (moduleDef) {\n                getTestBed().configureTestingModule(moduleDef);\n            }\n        };\n        InjectSetupWrapper.prototype.inject = function (tokens, fn) {\n            var self = this;\n            // Not using an arrow function to preserve context passed from call site\n            return function () {\n                self._addModule();\n                return inject(tokens, fn).call(this);\n            };\n        };\n        return InjectSetupWrapper;\n    }());\n    function withModule(moduleDef, fn) {\n        if (fn) {\n            // Not using an arrow function to preserve context passed from call site\n            return function () {\n                var testBed = getTestBed();\n                if (moduleDef) {\n                    testBed.configureTestingModule(moduleDef);\n                }\n                return fn.apply(this);\n            };\n        }\n        return new InjectSetupWrapper(function () { return moduleDef; });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _global$1 = (typeof window === 'undefined' ? global : window);\n    // Reset the test providers and the fake async zone before each test.\n    if (_global$1.beforeEach) {\n        _global$1.beforeEach(function () {\n            TestBed.resetTestingModule();\n            resetFakeAsyncZone();\n        });\n    }\n    // TODO(juliemr): remove this, only used because we need to export something to have compilation\n    // work.\n    var __core_private_testing_placeholder__ = '';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.async = async;\n    exports.ComponentFixture = ComponentFixture;\n    exports.resetFakeAsyncZone = resetFakeAsyncZone;\n    exports.fakeAsync = fakeAsync;\n    exports.tick = tick;\n    exports.flush = flush;\n    exports.discardPeriodicTasks = discardPeriodicTasks;\n    exports.flushMicrotasks = flushMicrotasks;\n    exports.TestComponentRenderer = TestComponentRenderer;\n    exports.ComponentFixtureAutoDetect = ComponentFixtureAutoDetect;\n    exports.ComponentFixtureNoNgZone = ComponentFixtureNoNgZone;\n    exports.TestBed = TestBed;\n    exports.getTestBed = getTestBed;\n    exports.inject = inject;\n    exports.InjectSetupWrapper = InjectSetupWrapper;\n    exports.withModule = withModule;\n    exports.__core_private_testing_placeholder__ = __core_private_testing_placeholder__;\n    exports.ɵTestingCompiler = TestingCompiler;\n    exports.ɵTestingCompilerFactory = TestingCompilerFactory;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core-testing.umd.js.map\n"]}