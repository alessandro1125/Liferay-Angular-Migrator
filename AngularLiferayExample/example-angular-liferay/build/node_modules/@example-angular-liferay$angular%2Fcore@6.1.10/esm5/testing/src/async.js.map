{"version":3,"sources":["../../../../../../../../../../../packages/core/testing/src/async.ts"],"names":[],"mappings":";;;;;;;;;AAQA,aAAQ,aAAR,QAA4B,kBAA5B;AAEA;;;;;;;;;;;;;;;;;AAiBA,WAAM,SAAA,KAAA,CAAgB,EAAhB,EAA4B;AAChC,YAAM,QAAa,OAAO,IAAP,KAAgB,WAAhB,GAA8B,IAA9B,GAAqC,IAAxD;AACA,YAAI,CAAC,KAAL,EAAY;AACV,mBAAO,YAAA;AACL,uBAAO,QAAQ,MAAR,CACH,wEACA,sEAFG,CAAP;AAGD,aAJD;AAKD;AACD,YAAM,YAAY,SAAS,MAAM,MAAM,UAAN,CAAiB,WAAjB,CAAN,CAA3B;AACA,YAAI,OAAO,SAAP,KAAqB,UAAzB,EAAqC;AACnC,mBAAO,UAAU,EAAV,CAAP;AACD;AACD;AACA;AACA;AACA,eAAO,cAAc,EAAd,CAAP;AACD","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {asyncFallback} from './async_fallback';\n\n/**\n * Wraps a test function in an asynchronous test zone. The test will automatically\n * complete when all asynchronous calls within this zone are done. Can be used\n * to wrap an {@link inject} call.\n *\n * Example:\n *\n * ```\n * it('...', async(inject([AClass], (object) => {\n *   object.doSomething.then(() => {\n *     expect(...);\n *   })\n * });\n * ```\n *\n *\n */\nexport function async(fn: Function): (done: any) => any {\n  const _Zone: any = typeof Zone !== 'undefined' ? Zone : null;\n  if (!_Zone) {\n    return function() {\n      return Promise.reject(\n          'Zone is needed for the async() test helper but could not be found. ' +\n          'Please make sure that your environment includes zone.js/dist/zone.js');\n    };\n  }\n  const asyncTest = _Zone && _Zone[_Zone.__symbol__('asyncTest')];\n  if (typeof asyncTest === 'function') {\n    return asyncTest(fn);\n  }\n  // not using new version of zone.js\n  // TODO @JiaLiPassion, remove this after all library updated to\n  // newest version of zone.js(0.8.25)\n  return asyncFallback(fn);\n}"],"sourceRoot":""}