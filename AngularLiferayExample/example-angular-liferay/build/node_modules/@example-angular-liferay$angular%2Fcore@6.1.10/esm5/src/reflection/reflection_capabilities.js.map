{"version":3,"sources":["../../../../../../../../../../packages/core/src/reflection/reflection_capabilities.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type, isType} from '../type';\nimport {global, stringify} from '../util';\nimport {ANNOTATIONS, PARAMETERS, PROP_METADATA} from '../util/decorators';\n\nimport {PlatformReflectionCapabilities} from './platform_reflection_capabilities';\nimport {GetterFn, MethodFn, SetterFn} from './types';\n\n\n/**\n * Attention: These regex has to hold even if the code is minified!\n */\nexport const DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\nexport const INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{/;\nexport const INHERITED_CLASS_WITH_CTOR =\n    /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{[\\s\\S]*constructor\\s*\\(/;\n\nexport class ReflectionCapabilities implements PlatformReflectionCapabilities {\n  private _reflect: any;\n\n  constructor(reflect?: any) { this._reflect = reflect || global['Reflect']; }\n\n  isReflectionEnabled(): boolean { return true; }\n\n  factory<T>(t: Type<T>): (args: any[]) => T { return (...args: any[]) => new t(...args); }\n\n  /** @internal */\n  _zipTypesAndAnnotations(paramTypes: any[], paramAnnotations: any[]): any[][] {\n    let result: any[][];\n\n    if (typeof paramTypes === 'undefined') {\n      result = new Array(paramAnnotations.length);\n    } else {\n      result = new Array(paramTypes.length);\n    }\n\n    for (let i = 0; i < result.length; i++) {\n      // TS outputs Object for parameters without types, while Traceur omits\n      // the annotations. For now we preserve the Traceur behavior to aid\n      // migration, but this can be revisited.\n      if (typeof paramTypes === 'undefined') {\n        result[i] = [];\n      } else if (paramTypes[i] != Object) {\n        result[i] = [paramTypes[i]];\n      } else {\n        result[i] = [];\n      }\n      if (paramAnnotations && paramAnnotations[i] != null) {\n        result[i] = result[i].concat(paramAnnotations[i]);\n      }\n    }\n    return result;\n  }\n\n  private _ownParameters(type: Type<any>, parentCtor: any): any[][]|null {\n    const typeStr = type.toString();\n    // If we have no decorators, we only have function.length as metadata.\n    // In that case, to detect whether a child class declared an own constructor or not,\n    // we need to look inside of that constructor to check whether it is\n    // just calling the parent.\n    // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n    // that sets 'design:paramtypes' to []\n    // if a class inherits from another class but has no ctor declared itself.\n    if (DELEGATE_CTOR.exec(typeStr) ||\n        (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n      return null;\n    }\n\n    // Prefer the direct API.\n    if ((<any>type).parameters && (<any>type).parameters !== parentCtor.parameters) {\n      return (<any>type).parameters;\n    }\n\n    // API of tsickle for lowering decorators to properties on the class.\n    const tsickleCtorParams = (<any>type).ctorParameters;\n    if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n      // Newer tsickle uses a function closure\n      // Retain the non-function case for compatibility with older tsickle\n      const ctorParameters =\n          typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n      const paramTypes = ctorParameters.map((ctorParam: any) => ctorParam && ctorParam.type);\n      const paramAnnotations = ctorParameters.map(\n          (ctorParam: any) =>\n              ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators));\n      return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n    }\n\n    // API for metadata created by invoking the decorators.\n    const paramAnnotations = type.hasOwnProperty(PARAMETERS) && (type as any)[PARAMETERS];\n    const paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n        this._reflect.getOwnMetadata('design:paramtypes', type);\n    if (paramTypes || paramAnnotations) {\n      return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n    }\n\n    // If a class has no decorators, at least create metadata\n    // based on function.length.\n    // Note: We know that this is a real constructor as we checked\n    // the content of the constructor above.\n    return new Array((<any>type.length)).fill(undefined);\n  }\n\n  parameters(type: Type<any>): any[][] {\n    // Note: only report metadata if we have at least one class decorator\n    // to stay in sync with the static reflector.\n    if (!isType(type)) {\n      return [];\n    }\n    const parentCtor = getParentCtor(type);\n    let parameters = this._ownParameters(type, parentCtor);\n    if (!parameters && parentCtor !== Object) {\n      parameters = this.parameters(parentCtor);\n    }\n    return parameters || [];\n  }\n\n  private _ownAnnotations(typeOrFunc: Type<any>, parentCtor: any): any[]|null {\n    // Prefer the direct API.\n    if ((<any>typeOrFunc).annotations && (<any>typeOrFunc).annotations !== parentCtor.annotations) {\n      let annotations = (<any>typeOrFunc).annotations;\n      if (typeof annotations === 'function' && annotations.annotations) {\n        annotations = annotations.annotations;\n      }\n      return annotations;\n    }\n\n    // API of tsickle for lowering decorators to properties on the class.\n    if ((<any>typeOrFunc).decorators && (<any>typeOrFunc).decorators !== parentCtor.decorators) {\n      return convertTsickleDecoratorIntoMetadata((<any>typeOrFunc).decorators);\n    }\n\n    // API for metadata created by invoking the decorators.\n    if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n      return (typeOrFunc as any)[ANNOTATIONS];\n    }\n    return null;\n  }\n\n  annotations(typeOrFunc: Type<any>): any[] {\n    if (!isType(typeOrFunc)) {\n      return [];\n    }\n    const parentCtor = getParentCtor(typeOrFunc);\n    const ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n    const parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n    return parentAnnotations.concat(ownAnnotations);\n  }\n\n  private _ownPropMetadata(typeOrFunc: any, parentCtor: any): {[key: string]: any[]}|null {\n    // Prefer the direct API.\n    if ((<any>typeOrFunc).propMetadata &&\n        (<any>typeOrFunc).propMetadata !== parentCtor.propMetadata) {\n      let propMetadata = (<any>typeOrFunc).propMetadata;\n      if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n        propMetadata = propMetadata.propMetadata;\n      }\n      return propMetadata;\n    }\n\n    // API of tsickle for lowering decorators to properties on the class.\n    if ((<any>typeOrFunc).propDecorators &&\n        (<any>typeOrFunc).propDecorators !== parentCtor.propDecorators) {\n      const propDecorators = (<any>typeOrFunc).propDecorators;\n      const propMetadata = <{[key: string]: any[]}>{};\n      Object.keys(propDecorators).forEach(prop => {\n        propMetadata[prop] = convertTsickleDecoratorIntoMetadata(propDecorators[prop]);\n      });\n      return propMetadata;\n    }\n\n    // API for metadata created by invoking the decorators.\n    if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n      return (typeOrFunc as any)[PROP_METADATA];\n    }\n    return null;\n  }\n\n  propMetadata(typeOrFunc: any): {[key: string]: any[]} {\n    if (!isType(typeOrFunc)) {\n      return {};\n    }\n    const parentCtor = getParentCtor(typeOrFunc);\n    const propMetadata: {[key: string]: any[]} = {};\n    if (parentCtor !== Object) {\n      const parentPropMetadata = this.propMetadata(parentCtor);\n      Object.keys(parentPropMetadata).forEach((propName) => {\n        propMetadata[propName] = parentPropMetadata[propName];\n      });\n    }\n    const ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n    if (ownPropMetadata) {\n      Object.keys(ownPropMetadata).forEach((propName) => {\n        const decorators: any[] = [];\n        if (propMetadata.hasOwnProperty(propName)) {\n          decorators.push(...propMetadata[propName]);\n        }\n        decorators.push(...ownPropMetadata[propName]);\n        propMetadata[propName] = decorators;\n      });\n    }\n    return propMetadata;\n  }\n\n  hasLifecycleHook(type: any, lcProperty: string): boolean {\n    return type instanceof Type && lcProperty in type.prototype;\n  }\n\n  guards(type: any): {[key: string]: any} { return {}; }\n\n  getter(name: string): GetterFn { return <GetterFn>new Function('o', 'return o.' + name + ';'); }\n\n  setter(name: string): SetterFn {\n    return <SetterFn>new Function('o', 'v', 'return o.' + name + ' = v;');\n  }\n\n  method(name: string): MethodFn {\n    const functionBody = `if (!o.${name}) throw new Error('\"${name}\" is undefined');\n        return o.${name}.apply(o, args);`;\n    return <MethodFn>new Function('o', 'args', functionBody);\n  }\n\n  // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n  importUri(type: any): string {\n    // StaticSymbol\n    if (typeof type === 'object' && type['filePath']) {\n      return type['filePath'];\n    }\n    // Runtime type\n    return `./${stringify(type)}`;\n  }\n\n  resourceUri(type: any): string { return `./${stringify(type)}`; }\n\n  resolveIdentifier(name: string, moduleUrl: string, members: string[], runtime: any): any {\n    return runtime;\n  }\n  resolveEnum(enumIdentifier: any, name: string): any { return enumIdentifier[name]; }\n}\n\nfunction convertTsickleDecoratorIntoMetadata(decoratorInvocations: any[]): any[] {\n  if (!decoratorInvocations) {\n    return [];\n  }\n  return decoratorInvocations.map(decoratorInvocation => {\n    const decoratorType = decoratorInvocation.type;\n    const annotationCls = decoratorType.annotationCls;\n    const annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n    return new annotationCls(...annotationArgs);\n  });\n}\n\nfunction getParentCtor(ctor: Function): Type<any> {\n  const parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n  const parentCtor = parentProto ? parentProto.constructor : null;\n  // Note: We always use `Object` as the null value\n  // to simplify checking later on.\n  return parentCtor || Object;\n}\n"],"sourceRoot":""}