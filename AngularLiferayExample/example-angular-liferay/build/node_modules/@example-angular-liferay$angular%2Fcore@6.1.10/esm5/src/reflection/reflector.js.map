{"version":3,"sources":["../../../../../../../../../../packages/core/src/reflection/reflector.ts"],"names":[],"mappings":";;;;;;;;;AAeA;;;;AAIA,QAAA,YAAA,aAAA,YAAA;AACE,iBAAA,SAAA,CAAmB,sBAAnB,EAAyE;AAAtD,iBAAA,sBAAA,GAAA,sBAAA;AAA0D;AAE7E,kBAAA,SAAA,CAAA,kBAAA,GAAA,UAAmB,IAAnB,EAAuD;AAAI,iBAAK,sBAAL,GAA8B,IAA9B;AAAqC,SAAhG;AAEA,kBAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,IAAR,EAAuB;AAAc,mBAAO,KAAK,sBAAL,CAA4B,OAA5B,CAAoC,IAApC,CAAP;AAAmD,SAAxF;AAEA,kBAAA,SAAA,CAAA,UAAA,GAAA,UAAW,UAAX,EAAgC;AAC9B,mBAAO,KAAK,sBAAL,CAA4B,UAA5B,CAAuC,UAAvC,CAAP;AACD,SAFD;AAIA,kBAAA,SAAA,CAAA,WAAA,GAAA,UAAY,UAAZ,EAAiC;AAC/B,mBAAO,KAAK,sBAAL,CAA4B,WAA5B,CAAwC,UAAxC,CAAP;AACD,SAFD;AAIA,kBAAA,SAAA,CAAA,YAAA,GAAA,UAAa,UAAb,EAAkC;AAChC,mBAAO,KAAK,sBAAL,CAA4B,YAA5B,CAAyC,UAAzC,CAAP;AACD,SAFD;AAIA,kBAAA,SAAA,CAAA,gBAAA,GAAA,UAAiB,IAAjB,EAA4B,UAA5B,EAA8C;AAC5C,mBAAO,KAAK,sBAAL,CAA4B,gBAA5B,CAA6C,IAA7C,EAAmD,UAAnD,CAAP;AACD,SAFD;AAIA,kBAAA,SAAA,CAAA,MAAA,GAAA,UAAO,IAAP,EAAmB;AAAc,mBAAO,KAAK,sBAAL,CAA4B,MAA5B,CAAmC,IAAnC,CAAP;AAAkD,SAAnF;AAEA,kBAAA,SAAA,CAAA,MAAA,GAAA,UAAO,IAAP,EAAmB;AAAc,mBAAO,KAAK,sBAAL,CAA4B,MAA5B,CAAmC,IAAnC,CAAP;AAAkD,SAAnF;AAEA,kBAAA,SAAA,CAAA,MAAA,GAAA,UAAO,IAAP,EAAmB;AAAc,mBAAO,KAAK,sBAAL,CAA4B,MAA5B,CAAmC,IAAnC,CAAP;AAAkD,SAAnF;AAEA,kBAAA,SAAA,CAAA,SAAA,GAAA,UAAU,IAAV,EAAmB;AAAY,mBAAO,KAAK,sBAAL,CAA4B,SAA5B,CAAsC,IAAtC,CAAP;AAAqD,SAApF;AAEA,kBAAA,SAAA,CAAA,WAAA,GAAA,UAAY,IAAZ,EAAqB;AAAY,mBAAO,KAAK,sBAAL,CAA4B,WAA5B,CAAwC,IAAxC,CAAP;AAAuD,SAAxF;AAEA,kBAAA,SAAA,CAAA,iBAAA,GAAA,UAAkB,IAAlB,EAAgC,SAAhC,EAAmD,OAAnD,EAAsE,OAAtE,EAAkF;AAChF,mBAAO,KAAK,sBAAL,CAA4B,iBAA5B,CAA8C,IAA9C,EAAoD,SAApD,EAA+D,OAA/D,EAAwE,OAAxE,CAAP;AACD,SAFD;AAIA,kBAAA,SAAA,CAAA,WAAA,GAAA,UAAY,UAAZ,EAA6B,IAA7B,EAAyC;AACvC,mBAAO,KAAK,sBAAL,CAA4B,WAA5B,CAAwC,UAAxC,EAAoD,IAApD,CAAP;AACD,SAFD;AAGF,eAAA,SAAA;AAAC,KAxCD,EAAA","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '../type';\nimport {PlatformReflectionCapabilities} from './platform_reflection_capabilities';\nimport {GetterFn, MethodFn, SetterFn} from './types';\n\nexport {PlatformReflectionCapabilities};\nexport {GetterFn, MethodFn, SetterFn};\n\n/**\n * Provides access to reflection data about symbols. Used internally by Angular\n * to power dependency injection and compilation.\n */\nexport class Reflector {\n  constructor(public reflectionCapabilities: PlatformReflectionCapabilities) {}\n\n  updateCapabilities(caps: PlatformReflectionCapabilities) { this.reflectionCapabilities = caps; }\n\n  factory(type: Type<any>): Function { return this.reflectionCapabilities.factory(type); }\n\n  parameters(typeOrFunc: Type<any>): any[][] {\n    return this.reflectionCapabilities.parameters(typeOrFunc);\n  }\n\n  annotations(typeOrFunc: Type<any>): any[] {\n    return this.reflectionCapabilities.annotations(typeOrFunc);\n  }\n\n  propMetadata(typeOrFunc: Type<any>): {[key: string]: any[]} {\n    return this.reflectionCapabilities.propMetadata(typeOrFunc);\n  }\n\n  hasLifecycleHook(type: any, lcProperty: string): boolean {\n    return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n  }\n\n  getter(name: string): GetterFn { return this.reflectionCapabilities.getter(name); }\n\n  setter(name: string): SetterFn { return this.reflectionCapabilities.setter(name); }\n\n  method(name: string): MethodFn { return this.reflectionCapabilities.method(name); }\n\n  importUri(type: any): string { return this.reflectionCapabilities.importUri(type); }\n\n  resourceUri(type: any): string { return this.reflectionCapabilities.resourceUri(type); }\n\n  resolveIdentifier(name: string, moduleUrl: string, members: string[], runtime: any): any {\n    return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n  }\n\n  resolveEnum(identifier: any, name: string): any {\n    return this.reflectionCapabilities.resolveEnum(identifier, name);\n  }\n}\n"],"sourceRoot":""}