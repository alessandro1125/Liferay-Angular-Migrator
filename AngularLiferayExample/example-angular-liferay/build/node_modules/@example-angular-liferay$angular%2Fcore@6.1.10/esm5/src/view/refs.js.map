{"version":3,"sources":["../../../../../../../../../../packages/core/src/view/refs.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ApplicationRef} from '../application_ref';\nimport {ChangeDetectorRef} from '../change_detection/change_detection';\nimport {InjectFlags, Injector} from '../di/injector';\nimport {ComponentFactory, ComponentRef} from '../linker/component_factory';\nimport {ComponentFactoryBoundToModule, ComponentFactoryResolver} from '../linker/component_factory_resolver';\nimport {ElementRef} from '../linker/element_ref';\nimport {InternalNgModuleRef, NgModuleRef} from '../linker/ng_module_factory';\nimport {TemplateRef} from '../linker/template_ref';\nimport {ViewContainerRef} from '../linker/view_container_ref';\nimport {EmbeddedViewRef, InternalViewRef, ViewRef} from '../linker/view_ref';\nimport {Renderer as RendererV1, Renderer2} from '../render/api';\nimport {Type} from '../type';\nimport {stringify} from '../util';\nimport {VERSION} from '../version';\n\nimport {callNgModuleLifecycle, initNgModule, resolveNgModuleDep} from './ng_module';\nimport {DepFlags, ElementData, NgModuleData, NgModuleDefinition, NodeDef, NodeFlags, Services, TemplateData, ViewContainerData, ViewData, ViewDefinitionFactory, ViewState, asElementData, asProviderData, asTextData} from './types';\nimport {markParentViewsForCheck, resolveDefinition, rootRenderNodes, splitNamespace, tokenKey, viewParentEl} from './util';\nimport {attachEmbeddedView, detachEmbeddedView, moveEmbeddedView, renderDetachView} from './view_attach';\n\nconst EMPTY_CONTEXT = new Object();\n\n// Attention: this function is called as top level function.\n// Putting any logic in here will destroy closure tree shaking!\nexport function createComponentFactory(\n    selector: string, componentType: Type<any>, viewDefFactory: ViewDefinitionFactory,\n    inputs: {[propName: string]: string} | null, outputs: {[propName: string]: string},\n    ngContentSelectors: string[]): ComponentFactory<any> {\n  return new ComponentFactory_(\n      selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n}\n\nexport function getComponentViewDefinitionFactory(componentFactory: ComponentFactory<any>):\n    ViewDefinitionFactory {\n  return (componentFactory as ComponentFactory_).viewDefFactory;\n}\n\nclass ComponentFactory_ extends ComponentFactory<any> {\n  /**\n   * @internal\n   */\n  viewDefFactory: ViewDefinitionFactory;\n\n  constructor(\n      public selector: string, public componentType: Type<any>,\n      viewDefFactory: ViewDefinitionFactory, private _inputs: {[propName: string]: string}|null,\n      private _outputs: {[propName: string]: string}, public ngContentSelectors: string[]) {\n    // Attention: this ctor is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    super();\n    this.viewDefFactory = viewDefFactory;\n  }\n\n  get inputs() {\n    const inputsArr: {propName: string, templateName: string}[] = [];\n    const inputs = this._inputs !;\n    for (let propName in inputs) {\n      const templateName = inputs[propName];\n      inputsArr.push({propName, templateName});\n    }\n    return inputsArr;\n  }\n\n  get outputs() {\n    const outputsArr: {propName: string, templateName: string}[] = [];\n    for (let propName in this._outputs) {\n      const templateName = this._outputs[propName];\n      outputsArr.push({propName, templateName});\n    }\n    return outputsArr;\n  }\n\n  /**\n   * Creates a new component.\n   */\n  create(\n      injector: Injector, projectableNodes?: any[][], rootSelectorOrNode?: string|any,\n      ngModule?: NgModuleRef<any>): ComponentRef<any> {\n    if (!ngModule) {\n      throw new Error('ngModule should be provided');\n    }\n    const viewDef = resolveDefinition(this.viewDefFactory);\n    const componentNodeIndex = viewDef.nodes[0].element !.componentProvider !.nodeIndex;\n    const view = Services.createRootView(\n        injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n    const component = asProviderData(view, componentNodeIndex).instance;\n    if (rootSelectorOrNode) {\n      view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n    }\n\n    return new ComponentRef_(view, new ViewRef_(view), component);\n  }\n}\n\nclass ComponentRef_ extends ComponentRef<any> {\n  public readonly hostView: ViewRef;\n  public readonly instance: any;\n  public readonly changeDetectorRef: ChangeDetectorRef;\n  private _elDef: NodeDef;\n  constructor(private _view: ViewData, private _viewRef: ViewRef, private _component: any) {\n    super();\n    this._elDef = this._view.def.nodes[0];\n    this.hostView = _viewRef;\n    this.changeDetectorRef = _viewRef;\n    this.instance = _component;\n  }\n  get location(): ElementRef {\n    return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n  }\n  get injector(): Injector { return new Injector_(this._view, this._elDef); }\n  get componentType(): Type<any> { return <any>this._component.constructor; }\n\n  destroy(): void { this._viewRef.destroy(); }\n  onDestroy(callback: Function): void { this._viewRef.onDestroy(callback); }\n}\n\nexport function createViewContainerData(\n    view: ViewData, elDef: NodeDef, elData: ElementData): ViewContainerData {\n  return new ViewContainerRef_(view, elDef, elData);\n}\n\nclass ViewContainerRef_ implements ViewContainerData {\n  /**\n   * @internal\n   */\n  _embeddedViews: ViewData[] = [];\n  constructor(private _view: ViewData, private _elDef: NodeDef, private _data: ElementData) {}\n\n  get element(): ElementRef { return new ElementRef(this._data.renderElement); }\n\n  get injector(): Injector { return new Injector_(this._view, this._elDef); }\n\n  get parentInjector(): Injector {\n    let view = this._view;\n    let elDef = this._elDef.parent;\n    while (!elDef && view) {\n      elDef = viewParentEl(view);\n      view = view.parent !;\n    }\n\n    return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n  }\n\n  clear(): void {\n    const len = this._embeddedViews.length;\n    for (let i = len - 1; i >= 0; i--) {\n      const view = detachEmbeddedView(this._data, i) !;\n      Services.destroyView(view);\n    }\n  }\n\n  get(index: number): ViewRef|null {\n    const view = this._embeddedViews[index];\n    if (view) {\n      const ref = new ViewRef_(view);\n      ref.attachToViewContainerRef(this);\n      return ref;\n    }\n    return null;\n  }\n\n  get length(): number { return this._embeddedViews.length; }\n\n  createEmbeddedView<C>(templateRef: TemplateRef<C>, context?: C, index?: number):\n      EmbeddedViewRef<C> {\n    const viewRef = templateRef.createEmbeddedView(context || <any>{});\n    this.insert(viewRef, index);\n    return viewRef;\n  }\n\n  createComponent<C>(\n      componentFactory: ComponentFactory<C>, index?: number, injector?: Injector,\n      projectableNodes?: any[][], ngModuleRef?: NgModuleRef<any>): ComponentRef<C> {\n    const contextInjector = injector || this.parentInjector;\n    if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n      ngModuleRef = contextInjector.get(NgModuleRef);\n    }\n    const componentRef =\n        componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n    this.insert(componentRef.hostView, index);\n    return componentRef;\n  }\n\n  insert(viewRef: ViewRef, index?: number): ViewRef {\n    if (viewRef.destroyed) {\n      throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n    }\n    const viewRef_ = <ViewRef_>viewRef;\n    const viewData = viewRef_._view;\n    attachEmbeddedView(this._view, this._data, index, viewData);\n    viewRef_.attachToViewContainerRef(this);\n    return viewRef;\n  }\n\n  move(viewRef: ViewRef_, currentIndex: number): ViewRef {\n    if (viewRef.destroyed) {\n      throw new Error('Cannot move a destroyed View in a ViewContainer!');\n    }\n    const previousIndex = this._embeddedViews.indexOf(viewRef._view);\n    moveEmbeddedView(this._data, previousIndex, currentIndex);\n    return viewRef;\n  }\n\n  indexOf(viewRef: ViewRef): number {\n    return this._embeddedViews.indexOf((<ViewRef_>viewRef)._view);\n  }\n\n  remove(index?: number): void {\n    const viewData = detachEmbeddedView(this._data, index);\n    if (viewData) {\n      Services.destroyView(viewData);\n    }\n  }\n\n  detach(index?: number): ViewRef|null {\n    const view = detachEmbeddedView(this._data, index);\n    return view ? new ViewRef_(view) : null;\n  }\n}\n\nexport function createChangeDetectorRef(view: ViewData): ChangeDetectorRef {\n  return new ViewRef_(view);\n}\n\nexport class ViewRef_ implements EmbeddedViewRef<any>, InternalViewRef {\n  /** @internal */\n  _view: ViewData;\n  private _viewContainerRef: ViewContainerRef|null;\n  private _appRef: ApplicationRef|null;\n\n  constructor(_view: ViewData) {\n    this._view = _view;\n    this._viewContainerRef = null;\n    this._appRef = null;\n  }\n\n  get rootNodes(): any[] { return rootRenderNodes(this._view); }\n\n  get context() { return this._view.context; }\n\n  get destroyed(): boolean { return (this._view.state & ViewState.Destroyed) !== 0; }\n\n  markForCheck(): void { markParentViewsForCheck(this._view); }\n  detach(): void { this._view.state &= ~ViewState.Attached; }\n  detectChanges(): void {\n    const fs = this._view.root.rendererFactory;\n    if (fs.begin) {\n      fs.begin();\n    }\n    try {\n      Services.checkAndUpdateView(this._view);\n    } finally {\n      if (fs.end) {\n        fs.end();\n      }\n    }\n  }\n  checkNoChanges(): void { Services.checkNoChangesView(this._view); }\n\n  reattach(): void { this._view.state |= ViewState.Attached; }\n  onDestroy(callback: Function) {\n    if (!this._view.disposables) {\n      this._view.disposables = [];\n    }\n    this._view.disposables.push(<any>callback);\n  }\n\n  destroy() {\n    if (this._appRef) {\n      this._appRef.detachView(this);\n    } else if (this._viewContainerRef) {\n      this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n    }\n    Services.destroyView(this._view);\n  }\n\n  detachFromAppRef() {\n    this._appRef = null;\n    renderDetachView(this._view);\n    Services.dirtyParentQueries(this._view);\n  }\n\n  attachToAppRef(appRef: ApplicationRef) {\n    if (this._viewContainerRef) {\n      throw new Error('This view is already attached to a ViewContainer!');\n    }\n    this._appRef = appRef;\n  }\n\n  attachToViewContainerRef(vcRef: ViewContainerRef) {\n    if (this._appRef) {\n      throw new Error('This view is already attached directly to the ApplicationRef!');\n    }\n    this._viewContainerRef = vcRef;\n  }\n}\n\nexport function createTemplateData(view: ViewData, def: NodeDef): TemplateData {\n  return new TemplateRef_(view, def);\n}\n\nclass TemplateRef_ extends TemplateRef<any> implements TemplateData {\n  /**\n   * @internal\n   */\n  // TODO(issue/24571): remove '!'.\n  _projectedViews !: ViewData[];\n\n  constructor(private _parentView: ViewData, private _def: NodeDef) { super(); }\n\n  createEmbeddedView(context: any): EmbeddedViewRef<any> {\n    return new ViewRef_(Services.createEmbeddedView(\n        this._parentView, this._def, this._def.element !.template !, context));\n  }\n\n  get elementRef(): ElementRef {\n    return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n  }\n}\n\nexport function createInjector(view: ViewData, elDef: NodeDef): Injector {\n  return new Injector_(view, elDef);\n}\n\nclass Injector_ implements Injector {\n  constructor(private view: ViewData, private elDef: NodeDef|null) {}\n  get(token: any, notFoundValue: any = Injector.THROW_IF_NOT_FOUND): any {\n    const allowPrivateServices =\n        this.elDef ? (this.elDef.flags & NodeFlags.ComponentView) !== 0 : false;\n    return Services.resolveDep(\n        this.view, this.elDef, allowPrivateServices,\n        {flags: DepFlags.None, token, tokenKey: tokenKey(token)}, notFoundValue);\n  }\n}\n\nexport function nodeValue(view: ViewData, index: number): any {\n  const def = view.def.nodes[index];\n  if (def.flags & NodeFlags.TypeElement) {\n    const elData = asElementData(view, def.nodeIndex);\n    return def.element !.template ? elData.template : elData.renderElement;\n  } else if (def.flags & NodeFlags.TypeText) {\n    return asTextData(view, def.nodeIndex).renderText;\n  } else if (def.flags & (NodeFlags.CatProvider | NodeFlags.TypePipe)) {\n    return asProviderData(view, def.nodeIndex).instance;\n  }\n  throw new Error(`Illegal state: read nodeValue for node index ${index}`);\n}\n\nexport function createRendererV1(view: ViewData): RendererV1 {\n  return new RendererAdapter(view.renderer);\n}\n\nclass RendererAdapter implements RendererV1 {\n  constructor(private delegate: Renderer2) {}\n  selectRootElement(selectorOrNode: string|Element): Element {\n    return this.delegate.selectRootElement(selectorOrNode);\n  }\n\n  createElement(parent: Element|DocumentFragment, namespaceAndName: string): Element {\n    const [ns, name] = splitNamespace(namespaceAndName);\n    const el = this.delegate.createElement(name, ns);\n    if (parent) {\n      this.delegate.appendChild(parent, el);\n    }\n    return el;\n  }\n\n  createViewRoot(hostElement: Element): Element|DocumentFragment { return hostElement; }\n\n  createTemplateAnchor(parentElement: Element|DocumentFragment): Comment {\n    const comment = this.delegate.createComment('');\n    if (parentElement) {\n      this.delegate.appendChild(parentElement, comment);\n    }\n    return comment;\n  }\n\n  createText(parentElement: Element|DocumentFragment, value: string): any {\n    const node = this.delegate.createText(value);\n    if (parentElement) {\n      this.delegate.appendChild(parentElement, node);\n    }\n    return node;\n  }\n\n  projectNodes(parentElement: Element|DocumentFragment, nodes: Node[]) {\n    for (let i = 0; i < nodes.length; i++) {\n      this.delegate.appendChild(parentElement, nodes[i]);\n    }\n  }\n\n  attachViewAfter(node: Node, viewRootNodes: Node[]) {\n    const parentElement = this.delegate.parentNode(node);\n    const nextSibling = this.delegate.nextSibling(node);\n    for (let i = 0; i < viewRootNodes.length; i++) {\n      this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n    }\n  }\n\n  detachView(viewRootNodes: (Element|Text|Comment)[]) {\n    for (let i = 0; i < viewRootNodes.length; i++) {\n      const node = viewRootNodes[i];\n      const parentElement = this.delegate.parentNode(node);\n      this.delegate.removeChild(parentElement, node);\n    }\n  }\n\n  destroyView(hostElement: Element|DocumentFragment, viewAllNodes: Node[]) {\n    for (let i = 0; i < viewAllNodes.length; i++) {\n      this.delegate.destroyNode !(viewAllNodes[i]);\n    }\n  }\n\n  listen(renderElement: any, name: string, callback: Function): Function {\n    return this.delegate.listen(renderElement, name, <any>callback);\n  }\n\n  listenGlobal(target: string, name: string, callback: Function): Function {\n    return this.delegate.listen(target, name, <any>callback);\n  }\n\n  setElementProperty(\n      renderElement: Element|DocumentFragment, propertyName: string, propertyValue: any): void {\n    this.delegate.setProperty(renderElement, propertyName, propertyValue);\n  }\n\n  setElementAttribute(renderElement: Element, namespaceAndName: string, attributeValue: string):\n      void {\n    const [ns, name] = splitNamespace(namespaceAndName);\n    if (attributeValue != null) {\n      this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n    } else {\n      this.delegate.removeAttribute(renderElement, name, ns);\n    }\n  }\n\n  setBindingDebugInfo(renderElement: Element, propertyName: string, propertyValue: string): void {}\n\n  setElementClass(renderElement: Element, className: string, isAdd: boolean): void {\n    if (isAdd) {\n      this.delegate.addClass(renderElement, className);\n    } else {\n      this.delegate.removeClass(renderElement, className);\n    }\n  }\n\n  setElementStyle(renderElement: HTMLElement, styleName: string, styleValue: string): void {\n    if (styleValue != null) {\n      this.delegate.setStyle(renderElement, styleName, styleValue);\n    } else {\n      this.delegate.removeStyle(renderElement, styleName);\n    }\n  }\n\n  invokeElementMethod(renderElement: Element, methodName: string, args: any[]): void {\n    (renderElement as any)[methodName].apply(renderElement, args);\n  }\n\n  setText(renderNode: Text, text: string): void { this.delegate.setValue(renderNode, text); }\n\n  animate(): any { throw new Error('Renderer.animate is no longer supported!'); }\n}\n\n\nexport function createNgModuleRef(\n    moduleType: Type<any>, parent: Injector, bootstrapComponents: Type<any>[],\n    def: NgModuleDefinition): NgModuleRef<any> {\n  return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n}\n\nclass NgModuleRef_ implements NgModuleData, InternalNgModuleRef<any> {\n  private _destroyListeners: (() => void)[] = [];\n  private _destroyed: boolean = false;\n  /** @internal */\n  // TODO(issue/24571): remove '!'.\n  _providers !: any[];\n  /** @internal */\n  // TODO(issue/24571): remove '!'.\n  _modules !: any[];\n\n  readonly injector: Injector = this;\n\n  constructor(\n      private _moduleType: Type<any>, public _parent: Injector,\n      public _bootstrapComponents: Type<any>[], public _def: NgModuleDefinition) {\n    initNgModule(this);\n  }\n\n  get(token: any, notFoundValue: any = Injector.THROW_IF_NOT_FOUND,\n      injectFlags: InjectFlags = InjectFlags.Default): any {\n    let flags = DepFlags.None;\n    if (injectFlags & InjectFlags.SkipSelf) {\n      flags |= DepFlags.SkipSelf;\n    } else if (injectFlags & InjectFlags.Self) {\n      flags |= DepFlags.Self;\n    }\n    return resolveNgModuleDep(\n        this, {token: token, tokenKey: tokenKey(token), flags: flags}, notFoundValue);\n  }\n\n  get instance() { return this.get(this._moduleType); }\n\n  get componentFactoryResolver() { return this.get(ComponentFactoryResolver); }\n\n  destroy(): void {\n    if (this._destroyed) {\n      throw new Error(\n          `The ng module ${stringify(this.instance.constructor)} has already been destroyed.`);\n    }\n    this._destroyed = true;\n    callNgModuleLifecycle(this, NodeFlags.OnDestroy);\n    this._destroyListeners.forEach((listener) => listener());\n  }\n\n  onDestroy(callback: () => void): void { this._destroyListeners.push(callback); }\n}\n"],"sourceRoot":""}