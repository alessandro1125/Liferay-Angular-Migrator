{"version":3,"sources":["../../../../../../../../../../packages/core/src/view/services.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {isDevMode} from '../application_ref';\nimport {DebugElement, DebugNode, EventListener, getDebugNode, indexDebugNode, removeDebugNodeFromIndex} from '../debug/debug_node';\nimport {Injector} from '../di';\nimport {InjectableType} from '../di/injectable';\nimport {ErrorHandler} from '../error_handler';\nimport {ComponentFactory} from '../linker/component_factory';\nimport {NgModuleRef} from '../linker/ng_module_factory';\nimport {Renderer2, RendererFactory2, RendererStyleFlags2, RendererType2} from '../render/api';\nimport {Sanitizer} from '../sanitization/security';\nimport {Type} from '../type';\nimport {tokenKey} from '../view/util';\n\nimport {isViewDebugError, viewDestroyedError, viewWrappedDebugError} from './errors';\nimport {resolveDep} from './provider';\nimport {dirtyParentQueries, getQueryValue} from './query';\nimport {createInjector, createNgModuleRef, getComponentViewDefinitionFactory} from './refs';\nimport {ArgumentType, BindingFlags, CheckType, DebugContext, DepDef, ElementData, NgModuleDefinition, NgModuleProviderDef, NodeDef, NodeFlags, NodeLogger, ProviderOverride, RootData, Services, ViewData, ViewDefinition, ViewState, asElementData, asPureExpressionData} from './types';\nimport {NOOP, isComponentView, renderNode, resolveDefinition, splitDepsDsl, viewParentEl} from './util';\nimport {checkAndUpdateNode, checkAndUpdateView, checkNoChangesNode, checkNoChangesView, createComponentView, createEmbeddedView, createRootView, destroyView} from './view';\n\n\nlet initialized = false;\n\nexport function initServicesIfNeeded() {\n  if (initialized) {\n    return;\n  }\n  initialized = true;\n  const services = isDevMode() ? createDebugServices() : createProdServices();\n  Services.setCurrentNode = services.setCurrentNode;\n  Services.createRootView = services.createRootView;\n  Services.createEmbeddedView = services.createEmbeddedView;\n  Services.createComponentView = services.createComponentView;\n  Services.createNgModuleRef = services.createNgModuleRef;\n  Services.overrideProvider = services.overrideProvider;\n  Services.overrideComponentView = services.overrideComponentView;\n  Services.clearOverrides = services.clearOverrides;\n  Services.checkAndUpdateView = services.checkAndUpdateView;\n  Services.checkNoChangesView = services.checkNoChangesView;\n  Services.destroyView = services.destroyView;\n  Services.resolveDep = resolveDep;\n  Services.createDebugContext = services.createDebugContext;\n  Services.handleEvent = services.handleEvent;\n  Services.updateDirectives = services.updateDirectives;\n  Services.updateRenderer = services.updateRenderer;\n  Services.dirtyParentQueries = dirtyParentQueries;\n}\n\nfunction createProdServices() {\n  return {\n    setCurrentNode: () => {},\n    createRootView: createProdRootView,\n    createEmbeddedView: createEmbeddedView,\n    createComponentView: createComponentView,\n    createNgModuleRef: createNgModuleRef,\n    overrideProvider: NOOP,\n    overrideComponentView: NOOP,\n    clearOverrides: NOOP,\n    checkAndUpdateView: checkAndUpdateView,\n    checkNoChangesView: checkNoChangesView,\n    destroyView: destroyView,\n    createDebugContext: (view: ViewData, nodeIndex: number) => new DebugContext_(view, nodeIndex),\n    handleEvent: (view: ViewData, nodeIndex: number, eventName: string, event: any) =>\n                     view.def.handleEvent(view, nodeIndex, eventName, event),\n    updateDirectives: (view: ViewData, checkType: CheckType) => view.def.updateDirectives(\n                          checkType === CheckType.CheckAndUpdate ? prodCheckAndUpdateNode :\n                                                                   prodCheckNoChangesNode,\n                          view),\n    updateRenderer: (view: ViewData, checkType: CheckType) => view.def.updateRenderer(\n                        checkType === CheckType.CheckAndUpdate ? prodCheckAndUpdateNode :\n                                                                 prodCheckNoChangesNode,\n                        view),\n  };\n}\n\nfunction createDebugServices() {\n  return {\n    setCurrentNode: debugSetCurrentNode,\n    createRootView: debugCreateRootView,\n    createEmbeddedView: debugCreateEmbeddedView,\n    createComponentView: debugCreateComponentView,\n    createNgModuleRef: debugCreateNgModuleRef,\n    overrideProvider: debugOverrideProvider,\n    overrideComponentView: debugOverrideComponentView,\n    clearOverrides: debugClearOverrides,\n    checkAndUpdateView: debugCheckAndUpdateView,\n    checkNoChangesView: debugCheckNoChangesView,\n    destroyView: debugDestroyView,\n    createDebugContext: (view: ViewData, nodeIndex: number) => new DebugContext_(view, nodeIndex),\n    handleEvent: debugHandleEvent,\n    updateDirectives: debugUpdateDirectives,\n    updateRenderer: debugUpdateRenderer,\n  };\n}\n\nfunction createProdRootView(\n    elInjector: Injector, projectableNodes: any[][], rootSelectorOrNode: string | any,\n    def: ViewDefinition, ngModule: NgModuleRef<any>, context?: any): ViewData {\n  const rendererFactory: RendererFactory2 = ngModule.injector.get(RendererFactory2);\n  return createRootView(\n      createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode),\n      def, context);\n}\n\nfunction debugCreateRootView(\n    elInjector: Injector, projectableNodes: any[][], rootSelectorOrNode: string | any,\n    def: ViewDefinition, ngModule: NgModuleRef<any>, context?: any): ViewData {\n  const rendererFactory: RendererFactory2 = ngModule.injector.get(RendererFactory2);\n  const root = createRootData(\n      elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes,\n      rootSelectorOrNode);\n  const defWithOverride = applyProviderOverridesToView(def);\n  return callWithDebugContext(\n      DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n}\n\nfunction createRootData(\n    elInjector: Injector, ngModule: NgModuleRef<any>, rendererFactory: RendererFactory2,\n    projectableNodes: any[][], rootSelectorOrNode: any): RootData {\n  const sanitizer = ngModule.injector.get(Sanitizer);\n  const errorHandler = ngModule.injector.get(ErrorHandler);\n  const renderer = rendererFactory.createRenderer(null, null);\n  return {\n    ngModule,\n    injector: elInjector, projectableNodes,\n    selectorOrNode: rootSelectorOrNode, sanitizer, rendererFactory, renderer, errorHandler\n  };\n}\n\nfunction debugCreateEmbeddedView(\n    parentView: ViewData, anchorDef: NodeDef, viewDef: ViewDefinition, context?: any): ViewData {\n  const defWithOverride = applyProviderOverridesToView(viewDef);\n  return callWithDebugContext(\n      DebugAction.create, createEmbeddedView, null,\n      [parentView, anchorDef, defWithOverride, context]);\n}\n\nfunction debugCreateComponentView(\n    parentView: ViewData, nodeDef: NodeDef, viewDef: ViewDefinition, hostElement: any): ViewData {\n  const overrideComponentView =\n      viewDefOverrides.get(nodeDef.element !.componentProvider !.provider !.token);\n  if (overrideComponentView) {\n    viewDef = overrideComponentView;\n  } else {\n    viewDef = applyProviderOverridesToView(viewDef);\n  }\n  return callWithDebugContext(\n      DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef, hostElement]);\n}\n\nfunction debugCreateNgModuleRef(\n    moduleType: Type<any>, parentInjector: Injector, bootstrapComponents: Type<any>[],\n    def: NgModuleDefinition): NgModuleRef<any> {\n  const defWithOverride = applyProviderOverridesToNgModule(def);\n  return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n}\n\nconst providerOverrides = new Map<any, ProviderOverride>();\nconst providerOverridesWithScope = new Map<InjectableType<any>, ProviderOverride>();\nconst viewDefOverrides = new Map<any, ViewDefinition>();\n\nfunction debugOverrideProvider(override: ProviderOverride) {\n  providerOverrides.set(override.token, override);\n  if (typeof override.token === 'function' && override.token.ngInjectableDef &&\n      typeof override.token.ngInjectableDef.providedIn === 'function') {\n    providerOverridesWithScope.set(override.token as InjectableType<any>, override);\n  }\n}\n\nfunction debugOverrideComponentView(comp: any, compFactory: ComponentFactory<any>) {\n  const hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n  const compViewDef = resolveDefinition(hostViewDef.nodes[0].element !.componentView !);\n  viewDefOverrides.set(comp, compViewDef);\n}\n\nfunction debugClearOverrides() {\n  providerOverrides.clear();\n  providerOverridesWithScope.clear();\n  viewDefOverrides.clear();\n}\n\n// Notes about the algorithm:\n// 1) Locate the providers of an element and check if one of them was overwritten\n// 2) Change the providers of that element\n//\n// We only create new datastructures if we need to, to keep perf impact\n// reasonable.\nfunction applyProviderOverridesToView(def: ViewDefinition): ViewDefinition {\n  if (providerOverrides.size === 0) {\n    return def;\n  }\n  const elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n  if (elementIndicesWithOverwrittenProviders.length === 0) {\n    return def;\n  }\n  // clone the whole view definition,\n  // as it maintains references between the nodes that are hard to update.\n  def = def.factory !(() => NOOP);\n  for (let i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n    applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n  }\n  return def;\n\n  function findElementIndicesWithOverwrittenProviders(def: ViewDefinition): number[] {\n    const elIndicesWithOverwrittenProviders: number[] = [];\n    let lastElementDef: NodeDef|null = null;\n    for (let i = 0; i < def.nodes.length; i++) {\n      const nodeDef = def.nodes[i];\n      if (nodeDef.flags & NodeFlags.TypeElement) {\n        lastElementDef = nodeDef;\n      }\n      if (lastElementDef && nodeDef.flags & NodeFlags.CatProviderNoDirective &&\n          providerOverrides.has(nodeDef.provider !.token)) {\n        elIndicesWithOverwrittenProviders.push(lastElementDef !.nodeIndex);\n        lastElementDef = null;\n      }\n    }\n    return elIndicesWithOverwrittenProviders;\n  }\n\n  function applyProviderOverridesToElement(viewDef: ViewDefinition, elIndex: number) {\n    for (let i = elIndex + 1; i < viewDef.nodes.length; i++) {\n      const nodeDef = viewDef.nodes[i];\n      if (nodeDef.flags & NodeFlags.TypeElement) {\n        // stop at the next element\n        return;\n      }\n      if (nodeDef.flags & NodeFlags.CatProviderNoDirective) {\n        const provider = nodeDef.provider !;\n        const override = providerOverrides.get(provider.token);\n        if (override) {\n          nodeDef.flags = (nodeDef.flags & ~NodeFlags.CatProviderNoDirective) | override.flags;\n          provider.deps = splitDepsDsl(override.deps);\n          provider.value = override.value;\n        }\n      }\n    }\n  }\n}\n\n// Notes about the algorithm:\n// We only create new datastructures if we need to, to keep perf impact\n// reasonable.\nfunction applyProviderOverridesToNgModule(def: NgModuleDefinition): NgModuleDefinition {\n  const {hasOverrides, hasDeprecatedOverrides} = calcHasOverrides(def);\n  if (!hasOverrides) {\n    return def;\n  }\n  // clone the whole view definition,\n  // as it maintains references between the nodes that are hard to update.\n  def = def.factory !(() => NOOP);\n  applyProviderOverrides(def);\n  return def;\n\n  function calcHasOverrides(def: NgModuleDefinition):\n      {hasOverrides: boolean, hasDeprecatedOverrides: boolean} {\n    let hasOverrides = false;\n    let hasDeprecatedOverrides = false;\n    if (providerOverrides.size === 0) {\n      return {hasOverrides, hasDeprecatedOverrides};\n    }\n    def.providers.forEach(node => {\n      const override = providerOverrides.get(node.token);\n      if ((node.flags & NodeFlags.CatProviderNoDirective) && override) {\n        hasOverrides = true;\n        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n      }\n    });\n    def.modules.forEach(module => {\n      providerOverridesWithScope.forEach((override, token) => {\n        if (token.ngInjectableDef.providedIn === module) {\n          hasOverrides = true;\n          hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n        }\n      });\n    });\n    return {hasOverrides, hasDeprecatedOverrides};\n  }\n\n  function applyProviderOverrides(def: NgModuleDefinition) {\n    for (let i = 0; i < def.providers.length; i++) {\n      const provider = def.providers[i];\n      if (hasDeprecatedOverrides) {\n        // We had a bug where me made\n        // all providers lazy. Keep this logic behind a flag\n        // for migrating existing users.\n        provider.flags |= NodeFlags.LazyProvider;\n      }\n      const override = providerOverrides.get(provider.token);\n      if (override) {\n        provider.flags = (provider.flags & ~NodeFlags.CatProviderNoDirective) | override.flags;\n        provider.deps = splitDepsDsl(override.deps);\n        provider.value = override.value;\n      }\n    }\n    if (providerOverridesWithScope.size > 0) {\n      let moduleSet = new Set<any>(def.modules);\n      providerOverridesWithScope.forEach((override, token) => {\n        if (moduleSet.has(token.ngInjectableDef.providedIn)) {\n          let provider = {\n            token: token,\n            flags:\n                override.flags | (hasDeprecatedOverrides ? NodeFlags.LazyProvider : NodeFlags.None),\n            deps: splitDepsDsl(override.deps),\n            value: override.value,\n            index: def.providers.length,\n          };\n          def.providers.push(provider);\n          def.providersByKey[tokenKey(token)] = provider;\n        }\n      });\n    }\n  }\n}\n\nfunction prodCheckAndUpdateNode(\n    view: ViewData, checkIndex: number, argStyle: ArgumentType, v0?: any, v1?: any, v2?: any,\n    v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): any {\n  const nodeDef = view.def.nodes[checkIndex];\n  checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n  return (nodeDef.flags & NodeFlags.CatPureExpression) ?\n      asPureExpressionData(view, checkIndex).value :\n      undefined;\n}\n\nfunction prodCheckNoChangesNode(\n    view: ViewData, checkIndex: number, argStyle: ArgumentType, v0?: any, v1?: any, v2?: any,\n    v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): any {\n  const nodeDef = view.def.nodes[checkIndex];\n  checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n  return (nodeDef.flags & NodeFlags.CatPureExpression) ?\n      asPureExpressionData(view, checkIndex).value :\n      undefined;\n}\n\nfunction debugCheckAndUpdateView(view: ViewData) {\n  return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n}\n\nfunction debugCheckNoChangesView(view: ViewData) {\n  return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n}\n\nfunction debugDestroyView(view: ViewData) {\n  return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n}\n\nenum DebugAction {\n  create,\n  detectChanges,\n  checkNoChanges,\n  destroy,\n  handleEvent\n}\n\nlet _currentAction: DebugAction;\nlet _currentView: ViewData;\nlet _currentNodeIndex: number|null;\n\nfunction debugSetCurrentNode(view: ViewData, nodeIndex: number | null) {\n  _currentView = view;\n  _currentNodeIndex = nodeIndex;\n}\n\nfunction debugHandleEvent(view: ViewData, nodeIndex: number, eventName: string, event: any) {\n  debugSetCurrentNode(view, nodeIndex);\n  return callWithDebugContext(\n      DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n}\n\nfunction debugUpdateDirectives(view: ViewData, checkType: CheckType) {\n  if (view.state & ViewState.Destroyed) {\n    throw viewDestroyedError(DebugAction[_currentAction]);\n  }\n  debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n  return view.def.updateDirectives(debugCheckDirectivesFn, view);\n\n  function debugCheckDirectivesFn(\n      view: ViewData, nodeIndex: number, argStyle: ArgumentType, ...values: any[]) {\n    const nodeDef = view.def.nodes[nodeIndex];\n    if (checkType === CheckType.CheckAndUpdate) {\n      debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n    } else {\n      debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n    }\n    if (nodeDef.flags & NodeFlags.TypeDirective) {\n      debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n    }\n    return (nodeDef.flags & NodeFlags.CatPureExpression) ?\n        asPureExpressionData(view, nodeDef.nodeIndex).value :\n        undefined;\n  }\n}\n\nfunction debugUpdateRenderer(view: ViewData, checkType: CheckType) {\n  if (view.state & ViewState.Destroyed) {\n    throw viewDestroyedError(DebugAction[_currentAction]);\n  }\n  debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n  return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n\n  function debugCheckRenderNodeFn(\n      view: ViewData, nodeIndex: number, argStyle: ArgumentType, ...values: any[]) {\n    const nodeDef = view.def.nodes[nodeIndex];\n    if (checkType === CheckType.CheckAndUpdate) {\n      debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n    } else {\n      debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n    }\n    if (nodeDef.flags & NodeFlags.CatRenderNode) {\n      debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n    }\n    return (nodeDef.flags & NodeFlags.CatPureExpression) ?\n        asPureExpressionData(view, nodeDef.nodeIndex).value :\n        undefined;\n  }\n}\n\nfunction debugCheckAndUpdateNode(\n    view: ViewData, nodeDef: NodeDef, argStyle: ArgumentType, givenValues: any[]): void {\n  const changed = (<any>checkAndUpdateNode)(view, nodeDef, argStyle, ...givenValues);\n  if (changed) {\n    const values = argStyle === ArgumentType.Dynamic ? givenValues[0] : givenValues;\n    if (nodeDef.flags & NodeFlags.TypeDirective) {\n      const bindingValues: {[key: string]: string} = {};\n      for (let i = 0; i < nodeDef.bindings.length; i++) {\n        const binding = nodeDef.bindings[i];\n        const value = values[i];\n        if (binding.flags & BindingFlags.TypeProperty) {\n          bindingValues[normalizeDebugBindingName(binding.nonMinifiedName !)] =\n              normalizeDebugBindingValue(value);\n        }\n      }\n      const elDef = nodeDef.parent !;\n      const el = asElementData(view, elDef.nodeIndex).renderElement;\n      if (!elDef.element !.name) {\n        // a comment.\n        view.renderer.setValue(el, `bindings=${JSON.stringify(bindingValues, null, 2)}`);\n      } else {\n        // a regular element.\n        for (let attr in bindingValues) {\n          const value = bindingValues[attr];\n          if (value != null) {\n            view.renderer.setAttribute(el, attr, value);\n          } else {\n            view.renderer.removeAttribute(el, attr);\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction debugCheckNoChangesNode(\n    view: ViewData, nodeDef: NodeDef, argStyle: ArgumentType, values: any[]): void {\n  (<any>checkNoChangesNode)(view, nodeDef, argStyle, ...values);\n}\n\nfunction normalizeDebugBindingName(name: string) {\n  // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n  name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n  return `ng-reflect-${name}`;\n}\n\nconst CAMEL_CASE_REGEXP = /([A-Z])/g;\n\nfunction camelCaseToDashCase(input: string): string {\n  return input.replace(CAMEL_CASE_REGEXP, (...m: any[]) => '-' + m[1].toLowerCase());\n}\n\nfunction normalizeDebugBindingValue(value: any): string {\n  try {\n    // Limit the size of the value as otherwise the DOM just gets polluted.\n    return value != null ? value.toString().slice(0, 30) : value;\n  } catch (e) {\n    return '[ERROR] Exception while trying to serialize the value';\n  }\n}\n\nfunction nextDirectiveWithBinding(view: ViewData, nodeIndex: number): number|null {\n  for (let i = nodeIndex; i < view.def.nodes.length; i++) {\n    const nodeDef = view.def.nodes[i];\n    if (nodeDef.flags & NodeFlags.TypeDirective && nodeDef.bindings && nodeDef.bindings.length) {\n      return i;\n    }\n  }\n  return null;\n}\n\nfunction nextRenderNodeWithBinding(view: ViewData, nodeIndex: number): number|null {\n  for (let i = nodeIndex; i < view.def.nodes.length; i++) {\n    const nodeDef = view.def.nodes[i];\n    if ((nodeDef.flags & NodeFlags.CatRenderNode) && nodeDef.bindings && nodeDef.bindings.length) {\n      return i;\n    }\n  }\n  return null;\n}\n\nclass DebugContext_ implements DebugContext {\n  private nodeDef: NodeDef;\n  private elView: ViewData;\n  private elDef: NodeDef;\n  constructor(public view: ViewData, public nodeIndex: number|null) {\n    if (nodeIndex == null) {\n      this.nodeIndex = nodeIndex = 0;\n    }\n    this.nodeDef = view.def.nodes[nodeIndex];\n    let elDef = this.nodeDef;\n    let elView = view;\n    while (elDef && (elDef.flags & NodeFlags.TypeElement) === 0) {\n      elDef = elDef.parent !;\n    }\n    if (!elDef) {\n      while (!elDef && elView) {\n        elDef = viewParentEl(elView) !;\n        elView = elView.parent !;\n      }\n    }\n    this.elDef = elDef;\n    this.elView = elView;\n  }\n  private get elOrCompView() {\n    // Has to be done lazily as we use the DebugContext also during creation of elements...\n    return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n  }\n  get injector(): Injector { return createInjector(this.elView, this.elDef); }\n  get component(): any { return this.elOrCompView.component; }\n  get context(): any { return this.elOrCompView.context; }\n  get providerTokens(): any[] {\n    const tokens: any[] = [];\n    if (this.elDef) {\n      for (let i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount;\n           i++) {\n        const childDef = this.elView.def.nodes[i];\n        if (childDef.flags & NodeFlags.CatProvider) {\n          tokens.push(childDef.provider !.token);\n        }\n        i += childDef.childCount;\n      }\n    }\n    return tokens;\n  }\n  get references(): {[key: string]: any} {\n    const references: {[key: string]: any} = {};\n    if (this.elDef) {\n      collectReferences(this.elView, this.elDef, references);\n\n      for (let i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount;\n           i++) {\n        const childDef = this.elView.def.nodes[i];\n        if (childDef.flags & NodeFlags.CatProvider) {\n          collectReferences(this.elView, childDef, references);\n        }\n        i += childDef.childCount;\n      }\n    }\n    return references;\n  }\n  get componentRenderElement() {\n    const elData = findHostElement(this.elOrCompView);\n    return elData ? elData.renderElement : undefined;\n  }\n  get renderNode(): any {\n    return this.nodeDef.flags & NodeFlags.TypeText ? renderNode(this.view, this.nodeDef) :\n                                                     renderNode(this.elView, this.elDef);\n  }\n  logError(console: Console, ...values: any[]) {\n    let logViewDef: ViewDefinition;\n    let logNodeIndex: number;\n    if (this.nodeDef.flags & NodeFlags.TypeText) {\n      logViewDef = this.view.def;\n      logNodeIndex = this.nodeDef.nodeIndex;\n    } else {\n      logViewDef = this.elView.def;\n      logNodeIndex = this.elDef.nodeIndex;\n    }\n    // Note: we only generate a log function for text and element nodes\n    // to make the generated code as small as possible.\n    const renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n    let currRenderNodeIndex = -1;\n    let nodeLogger: NodeLogger = () => {\n      currRenderNodeIndex++;\n      if (currRenderNodeIndex === renderNodeIndex) {\n        return console.error.bind(console, ...values);\n      } else {\n        return NOOP;\n      }\n    };\n    logViewDef.factory !(nodeLogger);\n    if (currRenderNodeIndex < renderNodeIndex) {\n      console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n      (<any>console.error)(...values);\n    }\n  }\n}\n\nfunction getRenderNodeIndex(viewDef: ViewDefinition, nodeIndex: number): number {\n  let renderNodeIndex = -1;\n  for (let i = 0; i <= nodeIndex; i++) {\n    const nodeDef = viewDef.nodes[i];\n    if (nodeDef.flags & NodeFlags.CatRenderNode) {\n      renderNodeIndex++;\n    }\n  }\n  return renderNodeIndex;\n}\n\nfunction findHostElement(view: ViewData): ElementData|null {\n  while (view && !isComponentView(view)) {\n    view = view.parent !;\n  }\n  if (view.parent) {\n    return asElementData(view.parent, viewParentEl(view) !.nodeIndex);\n  }\n  return null;\n}\n\nfunction collectReferences(view: ViewData, nodeDef: NodeDef, references: {[key: string]: any}) {\n  for (let refName in nodeDef.references) {\n    references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n  }\n}\n\nfunction callWithDebugContext(action: DebugAction, fn: any, self: any, args: any[]) {\n  const oldAction = _currentAction;\n  const oldView = _currentView;\n  const oldNodeIndex = _currentNodeIndex;\n  try {\n    _currentAction = action;\n    const result = fn.apply(self, args);\n    _currentView = oldView;\n    _currentNodeIndex = oldNodeIndex;\n    _currentAction = oldAction;\n    return result;\n  } catch (e) {\n    if (isViewDebugError(e) || !_currentView) {\n      throw e;\n    }\n    throw viewWrappedDebugError(e, getCurrentDebugContext() !);\n  }\n}\n\nexport function getCurrentDebugContext(): DebugContext|null {\n  return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n}\n\n\nclass DebugRendererFactory2 implements RendererFactory2 {\n  constructor(private delegate: RendererFactory2) {}\n\n  createRenderer(element: any, renderData: RendererType2|null): Renderer2 {\n    return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n  }\n\n  begin() {\n    if (this.delegate.begin) {\n      this.delegate.begin();\n    }\n  }\n  end() {\n    if (this.delegate.end) {\n      this.delegate.end();\n    }\n  }\n\n  whenRenderingDone(): Promise<any> {\n    if (this.delegate.whenRenderingDone) {\n      return this.delegate.whenRenderingDone();\n    }\n    return Promise.resolve(null);\n  }\n}\n\n\nclass DebugRenderer2 implements Renderer2 {\n  readonly data: {[key: string]: any};\n  constructor(private delegate: Renderer2) { this.data = this.delegate.data; }\n\n  destroyNode(node: any) {\n    removeDebugNodeFromIndex(getDebugNode(node) !);\n    if (this.delegate.destroyNode) {\n      this.delegate.destroyNode(node);\n    }\n  }\n\n  destroy() { this.delegate.destroy(); }\n\n  createElement(name: string, namespace?: string): any {\n    const el = this.delegate.createElement(name, namespace);\n    const debugCtx = getCurrentDebugContext();\n    if (debugCtx) {\n      const debugEl = new DebugElement(el, null, debugCtx);\n      debugEl.name = name;\n      indexDebugNode(debugEl);\n    }\n    return el;\n  }\n\n  createComment(value: string): any {\n    const comment = this.delegate.createComment(value);\n    const debugCtx = getCurrentDebugContext();\n    if (debugCtx) {\n      indexDebugNode(new DebugNode(comment, null, debugCtx));\n    }\n    return comment;\n  }\n\n  createText(value: string): any {\n    const text = this.delegate.createText(value);\n    const debugCtx = getCurrentDebugContext();\n    if (debugCtx) {\n      indexDebugNode(new DebugNode(text, null, debugCtx));\n    }\n    return text;\n  }\n\n  appendChild(parent: any, newChild: any): void {\n    const debugEl = getDebugNode(parent);\n    const debugChildEl = getDebugNode(newChild);\n    if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n      debugEl.addChild(debugChildEl);\n    }\n    this.delegate.appendChild(parent, newChild);\n  }\n\n  insertBefore(parent: any, newChild: any, refChild: any): void {\n    const debugEl = getDebugNode(parent);\n    const debugChildEl = getDebugNode(newChild);\n    const debugRefEl = getDebugNode(refChild) !;\n    if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n      debugEl.insertBefore(debugRefEl, debugChildEl);\n    }\n\n    this.delegate.insertBefore(parent, newChild, refChild);\n  }\n\n  removeChild(parent: any, oldChild: any): void {\n    const debugEl = getDebugNode(parent);\n    const debugChildEl = getDebugNode(oldChild);\n    if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n      debugEl.removeChild(debugChildEl);\n    }\n    this.delegate.removeChild(parent, oldChild);\n  }\n\n  selectRootElement(selectorOrNode: string|any): any {\n    const el = this.delegate.selectRootElement(selectorOrNode);\n    const debugCtx = getCurrentDebugContext();\n    if (debugCtx) {\n      indexDebugNode(new DebugElement(el, null, debugCtx));\n    }\n    return el;\n  }\n\n  setAttribute(el: any, name: string, value: string, namespace?: string): void {\n    const debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      const fullName = namespace ? namespace + ':' + name : name;\n      debugEl.attributes[fullName] = value;\n    }\n    this.delegate.setAttribute(el, name, value, namespace);\n  }\n\n  removeAttribute(el: any, name: string, namespace?: string): void {\n    const debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      const fullName = namespace ? namespace + ':' + name : name;\n      debugEl.attributes[fullName] = null;\n    }\n    this.delegate.removeAttribute(el, name, namespace);\n  }\n\n  addClass(el: any, name: string): void {\n    const debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      debugEl.classes[name] = true;\n    }\n    this.delegate.addClass(el, name);\n  }\n\n  removeClass(el: any, name: string): void {\n    const debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      debugEl.classes[name] = false;\n    }\n    this.delegate.removeClass(el, name);\n  }\n\n  setStyle(el: any, style: string, value: any, flags: RendererStyleFlags2): void {\n    const debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      debugEl.styles[style] = value;\n    }\n    this.delegate.setStyle(el, style, value, flags);\n  }\n\n  removeStyle(el: any, style: string, flags: RendererStyleFlags2): void {\n    const debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      debugEl.styles[style] = null;\n    }\n    this.delegate.removeStyle(el, style, flags);\n  }\n\n  setProperty(el: any, name: string, value: any): void {\n    const debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      debugEl.properties[name] = value;\n    }\n    this.delegate.setProperty(el, name, value);\n  }\n\n  listen(\n      target: 'document'|'windows'|'body'|any, eventName: string,\n      callback: (event: any) => boolean): () => void {\n    if (typeof target !== 'string') {\n      const debugEl = getDebugNode(target);\n      if (debugEl) {\n        debugEl.listeners.push(new EventListener(eventName, callback));\n      }\n    }\n\n    return this.delegate.listen(target, eventName, callback);\n  }\n\n  parentNode(node: any): any { return this.delegate.parentNode(node); }\n  nextSibling(node: any): any { return this.delegate.nextSibling(node); }\n  setValue(node: any, value: string): void { return this.delegate.setValue(node, value); }\n}\n"],"sourceRoot":""}