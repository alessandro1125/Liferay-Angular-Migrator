{"version":3,"sources":["../../../../../../../../../../packages/core/src/view/entrypoint.ts"],"names":[],"mappings":";;;;;;;;;;AAQA,aAAQ,QAAR,QAAuB,gBAAvB;AAEA,aAAQ,eAAR,QAA2C,6BAA3C;AAGA,aAAQ,oBAAR,QAAmC,YAAnC;AACA,aAA8F,QAA9F,QAA6H,SAA7H;AACA,aAAQ,iBAAR,QAAgC,QAAhC;AAEA,WAAM,SAAA,gBAAA,CAA2B,QAA3B,EAAqD;AACzD;AACA,eAAO,SAAS,gBAAT,CAA0B,QAA1B,CAAP;AACD;AAED,WAAM,SAAA,qBAAA,CAAgC,IAAhC,EAAiD,gBAAjD,EAAwF;AAC5F;AACA,eAAO,SAAS,qBAAT,CAA+B,IAA/B,EAAqC,gBAArC,CAAP;AACD;AAED,WAAM,SAAA,cAAA,GAAA;AACJ;AACA,eAAO,SAAS,cAAT,EAAP;AACD;AAED;AACA;AACA,WAAM,SAAA,qBAAA,CACF,YADE,EACuB,mBADvB,EAEF,UAFE,EAEmC;AACvC,eAAO,IAAI,gBAAJ,CAAqB,YAArB,EAAmC,mBAAnC,EAAwD,UAAxD,CAAP;AACD;AAED,aAAA,uBAAA,CAAiC,GAAjC,EAAwD;AACtD,YAAM,YAAY,MAAM,IAAN,CAAW,IAAI,SAAf,CAAlB;AACA,YAAM,UAAU,MAAM,IAAN,CAAW,IAAI,OAAf,CAAhB;AACA,YAAM,iBAA4D,EAAlE;AACA,aAAK,IAAM,GAAX,IAAkB,IAAI,cAAtB,EAAsC;AACpC,2BAAe,GAAf,IAAsB,IAAI,cAAJ,CAAmB,GAAnB,CAAtB;AACD;AAED,eAAO;AACL,qBAAS,IAAI,OADR;AAEL,oBAAQ,IAAI,MAFP,EAEe,WAAS,SAFxB,EAE0B,SAAO,OAFjC,EAEmC,gBAAc;AAFjD,SAAP;AAID;AAED,QAAA,mBAAA,aAAA,UAAA,MAAA,EAAA;AAA+B,gBAAA,SAAA,CAAA,gBAAA,EAAA,MAAA;AAC7B,iBAAA,gBAAA,CACoB,UADpB,EACmD,oBADnD,EAEY,mBAFZ,EAE0D;AAF1D,gBAAA;AAGE;AACA;AACA,mBAAA,IAAA,CAAA,IAAA,KAAO,IALT;AACoB,kBAAA,UAAA,GAAA,UAAA;AAA+B,kBAAA,oBAAA,GAAA,oBAAA;AACvC,kBAAA,mBAAA,GAAA,mBAAA;;AAIX;AAED,yBAAA,SAAA,CAAA,MAAA,GAAA,UAAO,cAAP,EAAoC;AAClC;AACA;AACA;AACA;AACA,gBAAM,MAAM,wBAAwB,kBAAkB,KAAK,mBAAvB,CAAxB,CAAZ;AACA,mBAAO,SAAS,iBAAT,CACH,KAAK,UADF,EACc,kBAAkB,SAAS,IADzC,EAC+C,KAAK,oBADpD,EAC0E,GAD1E,CAAP;AAED,SARD;AASF,eAAA,gBAAA;AAAC,KAlBD,CAA+B,eAA/B,CAAA","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../di/injector';\nimport {ComponentFactory} from '../linker/component_factory';\nimport {NgModuleFactory, NgModuleRef} from '../linker/ng_module_factory';\nimport {Type} from '../type';\n\nimport {initServicesIfNeeded} from './services';\nimport {NgModuleDefinition, NgModuleDefinitionFactory, NgModuleProviderDef, ProviderOverride, Services, ViewDefinition} from './types';\nimport {resolveDefinition} from './util';\n\nexport function overrideProvider(override: ProviderOverride) {\n  initServicesIfNeeded();\n  return Services.overrideProvider(override);\n}\n\nexport function overrideComponentView(comp: Type<any>, componentFactory: ComponentFactory<any>) {\n  initServicesIfNeeded();\n  return Services.overrideComponentView(comp, componentFactory);\n}\n\nexport function clearOverrides() {\n  initServicesIfNeeded();\n  return Services.clearOverrides();\n}\n\n// Attention: this function is called as top level function.\n// Putting any logic in here will destroy closure tree shaking!\nexport function createNgModuleFactory(\n    ngModuleType: Type<any>, bootstrapComponents: Type<any>[],\n    defFactory: NgModuleDefinitionFactory): NgModuleFactory<any> {\n  return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n}\n\nfunction cloneNgModuleDefinition(def: NgModuleDefinition): NgModuleDefinition {\n  const providers = Array.from(def.providers);\n  const modules = Array.from(def.modules);\n  const providersByKey: {[tokenKey: string]: NgModuleProviderDef} = {};\n  for (const key in def.providersByKey) {\n    providersByKey[key] = def.providersByKey[key];\n  }\n\n  return {\n    factory: def.factory,\n    isRoot: def.isRoot, providers, modules, providersByKey,\n  };\n}\n\nclass NgModuleFactory_ extends NgModuleFactory<any> {\n  constructor(\n      public readonly moduleType: Type<any>, private _bootstrapComponents: Type<any>[],\n      private _ngModuleDefFactory: NgModuleDefinitionFactory) {\n    // Attention: this ctor is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    super();\n  }\n\n  create(parentInjector: Injector|null): NgModuleRef<any> {\n    initServicesIfNeeded();\n    // Clone the NgModuleDefinition so that any tree shakeable provider definition\n    // added to this instance of the NgModuleRef doesn't affect the cached copy.\n    // See https://github.com/angular/angular/issues/25018.\n    const def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n    return Services.createNgModuleRef(\n        this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n  }\n}\n"],"sourceRoot":""}