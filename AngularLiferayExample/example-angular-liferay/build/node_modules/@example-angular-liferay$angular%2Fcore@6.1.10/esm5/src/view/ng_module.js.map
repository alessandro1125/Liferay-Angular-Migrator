{"version":3,"sources":["../../../../../../../../../../packages/core/src/view/ng_module.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectableDef} from '../di/defs';\nimport {resolveForwardRef} from '../di/forward_ref';\nimport {INJECTOR, InjectFlags, Injector, setCurrentInjector} from '../di/injector';\nimport {APP_ROOT} from '../di/scope';\nimport {NgModuleRef} from '../linker/ng_module_factory';\nimport {stringify} from '../util';\n\nimport {DepDef, DepFlags, NgModuleData, NgModuleDefinition, NgModuleProviderDef, NodeFlags} from './types';\nimport {splitDepsDsl, tokenKey} from './util';\n\nconst UNDEFINED_VALUE = new Object();\n\nconst InjectorRefTokenKey = tokenKey(Injector);\nconst INJECTORRefTokenKey = tokenKey(INJECTOR);\nconst NgModuleRefTokenKey = tokenKey(NgModuleRef);\n\nexport function moduleProvideDef(\n    flags: NodeFlags, token: any, value: any,\n    deps: ([DepFlags, any] | any)[]): NgModuleProviderDef {\n  // Need to resolve forwardRefs as e.g. for `useValue` we\n  // lowered the expression and then stopped evaluating it,\n  // i.e. also didn't unwrap it.\n  value = resolveForwardRef(value);\n  const depDefs = splitDepsDsl(deps, stringify(token));\n  return {\n    // will bet set by the module definition\n    index: -1,\n    deps: depDefs, flags, token, value\n  };\n}\n\nexport function moduleDef(providers: NgModuleProviderDef[]): NgModuleDefinition {\n  const providersByKey: {[key: string]: NgModuleProviderDef} = {};\n  const modules = [];\n  let isRoot: boolean = false;\n  for (let i = 0; i < providers.length; i++) {\n    const provider = providers[i];\n    if (provider.token === APP_ROOT && provider.value === true) {\n      isRoot = true;\n    }\n    if (provider.flags & NodeFlags.TypeNgModule) {\n      modules.push(provider.token);\n    }\n    provider.index = i;\n    providersByKey[tokenKey(provider.token)] = provider;\n  }\n  return {\n    // Will be filled later...\n    factory: null,\n    providersByKey,\n    providers,\n    modules,\n    isRoot,\n  };\n}\n\nexport function initNgModule(data: NgModuleData) {\n  const def = data._def;\n  const providers = data._providers = new Array(def.providers.length);\n  for (let i = 0; i < def.providers.length; i++) {\n    const provDef = def.providers[i];\n    if (!(provDef.flags & NodeFlags.LazyProvider)) {\n      // Make sure the provider has not been already initialized outside this loop.\n      if (providers[i] === undefined) {\n        providers[i] = _createProviderInstance(data, provDef);\n      }\n    }\n  }\n}\n\nexport function resolveNgModuleDep(\n    data: NgModuleData, depDef: DepDef, notFoundValue: any = Injector.THROW_IF_NOT_FOUND): any {\n  const former = setCurrentInjector(data);\n  try {\n    if (depDef.flags & DepFlags.Value) {\n      return depDef.token;\n    }\n    if (depDef.flags & DepFlags.Optional) {\n      notFoundValue = null;\n    }\n    if (depDef.flags & DepFlags.SkipSelf) {\n      return data._parent.get(depDef.token, notFoundValue);\n    }\n    const tokenKey = depDef.tokenKey;\n    switch (tokenKey) {\n      case InjectorRefTokenKey:\n      case INJECTORRefTokenKey:\n      case NgModuleRefTokenKey:\n        return data;\n    }\n    const providerDef = data._def.providersByKey[tokenKey];\n    if (providerDef) {\n      let providerInstance = data._providers[providerDef.index];\n      if (providerInstance === undefined) {\n        providerInstance = data._providers[providerDef.index] =\n            _createProviderInstance(data, providerDef);\n      }\n      return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n    } else if (depDef.token.ngInjectableDef && targetsModule(data, depDef.token.ngInjectableDef)) {\n      const injectableDef = depDef.token.ngInjectableDef as InjectableDef<any>;\n      const key = tokenKey;\n      const index = data._providers.length;\n      data._def.providersByKey[depDef.tokenKey] = {\n        flags: NodeFlags.TypeFactoryProvider | NodeFlags.LazyProvider,\n        value: injectableDef.factory,\n        deps: [], index,\n        token: depDef.token,\n      };\n      data._providers[index] = UNDEFINED_VALUE;\n      return (\n          data._providers[index] =\n              _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n    } else if (depDef.flags & DepFlags.Self) {\n      return notFoundValue;\n    }\n    return data._parent.get(depDef.token, notFoundValue);\n  } finally {\n    setCurrentInjector(former);\n  }\n}\n\nfunction moduleTransitivelyPresent(ngModule: NgModuleData, scope: any): boolean {\n  return ngModule._def.modules.indexOf(scope) > -1;\n}\n\nfunction targetsModule(ngModule: NgModuleData, def: InjectableDef<any>): boolean {\n  return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n                                    def.providedIn === 'root' && ngModule._def.isRoot);\n}\n\nfunction _createProviderInstance(ngModule: NgModuleData, providerDef: NgModuleProviderDef): any {\n  let injectable: any;\n  switch (providerDef.flags & NodeFlags.Types) {\n    case NodeFlags.TypeClassProvider:\n      injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n      break;\n    case NodeFlags.TypeFactoryProvider:\n      injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n      break;\n    case NodeFlags.TypeUseExistingProvider:\n      injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n      break;\n    case NodeFlags.TypeValueProvider:\n      injectable = providerDef.value;\n      break;\n  }\n\n  // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n  // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n  // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n  // set (ngOnDestroy was detected statically).\n  if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n      !(providerDef.flags & NodeFlags.OnDestroy) && typeof injectable.ngOnDestroy === 'function') {\n    providerDef.flags |= NodeFlags.OnDestroy;\n  }\n  return injectable === undefined ? UNDEFINED_VALUE : injectable;\n}\n\nfunction _createClass(ngModule: NgModuleData, ctor: any, deps: DepDef[]): any {\n  const len = deps.length;\n  switch (len) {\n    case 0:\n      return new ctor();\n    case 1:\n      return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n    case 2:\n      return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n    case 3:\n      return new ctor(\n          resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]),\n          resolveNgModuleDep(ngModule, deps[2]));\n    default:\n      const depValues = new Array(len);\n      for (let i = 0; i < len; i++) {\n        depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n      }\n      return new ctor(...depValues);\n  }\n}\n\nfunction _callFactory(ngModule: NgModuleData, factory: any, deps: DepDef[]): any {\n  const len = deps.length;\n  switch (len) {\n    case 0:\n      return factory();\n    case 1:\n      return factory(resolveNgModuleDep(ngModule, deps[0]));\n    case 2:\n      return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n    case 3:\n      return factory(\n          resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]),\n          resolveNgModuleDep(ngModule, deps[2]));\n    default:\n      const depValues = Array(len);\n      for (let i = 0; i < len; i++) {\n        depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n      }\n      return factory(...depValues);\n  }\n}\n\nexport function callNgModuleLifecycle(ngModule: NgModuleData, lifecycles: NodeFlags) {\n  const def = ngModule._def;\n  const destroyed = new Set<any>();\n  for (let i = 0; i < def.providers.length; i++) {\n    const provDef = def.providers[i];\n    if (provDef.flags & NodeFlags.OnDestroy) {\n      const instance = ngModule._providers[i];\n      if (instance && instance !== UNDEFINED_VALUE) {\n        const onDestroy: Function|undefined = instance.ngOnDestroy;\n        if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n          onDestroy.apply(instance);\n          destroyed.add(instance);\n        }\n      }\n    }\n  }\n}\n"],"sourceRoot":""}