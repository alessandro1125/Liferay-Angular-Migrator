{"version":3,"sources":["../../../../../../../../../packages/core/src/util.ts"],"names":[],"mappings":";;;;;;;;;AAcA,QAAM,WAAW,OAAO,MAAP,KAAkB,WAAlB,IAAiC,MAAlD;AACA,QAAM,SAAS,OAAO,IAAP,KAAgB,WAAhB,IAA+B,OAAO,iBAAP,KAA6B,WAA5D,IACX,gBAAgB,iBADL,IAC0B,IADzC;AAEA,QAAM,WAAW,OAAO,MAAP,KAAkB,WAAlB,IAAiC,MAAlD;AAEA;AACA;AACA,QAAM,UAAiC,YAAY,QAAZ,IAAwB,MAA/D;AAEA,QAAM,UAAwB,QAAQ,OAAR,CAAgB,CAAhB,CAA9B;AACA;;;;;AAKA,aAAQ,WAAW,MAAnB;AAIA,QAAI,kBAAuB,IAA3B;AACA,WAAM,SAAA,iBAAA,GAAA;AACJ,YAAI,CAAC,eAAL,EAAsB;AACpB,gBAAM,WAAS,QAAQ,QAAR,CAAf;AACA,gBAAI,YAAU,SAAO,QAArB,EAA+B;AAC7B,kCAAkB,SAAO,QAAzB;AACD,aAFD,MAEO;AACL;AACA,oBAAM,OAAO,OAAO,mBAAP,CAA2B,IAAI,SAA/B,CAAb;AACA,qBAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,KAAK,MAAzB,EAAiC,EAAE,CAAnC,EAAsC;AACpC,wBAAM,MAAM,KAAK,CAAL,CAAZ;AACA,wBAAI,QAAQ,SAAR,IAAqB,QAAQ,MAA7B,IACC,IAAY,SAAZ,CAAsB,GAAtB,MAA+B,IAAI,SAAJ,CAAc,SAAd,CADpC,EAC8D;AAC5D,0CAAkB,GAAlB;AACD;AACF;AACF;AACF;AACD,eAAO,eAAP;AACD;AAED,WAAM,SAAA,iBAAA,CAA4B,EAA5B,EAAwC;AAC5C,YAAI,OAAO,IAAP,KAAgB,WAApB,EAAiC;AAC/B;AACA,oBAAQ,IAAR,CAAa,YAAA;AAAQ,sBAAM,GAAG,KAAH,CAAS,IAAT,EAAe,IAAf,CAAN;AAA6B,aAAlD;AACD,SAHD,MAGO;AACL,iBAAK,OAAL,CAAa,iBAAb,CAA+B,mBAA/B,EAAoD,EAApD;AACD;AACF;AAED;AACA,WAAM,SAAA,cAAA,CAAyB,CAAzB,EAAiC,CAAjC,EAAuC;AAC3C,eAAO,MAAM,CAAN,IAAW,OAAO,CAAP,KAAa,QAAb,IAAyB,OAAO,CAAP,KAAa,QAAtC,IAAkD,MAAM,CAAN,CAAlD,IAA8D,MAAM,CAAN,CAAhF;AACD;AAED,WAAM,SAAA,SAAA,CAAoB,KAApB,EAA8B;AAClC,YAAI,OAAO,KAAP,KAAiB,QAArB,EAA+B;AAC7B,mBAAO,KAAP;AACD;AAED,YAAI,iBAAiB,KAArB,EAA4B;AAC1B,mBAAO,MAAM,MAAM,GAAN,CAAU,SAAV,EAAqB,IAArB,CAA0B,IAA1B,CAAN,GAAwC,GAA/C;AACD;AAED,YAAI,SAAS,IAAb,EAAmB;AACjB,mBAAO,KAAK,KAAZ;AACD;AAED,YAAI,MAAM,cAAV,EAA0B;AACxB,mBAAO,KAAG,MAAM,cAAhB;AACD;AAED,YAAI,MAAM,IAAV,EAAgB;AACd,mBAAO,KAAG,MAAM,IAAhB;AACD;AAED,YAAM,MAAM,MAAM,QAAN,EAAZ;AAEA,YAAI,OAAO,IAAX,EAAiB;AACf,mBAAO,KAAK,GAAZ;AACD;AAED,YAAM,eAAe,IAAI,OAAJ,CAAY,IAAZ,CAArB;AACA,eAAO,iBAAiB,CAAC,CAAlB,GAAsB,GAAtB,GAA4B,IAAI,SAAJ,CAAc,CAAd,EAAiB,YAAjB,CAAnC;AACD","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// TODO(jteplitz602): Load WorkerGlobalScope from lib.webworker.d.ts file #3492\ndeclare var WorkerGlobalScope: any /** TODO #9100 */;\n// CommonJS / Node have global context exposed as \"global\" variable.\n// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake\n// the global \"global\" var for now.\ndeclare var global: any /** TODO #9100 */;\nconst __window = typeof window !== 'undefined' && window;\nconst __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nconst __global = typeof global !== 'undefined' && global;\n\n// Check __global first, because in Node tests both __global and __window may be defined and _global\n// should be __global in that case.\nconst _global: {[name: string]: any} = __global || __window || __self;\n\nconst promise: Promise<any> = Promise.resolve(0);\n/**\n * Attention: whenever providing a new value, be sure to add an\n * entry into the corresponding `....externs.js` file,\n * so that closure won't use that global for its purposes.\n */\nexport {_global as global};\n\n// When Symbol.iterator doesn't exist, retrieves the key used in es6-shim\ndeclare const Symbol: any;\nlet _symbolIterator: any = null;\nexport function getSymbolIterator(): string|symbol {\n  if (!_symbolIterator) {\n    const Symbol = _global['Symbol'];\n    if (Symbol && Symbol.iterator) {\n      _symbolIterator = Symbol.iterator;\n    } else {\n      // es6-shim specific logic\n      const keys = Object.getOwnPropertyNames(Map.prototype);\n      for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i];\n        if (key !== 'entries' && key !== 'size' &&\n            (Map as any).prototype[key] === Map.prototype['entries']) {\n          _symbolIterator = key;\n        }\n      }\n    }\n  }\n  return _symbolIterator;\n}\n\nexport function scheduleMicroTask(fn: Function) {\n  if (typeof Zone === 'undefined') {\n    // use promise to schedule microTask instead of use Zone\n    promise.then(() => { fn && fn.apply(null, null); });\n  } else {\n    Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n  }\n}\n\n// JS has NaN !== NaN\nexport function looseIdentical(a: any, b: any): boolean {\n  return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n}\n\nexport function stringify(token: any): string {\n  if (typeof token === 'string') {\n    return token;\n  }\n\n  if (token instanceof Array) {\n    return '[' + token.map(stringify).join(', ') + ']';\n  }\n\n  if (token == null) {\n    return '' + token;\n  }\n\n  if (token.overriddenName) {\n    return `${token.overriddenName}`;\n  }\n\n  if (token.name) {\n    return `${token.name}`;\n  }\n\n  const res = token.toString();\n\n  if (res == null) {\n    return '' + res;\n  }\n\n  const newLineIndex = res.indexOf('\\n');\n  return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n"],"sourceRoot":""}