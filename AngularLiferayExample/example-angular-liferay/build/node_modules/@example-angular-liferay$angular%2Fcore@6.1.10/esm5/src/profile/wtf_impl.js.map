{"version":3,"sources":["../../../../../../../../../../packages/core/src/profile/wtf_impl.ts"],"names":[],"mappings":";;;;;;;;;AAQA,aAAQ,MAAR,QAAqB,SAArB;AA4BA,QAAI,KAAJ;AACA,QAAI,MAAJ;AAEA,WAAM,SAAA,SAAA,GAAA;AACJ,YAAM,MAAY,OAAc,iBAAd,CAAiC,KAAjC,CAAlB;AACA,YAAI,GAAJ,EAAS;AACP,oBAAQ,IAAI,OAAJ,CAAR;AACA,gBAAI,KAAJ,EAAW;AACT,yBAAS,MAAM,QAAN,CAAT;AACA,uBAAO,IAAP;AACD;AACF;AACD,eAAO,KAAP;AACD;AAED,WAAM,SAAA,WAAA,CAAsB,SAAtB,EAAyC,KAAzC,EAA0D;AAAjB,YAAA,UAAA,KAAA,CAAA,EAAA;AAAA,oBAAA,IAAA;AAAiB;AAC9D,eAAO,OAAO,WAAP,CAAmB,SAAnB,EAA8B,KAA9B,CAAP;AACD;AAID,WAAM,SAAA,KAAA,CAAmB,KAAnB,EAAiC,WAAjC,EAAkD;AACtD,cAAM,UAAN,CAAiB,KAAjB,EAAwB,WAAxB;AACA,eAAO,WAAP;AACD;AAED,WAAM,SAAA,cAAA,CAAyB,SAAzB,EAA4C,MAA5C,EAA0D;AAC9D,eAAO,MAAM,cAAN,CAAqB,SAArB,EAAgC,MAAhC,CAAP;AACD;AAED,WAAM,SAAA,YAAA,CAAuB,KAAvB,EAAmC;AACvC,cAAM,YAAN,CAAmB,KAAnB;AACD","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {global} from '../util';\n\n/**\n * A scope function for the Web Tracing Framework (WTF).\n *\n * @experimental\n */\nexport interface WtfScopeFn { (arg0?: any, arg1?: any): any; }\n\ninterface WTF {\n  trace: Trace;\n}\n\ninterface Trace {\n  events: Events;\n  leaveScope(scope: Scope, returnValue: any): any /** TODO #9100 */;\n  beginTimeRange(rangeType: string, action: string): Range;\n  endTimeRange(range: Range): any /** TODO #9100 */;\n}\n\nexport interface Range {}\n\ninterface Events {\n  createScope(signature: string, flags: any): Scope;\n}\n\nexport interface Scope { (...args: any[] /** TODO #9100 */): any; }\n\nlet trace: Trace;\nlet events: Events;\n\nexport function detectWTF(): boolean {\n  const wtf: WTF = (global as any /** TODO #9100 */)['wtf'];\n  if (wtf) {\n    trace = wtf['trace'];\n    if (trace) {\n      events = trace['events'];\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function createScope(signature: string, flags: any = null): any {\n  return events.createScope(signature, flags);\n}\n\nexport function leave<T>(scope: Scope): void;\nexport function leave<T>(scope: Scope, returnValue?: T): T;\nexport function leave<T>(scope: Scope, returnValue?: any): any {\n  trace.leaveScope(scope, returnValue);\n  return returnValue;\n}\n\nexport function startTimeRange(rangeType: string, action: string): Range {\n  return trace.beginTimeRange(rangeType, action);\n}\n\nexport function endTimeRange(range: Range): void {\n  trace.endTimeRange(range);\n}\n"],"sourceRoot":""}