{"version":3,"sources":["../../../../../../../../../packages/core/src/metadata.ts"],"names":[],"mappings":";;;;;;;;;AAkBA,WAAQ,4BAAR,EAAsC,SAAtC,EAAiD,YAAjD,EAAsF,eAAtF,EAAiI,KAAjI,EAAwI,SAAxI,EAAuK,YAAvK,QAAiN,eAAjN;AACA,WAAQ,SAAR,EAAuC,SAAvC,EAAsE,WAAtE,EAAmF,YAAnF,EAAiG,KAAjG,EAAwG,MAAxG,EAAgH,IAAhH,QAA2H,uBAA3H;AAEA,WAAQ,sBAAR,EAAqD,gBAArD,EAAuE,QAAvE,QAAsG,sBAAtG;AACA,WAAQ,iBAAR,QAAgC,iBAAhC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * This indirection is needed to free up Component, etc symbols in the public API\n * to be used by the decorator versions of these annotations.\n */\n\nimport {Attribute, ContentChild, ContentChildren, Query, ViewChild, ViewChildren} from './metadata/di';\nimport {Component, Directive, HostBinding, HostListener, Input, Output, Pipe} from './metadata/directives';\nimport {ModuleWithProviders, NgModule, SchemaMetadata} from './metadata/ng_module';\nimport {ViewEncapsulation} from './metadata/view';\n\nexport {ANALYZE_FOR_ENTRY_COMPONENTS, Attribute, ContentChild, ContentChildDecorator, ContentChildren, ContentChildrenDecorator, Query, ViewChild, ViewChildDecorator, ViewChildren, ViewChildrenDecorator} from './metadata/di';\nexport {Component, ComponentDecorator, Directive, DirectiveDecorator, HostBinding, HostListener, Input, Output, Pipe} from './metadata/directives';\nexport {AfterContentChecked, AfterContentInit, AfterViewChecked, AfterViewInit, DoCheck, OnChanges, OnDestroy, OnInit} from './metadata/lifecycle_hooks';\nexport {CUSTOM_ELEMENTS_SCHEMA, ModuleWithProviders, NO_ERRORS_SCHEMA, NgModule, SchemaMetadata} from './metadata/ng_module';\nexport {ViewEncapsulation} from './metadata/view';\n"],"sourceRoot":""}