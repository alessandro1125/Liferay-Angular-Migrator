Liferay.Loader.define('@example-angular-liferay$angular/core@6.1.10/esm5/src/render3/assert', ['module', 'exports', 'require'], function (module, exports, require) {
    var define = undefined;
    /**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */
    // The functions in this file verify that the assumptions we are making
    // about state in an instruction are correct before implementing any logic.
    // They are meant only to be called in dev mode as sanity checks.
    export function assertNumber(actual, msg) {
        if (typeof actual != 'number') {
            throwError(msg);
        }
    }
    export function assertEqual(actual, expected, msg) {
        if (actual != expected) {
            throwError(msg);
        }
    }
    export function assertNotEqual(actual, expected, msg) {
        if (actual == expected) {
            throwError(msg);
        }
    }
    export function assertSame(actual, expected, msg) {
        if (actual !== expected) {
            throwError(msg);
        }
    }
    export function assertLessThan(actual, expected, msg) {
        if (actual >= expected) {
            throwError(msg);
        }
    }
    export function assertGreaterThan(actual, expected, msg) {
        if (actual <= expected) {
            throwError(msg);
        }
    }
    export function assertNotDefined(actual, msg) {
        if (actual != null) {
            throwError(msg);
        }
    }
    export function assertDefined(actual, msg) {
        if (actual == null) {
            throwError(msg);
        }
    }
    export function assertComponentType(actual, msg) {
        if (msg === void 0) {
            msg = 'Type passed in is not ComponentType, it does not have \'ngComponentDef\' property.';
        }
        if (!actual.ngComponentDef) {
            debugger;
            throwError(msg);
        }
    }
    function throwError(msg) {
        debugger; // Left intentionally for better debugger experience.
        throw new Error("ASSERTION ERROR: " + msg);
    }
});
//# sourceMappingURL=assert.js.map