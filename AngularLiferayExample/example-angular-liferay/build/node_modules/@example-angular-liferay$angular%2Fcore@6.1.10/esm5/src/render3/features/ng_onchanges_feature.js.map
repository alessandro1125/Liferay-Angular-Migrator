{"version":3,"sources":["../../../../../../../../../../../packages/core/src/render3/features/ng_onchanges_feature.ts"],"names":[],"mappings":";;;;;;;;;AAQA,aAAQ,YAAR,QAA2B,8CAA3B;AAIA,QAAM,iBAAiB,gBAAvB;AAQA;;;;;;;;;;;;;;;;;;;;AAoBA,WAAM,SAAA,kBAAA,CAAgC,UAAhC,EAAmE;AACvE,YAAM,2BAA2B,WAAW,cAA5C;AACA,YAAM,QAAQ,WAAW,IAAX,CAAgB,SAA9B;gCACW,Y,EAAY;AACrB,gBAAI,yBAAyB,cAAzB,CAAwC,YAAxC,CAAJ,EAA2D;AACzD,oBAAM,cAAc,yBAAyB,YAAzB,CAApB;AACA,oBAAM,kBAAgB,iBAAiB,WAAvC;AAEA;AACA;AACA,oBAAI,mBAAiD,SAArD;AACA,oBAAI,aAAa,KAAjB;AACA,uBAAO,CAAC,gBAAD,IAAqB,UAArB,IACA,OAAO,cAAP,CAAsB,UAAtB,MAAsC,OAAO,cAAP,CAAsB,OAAO,SAA7B,CAD7C,EACsF;AACpF,uCAAmB,OAAO,wBAAP,CAAgC,UAAhC,EAA4C,WAA5C,CAAnB;AACA,iCAAa,OAAO,cAAP,CAAsB,UAAtB,CAAb;AACD;AAED,oBAAM,SAAS,oBAAoB,iBAAiB,GAApD;AACA,oBAAM,WAAS,oBAAoB,iBAAiB,GAApD;AAEA;AACA,uBAAO,cAAP,CAAsB,KAAtB,EAA6B,WAA7B,EAA0C;AACxC,yBAAK,WACA,WAAS,SAAT,GAAqB,YAAA;AAAmC,+BAAO,KAAK,eAAL,CAAP;AAA6B,qBADrF,CADmC;AAGxC,yBAAA,UAA+B,KAA/B,EAAuC;AACrC,4BAAI,gBAAgB,KAAK,cAAL,CAApB;AACA,4BAAI,CAAC,aAAL,EAAoB;AAClB,4CAAgB,EAAhB;AACA;AACA,mCAAO,cAAP,CAAsB,IAAtB,EAA4B,cAA5B,EAA4C,EAAC,OAAO,aAAR,EAAuB,UAAU,IAAjC,EAA5C;AACD;AAED,4BAAM,gBAAgB,CAAC,KAAK,cAAL,CAAoB,eAApB,CAAvB;AACA,4BAAM,gBAAgB,cAAc,YAAd,CAAtB;AAEA,4BAAI,aAAJ,EAAmB;AACjB,0CAAc,YAAd,GAA6B,KAA7B;AACD,yBAFD,MAEO;AACL,0CAAc,YAAd,IACI,IAAI,YAAJ,CAAiB,KAAK,eAAL,CAAjB,EAAsC,KAAtC,EAA6C,aAA7C,CADJ;AAED;AAED,4BAAI,aAAJ,EAAmB;AACjB;AACA,mCAAO,cAAP,CAAsB,IAAtB,EAA4B,eAA5B,EAA2C,EAAC,OAAK,KAAN,EAAQ,UAAU,IAAlB,EAA3C;AACD,yBAHD,MAGO;AACL,iCAAK,eAAL,IAAsB,KAAtB;AACD;AAED,4BAAI,QAAJ,EAAY,SAAO,IAAP,CAAY,IAAZ,EAAkB,KAAlB;AACb;AA7BuC,iBAA1C;AA+BD;AACF,S;AAnDD,aAAK,IAAM,YAAX,IAA2B,wBAA3B,EAAmD;oBAAxC,Y;AAmDV;AAED;AACA;AACA;AACA,YAAI,WAAW,MAAX,IAAqB,IAAzB,EAA+B;AAC7B,uBAAW,MAAX,GAAoB,iBAAiB,WAAW,MAA5B,CAApB;AACD;AAED,mBAAW,OAAX,GAAqB,iBAAiB,WAAW,OAA5B,CAArB;AACD;AAED,aAAA,gBAAA,CAA0B,YAA1B,EAA2D;AACzD,eAAO,YAAA;AACL,gBAAM,gBAAgB,KAAK,cAAL,CAAtB;AACA,gBAAI,iBAAiB,IAArB,EAA2B;AACzB,qBAAK,WAAL,CAAiB,aAAjB;AACA,qBAAK,cAAL,IAAuB,IAAvB;AACD;AACD,gBAAI,YAAJ,EAAkB,aAAa,KAAb,CAAmB,IAAnB;AACnB,SAPD;AAQD","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {SimpleChange} from '../../change_detection/change_detection_util';\nimport {OnChanges, SimpleChanges} from '../../metadata/lifecycle_hooks';\nimport {DirectiveDefInternal} from '../interfaces/definition';\n\nconst PRIVATE_PREFIX = '__ngOnChanges_';\n\ntype OnChangesExpando = OnChanges & {\n  __ngOnChanges_: SimpleChanges|null|undefined;\n  // tslint:disable-next-line:no-any Can hold any value\n  [key: string]: any;\n};\n\n/**\n * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n * lifecycle hook, so it should be included in any component that implements\n * that hook.\n *\n * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n * inherited properties will not be propagated to the ngOnChanges lifecycle\n * hook.\n *\n * Example usage:\n *\n * ```\n * static ngComponentDef = defineComponent({\n *   ...\n *   inputs: {name: 'publicName'},\n *   features: [NgOnChangesFeature]\n * });\n * ```\n */\nexport function NgOnChangesFeature<T>(definition: DirectiveDefInternal<T>): void {\n  const declaredToMinifiedInputs = definition.declaredInputs;\n  const proto = definition.type.prototype;\n  for (const declaredName in declaredToMinifiedInputs) {\n    if (declaredToMinifiedInputs.hasOwnProperty(declaredName)) {\n      const minifiedKey = declaredToMinifiedInputs[declaredName];\n      const privateMinKey = PRIVATE_PREFIX + minifiedKey;\n\n      // Walk the prototype chain to see if we find a property descriptor\n      // That way we can honor setters and getters that were inherited.\n      let originalProperty: PropertyDescriptor|undefined = undefined;\n      let checkProto = proto;\n      while (!originalProperty && checkProto &&\n             Object.getPrototypeOf(checkProto) !== Object.getPrototypeOf(Object.prototype)) {\n        originalProperty = Object.getOwnPropertyDescriptor(checkProto, minifiedKey);\n        checkProto = Object.getPrototypeOf(checkProto);\n      }\n\n      const getter = originalProperty && originalProperty.get;\n      const setter = originalProperty && originalProperty.set;\n\n      // create a getter and setter for property\n      Object.defineProperty(proto, minifiedKey, {\n        get: getter ||\n            (setter ? undefined : function(this: OnChangesExpando) { return this[privateMinKey]; }),\n        set<T>(this: OnChangesExpando, value: T) {\n          let simpleChanges = this[PRIVATE_PREFIX];\n          if (!simpleChanges) {\n            simpleChanges = {};\n            // Place where we will store SimpleChanges if there is a change\n            Object.defineProperty(this, PRIVATE_PREFIX, {value: simpleChanges, writable: true});\n          }\n\n          const isFirstChange = !this.hasOwnProperty(privateMinKey);\n          const currentChange = simpleChanges[declaredName];\n\n          if (currentChange) {\n            currentChange.currentValue = value;\n          } else {\n            simpleChanges[declaredName] =\n                new SimpleChange(this[privateMinKey], value, isFirstChange);\n          }\n\n          if (isFirstChange) {\n            // Create a place where the actual value will be stored and make it non-enumerable\n            Object.defineProperty(this, privateMinKey, {value, writable: true});\n          } else {\n            this[privateMinKey] = value;\n          }\n\n          if (setter) setter.call(this, value);\n        }\n      });\n    }\n  }\n\n  // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n  // so the call order is changes-init-check in creation mode. In subsequent\n  // change detection runs, only the check wrapper will be called.\n  if (definition.onInit != null) {\n    definition.onInit = onChangesWrapper(definition.onInit);\n  }\n\n  definition.doCheck = onChangesWrapper(definition.doCheck);\n}\n\nfunction onChangesWrapper(delegateHook: (() => void) | null) {\n  return function(this: OnChangesExpando) {\n    const simpleChanges = this[PRIVATE_PREFIX];\n    if (simpleChanges != null) {\n      this.ngOnChanges(simpleChanges);\n      this[PRIVATE_PREFIX] = null;\n    }\n    if (delegateHook) delegateHook.apply(this);\n  };\n}\n"],"sourceRoot":""}