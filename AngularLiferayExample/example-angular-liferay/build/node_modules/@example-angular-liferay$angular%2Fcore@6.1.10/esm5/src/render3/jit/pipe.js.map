{"version":3,"sources":["../../../../../../../../../../../packages/core/src/render3/jit/pipe.ts"],"names":[],"mappings":";;;;;;;;;AAQA,aAAoB,eAApB,EAAqC,uBAArC,EAA8D,aAA9D,QAAkF,mBAAlF;AAIA,aAAQ,SAAR,QAAwB,SAAxB;AAEA,aAAQ,cAAR,QAA6B,eAA7B;AACA,aAAQ,WAAR,QAA0B,UAA1B;AACA,aAAQ,mBAAR,QAAkC,QAAlC;AAEA,WAAM,SAAA,WAAA,CAAsB,IAAtB,EAAuC,IAAvC,EAAiD;AACrD,YAAI,MAAW,IAAf;AACA,eAAO,cAAP,CAAsB,IAAtB,EAA4B,WAA5B,EAAyC;AACvC,iBAAK,YAAA;AACH,oBAAI,QAAQ,IAAZ,EAAkB;AAChB,wBAAM,eAAe,UAAQ,UAAU,IAAV,CAAR,GAAuB,eAA5C;AAEA,wBAAM,SAAO,KAAK,IAAlB;AACA,wBAAM,MAAM,wBAAwB;AAClC,8BAAI,MAD8B;AAElC,8BAAM,IAAI,eAAJ,CAAoB,IAApB,CAF4B;AAGlC,8BAAM,oBAAoB,IAApB,CAH4B;AAIlC,kCAAU,KAAK,IAJmB;AAKlC,8BAAM,KAAK,IAAL,KAAc,SAAd,GAA0B,KAAK,IAA/B,GAAsC;AALV,qBAAxB,CAAZ;AAQA,0BAAM,cAAc,IAAI,UAAlB,EAA8B,cAA9B,EAA8C,YAA9C,CAAN;AACD;AACD,uBAAO,GAAP;AACD;AAjBsC,SAAzC;AAmBD","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Expression, WrappedNodeExpr, compilePipeFromMetadata, jitExpression} from '@angular/compiler';\n\nimport {Pipe} from '../../metadata/directives';\nimport {Type} from '../../type';\nimport {stringify} from '../util';\n\nimport {angularCoreEnv} from './environment';\nimport {NG_PIPE_DEF} from './fields';\nimport {reflectDependencies} from './util';\n\nexport function compilePipe(type: Type<any>, meta: Pipe): void {\n  let def: any = null;\n  Object.defineProperty(type, NG_PIPE_DEF, {\n    get: () => {\n      if (def === null) {\n        const sourceMapUrl = `ng://${stringify(type)}/ngPipeDef.js`;\n\n        const name = type.name;\n        const res = compilePipeFromMetadata({\n          name,\n          type: new WrappedNodeExpr(type),\n          deps: reflectDependencies(type),\n          pipeName: meta.name,\n          pure: meta.pure !== undefined ? meta.pure : true,\n        });\n\n        def = jitExpression(res.expression, angularCoreEnv, sourceMapUrl);\n      }\n      return def;\n    }\n  });\n}\n"],"sourceRoot":""}