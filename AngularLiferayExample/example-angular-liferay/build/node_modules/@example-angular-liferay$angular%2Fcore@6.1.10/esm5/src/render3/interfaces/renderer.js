Liferay.Loader.define("@example-angular-liferay$angular/core@6.1.10/esm5/src/render3/interfaces/renderer", ['module', 'exports', 'require'], function (module, exports, require) {
    var define = undefined;
    /**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */
    // TODO: cleanup once the code is merged in angular/angular
    export var RendererStyleFlags3;
    (function (RendererStyleFlags3) {
        RendererStyleFlags3[RendererStyleFlags3["Important"] = 1] = "Important";
        RendererStyleFlags3[RendererStyleFlags3["DashCase"] = 2] = "DashCase";
    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));
    /** Returns whether the `renderer` is a `ProceduralRenderer3` */
    export function isProceduralRenderer(renderer) {
        return !!renderer.listen;
    }
    export var domRendererFactory3 = {
        createRenderer: function (hostElement, rendererType) {
            return document;
        }
    };
    // Note: This hack is necessary so we don't erroneously get a circular dependency
    // failure based on types.
    export var unusedValueExportToPlacateAjd = 1;
});
//# sourceMappingURL=renderer.js.map