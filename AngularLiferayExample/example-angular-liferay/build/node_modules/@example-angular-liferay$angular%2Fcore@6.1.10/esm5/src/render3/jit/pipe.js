Liferay.Loader.define('@example-angular-liferay$angular/core@6.1.10/esm5/src/render3/jit/pipe', ['module', 'exports', 'require'], function (module, exports, require) {
    var define = undefined;
    /**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */
    import { WrappedNodeExpr, compilePipeFromMetadata, jitExpression } from '@angular/compiler';
    import { stringify } from '../util';
    import { angularCoreEnv } from './environment';
    import { NG_PIPE_DEF } from './fields';
    import { reflectDependencies } from './util';
    export function compilePipe(type, meta) {
        var def = null;
        Object.defineProperty(type, NG_PIPE_DEF, {
            get: function () {
                if (def === null) {
                    var sourceMapUrl = "ng://" + stringify(type) + "/ngPipeDef.js";
                    var name_1 = type.name;
                    var res = compilePipeFromMetadata({
                        name: name_1,
                        type: new WrappedNodeExpr(type),
                        deps: reflectDependencies(type),
                        pipeName: meta.name,
                        pure: meta.pure !== undefined ? meta.pure : true
                    });
                    def = jitExpression(res.expression, angularCoreEnv, sourceMapUrl);
                }
                return def;
            }
        });
    }
});
//# sourceMappingURL=pipe.js.map