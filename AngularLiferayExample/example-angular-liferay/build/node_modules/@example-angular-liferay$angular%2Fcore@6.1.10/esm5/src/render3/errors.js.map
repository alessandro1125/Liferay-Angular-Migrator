{"version":3,"sources":["../../../../../../../../../../packages/core/src/render3/errors.ts"],"names":[],"mappings":";;;AAWA,WAAM,SAAA,0BAAA,CAAqC,KAArC,EAA+C;AACnD,cAAM,IAAI,KAAJ,CAAU,2CAAyC,KAAnD,CAAN;AACD;AAED;AACA,WAAM,SAAA,2BAAA,CAAsC,KAAtC,EAAkD;AACtD,cAAM,IAAI,KAAJ,CAAU,iDAA+C,MAAM,OAA/D,CAAN;AACD;AAED;AACA,WAAM,SAAA,yBAAA,CACF,YADE,EACqB,kBADrB,EACkD,QADlD,EACiE,SADjE,EAC+E;AACnF,YAAI,kBAAJ,EAAwB;AACtB,gBAAI,MACA,gHAA8G,QAA9G,GAAsH,qBAAtH,GAA4I,SAA5I,GAAqJ,IADzJ;AAEA,gBAAI,YAAJ,EAAkB;AAChB,uBACI,wGACA,mDAFJ;AAGD;AACD;AACA,kBAAM,IAAI,KAAJ,CAAU,GAAV,CAAN;AACD;AACF","sourcesContent":["\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {TNode} from './interfaces/node';\n\n/** Called when directives inject each other (creating a circular dependency) */\nexport function throwCyclicDependencyError(token: any): never {\n  throw new Error(`Cannot instantiate cyclic dependency! ${token}`);\n}\n\n/** Called when there are multiple component selectors that match a given node */\nexport function throwMultipleComponentError(tNode: TNode): never {\n  throw new Error(`Multiple components match node with tagname ${tNode.tagName}`);\n}\n\n/** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\nexport function throwErrorIfNoChangesMode(\n    creationMode: boolean, checkNoChangesMode: boolean, oldValue: any, currValue: any): never|void {\n  if (checkNoChangesMode) {\n    let msg =\n        `ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '${oldValue}'. Current value: '${currValue}'.`;\n    if (creationMode) {\n      msg +=\n          ` It seems like the view has been created after its parent and its children have been dirty checked.` +\n          ` Has it been created in a change detection hook ?`;\n    }\n    // TODO: include debug context\n    throw new Error(msg);\n  }\n}\n"],"sourceRoot":""}