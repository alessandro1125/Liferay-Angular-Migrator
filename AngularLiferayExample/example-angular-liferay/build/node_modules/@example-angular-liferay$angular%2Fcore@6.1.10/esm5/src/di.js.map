{"version":3,"sources":["../../../../../../../../../packages/core/src/di.ts"],"names":[],"mappings":";;;;;;;;;AAQA;;;;;AAMA,gBAAc,eAAd;AACA,WAAsC,gBAAtC,EAAwD,cAAxD,QAA6E,WAA7E;AACA,WAAQ,UAAR,EAAoB,iBAApB,QAA0D,kBAA1D;AACA,WAAQ,UAAR,QAAkE,iBAAlE;AACA,WAAQ,MAAR,EAA6B,QAA7B,EAAuC,QAAvC,QAAsD,eAAtD;AACA,WAAQ,kBAAR,QAAiC,0BAAjC;AAEA,WAAQ,cAAR,QAA6B,kBAA7B;AACA,WAAQ,yBAAR,QAAoE,0BAApE;AACA,WAAQ,aAAR,QAA4B,qBAA5B;AACA,WAAQ,cAAR,QAA6B,sBAA7B","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * The `di` module provides dependency injection container services.\n */\n\nexport * from './di/metadata';\nexport {InjectableType, InjectorType, defineInjectable, defineInjector} from './di/defs';\nexport {forwardRef, resolveForwardRef, ForwardRefFn} from './di/forward_ref';\nexport {Injectable, InjectableDecorator, InjectableProvider} from './di/injectable';\nexport {inject, InjectFlags, INJECTOR, Injector} from './di/injector';\nexport {ReflectiveInjector} from './di/reflective_injector';\nexport {StaticProvider, ValueProvider, ConstructorSansProvider, ExistingProvider, FactoryProvider, Provider, TypeProvider, ClassProvider} from './di/provider';\nexport {createInjector} from './di/r3_injector';\nexport {ResolvedReflectiveFactory, ResolvedReflectiveProvider} from './di/reflective_provider';\nexport {ReflectiveKey} from './di/reflective_key';\nexport {InjectionToken} from './di/injection_token';\n"],"sourceRoot":""}