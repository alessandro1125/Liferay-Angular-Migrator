{"version":3,"sources":["../../src/app/dynamic.loader.ts"],"names":[],"mappings":";;;;;AAAA,QAAA,SAAA,QAAA,uCAAA,CAAA;AAUA;;;;;AAKA,QAAA,gBAAA,aAAA,YAAA;AACC,iBAAA,aAAA,CAAoB,QAApB,EAAsC;AAAlB,iBAAA,QAAA,GAAA,QAAA;AAAsB;AAE1C,sBAAA,SAAA,CAAA,aAAA,GAAA,UAAiB,SAAjB,EAAqC,MAArC,EAA0D;AAA1D,gBAAA,QAAA,IAAA;AACC,gBAAM,OAAO,SAAS,cAAT,CAAwB,OAAO,gBAA/B,CAAb;AAES,iBAAK,QAAL,CAAc,GAAd,CAAkB,OAAA,MAAlB,EAA2B,GAA3B,CAA+B,YAAA;AACvC,oBAAM,mBAAmB,MAAK,QAAL,CACvB,GADuB,CACnB,OAAA,wBADmB,EAEvB,uBAFuB,CAEC,SAFD,CAAzB;AAGA,oBAAM,eAAe,iBAAiB,MAAjB,CACpB,MAAK,QADe,EAEpB,EAFoB,EAGpB,IAHoB,CAArB;AAKA,6BAAa,QAAb,CAAsB,MAAtB,GAA+B,MAA/B;AACA,sBAAK,QAAL,CAAc,GAAd,CAAkB,OAAA,cAAlB,EAAkC,UAAlC,CAA6C,aAAa,QAA1D;AACA,aAXQ;AAYT,SAfD;AAgBD,eAAA,aAAA;AAAC,KAnBD,EAAA;AAAa,YAAA,aAAA,GAAA,aAAA","sourcesContent":["import {\r\n\tApplicationRef,\r\n\tComponentFactoryResolver,\r\n\tInjector,\r\n\tNgZone,\r\n\tType,\r\n} from '@angular/core';\r\n\r\nimport LiferayParams from '../types/LiferayParams'\r\n\r\n/**\r\n * This class loads an Angular component dinamically so that we can attach it to\r\n * the portlet's DOM, which is different for each portlet instance and thus, \r\n * cannot be determined until the page is rendered (during runtime).\r\n */\r\nexport class DynamicLoader {\r\n\tconstructor(private injector: Injector) {}\r\n\r\n\tloadComponent<T>(component: Type<T>, params: LiferayParams) {\r\n\t\tconst node = document.getElementById(params.portletElementId);\r\n\t\t\r\n\t\t(<NgZone>this.injector.get(NgZone)).run(() => {\r\n\t\t\tconst componentFactory = this.injector\r\n\t\t\t\t.get(ComponentFactoryResolver)\r\n\t\t\t\t.resolveComponentFactory(component);\r\n\t\t\tconst componentRef = componentFactory.create(\r\n\t\t\t\tthis.injector,\r\n\t\t\t\t[],\r\n\t\t\t\tnode,\r\n\t\t\t);\r\n\t\t\tcomponentRef.instance.params = params;\r\n\t\t\tthis.injector.get(ApplicationRef).attachView(componentRef.hostView);\r\n\t\t});\r\n\t}\r\n}\r\n"],"sourceRoot":""}